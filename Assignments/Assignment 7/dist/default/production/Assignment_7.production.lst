

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Apr 08 15:39:43 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    13                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    14                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=1
    16                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20   000000                     
    21                           ; Generated 12/10/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F47K42 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   003FE0                     bsr             equ	16352
    56   003FE9                     fsr0            equ	16361
    57   003FEA                     fsr0h           equ	16362
    58   003FE9                     fsr0l           equ	16361
    59   003FE1                     fsr1            equ	16353
    60   003FE2                     fsr1h           equ	16354
    61   003FE1                     fsr1l           equ	16353
    62   003FD9                     fsr2            equ	16345
    63   003FDA                     fsr2h           equ	16346
    64   003FD9                     fsr2l           equ	16345
    65   003FEF                     indf0           equ	16367
    66   003FE7                     indf1           equ	16359
    67   003FDF                     indf2           equ	16351
    68   003FD2                     intcon          equ	16338
    69   0039E5                     nvmcon          equ	14821
    70   003FF9                     pcl             equ	16377
    71   003FFA                     pclath          equ	16378
    72   003FFB                     pclatu          equ	16379
    73   003FEB                     plusw0          equ	16363
    74   003FE3                     plusw1          equ	16355
    75   003FDB                     plusw2          equ	16347
    76   003FED                     postdec0        equ	16365
    77   003FE5                     postdec1        equ	16357
    78   003FDD                     postdec2        equ	16349
    79   003FEE                     postinc0        equ	16366
    80   003FE6                     postinc1        equ	16358
    81   003FDE                     postinc2        equ	16350
    82   003FEC                     preinc0         equ	16364
    83   003FE4                     preinc1         equ	16356
    84   003FDC                     preinc2         equ	16348
    85   003FF3                     prod            equ	16371
    86   003FF4                     prodh           equ	16372
    87   003FF3                     prodl           equ	16371
    88   003FD8                     status          equ	16344
    89   003FF5                     tablat          equ	16373
    90   003FF6                     tblptr          equ	16374
    91   003FF7                     tblptrh         equ	16375
    92   003FF6                     tblptrl         equ	16374
    93   003FF8                     tblptru         equ	16376
    94   003FFD                     tosl            equ	16381
    95   003FE8                     wreg            equ	16360
    96   003880                     STATUS_CSHAD    equ	14464	;# 
    97   003881                     WREG_CSHAD      equ	14465	;# 
    98   003882                     BSR_CSHAD       equ	14466	;# 
    99   003883                     SHADCON         equ	14467	;# 
   100   003884                     STATUS_SHAD     equ	14468	;# 
   101   003885                     WREG_SHAD       equ	14469	;# 
   102   003886                     BSR_SHAD        equ	14470	;# 
   103   003887                     PCLATH_SHAD     equ	14471	;# 
   104   003888                     PCLATU_SHAD     equ	14472	;# 
   105   003889                     FSR0SH          equ	14473	;# 
   106   003889                     FSR0L_SHAD      equ	14473	;# 
   107   00388A                     FSR0H_SHAD      equ	14474	;# 
   108   00388B                     FSR1SH          equ	14475	;# 
   109   00388B                     FSR1L_SHAD      equ	14475	;# 
   110   00388C                     FSR1H_SHAD      equ	14476	;# 
   111   00388D                     FSR2SH          equ	14477	;# 
   112   00388D                     FSR2L_SHAD      equ	14477	;# 
   113   00388E                     FSR2H_SHAD      equ	14478	;# 
   114   00388F                     PRODSH          equ	14479	;# 
   115   00388F                     PRODL_SHAD      equ	14479	;# 
   116   003890                     PRODH_SHAD      equ	14480	;# 
   117   00389D                     IVTADL          equ	14493	;# 
   118   00389E                     IVTADH          equ	14494	;# 
   119   00389F                     IVTADU          equ	14495	;# 
   120   00395B                     WDTCON0         equ	14683	;# 
   121   00395C                     WDTCON1         equ	14684	;# 
   122   00395D                     WDTPSL          equ	14685	;# 
   123   00395E                     WDTPSH          equ	14686	;# 
   124   00395F                     WDTTMR          equ	14687	;# 
   125   003960                     CRCDATA         equ	14688	;# 
   126   003960                     CRCDATL         equ	14688	;# 
   127   003961                     CRCDATH         equ	14689	;# 
   128   003962                     CRCACC          equ	14690	;# 
   129   003962                     CRCACCL         equ	14690	;# 
   130   003963                     CRCACCH         equ	14691	;# 
   131   003964                     CRCSHFT         equ	14692	;# 
   132   003964                     CRCSHIFTL       equ	14692	;# 
   133   003965                     CRCSHIFTH       equ	14693	;# 
   134   003966                     CRCXOR          equ	14694	;# 
   135   003966                     CRCXORL         equ	14694	;# 
   136   003967                     CRCXORH         equ	14695	;# 
   137   003968                     CRCCON0         equ	14696	;# 
   138   003969                     CRCCON1         equ	14697	;# 
   139   003976                     SCANLADR        equ	14710	;# 
   140   003976                     SCANLADRL       equ	14710	;# 
   141   003977                     SCANLADRH       equ	14711	;# 
   142   003978                     SCANLADRU       equ	14712	;# 
   143   003979                     SCANHADR        equ	14713	;# 
   144   003979                     SCANHADRL       equ	14713	;# 
   145   00397A                     SCANHADRH       equ	14714	;# 
   146   00397B                     SCANHADRU       equ	14715	;# 
   147   00397C                     SCANCON0        equ	14716	;# 
   148   00397D                     SCANTRIG        equ	14717	;# 
   149   003980                     IPR0            equ	14720	;# 
   150   003981                     IPR1            equ	14721	;# 
   151   003982                     IPR2            equ	14722	;# 
   152   003983                     IPR3            equ	14723	;# 
   153   003984                     IPR4            equ	14724	;# 
   154   003985                     IPR5            equ	14725	;# 
   155   003986                     IPR6            equ	14726	;# 
   156   003987                     IPR7            equ	14727	;# 
   157   003988                     IPR8            equ	14728	;# 
   158   003989                     IPR9            equ	14729	;# 
   159   00398A                     IPR10           equ	14730	;# 
   160   003990                     PIE0            equ	14736	;# 
   161   003991                     PIE1            equ	14737	;# 
   162   003992                     PIE2            equ	14738	;# 
   163   003993                     PIE3            equ	14739	;# 
   164   003994                     PIE4            equ	14740	;# 
   165   003995                     PIE5            equ	14741	;# 
   166   003996                     PIE6            equ	14742	;# 
   167   003997                     PIE7            equ	14743	;# 
   168   003998                     PIE8            equ	14744	;# 
   169   003999                     PIE9            equ	14745	;# 
   170   00399A                     PIE10           equ	14746	;# 
   171   0039A0                     PIR0            equ	14752	;# 
   172   0039A1                     PIR1            equ	14753	;# 
   173   0039A2                     PIR2            equ	14754	;# 
   174   0039A3                     PIR3            equ	14755	;# 
   175   0039A4                     PIR4            equ	14756	;# 
   176   0039A5                     PIR5            equ	14757	;# 
   177   0039A6                     PIR6            equ	14758	;# 
   178   0039A7                     PIR7            equ	14759	;# 
   179   0039A8                     PIR8            equ	14760	;# 
   180   0039A9                     PIR9            equ	14761	;# 
   181   0039AA                     PIR10           equ	14762	;# 
   182   0039C0                     PMD0            equ	14784	;# 
   183   0039C1                     PMD1            equ	14785	;# 
   184   0039C2                     PMD2            equ	14786	;# 
   185   0039C3                     PMD3            equ	14787	;# 
   186   0039C4                     PMD4            equ	14788	;# 
   187   0039C5                     PMD5            equ	14789	;# 
   188   0039C6                     PMD6            equ	14790	;# 
   189   0039C7                     PMD7            equ	14791	;# 
   190   0039D0                     BORCON          equ	14800	;# 
   191   0039D1                     VREGCON         equ	14801	;# 
   192   0039D8                     CPUDOZE         equ	14808	;# 
   193   0039D9                     OSCCON1         equ	14809	;# 
   194   0039DA                     OSCCON2         equ	14810	;# 
   195   0039DB                     OSCCON3         equ	14811	;# 
   196   0039DC                     OSCSTAT         equ	14812	;# 
   197   0039DC                     OSCSTAT1        equ	14812	;# 
   198   0039DD                     OSCEN           equ	14813	;# 
   199   0039DE                     OSCTUNE         equ	14814	;# 
   200   0039DF                     OSCFRQ          equ	14815	;# 
   201   0039E0                     NVMADRL         equ	14816	;# 
   202   0039E1                     NVMADRH         equ	14817	;# 
   203   0039E3                     NVMDAT          equ	14819	;# 
   204   0039E5                     NVMCON1         equ	14821	;# 
   205   0039E6                     NVMCON2         equ	14822	;# 
   206   0039EF                     PRLOCK          equ	14831	;# 
   207   0039F1                     ISRPR           equ	14833	;# 
   208   0039F2                     MAINPR          equ	14834	;# 
   209   0039F3                     DMA1PR          equ	14835	;# 
   210   0039F4                     DMA2PR          equ	14836	;# 
   211   0039F7                     SCANPR          equ	14839	;# 
   212   003A00                     RA0PPS          equ	14848	;# 
   213   003A01                     RA1PPS          equ	14849	;# 
   214   003A02                     RA2PPS          equ	14850	;# 
   215   003A03                     RA3PPS          equ	14851	;# 
   216   003A04                     RA4PPS          equ	14852	;# 
   217   003A05                     RA5PPS          equ	14853	;# 
   218   003A06                     RA6PPS          equ	14854	;# 
   219   003A07                     RA7PPS          equ	14855	;# 
   220   003A08                     RB0PPS          equ	14856	;# 
   221   003A09                     RB1PPS          equ	14857	;# 
   222   003A0A                     RB2PPS          equ	14858	;# 
   223   003A0B                     RB3PPS          equ	14859	;# 
   224   003A0C                     RB4PPS          equ	14860	;# 
   225   003A0D                     RB5PPS          equ	14861	;# 
   226   003A0E                     RB6PPS          equ	14862	;# 
   227   003A0F                     RB7PPS          equ	14863	;# 
   228   003A10                     RC0PPS          equ	14864	;# 
   229   003A11                     RC1PPS          equ	14865	;# 
   230   003A12                     RC2PPS          equ	14866	;# 
   231   003A13                     RC3PPS          equ	14867	;# 
   232   003A14                     RC4PPS          equ	14868	;# 
   233   003A15                     RC5PPS          equ	14869	;# 
   234   003A16                     RC6PPS          equ	14870	;# 
   235   003A17                     RC7PPS          equ	14871	;# 
   236   003A18                     RD0PPS          equ	14872	;# 
   237   003A19                     RD1PPS          equ	14873	;# 
   238   003A1A                     RD2PPS          equ	14874	;# 
   239   003A1B                     RD3PPS          equ	14875	;# 
   240   003A1C                     RD4PPS          equ	14876	;# 
   241   003A1D                     RD5PPS          equ	14877	;# 
   242   003A1E                     RD6PPS          equ	14878	;# 
   243   003A1F                     RD7PPS          equ	14879	;# 
   244   003A20                     RE0PPS          equ	14880	;# 
   245   003A21                     RE1PPS          equ	14881	;# 
   246   003A22                     RE2PPS          equ	14882	;# 
   247   003A40                     ANSELA          equ	14912	;# 
   248   003A41                     WPUA            equ	14913	;# 
   249   003A42                     ODCONA          equ	14914	;# 
   250   003A43                     SLRCONA         equ	14915	;# 
   251   003A44                     INLVLA          equ	14916	;# 
   252   003A45                     IOCAP           equ	14917	;# 
   253   003A46                     IOCAN           equ	14918	;# 
   254   003A47                     IOCAF           equ	14919	;# 
   255   003A50                     ANSELB          equ	14928	;# 
   256   003A51                     WPUB            equ	14929	;# 
   257   003A52                     ODCONB          equ	14930	;# 
   258   003A53                     SLRCONB         equ	14931	;# 
   259   003A54                     INLVLB          equ	14932	;# 
   260   003A55                     IOCBP           equ	14933	;# 
   261   003A56                     IOCBN           equ	14934	;# 
   262   003A57                     IOCBF           equ	14935	;# 
   263   003A5A                     RB1I2C          equ	14938	;# 
   264   003A5B                     RB2I2C          equ	14939	;# 
   265   003A60                     ANSELC          equ	14944	;# 
   266   003A61                     WPUC            equ	14945	;# 
   267   003A62                     ODCONC          equ	14946	;# 
   268   003A63                     SLRCONC         equ	14947	;# 
   269   003A64                     INLVLC          equ	14948	;# 
   270   003A65                     IOCCP           equ	14949	;# 
   271   003A66                     IOCCN           equ	14950	;# 
   272   003A67                     IOCCF           equ	14951	;# 
   273   003A6A                     RC3I2C          equ	14954	;# 
   274   003A6B                     RC4I2C          equ	14955	;# 
   275   003A70                     ANSELD          equ	14960	;# 
   276   003A71                     WPUD            equ	14961	;# 
   277   003A72                     ODCOND          equ	14962	;# 
   278   003A73                     SLRCOND         equ	14963	;# 
   279   003A74                     INLVLD          equ	14964	;# 
   280   003A7A                     RD0I2C          equ	14970	;# 
   281   003A7B                     RD1I2C          equ	14971	;# 
   282   003A80                     ANSELE          equ	14976	;# 
   283   003A81                     WPUE            equ	14977	;# 
   284   003A82                     ODCONE          equ	14978	;# 
   285   003A83                     SLRCONE         equ	14979	;# 
   286   003A84                     INLVLE          equ	14980	;# 
   287   003A85                     IOCEP           equ	14981	;# 
   288   003A86                     IOCEN           equ	14982	;# 
   289   003A87                     IOCEF           equ	14983	;# 
   290   003ABF                     PPSLOCK         equ	15039	;# 
   291   003AC0                     INT0PPS         equ	15040	;# 
   292   003AC1                     INT1PPS         equ	15041	;# 
   293   003AC2                     INT2PPS         equ	15042	;# 
   294   003AC3                     T0CKIPPS        equ	15043	;# 
   295   003AC4                     T1CKIPPS        equ	15044	;# 
   296   003AC5                     T1GPPS          equ	15045	;# 
   297   003AC6                     T3CKIPPS        equ	15046	;# 
   298   003AC7                     T3GPPS          equ	15047	;# 
   299   003AC8                     T5CKIPPS        equ	15048	;# 
   300   003AC9                     T5GPPS          equ	15049	;# 
   301   003ACA                     T2INPPS         equ	15050	;# 
   302   003ACB                     T4INPPS         equ	15051	;# 
   303   003ACC                     T6INPPS         equ	15052	;# 
   304   003ACD                     CCP1PPS         equ	15053	;# 
   305   003ACE                     CCP2PPS         equ	15054	;# 
   306   003ACF                     CCP3PPS         equ	15055	;# 
   307   003AD0                     CCP4PPS         equ	15056	;# 
   308   003AD1                     SMT1WINPPS      equ	15057	;# 
   309   003AD2                     SMT1SIGPPS      equ	15058	;# 
   310   003AD3                     CWG1INPPS       equ	15059	;# 
   311   003AD4                     CWG2INPPS       equ	15060	;# 
   312   003AD5                     CWG3INPPS       equ	15061	;# 
   313   003AD6                     MD1CARLPPS      equ	15062	;# 
   314   003AD7                     MD1CARHPPS      equ	15063	;# 
   315   003AD8                     MD1SRCPPS       equ	15064	;# 
   316   003AD9                     CLCIN0PPS       equ	15065	;# 
   317   003ADA                     CLCIN1PPS       equ	15066	;# 
   318   003ADB                     CLCIN2PPS       equ	15067	;# 
   319   003ADC                     CLCIN3PPS       equ	15068	;# 
   320   003ADD                     ADACTPPS        equ	15069	;# 
   321   003ADE                     SPI1SCKPPS      equ	15070	;# 
   322   003ADF                     SPI1SDIPPS      equ	15071	;# 
   323   003AE0                     SPI1SSPPS       equ	15072	;# 
   324   003AE1                     I2C1SCLPPS      equ	15073	;# 
   325   003AE2                     I2C1SDAPPS      equ	15074	;# 
   326   003AE3                     I2C2SCLPPS      equ	15075	;# 
   327   003AE4                     I2C2SDAPPS      equ	15076	;# 
   328   003AE5                     U1RXPPS         equ	15077	;# 
   329   003AE6                     U1CTSPPS        equ	15078	;# 
   330   003AE8                     U2RXPPS         equ	15080	;# 
   331   003AE9                     U2CTSPPS        equ	15081	;# 
   332   003BC9                     DMA2BUF         equ	15305	;# 
   333   003BCA                     DMA2DCNT        equ	15306	;# 
   334   003BCA                     DMA2DCNTL       equ	15306	;# 
   335   003BCB                     DMA2DCNTH       equ	15307	;# 
   336   003BCC                     DMA2DPTR        equ	15308	;# 
   337   003BCC                     DMA2DPTRL       equ	15308	;# 
   338   003BCD                     DMA2DPTRH       equ	15309	;# 
   339   003BCE                     DMA2DSZ         equ	15310	;# 
   340   003BCE                     DMA2DSZL        equ	15310	;# 
   341   003BCF                     DMA2DSZH        equ	15311	;# 
   342   003BD0                     DMA2DSA         equ	15312	;# 
   343   003BD0                     DMA2DSAL        equ	15312	;# 
   344   003BD1                     DMA2DSAH        equ	15313	;# 
   345   003BD2                     DMA2SCNT        equ	15314	;# 
   346   003BD2                     DMA2SCNTL       equ	15314	;# 
   347   003BD3                     DMA2SCNTH       equ	15315	;# 
   348   003BD4                     DMA2SPTR        equ	15316	;# 
   349   003BD4                     DMA2SPTRL       equ	15316	;# 
   350   003BD5                     DMA2SPTRH       equ	15317	;# 
   351   003BD6                     DMA2SPTRU       equ	15318	;# 
   352   003BD7                     DMA2SSZ         equ	15319	;# 
   353   003BD7                     DMA2SSZL        equ	15319	;# 
   354   003BD8                     DMA2SSZH        equ	15320	;# 
   355   003BD9                     DMA2SSA         equ	15321	;# 
   356   003BD9                     DMA2SSAL        equ	15321	;# 
   357   003BDA                     DMA2SSAH        equ	15322	;# 
   358   003BDB                     DMA2SSAU        equ	15323	;# 
   359   003BDC                     DMA2CON0        equ	15324	;# 
   360   003BDD                     DMA2CON1        equ	15325	;# 
   361   003BDE                     DMA2AIRQ        equ	15326	;# 
   362   003BDF                     DMA2SIRQ        equ	15327	;# 
   363   003BE9                     DMA1BUF         equ	15337	;# 
   364   003BEA                     DMA1DCNT        equ	15338	;# 
   365   003BEA                     DMA1DCNTL       equ	15338	;# 
   366   003BEB                     DMA1DCNTH       equ	15339	;# 
   367   003BEC                     DMA1DPTR        equ	15340	;# 
   368   003BEC                     DMA1DPTRL       equ	15340	;# 
   369   003BED                     DMA1DPTRH       equ	15341	;# 
   370   003BEE                     DMA1DSZ         equ	15342	;# 
   371   003BEE                     DMA1DSZL        equ	15342	;# 
   372   003BEF                     DMA1DSZH        equ	15343	;# 
   373   003BF0                     DMA1DSA         equ	15344	;# 
   374   003BF0                     DMA1DSAL        equ	15344	;# 
   375   003BF1                     DMA1DSAH        equ	15345	;# 
   376   003BF2                     DMA1SCNT        equ	15346	;# 
   377   003BF2                     DMA1SCNTL       equ	15346	;# 
   378   003BF3                     DMA1SCNTH       equ	15347	;# 
   379   003BF4                     DMA1SPTR        equ	15348	;# 
   380   003BF4                     DMA1SPTRL       equ	15348	;# 
   381   003BF5                     DMA1SPTRH       equ	15349	;# 
   382   003BF6                     DMA1SPTRU       equ	15350	;# 
   383   003BF7                     DMA1SSZ         equ	15351	;# 
   384   003BF7                     DMA1SSZL        equ	15351	;# 
   385   003BF8                     DMA1SSZH        equ	15352	;# 
   386   003BF9                     DMA1SSA         equ	15353	;# 
   387   003BF9                     DMA1SSAL        equ	15353	;# 
   388   003BFA                     DMA1SSAH        equ	15354	;# 
   389   003BFB                     DMA1SSAU        equ	15355	;# 
   390   003BFC                     DMA1CON0        equ	15356	;# 
   391   003BFD                     DMA1CON1        equ	15357	;# 
   392   003BFE                     DMA1AIRQ        equ	15358	;# 
   393   003BFF                     DMA1SIRQ        equ	15359	;# 
   394   003C56                     CLC4CON         equ	15446	;# 
   395   003C57                     CLC4POL         equ	15447	;# 
   396   003C58                     CLC4SEL0        equ	15448	;# 
   397   003C59                     CLC4SEL1        equ	15449	;# 
   398   003C5A                     CLC4SEL2        equ	15450	;# 
   399   003C5B                     CLC4SEL3        equ	15451	;# 
   400   003C5C                     CLC4GLS0        equ	15452	;# 
   401   003C5D                     CLC4GLS1        equ	15453	;# 
   402   003C5E                     CLC4GLS2        equ	15454	;# 
   403   003C5F                     CLC4GLS3        equ	15455	;# 
   404   003C60                     CLC3CON         equ	15456	;# 
   405   003C61                     CLC3POL         equ	15457	;# 
   406   003C62                     CLC3SEL0        equ	15458	;# 
   407   003C63                     CLC3SEL1        equ	15459	;# 
   408   003C64                     CLC3SEL2        equ	15460	;# 
   409   003C65                     CLC3SEL3        equ	15461	;# 
   410   003C66                     CLC3GLS0        equ	15462	;# 
   411   003C67                     CLC3GLS1        equ	15463	;# 
   412   003C68                     CLC3GLS2        equ	15464	;# 
   413   003C69                     CLC3GLS3        equ	15465	;# 
   414   003C6A                     CLC2CON         equ	15466	;# 
   415   003C6B                     CLC2POL         equ	15467	;# 
   416   003C6C                     CLC2SEL0        equ	15468	;# 
   417   003C6D                     CLC2SEL1        equ	15469	;# 
   418   003C6E                     CLC2SEL2        equ	15470	;# 
   419   003C6F                     CLC2SEL3        equ	15471	;# 
   420   003C70                     CLC2GLS0        equ	15472	;# 
   421   003C71                     CLC2GLS1        equ	15473	;# 
   422   003C72                     CLC2GLS2        equ	15474	;# 
   423   003C73                     CLC2GLS3        equ	15475	;# 
   424   003C74                     CLC1CON         equ	15476	;# 
   425   003C75                     CLC1POL         equ	15477	;# 
   426   003C76                     CLC1SEL0        equ	15478	;# 
   427   003C77                     CLC1SEL1        equ	15479	;# 
   428   003C78                     CLC1SEL2        equ	15480	;# 
   429   003C79                     CLC1SEL3        equ	15481	;# 
   430   003C7A                     CLC1GLS0        equ	15482	;# 
   431   003C7B                     CLC1GLS1        equ	15483	;# 
   432   003C7C                     CLC1GLS2        equ	15484	;# 
   433   003C7D                     CLC1GLS3        equ	15485	;# 
   434   003C7E                     CLCDATA0        equ	15486	;# 
   435   003CE5                     CLKRCON         equ	15589	;# 
   436   003CE6                     CLKRCLK         equ	15590	;# 
   437   003CFA                     MD1CON0         equ	15610	;# 
   438   003CFB                     MD1CON1         equ	15611	;# 
   439   003CFC                     MD1SRC          equ	15612	;# 
   440   003CFD                     MD1CARL         equ	15613	;# 
   441   003CFE                     MD1CARH         equ	15614	;# 
   442   003D10                     SPI1RXB         equ	15632	;# 
   443   003D11                     SPI1TXB         equ	15633	;# 
   444   003D12                     SPI1TCNT        equ	15634	;# 
   445   003D12                     SPI1TCNTL       equ	15634	;# 
   446   003D13                     SPI1TCNTH       equ	15635	;# 
   447   003D14                     SPI1CON0        equ	15636	;# 
   448   003D15                     SPI1CON1        equ	15637	;# 
   449   003D16                     SPI1CON2        equ	15638	;# 
   450   003D17                     SPI1STATUS      equ	15639	;# 
   451   003D18                     SPI1TWIDTH      equ	15640	;# 
   452   003D19                     SPI1BAUD        equ	15641	;# 
   453   003D1A                     SPI1INTF        equ	15642	;# 
   454   003D1B                     SPI1INTE        equ	15643	;# 
   455   003D1C                     SPI1CLK         equ	15644	;# 
   456   003D54                     I2C2RXB         equ	15700	;# 
   457   003D55                     I2C2TXB         equ	15701	;# 
   458   003D56                     I2C2CNT         equ	15702	;# 
   459   003D57                     I2C2ADB0        equ	15703	;# 
   460   003D58                     I2C2ADB1        equ	15704	;# 
   461   003D59                     I2C2ADR0        equ	15705	;# 
   462   003D5A                     I2C2ADR1        equ	15706	;# 
   463   003D5B                     I2C2ADR2        equ	15707	;# 
   464   003D5C                     I2C2ADR3        equ	15708	;# 
   465   003D5D                     I2C2CON0        equ	15709	;# 
   466   003D5E                     I2C2CON1        equ	15710	;# 
   467   003D5F                     I2C2CON2        equ	15711	;# 
   468   003D60                     I2C2ERR         equ	15712	;# 
   469   003D61                     I2C2STAT0       equ	15713	;# 
   470   003D62                     I2C2STAT1       equ	15714	;# 
   471   003D63                     I2C2PIR         equ	15715	;# 
   472   003D64                     I2C2PIE         equ	15716	;# 
   473   003D65                     I2C2CLK         equ	15717	;# 
   474   003D66                     I2C2BTO         equ	15718	;# 
   475   003D6A                     I2C1RXB         equ	15722	;# 
   476   003D6B                     I2C1TXB         equ	15723	;# 
   477   003D6C                     I2C1CNT         equ	15724	;# 
   478   003D6D                     I2C1ADB0        equ	15725	;# 
   479   003D6E                     I2C1ADB1        equ	15726	;# 
   480   003D6F                     I2C1ADR0        equ	15727	;# 
   481   003D70                     I2C1ADR1        equ	15728	;# 
   482   003D71                     I2C1ADR2        equ	15729	;# 
   483   003D72                     I2C1ADR3        equ	15730	;# 
   484   003D73                     I2C1CON0        equ	15731	;# 
   485   003D74                     I2C1CON1        equ	15732	;# 
   486   003D75                     I2C1CON2        equ	15733	;# 
   487   003D76                     I2C1ERR         equ	15734	;# 
   488   003D77                     I2C1STAT0       equ	15735	;# 
   489   003D78                     I2C1STAT1       equ	15736	;# 
   490   003D79                     I2C1PIR         equ	15737	;# 
   491   003D7A                     I2C1PIE         equ	15738	;# 
   492   003D7B                     I2C1CLK         equ	15739	;# 
   493   003D7C                     I2C1BTO         equ	15740	;# 
   494   003DD0                     U2RXB           equ	15824	;# 
   495   003DD0                     U2RXBL          equ	15824	;# 
   496   003DD2                     U2TXB           equ	15826	;# 
   497   003DD2                     U2TXBL          equ	15826	;# 
   498   003DD4                     U2P1            equ	15828	;# 
   499   003DD4                     U2P1L           equ	15828	;# 
   500   003DD6                     U2P2            equ	15830	;# 
   501   003DD6                     U2P2L           equ	15830	;# 
   502   003DD8                     U2P3            equ	15832	;# 
   503   003DD8                     U2P3L           equ	15832	;# 
   504   003DDA                     U2CON0          equ	15834	;# 
   505   003DDB                     U2CON1          equ	15835	;# 
   506   003DDC                     U2CON2          equ	15836	;# 
   507   003DDD                     U2BRG           equ	15837	;# 
   508   003DDD                     U2BRGL          equ	15837	;# 
   509   003DDE                     U2BRGH          equ	15838	;# 
   510   003DDF                     U2FIFO          equ	15839	;# 
   511   003DE0                     U2UIR           equ	15840	;# 
   512   003DE1                     U2ERRIR         equ	15841	;# 
   513   003DE2                     U2ERRIE         equ	15842	;# 
   514   003DE8                     U1RXB           equ	15848	;# 
   515   003DE8                     U1RXBL          equ	15848	;# 
   516   003DE9                     U1RXCHK         equ	15849	;# 
   517   003DEA                     U1TXB           equ	15850	;# 
   518   003DEA                     U1TXBL          equ	15850	;# 
   519   003DEB                     U1TXCHK         equ	15851	;# 
   520   003DEC                     U1P1            equ	15852	;# 
   521   003DEC                     U1P1L           equ	15852	;# 
   522   003DED                     U1P1H           equ	15853	;# 
   523   003DEE                     U1P2            equ	15854	;# 
   524   003DEE                     U1P2L           equ	15854	;# 
   525   003DEF                     U1P2H           equ	15855	;# 
   526   003DF0                     U1P3            equ	15856	;# 
   527   003DF0                     U1P3L           equ	15856	;# 
   528   003DF1                     U1P3H           equ	15857	;# 
   529   003DF2                     U1CON0          equ	15858	;# 
   530   003DF3                     U1CON1          equ	15859	;# 
   531   003DF4                     U1CON2          equ	15860	;# 
   532   003DF5                     U1BRG           equ	15861	;# 
   533   003DF5                     U1BRGL          equ	15861	;# 
   534   003DF6                     U1BRGH          equ	15862	;# 
   535   003DF7                     U1FIFO          equ	15863	;# 
   536   003DF8                     U1UIR           equ	15864	;# 
   537   003DF9                     U1ERRIR         equ	15865	;# 
   538   003DFA                     U1ERRIE         equ	15866	;# 
   539   003E9C                     DAC1CON1        equ	16028	;# 
   540   003E9E                     DAC1CON0        equ	16030	;# 
   541   003EB8                     CM2CON0         equ	16056	;# 
   542   003EB9                     CM2CON1         equ	16057	;# 
   543   003EBA                     CM2NCH          equ	16058	;# 
   544   003EBB                     CM2PCH          equ	16059	;# 
   545   003EBC                     CM1CON0         equ	16060	;# 
   546   003EBD                     CM1CON1         equ	16061	;# 
   547   003EBE                     CM1NCH          equ	16062	;# 
   548   003EBF                     CM1PCH          equ	16063	;# 
   549   003EC0                     CMOUT           equ	16064	;# 
   550   003EC1                     FVRCON          equ	16065	;# 
   551   003EC3                     ZCDCON          equ	16067	;# 
   552   003EC9                     HLVDCON0        equ	16073	;# 
   553   003ECA                     HLVDCON1        equ	16074	;# 
   554   003ED7                     ADCP            equ	16087	;# 
   555   003EDE                     ADLTH           equ	16094	;# 
   556   003EDE                     ADLTHL          equ	16094	;# 
   557   003EDF                     ADLTHH          equ	16095	;# 
   558   003EE0                     ADUTH           equ	16096	;# 
   559   003EE0                     ADUTHL          equ	16096	;# 
   560   003EE1                     ADUTHH          equ	16097	;# 
   561   003EE2                     ADERR           equ	16098	;# 
   562   003EE2                     ADERRL          equ	16098	;# 
   563   003EE3                     ADERRH          equ	16099	;# 
   564   003EE4                     ADSTPT          equ	16100	;# 
   565   003EE4                     ADSTPTL         equ	16100	;# 
   566   003EE5                     ADSTPTH         equ	16101	;# 
   567   003EE6                     ADFLTR          equ	16102	;# 
   568   003EE6                     ADFLTRL         equ	16102	;# 
   569   003EE7                     ADFLTRH         equ	16103	;# 
   570   003EE8                     ADACC           equ	16104	;# 
   571   003EE8                     ADACCL          equ	16104	;# 
   572   003EE9                     ADACCH          equ	16105	;# 
   573   003EEA                     ADACCU          equ	16106	;# 
   574   003EEB                     ADCNT           equ	16107	;# 
   575   003EEC                     ADRPT           equ	16108	;# 
   576   003EED                     ADPREV          equ	16109	;# 
   577   003EED                     ADPREVL         equ	16109	;# 
   578   003EEE                     ADPREVH         equ	16110	;# 
   579   003EEF                     ADRES           equ	16111	;# 
   580   003EEF                     ADRESL          equ	16111	;# 
   581   003EF0                     ADRESH          equ	16112	;# 
   582   003EF1                     ADPCH           equ	16113	;# 
   583   003EF3                     ADACQ           equ	16115	;# 
   584   003EF3                     ADACQL          equ	16115	;# 
   585   003EF4                     ADACQH          equ	16116	;# 
   586   003EF5                     ADCAP           equ	16117	;# 
   587   003EF6                     ADPRE           equ	16118	;# 
   588   003EF6                     ADPREL          equ	16118	;# 
   589   003EF7                     ADPREH          equ	16119	;# 
   590   003EF8                     ADCON0          equ	16120	;# 
   591   003EF9                     ADCON1          equ	16121	;# 
   592   003EFA                     ADCON2          equ	16122	;# 
   593   003EFB                     ADCON3          equ	16123	;# 
   594   003EFC                     ADSTAT          equ	16124	;# 
   595   003EFD                     ADREF           equ	16125	;# 
   596   003EFE                     ADACT           equ	16126	;# 
   597   003EFF                     ADCLK           equ	16127	;# 
   598   003F12                     SMT1TMR         equ	16146	;# 
   599   003F12                     SMT1TMRL        equ	16146	;# 
   600   003F13                     SMT1TMRH        equ	16147	;# 
   601   003F14                     SMT1TMRU        equ	16148	;# 
   602   003F15                     SMT1CPR         equ	16149	;# 
   603   003F15                     SMT1CPRL        equ	16149	;# 
   604   003F16                     SMT1CPRH        equ	16150	;# 
   605   003F17                     SMT1CPRU        equ	16151	;# 
   606   003F18                     SMT1CPW         equ	16152	;# 
   607   003F18                     SMT1CPWL        equ	16152	;# 
   608   003F19                     SMT1CPWH        equ	16153	;# 
   609   003F1A                     SMT1CPWU        equ	16154	;# 
   610   003F1B                     SMT1PR          equ	16155	;# 
   611   003F1B                     SMT1PRL         equ	16155	;# 
   612   003F1C                     SMT1PRH         equ	16156	;# 
   613   003F1D                     SMT1PRU         equ	16157	;# 
   614   003F1E                     SMT1CON0        equ	16158	;# 
   615   003F1F                     SMT1CON1        equ	16159	;# 
   616   003F20                     SMT1STAT        equ	16160	;# 
   617   003F21                     SMT1CLK         equ	16161	;# 
   618   003F22                     SMT1SIG         equ	16162	;# 
   619   003F23                     SMT1WIN         equ	16163	;# 
   620   003F38                     NCO1ACC         equ	16184	;# 
   621   003F38                     NCO1ACCL        equ	16184	;# 
   622   003F39                     NCO1ACCH        equ	16185	;# 
   623   003F3A                     NCO1ACCU        equ	16186	;# 
   624   003F3B                     NCO1INC         equ	16187	;# 
   625   003F3B                     NCO1INCL        equ	16187	;# 
   626   003F3C                     NCO1INCH        equ	16188	;# 
   627   003F3D                     NCO1INCU        equ	16189	;# 
   628   003F3E                     NCO1CON         equ	16190	;# 
   629   003F3F                     NCO1CLK         equ	16191	;# 
   630   003F40                     CWG3CLK         equ	16192	;# 
   631   003F40                     CWG3CLKCON      equ	16192	;# 
   632   003F41                     CWG3ISM         equ	16193	;# 
   633   003F41                     CWG3DAT         equ	16193	;# 
   634   003F42                     CWG3DBR         equ	16194	;# 
   635   003F43                     CWG3DBF         equ	16195	;# 
   636   003F44                     CWG3CON0        equ	16196	;# 
   637   003F45                     CWG3CON1        equ	16197	;# 
   638   003F46                     CWG3AS0         equ	16198	;# 
   639   003F47                     CWG3AS1         equ	16199	;# 
   640   003F48                     CWG3STR         equ	16200	;# 
   641   003F49                     CWG2CLK         equ	16201	;# 
   642   003F49                     CWG2CLKCON      equ	16201	;# 
   643   003F4A                     CWG2ISM         equ	16202	;# 
   644   003F4A                     CWG2DAT         equ	16202	;# 
   645   003F4B                     CWG2DBR         equ	16203	;# 
   646   003F4C                     CWG2DBF         equ	16204	;# 
   647   003F4D                     CWG2CON0        equ	16205	;# 
   648   003F4E                     CWG2CON1        equ	16206	;# 
   649   003F4F                     CWG2AS0         equ	16207	;# 
   650   003F50                     CWG2AS1         equ	16208	;# 
   651   003F51                     CWG2STR         equ	16209	;# 
   652   003F52                     CWG1CLK         equ	16210	;# 
   653   003F52                     CWG1CLKCON      equ	16210	;# 
   654   003F53                     CWG1ISM         equ	16211	;# 
   655   003F53                     CWG1DAT         equ	16211	;# 
   656   003F54                     CWG1DBR         equ	16212	;# 
   657   003F55                     CWG1DBF         equ	16213	;# 
   658   003F56                     CWG1CON0        equ	16214	;# 
   659   003F57                     CWG1CON1        equ	16215	;# 
   660   003F58                     CWG1AS0         equ	16216	;# 
   661   003F59                     CWG1AS1         equ	16217	;# 
   662   003F5A                     CWG1STR         equ	16218	;# 
   663   003F5E                     CCPTMRS0        equ	16222	;# 
   664   003F5F                     CCPTMRS1        equ	16223	;# 
   665   003F60                     PWM8DC          equ	16224	;# 
   666   003F60                     PWM8DCL         equ	16224	;# 
   667   003F61                     PWM8DCH         equ	16225	;# 
   668   003F62                     PWM8CON         equ	16226	;# 
   669   003F64                     PWM7DC          equ	16228	;# 
   670   003F64                     PWM7DCL         equ	16228	;# 
   671   003F65                     PWM7DCH         equ	16229	;# 
   672   003F66                     PWM7CON         equ	16230	;# 
   673   003F68                     PWM6DC          equ	16232	;# 
   674   003F68                     PWM6DCL         equ	16232	;# 
   675   003F69                     PWM6DCH         equ	16233	;# 
   676   003F6A                     PWM6CON         equ	16234	;# 
   677   003F6C                     PWM5DC          equ	16236	;# 
   678   003F6C                     PWM5DCL         equ	16236	;# 
   679   003F6D                     PWM5DCH         equ	16237	;# 
   680   003F6E                     PWM5CON         equ	16238	;# 
   681   003F70                     CCPR4           equ	16240	;# 
   682   003F70                     CCPR4L          equ	16240	;# 
   683   003F71                     CCPR4H          equ	16241	;# 
   684   003F72                     CCP4CON         equ	16242	;# 
   685   003F73                     CCP4CAP         equ	16243	;# 
   686   003F74                     CCPR3           equ	16244	;# 
   687   003F74                     CCPR3L          equ	16244	;# 
   688   003F75                     CCPR3H          equ	16245	;# 
   689   003F76                     CCP3CON         equ	16246	;# 
   690   003F77                     CCP3CAP         equ	16247	;# 
   691   003F78                     CCPR2           equ	16248	;# 
   692   003F78                     CCPR2L          equ	16248	;# 
   693   003F79                     CCPR2H          equ	16249	;# 
   694   003F7A                     CCP2CON         equ	16250	;# 
   695   003F7B                     CCP2CAP         equ	16251	;# 
   696   003F7C                     CCPR1           equ	16252	;# 
   697   003F7C                     CCPR1L          equ	16252	;# 
   698   003F7D                     CCPR1H          equ	16253	;# 
   699   003F7E                     CCP1CON         equ	16254	;# 
   700   003F7F                     CCP1CAP         equ	16255	;# 
   701   003F92                     T6TMR           equ	16274	;# 
   702   003F92                     TMR6            equ	16274	;# 
   703   003F93                     T6PR            equ	16275	;# 
   704   003F93                     PR6             equ	16275	;# 
   705   003F94                     T6CON           equ	16276	;# 
   706   003F95                     T6HLT           equ	16277	;# 
   707   003F96                     T6CLKCON        equ	16278	;# 
   708   003F96                     T6CLK           equ	16278	;# 
   709   003F97                     T6RST           equ	16279	;# 
   710   003F98                     TMR5            equ	16280	;# 
   711   003F98                     TMR5L           equ	16280	;# 
   712   003F99                     TMR5H           equ	16281	;# 
   713   003F9A                     T5CON           equ	16282	;# 
   714   003F9A                     TMR5CON         equ	16282	;# 
   715   003F9B                     T5GCON          equ	16283	;# 
   716   003F9B                     TMR5GCON        equ	16283	;# 
   717   003F9C                     T5GATE          equ	16284	;# 
   718   003F9C                     TMR5GATE        equ	16284	;# 
   719   003F9D                     T5CLK           equ	16285	;# 
   720   003F9D                     TMR5CLK         equ	16285	;# 
   721   003F9D                     PR5             equ	16285	;# 
   722   003F9E                     T4TMR           equ	16286	;# 
   723   003F9E                     TMR4            equ	16286	;# 
   724   003F9F                     T4PR            equ	16287	;# 
   725   003F9F                     PR4             equ	16287	;# 
   726   003FA0                     T4CON           equ	16288	;# 
   727   003FA1                     T4HLT           equ	16289	;# 
   728   003FA2                     T4CLKCON        equ	16290	;# 
   729   003FA2                     T4CLK           equ	16290	;# 
   730   003FA3                     T4RST           equ	16291	;# 
   731   003FA4                     TMR3            equ	16292	;# 
   732   003FA4                     TMR3L           equ	16292	;# 
   733   003FA5                     TMR3H           equ	16293	;# 
   734   003FA6                     T3CON           equ	16294	;# 
   735   003FA6                     TMR3CON         equ	16294	;# 
   736   003FA7                     T3GCON          equ	16295	;# 
   737   003FA7                     TMR3GCON        equ	16295	;# 
   738   003FA8                     T3GATE          equ	16296	;# 
   739   003FA8                     TMR3GATE        equ	16296	;# 
   740   003FA9                     T3CLK           equ	16297	;# 
   741   003FA9                     TMR3CLK         equ	16297	;# 
   742   003FA9                     PR3             equ	16297	;# 
   743   003FAA                     T2TMR           equ	16298	;# 
   744   003FAA                     TMR2            equ	16298	;# 
   745   003FAB                     T2PR            equ	16299	;# 
   746   003FAB                     PR2             equ	16299	;# 
   747   003FAC                     T2CON           equ	16300	;# 
   748   003FAD                     T2HLT           equ	16301	;# 
   749   003FAE                     T2CLKCON        equ	16302	;# 
   750   003FAE                     T2CLK           equ	16302	;# 
   751   003FAF                     T2RST           equ	16303	;# 
   752   003FB0                     TMR1            equ	16304	;# 
   753   003FB0                     TMR1L           equ	16304	;# 
   754   003FB1                     TMR1H           equ	16305	;# 
   755   003FB2                     T1CON           equ	16306	;# 
   756   003FB2                     TMR1CON         equ	16306	;# 
   757   003FB3                     T1GCON          equ	16307	;# 
   758   003FB3                     TMR1GCON        equ	16307	;# 
   759   003FB4                     T1GATE          equ	16308	;# 
   760   003FB4                     TMR1GATE        equ	16308	;# 
   761   003FB5                     T1CLK           equ	16309	;# 
   762   003FB5                     TMR1CLK         equ	16309	;# 
   763   003FB5                     PR1             equ	16309	;# 
   764   003FB6                     TMR0L           equ	16310	;# 
   765   003FB6                     TMR0            equ	16310	;# 
   766   003FB7                     TMR0H           equ	16311	;# 
   767   003FB7                     PR0             equ	16311	;# 
   768   003FB8                     T0CON0          equ	16312	;# 
   769   003FB9                     T0CON1          equ	16313	;# 
   770   003FBA                     LATA            equ	16314	;# 
   771   003FBB                     LATB            equ	16315	;# 
   772   003FBC                     LATC            equ	16316	;# 
   773   003FBD                     LATD            equ	16317	;# 
   774   003FBE                     LATE            equ	16318	;# 
   775   003FC2                     TRISA           equ	16322	;# 
   776   003FC3                     TRISB           equ	16323	;# 
   777   003FC4                     TRISC           equ	16324	;# 
   778   003FC5                     TRISD           equ	16325	;# 
   779   003FC6                     TRISE           equ	16326	;# 
   780   003FCA                     PORTA           equ	16330	;# 
   781   003FCB                     PORTB           equ	16331	;# 
   782   003FCC                     PORTC           equ	16332	;# 
   783   003FCD                     PORTD           equ	16333	;# 
   784   003FCE                     PORTE           equ	16334	;# 
   785   003FD2                     INTCON0         equ	16338	;# 
   786   003FD3                     INTCON1         equ	16339	;# 
   787   003FD4                     IVTLOCK         equ	16340	;# 
   788   003FD5                     IVTBASE         equ	16341	;# 
   789   003FD5                     IVTBASEL        equ	16341	;# 
   790   003FD6                     IVTBASEH        equ	16342	;# 
   791   003FD7                     IVTBASEU        equ	16343	;# 
   792   003FD8                     STATUS          equ	16344	;# 
   793   003FD9                     FSR2            equ	16345	;# 
   794   003FD9                     FSR2L           equ	16345	;# 
   795   003FDA                     FSR2H           equ	16346	;# 
   796   003FDB                     PLUSW2          equ	16347	;# 
   797   003FDC                     PREINC2         equ	16348	;# 
   798   003FDD                     POSTDEC2        equ	16349	;# 
   799   003FDE                     POSTINC2        equ	16350	;# 
   800   003FDF                     INDF2           equ	16351	;# 
   801   003FE0                     BSR             equ	16352	;# 
   802   003FE1                     FSR1            equ	16353	;# 
   803   003FE1                     FSR1L           equ	16353	;# 
   804   003FE2                     FSR1H           equ	16354	;# 
   805   003FE3                     PLUSW1          equ	16355	;# 
   806   003FE4                     PREINC1         equ	16356	;# 
   807   003FE5                     POSTDEC1        equ	16357	;# 
   808   003FE6                     POSTINC1        equ	16358	;# 
   809   003FE7                     INDF1           equ	16359	;# 
   810   003FE8                     WREG            equ	16360	;# 
   811   003FE9                     FSR0            equ	16361	;# 
   812   003FE9                     FSR0L           equ	16361	;# 
   813   003FEA                     FSR0H           equ	16362	;# 
   814   003FEB                     PLUSW0          equ	16363	;# 
   815   003FEC                     PREINC0         equ	16364	;# 
   816   003FED                     POSTDEC0        equ	16365	;# 
   817   003FEE                     POSTINC0        equ	16366	;# 
   818   003FEF                     INDF0           equ	16367	;# 
   819   003FF0                     PCON0           equ	16368	;# 
   820   003FF1                     PCON1           equ	16369	;# 
   821   003FF3                     PROD            equ	16371	;# 
   822   003FF3                     PRODL           equ	16371	;# 
   823   003FF4                     PRODH           equ	16372	;# 
   824   003FF5                     TABLAT          equ	16373	;# 
   825   003FF6                     TBLPTR          equ	16374	;# 
   826   003FF6                     TBLPTRL         equ	16374	;# 
   827   003FF7                     TBLPTRH         equ	16375	;# 
   828   003FF8                     TBLPTRU         equ	16376	;# 
   829   003FF9                     PCLAT           equ	16377	;# 
   830   003FF9                     PCL             equ	16377	;# 
   831   003FFA                     PCLATH          equ	16378	;# 
   832   003FFB                     PCLATU          equ	16379	;# 
   833   003FFC                     STKPTR          equ	16380	;# 
   834   003FFD                     TOS             equ	16381	;# 
   835   003FFD                     TOSL            equ	16381	;# 
   836   003FFE                     TOSH            equ	16382	;# 
   837   003FFF                     TOSU            equ	16383	;# 
   838                           
   839                           	psect	idataCOMRAM
   840   00285C                     __pidataCOMRAM:
   841                           	callstack 0
   842                           
   843                           ;initializer for _sevSeg
   844   00285C  3F                 	db	63
   845   00285D  06                 	db	6
   846   00285E  5B                 	db	91
   847   00285F  4F                 	db	79
   848   002860  66                 	db	102
   849   002861  6D                 	db	109
   850   002862  7D                 	db	125
   851   002863  07                 	db	7
   852   002864  7F                 	db	127
   853   002865  6F                 	db	111
   854   003A70                     _ANSELD         set	14960
   855   003A60                     _ANSELC         set	14944
   856   003A50                     _ANSELB         set	14928
   857   003A40                     _ANSELA         set	14912
   858   003EFA                     _ADCON2         set	16122
   859   003EF9                     _ADCON1         set	16121
   860   003EF8                     _ADCON0         set	16120
   861   003FCB                     _PORTBbits      set	16331
   862   003FCA                     _PORTAbits      set	16330
   863   003FCD                     _PORTDbits      set	16333
   864   003FBD                     _LATD           set	16317
   865   003FBC                     _LATC           set	16316
   866   003FBA                     _LATA           set	16314
   867   003F7A                     _CCP2CON        set	16250
   868   003FB2                     _T1CON          set	16306
   869   003FC5                     _TRISD          set	16325
   870   003FC4                     _TRISC          set	16324
   871   003FC3                     _TRISB          set	16323
   872   003FC2                     _TRISA          set	16322
   873                           
   874                           ; #config settings
   875                           
   876                           	psect	cinit
   877   002834                     __pcinit:
   878                           	callstack 0
   879   002834                     start_initialization:
   880                           	callstack 0
   881   002834                     __initialization:
   882                           	callstack 0
   883                           
   884                           ; Initialize objects allocated to COMRAM (10 bytes)
   885                           ; load TBLPTR registers with __pidataCOMRAM
   886   002834  0E5C               	movlw	low __pidataCOMRAM
   887   002836  6EF6               	movwf	tblptrl,c
   888   002838  0E28               	movlw	high __pidataCOMRAM
   889   00283A  6EF7               	movwf	tblptrh,c
   890   00283C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   891   00283E  6EF8               	movwf	tblptru,c
   892   002840  EE00  F01A         	lfsr	0,__pdataCOMRAM
   893   002844  EE10 F00A          	lfsr	1,10
   894   002848                     copy_data0:
   895   002848  0009               	tblrd		*+
   896   00284A  006F FFD7 FFEE     	movff	tablat,postinc0
   897   002850  50E5               	movf	postdec1,w,c
   898   002852  50E1               	movf	fsr1l,w,c
   899   002854  E1F9               	bnz	copy_data0
   900   002856                     end_of_initialization:
   901                           	callstack 0
   902   002856                     __end_of__initialization:
   903                           	callstack 0
   904   002856  0100               	movlb	0
   905   002858  EF01  F010         	goto	_main	;jump to C main() function
   906                           
   907                           	psect	dataCOMRAM
   908   00001A                     __pdataCOMRAM:
   909                           	callstack 0
   910   00001A                     _sevSeg:
   911                           	callstack 0
   912   00001A                     	ds	10
   913                           
   914                           	psect	cstackCOMRAM
   915   000001                     __pcstackCOMRAM:
   916                           	callstack 0
   917   000001                     ?___wmul:
   918                           	callstack 0
   919   000001                     ?___awdiv:
   920                           	callstack 0
   921   000001                     ?___awmod:
   922                           	callstack 0
   923   000001                     ___wmul@multiplier:
   924                           	callstack 0
   925   000001                     ___awdiv@dividend:
   926                           	callstack 0
   927   000001                     ___awmod@dividend:
   928                           	callstack 0
   929                           
   930                           ; 2 bytes @ 0x0
   931   000001                     	ds	2
   932   000003                     ___wmul@multiplicand:
   933                           	callstack 0
   934   000003                     ___awdiv@divisor:
   935                           	callstack 0
   936   000003                     ___awmod@divisor:
   937                           	callstack 0
   938                           
   939                           ; 2 bytes @ 0x2
   940   000003                     	ds	2
   941   000005                     ___awdiv@counter:
   942                           	callstack 0
   943   000005                     ___awmod@counter:
   944                           	callstack 0
   945   000005                     ___wmul@product:
   946                           	callstack 0
   947   000005                     
   948                           ; 1 bytes @ 0x4
   949   000005                     	ds	1
   950   000006                     ___awdiv@sign:
   951                           	callstack 0
   952   000006                     ___awmod@sign:
   953                           	callstack 0
   954                           
   955                           ; 1 bytes @ 0x5
   956   000006                     	ds	1
   957   000007                     ___awdiv@quotient:
   958                           	callstack 0
   959                           
   960                           ; 2 bytes @ 0x6
   961   000007                     	ds	2
   962   000009                     ?_calculate:
   963                           	callstack 0
   964   000009                     display@dValue:
   965                           	callstack 0
   966   000009                     calculate@val1:
   967                           	callstack 0
   968                           
   969                           ; 2 bytes @ 0x8
   970   000009                     	ds	2
   971   00000B                     display@digit2:
   972                           	callstack 0
   973   00000B                     calculate@val2:
   974                           	callstack 0
   975   00000B                     
   976                           ; 1 bytes @ 0xA
   977   00000B                     	ds	2
   978   00000D                     calculate@op:
   979                           	callstack 0
   980   00000D                     display@digit1:
   981                           	callstack 0
   982                           
   983                           ; 2 bytes @ 0xC
   984   00000D                     	ds	1
   985   00000E                     ??_calculate:
   986                           
   987                           ; 1 bytes @ 0xD
   988   00000E                     	ds	1
   989   00000F                     ??_scanKeypad:
   990                           
   991                           ; 1 bytes @ 0xE
   992   00000F                     	ds	1
   993   000010                     ??_main:
   994                           
   995                           ; 1 bytes @ 0xF
   996   000010                     	ds	2
   997   000012                     main@result:
   998                           	callstack 0
   999                           
  1000                           ; 2 bytes @ 0x11
  1001   000012                     	ds	2
  1002   000014                     main@operator:
  1003                           	callstack 0
  1004                           
  1005                           ; 1 bytes @ 0x13
  1006   000014                     	ds	1
  1007   000015                     main@value1:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x14
  1011   000015                     	ds	2
  1012   000017                     main@value2:
  1013                           	callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x16
  1016   000017                     	ds	2
  1017   000019                     main@ret1:
  1018                           	callstack 0
  1019                           
  1020                           ; 1 bytes @ 0x18
  1021   000019                     	ds	1
  1022                           
  1023 ;;
  1024 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1025 ;;
  1026 ;; *************** function _main *****************
  1027 ;; Defined at:
  1028 ;;		line 60 in file "lab7.c"
  1029 ;; Parameters:    Size  Location     Type
  1030 ;;		None
  1031 ;; Auto vars:     Size  Location     Type
  1032 ;;  value2          2   22[COMRAM] int 
  1033 ;;  value1          2   20[COMRAM] int 
  1034 ;;  result          2   17[COMRAM] int 
  1035 ;;  ret1            1   24[COMRAM] enum E16765
  1036 ;;  operator        1   19[COMRAM] enum E16765
  1037 ;; Return value:  Size  Location     Type
  1038 ;;                  1    wreg      void 
  1039 ;; Registers used:
  1040 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1041 ;; Tracked objects:
  1042 ;;		On entry : 0/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1047 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1048 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1049 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1050 ;;Total ram usage:       10 bytes
  1051 ;; Hardware stack levels required when called: 3
  1052 ;; This function calls:
  1053 ;;		___wmul
  1054 ;;		_calculate
  1055 ;;		_display
  1056 ;;		_scanKeypad
  1057 ;; This function is called by:
  1058 ;;		Startup code after reset
  1059 ;; This function uses a non-reentrant model
  1060 ;;
  1061                           
  1062                           	psect	text0
  1063   002002                     __ptext0:
  1064                           	callstack 0
  1065   002002                     _main:
  1066                           	callstack 28
  1067   002002                     
  1068                           ;lab7.c: 61:     enum VALUE ret1;;lab7.c: 62:     enum VALUE operator;;lab7.c: 63:     i
      +                          nt value1, value2, result;;lab7.c: 65:     TRISA = 0x00;
  1069   002002  6AC2               	clrf	194,c	;volatile
  1070   002004                     
  1071                           ;lab7.c: 66:     TRISB = 0b00001111;
  1072   002004  0E0F               	movlw	15
  1073   002006  6EC3               	movwf	195,c	;volatile
  1074   002008                     
  1075                           ;lab7.c: 67:     TRISC = 0x00;
  1076   002008  6AC4               	clrf	196,c	;volatile
  1077   00200A                     
  1078                           ;lab7.c: 68:     TRISD = 0x00;
  1079   00200A  6AC5               	clrf	197,c	;volatile
  1080   00200C                     
  1081                           ;lab7.c: 70:     ADCON0 = 0;
  1082   00200C  013E               	movlb	62	; () banked
  1083   00200E  6BF8               	clrf	248,b	;volatile
  1084   002010                     
  1085                           ; BSR set to: 62
  1086                           ;lab7.c: 71:     ADCON1 = 0;
  1087   002010  6BF9               	clrf	249,b	;volatile
  1088   002012                     
  1089                           ; BSR set to: 62
  1090                           ;lab7.c: 72:     ADCON2 = 0;
  1091   002012  6BFA               	clrf	250,b	;volatile
  1092   002014                     
  1093                           ; BSR set to: 62
  1094                           ;lab7.c: 73:     T1CON = 0;
  1095   002014  6AB2               	clrf	178,c	;volatile
  1096   002016                     
  1097                           ; BSR set to: 62
  1098                           ;lab7.c: 74:     ANSELA = 0;
  1099   002016  013A               	movlb	58	; () banked
  1100   002018  6B40               	clrf	64,b	;volatile
  1101   00201A                     
  1102                           ; BSR set to: 58
  1103                           ;lab7.c: 75:     ANSELB = 0;
  1104   00201A  6B50               	clrf	80,b	;volatile
  1105   00201C                     
  1106                           ; BSR set to: 58
  1107                           ;lab7.c: 76:     ANSELC = 0;
  1108   00201C  6B60               	clrf	96,b	;volatile
  1109   00201E                     
  1110                           ; BSR set to: 58
  1111                           ;lab7.c: 77:     ANSELD = 0;
  1112   00201E  6B70               	clrf	112,b	;volatile
  1113   002020                     
  1114                           ; BSR set to: 58
  1115                           ;lab7.c: 79:     CCP2CON = 0x00;
  1116   002020  6A7A               	clrf	122,c	;volatile
  1117   002022                     l1505:
  1118                           
  1119                           ;lab7.c: 84:         ret1 = NOVALUE;
  1120   002022  6819               	setf	main@ret1^0,c
  1121   002024                     
  1122                           ;lab7.c: 85:         operator = NOVALUE;
  1123   002024  6814               	setf	main@operator^0,c
  1124                           
  1125                           ;lab7.c: 86:         value1 = 0;
  1126   002026  0E00               	movlw	0
  1127   002028  6E16               	movwf	(main@value1+1)^0,c
  1128   00202A  0E00               	movlw	0
  1129   00202C  6E15               	movwf	main@value1^0,c
  1130                           
  1131                           ;lab7.c: 87:         value2 = 0;
  1132   00202E  0E00               	movlw	0
  1133   002030  6E18               	movwf	(main@value2+1)^0,c
  1134   002032  0E00               	movlw	0
  1135   002034  6E17               	movwf	main@value2^0,c
  1136                           
  1137                           ;lab7.c: 90:         while((int)ret1 >= 100) {
  1138   002036  EF20  F010         	goto	l1511
  1139   00203A                     l1509:
  1140                           
  1141                           ;lab7.c: 91:             ret1 = scanKeypad();
  1142   00203A  ECB3  F011         	call	_scanKeypad	;wreg free
  1143   00203E  6E19               	movwf	main@ret1^0,c
  1144   002040                     l1511:
  1145                           
  1146                           ;lab7.c: 90:         while((int)ret1 >= 100) {
  1147   002040  0E64               	movlw	100
  1148   002042  6019               	cpfslt	main@ret1^0,c
  1149   002044  EF26  F010         	goto	u911
  1150   002048  EF28  F010         	goto	u910
  1151   00204C                     u911:
  1152   00204C  EF1D  F010         	goto	l1509
  1153   002050                     u910:
  1154   002050                     
  1155                           ;lab7.c: 93:         if (ret1 == RESET) { continue; }
  1156   002050  0E0A               	movlw	10
  1157   002052  1819               	xorwf	main@ret1^0,w,c
  1158   002054  A4D8               	btfss	status,2,c
  1159   002056  EF2F  F010         	goto	u921
  1160   00205A  EF31  F010         	goto	u920
  1161   00205E                     u921:
  1162   00205E  EF33  F010         	goto	l1517
  1163   002062                     u920:
  1164   002062  EF11  F010         	goto	l1505
  1165   002066                     l1517:
  1166                           
  1167                           ;lab7.c: 94:         value1 += (int)ret1;
  1168   002066  5019               	movf	main@ret1^0,w,c
  1169   002068  2615               	addwf	main@value1^0,f,c
  1170   00206A  0E00               	movlw	0
  1171   00206C  2216               	addwfc	(main@value1+1)^0,f,c
  1172   00206E                     
  1173                           ;lab7.c: 95:         display(value1);
  1174   00206E  C015  F009         	movff	main@value1,display@dValue
  1175   002072  C016  F00A         	movff	main@value1+1,display@dValue+1
  1176   002076  EC77  F012         	call	_display	;wreg free
  1177   00207A                     
  1178                           ;lab7.c: 96:         _delay((unsigned long)((300)*(4000000/4000.0)));
  1179   00207A  0E02               	movlw	2
  1180   00207C  6E11               	movwf	(??_main+1)^0,c
  1181   00207E  0E86               	movlw	134
  1182   002080  6E10               	movwf	??_main^0,c
  1183   002082  0E99               	movlw	153
  1184   002084                     u1137:
  1185   002084  2EE8               	decfsz	wreg,f,c
  1186   002086  D7FE               	bra	u1137
  1187   002088  2E10               	decfsz	??_main^0,f,c
  1188   00208A  D7FC               	bra	u1137
  1189   00208C  2E11               	decfsz	(??_main+1)^0,f,c
  1190   00208E  D7FA               	bra	u1137
  1191   002090  0000               	nop	
  1192   002092                     
  1193                           ;lab7.c: 97:         ret1 = NOVALUE;
  1194   002092  6819               	setf	main@ret1^0,c
  1195                           
  1196                           ;lab7.c: 99:         while((ret1 == NOVALUE) || (ret1 == COMPUTE)) {
  1197   002094  EF4F  F010         	goto	l1527
  1198   002098                     l1525:
  1199                           
  1200                           ;lab7.c: 100:             ret1 = scanKeypad();
  1201   002098  ECB3  F011         	call	_scanKeypad	;wreg free
  1202   00209C  6E19               	movwf	main@ret1^0,c
  1203   00209E                     l1527:
  1204                           
  1205                           ;lab7.c: 99:         while((ret1 == NOVALUE) || (ret1 == COMPUTE)) {
  1206   00209E  2819               	incf	main@ret1^0,w,c
  1207   0020A0  B4D8               	btfsc	status,2,c
  1208   0020A2  EF55  F010         	goto	u931
  1209   0020A6  EF57  F010         	goto	u930
  1210   0020AA                     u931:
  1211   0020AA  EF4C  F010         	goto	l1525
  1212   0020AE                     u930:
  1213   0020AE  0E69               	movlw	105
  1214   0020B0  1819               	xorwf	main@ret1^0,w,c
  1215   0020B2  B4D8               	btfsc	status,2,c
  1216   0020B4  EF5E  F010         	goto	u941
  1217   0020B8  EF60  F010         	goto	u940
  1218   0020BC                     u941:
  1219   0020BC  EF4C  F010         	goto	l1525
  1220   0020C0                     u940:
  1221   0020C0                     
  1222                           ;lab7.c: 102:         if (ret1 == RESET) { continue; }
  1223   0020C0  0E0A               	movlw	10
  1224   0020C2  1819               	xorwf	main@ret1^0,w,c
  1225   0020C4  A4D8               	btfss	status,2,c
  1226   0020C6  EF67  F010         	goto	u951
  1227   0020CA  EF69  F010         	goto	u950
  1228   0020CE                     u951:
  1229   0020CE  EF6B  F010         	goto	l1535
  1230   0020D2                     u950:
  1231   0020D2  EF11  F010         	goto	l1505
  1232   0020D6                     l1535:
  1233                           
  1234                           ;lab7.c: 105:         if (ret1 < 100) {
  1235   0020D6  0E64               	movlw	100
  1236   0020D8  6019               	cpfslt	main@ret1^0,c
  1237   0020DA  EF71  F010         	goto	u961
  1238   0020DE  EF73  F010         	goto	u960
  1239   0020E2                     u961:
  1240   0020E2  EFB6  F010         	goto	l1555
  1241   0020E6                     u960:
  1242   0020E6                     
  1243                           ;lab7.c: 106:             value1 *= 10;
  1244   0020E6  C015  F001         	movff	main@value1,___wmul@multiplier
  1245   0020EA  C016  F002         	movff	main@value1+1,___wmul@multiplier+1
  1246   0020EE  0E00               	movlw	0
  1247   0020F0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1248   0020F2  0E0A               	movlw	10
  1249   0020F4  6E03               	movwf	___wmul@multiplicand^0,c
  1250   0020F6  EC05  F014         	call	___wmul	;wreg free
  1251   0020FA  C001  F015         	movff	?___wmul,main@value1
  1252   0020FE  C002  F016         	movff	?___wmul+1,main@value1+1
  1253   002102                     
  1254                           ;lab7.c: 107:             value1 += ret1;
  1255   002102  5019               	movf	main@ret1^0,w,c
  1256   002104  2615               	addwf	main@value1^0,f,c
  1257   002106  0E00               	movlw	0
  1258   002108  2216               	addwfc	(main@value1+1)^0,f,c
  1259   00210A                     
  1260                           ;lab7.c: 108:             display(value1);
  1261   00210A  C015  F009         	movff	main@value1,display@dValue
  1262   00210E  C016  F00A         	movff	main@value1+1,display@dValue+1
  1263   002112  EC77  F012         	call	_display	;wreg free
  1264   002116                     
  1265                           ;lab7.c: 109:             _delay((unsigned long)((300)*(4000000/4000.0)));
  1266   002116  0E02               	movlw	2
  1267   002118  6E11               	movwf	(??_main+1)^0,c
  1268   00211A  0E86               	movlw	134
  1269   00211C  6E10               	movwf	??_main^0,c
  1270   00211E  0E99               	movlw	153
  1271   002120                     u1147:
  1272   002120  2EE8               	decfsz	wreg,f,c
  1273   002122  D7FE               	bra	u1147
  1274   002124  2E10               	decfsz	??_main^0,f,c
  1275   002126  D7FC               	bra	u1147
  1276   002128  2E11               	decfsz	(??_main+1)^0,f,c
  1277   00212A  D7FA               	bra	u1147
  1278   00212C  0000               	nop	
  1279   00212E                     
  1280                           ;lab7.c: 110:             ret1 = NOVALUE;
  1281   00212E  6819               	setf	main@ret1^0,c
  1282                           
  1283                           ;lab7.c: 112:             while(((ret1 < 100) || (ret1 > 104)) && (ret1 != RESET)) {
  1284   002130  EF9D  F010         	goto	l1549
  1285   002134                     l1547:
  1286                           
  1287                           ;lab7.c: 113:                 ret1 = scanKeypad();
  1288   002134  ECB3  F011         	call	_scanKeypad	;wreg free
  1289   002138  6E19               	movwf	main@ret1^0,c
  1290   00213A                     l1549:
  1291                           
  1292                           ;lab7.c: 112:             while(((ret1 < 100) || (ret1 > 104)) && (ret1 != RESET)) {
  1293   00213A  0E63               	movlw	99
  1294   00213C  6419               	cpfsgt	main@ret1^0,c
  1295   00213E  EFA3  F010         	goto	u971
  1296   002142  EFA5  F010         	goto	u970
  1297   002146                     u971:
  1298   002146  EFAD  F010         	goto	l1553
  1299   00214A                     u970:
  1300   00214A  0E68               	movlw	104
  1301   00214C  6419               	cpfsgt	main@ret1^0,c
  1302   00214E  EFAB  F010         	goto	u981
  1303   002152  EFAD  F010         	goto	u980
  1304   002156                     u981:
  1305   002156  EFB6  F010         	goto	l1555
  1306   00215A                     u980:
  1307   00215A                     l1553:
  1308   00215A  0E0A               	movlw	10
  1309   00215C  1819               	xorwf	main@ret1^0,w,c
  1310   00215E  A4D8               	btfss	status,2,c
  1311   002160  EFB4  F010         	goto	u991
  1312   002164  EFB6  F010         	goto	u990
  1313   002168                     u991:
  1314   002168  EF9A  F010         	goto	l1547
  1315   00216C                     u990:
  1316   00216C                     l1555:
  1317                           
  1318                           ;lab7.c: 116:         if (ret1 >= 100 && ret1 <= 103) { operator = ret1; }
  1319   00216C  0E63               	movlw	99
  1320   00216E  6419               	cpfsgt	main@ret1^0,c
  1321   002170  EFBC  F010         	goto	u1001
  1322   002174  EFBE  F010         	goto	u1000
  1323   002178                     u1001:
  1324   002178  EFCA  F010         	goto	l1561
  1325   00217C                     u1000:
  1326   00217C  0E68               	movlw	104
  1327   00217E  6019               	cpfslt	main@ret1^0,c
  1328   002180  EFC4  F010         	goto	u1011
  1329   002184  EFC6  F010         	goto	u1010
  1330   002188                     u1011:
  1331   002188  EFCA  F010         	goto	l1561
  1332   00218C                     u1010:
  1333   00218C  C019  F014         	movff	main@ret1,main@operator
  1334   002190  EFD5  F010         	goto	l73
  1335   002194                     l1561:
  1336   002194  0E0A               	movlw	10
  1337   002196  1819               	xorwf	main@ret1^0,w,c
  1338   002198  A4D8               	btfss	status,2,c
  1339   00219A  EFD1  F010         	goto	u1021
  1340   00219E  EFD3  F010         	goto	u1020
  1341   0021A2                     u1021:
  1342   0021A2  EFD5  F010         	goto	l73
  1343   0021A6                     u1020:
  1344   0021A6  EF11  F010         	goto	l1505
  1345   0021AA                     l73:
  1346                           
  1347                           ;lab7.c: 119:         ret1 = NOVALUE;
  1348   0021AA  6819               	setf	main@ret1^0,c
  1349   0021AC                     
  1350                           ;lab7.c: 120:         display(0);
  1351   0021AC  0E00               	movlw	0
  1352   0021AE  6E0A               	movwf	(display@dValue+1)^0,c
  1353   0021B0  0E00               	movlw	0
  1354   0021B2  6E09               	movwf	display@dValue^0,c
  1355   0021B4  EC77  F012         	call	_display	;wreg free
  1356   0021B8                     
  1357                           ;lab7.c: 121:         _delay((unsigned long)((300)*(4000000/4000.0)));
  1358   0021B8  0E02               	movlw	2
  1359   0021BA  6E11               	movwf	(??_main+1)^0,c
  1360   0021BC  0E86               	movlw	134
  1361   0021BE  6E10               	movwf	??_main^0,c
  1362   0021C0  0E99               	movlw	153
  1363   0021C2                     u1157:
  1364   0021C2  2EE8               	decfsz	wreg,f,c
  1365   0021C4  D7FE               	bra	u1157
  1366   0021C6  2E10               	decfsz	??_main^0,f,c
  1367   0021C8  D7FC               	bra	u1157
  1368   0021CA  2E11               	decfsz	(??_main+1)^0,f,c
  1369   0021CC  D7FA               	bra	u1157
  1370   0021CE  0000               	nop	
  1371                           
  1372                           ;lab7.c: 124:         while(ret1 >= 100) {
  1373   0021D0  EFED  F010         	goto	l1571
  1374   0021D4                     l1569:
  1375                           
  1376                           ;lab7.c: 125:             ret1 = scanKeypad();
  1377   0021D4  ECB3  F011         	call	_scanKeypad	;wreg free
  1378   0021D8  6E19               	movwf	main@ret1^0,c
  1379   0021DA                     l1571:
  1380                           
  1381                           ;lab7.c: 124:         while(ret1 >= 100) {
  1382   0021DA  0E64               	movlw	100
  1383   0021DC  6019               	cpfslt	main@ret1^0,c
  1384   0021DE  EFF3  F010         	goto	u1031
  1385   0021E2  EFF5  F010         	goto	u1030
  1386   0021E6                     u1031:
  1387   0021E6  EFEA  F010         	goto	l1569
  1388   0021EA                     u1030:
  1389   0021EA                     
  1390                           ;lab7.c: 127:         if (ret1 == RESET) { continue; }
  1391   0021EA  0E0A               	movlw	10
  1392   0021EC  1819               	xorwf	main@ret1^0,w,c
  1393   0021EE  A4D8               	btfss	status,2,c
  1394   0021F0  EFFC  F010         	goto	u1041
  1395   0021F4  EFFE  F010         	goto	u1040
  1396   0021F8                     u1041:
  1397   0021F8  EF00  F011         	goto	l1577
  1398   0021FC                     u1040:
  1399   0021FC  EF11  F010         	goto	l1505
  1400   002200                     l1577:
  1401                           
  1402                           ;lab7.c: 128:         value2 += ret1;
  1403   002200  5019               	movf	main@ret1^0,w,c
  1404   002202  2617               	addwf	main@value2^0,f,c
  1405   002204  0E00               	movlw	0
  1406   002206  2218               	addwfc	(main@value2+1)^0,f,c
  1407   002208                     
  1408                           ;lab7.c: 129:         display(value2);
  1409   002208  C017  F009         	movff	main@value2,display@dValue
  1410   00220C  C018  F00A         	movff	main@value2+1,display@dValue+1
  1411   002210  EC77  F012         	call	_display	;wreg free
  1412   002214                     
  1413                           ;lab7.c: 130:         _delay((unsigned long)((300)*(4000000/4000.0)));
  1414   002214  0E02               	movlw	2
  1415   002216  6E11               	movwf	(??_main+1)^0,c
  1416   002218  0E86               	movlw	134
  1417   00221A  6E10               	movwf	??_main^0,c
  1418   00221C  0E99               	movlw	153
  1419   00221E                     u1167:
  1420   00221E  2EE8               	decfsz	wreg,f,c
  1421   002220  D7FE               	bra	u1167
  1422   002222  2E10               	decfsz	??_main^0,f,c
  1423   002224  D7FC               	bra	u1167
  1424   002226  2E11               	decfsz	(??_main+1)^0,f,c
  1425   002228  D7FA               	bra	u1167
  1426   00222A  0000               	nop	
  1427   00222C                     
  1428                           ;lab7.c: 131:         ret1 = NOVALUE;
  1429   00222C  6819               	setf	main@ret1^0,c
  1430                           
  1431                           ;lab7.c: 134:         while((ret1 >= 100) && (ret1 != COMPUTE) && (ret1 != RESET)) {
  1432   00222E  EF1C  F011         	goto	l1587
  1433   002232                     l1585:
  1434                           
  1435                           ;lab7.c: 135:             ret1 = scanKeypad();
  1436   002232  ECB3  F011         	call	_scanKeypad	;wreg free
  1437   002236  6E19               	movwf	main@ret1^0,c
  1438   002238                     l1587:
  1439                           
  1440                           ;lab7.c: 134:         while((ret1 >= 100) && (ret1 != COMPUTE) && (ret1 != RESET)) {
  1441   002238  0E63               	movlw	99
  1442   00223A  6419               	cpfsgt	main@ret1^0,c
  1443   00223C  EF22  F011         	goto	u1051
  1444   002240  EF24  F011         	goto	u1050
  1445   002244                     u1051:
  1446   002244  EF36  F011         	goto	l1593
  1447   002248                     u1050:
  1448   002248  0E69               	movlw	105
  1449   00224A  1819               	xorwf	main@ret1^0,w,c
  1450   00224C  B4D8               	btfsc	status,2,c
  1451   00224E  EF2B  F011         	goto	u1061
  1452   002252  EF2D  F011         	goto	u1060
  1453   002256                     u1061:
  1454   002256  EF36  F011         	goto	l1593
  1455   00225A                     u1060:
  1456   00225A  0E0A               	movlw	10
  1457   00225C  1819               	xorwf	main@ret1^0,w,c
  1458   00225E  A4D8               	btfss	status,2,c
  1459   002260  EF34  F011         	goto	u1071
  1460   002264  EF36  F011         	goto	u1070
  1461   002268                     u1071:
  1462   002268  EF19  F011         	goto	l1585
  1463   00226C                     u1070:
  1464   00226C                     l1593:
  1465                           
  1466                           ;lab7.c: 137:         if (ret1 == RESET) { continue; }
  1467   00226C  0E0A               	movlw	10
  1468   00226E  1819               	xorwf	main@ret1^0,w,c
  1469   002270  A4D8               	btfss	status,2,c
  1470   002272  EF3D  F011         	goto	u1081
  1471   002276  EF3F  F011         	goto	u1080
  1472   00227A                     u1081:
  1473   00227A  EF41  F011         	goto	l1597
  1474   00227E                     u1080:
  1475   00227E  EF11  F010         	goto	l1505
  1476   002282                     l1597:
  1477                           
  1478                           ;lab7.c: 138:         if (ret1 < 100) {
  1479   002282  0E64               	movlw	100
  1480   002284  6019               	cpfslt	main@ret1^0,c
  1481   002286  EF47  F011         	goto	u1091
  1482   00228A  EF49  F011         	goto	u1090
  1483   00228E                     u1091:
  1484   00228E  EF82  F011         	goto	l1613
  1485   002292                     u1090:
  1486   002292                     
  1487                           ;lab7.c: 139:             value2 *= 10;
  1488   002292  C017  F001         	movff	main@value2,___wmul@multiplier
  1489   002296  C018  F002         	movff	main@value2+1,___wmul@multiplier+1
  1490   00229A  0E00               	movlw	0
  1491   00229C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1492   00229E  0E0A               	movlw	10
  1493   0022A0  6E03               	movwf	___wmul@multiplicand^0,c
  1494   0022A2  EC05  F014         	call	___wmul	;wreg free
  1495   0022A6  C001  F017         	movff	?___wmul,main@value2
  1496   0022AA  C002  F018         	movff	?___wmul+1,main@value2+1
  1497   0022AE                     
  1498                           ;lab7.c: 140:             value2 += ret1;
  1499   0022AE  5019               	movf	main@ret1^0,w,c
  1500   0022B0  2617               	addwf	main@value2^0,f,c
  1501   0022B2  0E00               	movlw	0
  1502   0022B4  2218               	addwfc	(main@value2+1)^0,f,c
  1503   0022B6                     
  1504                           ;lab7.c: 141:             display(value2);
  1505   0022B6  C017  F009         	movff	main@value2,display@dValue
  1506   0022BA  C018  F00A         	movff	main@value2+1,display@dValue+1
  1507   0022BE  EC77  F012         	call	_display	;wreg free
  1508   0022C2                     
  1509                           ;lab7.c: 142:             _delay((unsigned long)((300)*(4000000/4000.0)));
  1510   0022C2  0E02               	movlw	2
  1511   0022C4  6E11               	movwf	(??_main+1)^0,c
  1512   0022C6  0E86               	movlw	134
  1513   0022C8  6E10               	movwf	??_main^0,c
  1514   0022CA  0E99               	movlw	153
  1515   0022CC                     u1177:
  1516   0022CC  2EE8               	decfsz	wreg,f,c
  1517   0022CE  D7FE               	bra	u1177
  1518   0022D0  2E10               	decfsz	??_main^0,f,c
  1519   0022D2  D7FC               	bra	u1177
  1520   0022D4  2E11               	decfsz	(??_main+1)^0,f,c
  1521   0022D6  D7FA               	bra	u1177
  1522   0022D8  0000               	nop	
  1523   0022DA                     l1607:
  1524                           
  1525                           ;lab7.c: 145:                 ret1 = scanKeypad();
  1526   0022DA  ECB3  F011         	call	_scanKeypad	;wreg free
  1527   0022DE  6E19               	movwf	main@ret1^0,c
  1528   0022E0                     
  1529                           ;lab7.c: 146:             } while((ret1 != COMPUTE) && (ret1 != RESET));
  1530   0022E0  0E69               	movlw	105
  1531   0022E2  1819               	xorwf	main@ret1^0,w,c
  1532   0022E4  B4D8               	btfsc	status,2,c
  1533   0022E6  EF77  F011         	goto	u1101
  1534   0022EA  EF79  F011         	goto	u1100
  1535   0022EE                     u1101:
  1536   0022EE  EF82  F011         	goto	l1613
  1537   0022F2                     u1100:
  1538   0022F2  0E0A               	movlw	10
  1539   0022F4  1819               	xorwf	main@ret1^0,w,c
  1540   0022F6  A4D8               	btfss	status,2,c
  1541   0022F8  EF80  F011         	goto	u1111
  1542   0022FC  EF82  F011         	goto	u1110
  1543   002300                     u1111:
  1544   002300  EF6D  F011         	goto	l1607
  1545   002304                     u1110:
  1546   002304                     l1613:
  1547                           
  1548                           ;lab7.c: 148:         if (ret1 == RESET) { continue; }
  1549   002304  0E0A               	movlw	10
  1550   002306  1819               	xorwf	main@ret1^0,w,c
  1551   002308  A4D8               	btfss	status,2,c
  1552   00230A  EF89  F011         	goto	u1121
  1553   00230E  EF8B  F011         	goto	u1120
  1554   002312                     u1121:
  1555   002312  EF8D  F011         	goto	l1617
  1556   002316                     u1120:
  1557   002316  EF11  F010         	goto	l1505
  1558   00231A                     l1617:
  1559                           
  1560                           ;lab7.c: 151:         result = calculate(value1, value2, operator);
  1561   00231A  C015  F009         	movff	main@value1,calculate@val1
  1562   00231E  C016  F00A         	movff	main@value1+1,calculate@val1+1
  1563   002322  C017  F00B         	movff	main@value2,calculate@val2
  1564   002326  C018  F00C         	movff	main@value2+1,calculate@val2+1
  1565   00232A  C014  F00D         	movff	main@operator,calculate@op
  1566   00232E  ECE9  F012         	call	_calculate	;wreg free
  1567   002332  C009  F012         	movff	?_calculate,main@result
  1568   002336  C00A  F013         	movff	?_calculate+1,main@result+1
  1569   00233A                     
  1570                           ;lab7.c: 152:         display(result);
  1571   00233A  C012  F009         	movff	main@result,display@dValue
  1572   00233E  C013  F00A         	movff	main@result+1,display@dValue+1
  1573   002342  EC77  F012         	call	_display	;wreg free
  1574   002346                     
  1575                           ;lab7.c: 153:         _delay((unsigned long)((800)*(4000000/4000.0)));
  1576   002346  0E05               	movlw	5
  1577   002348  6E11               	movwf	(??_main+1)^0,c
  1578   00234A  0E0F               	movlw	15
  1579   00234C  6E10               	movwf	??_main^0,c
  1580   00234E  0EF1               	movlw	241
  1581   002350                     u1187:
  1582   002350  2EE8               	decfsz	wreg,f,c
  1583   002352  D7FE               	bra	u1187
  1584   002354  2E10               	decfsz	??_main^0,f,c
  1585   002356  D7FC               	bra	u1187
  1586   002358  2E11               	decfsz	(??_main+1)^0,f,c
  1587   00235A  D7FA               	bra	u1187
  1588   00235C  0000               	nop	
  1589   00235E  EF11  F010         	goto	l1505
  1590   002362  EFFE  F0FF         	goto	start
  1591   002366                     __end_of_main:
  1592                           	callstack 0
  1593                           
  1594 ;; *************** function _scanKeypad *****************
  1595 ;; Defined at:
  1596 ;;		line 196 in file "lab7.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;		None
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;		None
  1601 ;; Return value:  Size  Location     Type
  1602 ;;                  1    wreg      enum E16765
  1603 ;; Registers used:
  1604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1612 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1613 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1614 ;;Total ram usage:        1 bytes
  1615 ;; Hardware stack levels used: 1
  1616 ;; Hardware stack levels required when called: 2
  1617 ;; This function calls:
  1618 ;;		_display
  1619 ;; This function is called by:
  1620 ;;		_main
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           	psect	text1
  1625   002366                     __ptext1:
  1626                           	callstack 0
  1627   002366                     _scanKeypad:
  1628                           	callstack 28
  1629   002366                     
  1630                           ;lab7.c: 199:     PORTBbits.RB4 = 0;
  1631   002366  98CB               	bcf	203,4,c	;volatile
  1632                           
  1633                           ;lab7.c: 200:     PORTBbits.RB5 = 0;
  1634   002368  9ACB               	bcf	203,5,c	;volatile
  1635                           
  1636                           ;lab7.c: 201:     PORTBbits.RB6 = 0;
  1637   00236A  9CCB               	bcf	203,6,c	;volatile
  1638                           
  1639                           ;lab7.c: 202:     PORTBbits.RB7 = 0;
  1640   00236C  9ECB               	bcf	203,7,c	;volatile
  1641   00236E                     
  1642                           ;lab7.c: 203:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1643   00236E  0E41               	movlw	65
  1644   002370  6E0F               	movwf	??_scanKeypad^0,c
  1645   002372  0EEE               	movlw	238
  1646   002374                     u1197:
  1647   002374  2EE8               	decfsz	wreg,f,c
  1648   002376  D7FE               	bra	u1197
  1649   002378  2E0F               	decfsz	??_scanKeypad^0,f,c
  1650   00237A  D7FC               	bra	u1197
  1651   00237C  D000               	nop2	
  1652   00237E                     
  1653                           ;lab7.c: 205:     PORTBbits.RB4 = 1;
  1654   00237E  88CB               	bsf	203,4,c	;volatile
  1655   002380                     
  1656                           ;lab7.c: 206:     if (PORTBbits.RB0 == 1) {
  1657   002380  A0CB               	btfss	203,0,c	;volatile
  1658   002382  EFC5  F011         	goto	u741
  1659   002386  EFC7  F011         	goto	u740
  1660   00238A                     u741:
  1661   00238A  EFCA  F011         	goto	l103
  1662   00238E                     u740:
  1663   00238E                     
  1664                           ;lab7.c: 207:         return one;
  1665   00238E  0E01               	movlw	1
  1666   002390  EF76  F012         	goto	l104
  1667   002394                     l103:
  1668                           
  1669                           ;lab7.c: 209:     if (PORTBbits.RB1 == 1) {
  1670   002394  A2CB               	btfss	203,1,c	;volatile
  1671   002396  EFCF  F011         	goto	u751
  1672   00239A  EFD1  F011         	goto	u750
  1673   00239E                     u751:
  1674   00239E  EFD4  F011         	goto	l105
  1675   0023A2                     u750:
  1676   0023A2                     
  1677                           ;lab7.c: 210:         return four;
  1678   0023A2  0E04               	movlw	4
  1679   0023A4  EF76  F012         	goto	l104
  1680   0023A8                     l105:
  1681                           
  1682                           ;lab7.c: 212:     if (PORTBbits.RB2 == 1) {
  1683   0023A8  A4CB               	btfss	203,2,c	;volatile
  1684   0023AA  EFD9  F011         	goto	u761
  1685   0023AE  EFDB  F011         	goto	u760
  1686   0023B2                     u761:
  1687   0023B2  EFDE  F011         	goto	l106
  1688   0023B6                     u760:
  1689   0023B6                     
  1690                           ;lab7.c: 213:         return seven;
  1691   0023B6  0E07               	movlw	7
  1692   0023B8  EF76  F012         	goto	l104
  1693   0023BC                     l106:
  1694                           
  1695                           ;lab7.c: 215:     if (PORTBbits.RB3 == 1) {
  1696   0023BC  A6CB               	btfss	203,3,c	;volatile
  1697   0023BE  EFE3  F011         	goto	u771
  1698   0023C2  EFE5  F011         	goto	u770
  1699   0023C6                     u771:
  1700   0023C6  EFF6  F011         	goto	l107
  1701   0023CA                     u770:
  1702   0023CA                     
  1703                           ;lab7.c: 216:         display(0);
  1704   0023CA  0E00               	movlw	0
  1705   0023CC  6E0A               	movwf	(display@dValue+1)^0,c
  1706   0023CE  0E00               	movlw	0
  1707   0023D0  6E09               	movwf	display@dValue^0,c
  1708   0023D2  EC77  F012         	call	_display	;wreg free
  1709   0023D6                     
  1710                           ;lab7.c: 217:         _delay((unsigned long)((50)*(4000000/4000.0)));
  1711   0023D6  0E41               	movlw	65
  1712   0023D8  6E0F               	movwf	??_scanKeypad^0,c
  1713   0023DA  0EEE               	movlw	238
  1714   0023DC                     u1207:
  1715   0023DC  2EE8               	decfsz	wreg,f,c
  1716   0023DE  D7FE               	bra	u1207
  1717   0023E0  2E0F               	decfsz	??_scanKeypad^0,f,c
  1718   0023E2  D7FC               	bra	u1207
  1719   0023E4  D000               	nop2	
  1720   0023E6                     
  1721                           ;lab7.c: 218:         return RESET;
  1722   0023E6  0E0A               	movlw	10
  1723   0023E8  EF76  F012         	goto	l104
  1724   0023EC                     l107:
  1725                           
  1726                           ;lab7.c: 220:     PORTBbits.RB4 = 0;
  1727   0023EC  98CB               	bcf	203,4,c	;volatile
  1728                           
  1729                           ;lab7.c: 223:     PORTBbits.RB5 = 1;
  1730   0023EE  8ACB               	bsf	203,5,c	;volatile
  1731                           
  1732                           ;lab7.c: 224:     if (PORTBbits.RB0 == 1) {
  1733   0023F0  A0CB               	btfss	203,0,c	;volatile
  1734   0023F2  EFFD  F011         	goto	u781
  1735   0023F6  EFFF  F011         	goto	u780
  1736   0023FA                     u781:
  1737   0023FA  EF02  F012         	goto	l108
  1738   0023FE                     u780:
  1739   0023FE                     
  1740                           ;lab7.c: 225:         return two;
  1741   0023FE  0E02               	movlw	2
  1742   002400  EF76  F012         	goto	l104
  1743   002404                     l108:
  1744   002404  A2CB               	btfss	203,1,c	;volatile
  1745   002406  EF07  F012         	goto	u791
  1746   00240A  EF09  F012         	goto	u790
  1747   00240E                     u791:
  1748   00240E  EF0C  F012         	goto	l110
  1749   002412                     u790:
  1750   002412                     
  1751                           ;lab7.c: 228:         return five;
  1752   002412  0E05               	movlw	5
  1753   002414  EF76  F012         	goto	l104
  1754   002418                     l110:
  1755   002418  A4CB               	btfss	203,2,c	;volatile
  1756   00241A  EF11  F012         	goto	u801
  1757   00241E  EF13  F012         	goto	u800
  1758   002422                     u801:
  1759   002422  EF16  F012         	goto	l112
  1760   002426                     u800:
  1761   002426                     
  1762                           ;lab7.c: 231:         return eight;
  1763   002426  0E08               	movlw	8
  1764   002428  EF76  F012         	goto	l104
  1765   00242C                     l112:
  1766   00242C  A6CB               	btfss	203,3,c	;volatile
  1767   00242E  EF1B  F012         	goto	u811
  1768   002432  EF1D  F012         	goto	u810
  1769   002436                     u811:
  1770   002436  EF20  F012         	goto	l109
  1771   00243A                     u810:
  1772   00243A                     
  1773                           ;lab7.c: 234:         return zero;
  1774   00243A  0E00               	movlw	0
  1775   00243C  EF76  F012         	goto	l104
  1776   002440                     l109:
  1777                           
  1778                           ;lab7.c: 236:     PORTBbits.RB5 = 0;
  1779   002440  9ACB               	bcf	203,5,c	;volatile
  1780                           
  1781                           ;lab7.c: 239:     PORTBbits.RB6 = 1;
  1782   002442  8CCB               	bsf	203,6,c	;volatile
  1783                           
  1784                           ;lab7.c: 240:     if (PORTBbits.RB0 == 1) { return three; }
  1785   002444  A0CB               	btfss	203,0,c	;volatile
  1786   002446  EF27  F012         	goto	u821
  1787   00244A  EF29  F012         	goto	u820
  1788   00244E                     u821:
  1789   00244E  EF2C  F012         	goto	l115
  1790   002452                     u820:
  1791   002452  0E03               	movlw	3
  1792   002454  EF76  F012         	goto	l104
  1793   002458                     l115:
  1794   002458  A2CB               	btfss	203,1,c	;volatile
  1795   00245A  EF31  F012         	goto	u831
  1796   00245E  EF33  F012         	goto	u830
  1797   002462                     u831:
  1798   002462  EF36  F012         	goto	l117
  1799   002466                     u830:
  1800   002466  0E06               	movlw	6
  1801   002468  EF76  F012         	goto	l104
  1802   00246C                     l117:
  1803   00246C  A4CB               	btfss	203,2,c	;volatile
  1804   00246E  EF3B  F012         	goto	u841
  1805   002472  EF3D  F012         	goto	u840
  1806   002476                     u841:
  1807   002476  EF40  F012         	goto	l119
  1808   00247A                     u840:
  1809   00247A  0E09               	movlw	9
  1810   00247C  EF76  F012         	goto	l104
  1811   002480                     l119:
  1812   002480  A6CB               	btfss	203,3,c	;volatile
  1813   002482  EF45  F012         	goto	u851
  1814   002486  EF47  F012         	goto	u850
  1815   00248A                     u851:
  1816   00248A  EF4A  F012         	goto	l116
  1817   00248E                     u850:
  1818   00248E  0E69               	movlw	105
  1819   002490  EF76  F012         	goto	l104
  1820   002494                     l116:
  1821                           
  1822                           ;lab7.c: 244:     PORTBbits.RB6 = 0;
  1823   002494  9CCB               	bcf	203,6,c	;volatile
  1824                           
  1825                           ;lab7.c: 247:     PORTBbits.RB7 = 1;
  1826   002496  8ECB               	bsf	203,7,c	;volatile
  1827                           
  1828                           ;lab7.c: 248:     if (PORTBbits.RB0 == 1) { return ADD; }
  1829   002498  A0CB               	btfss	203,0,c	;volatile
  1830   00249A  EF51  F012         	goto	u861
  1831   00249E  EF53  F012         	goto	u860
  1832   0024A2                     u861:
  1833   0024A2  EF56  F012         	goto	l122
  1834   0024A6                     u860:
  1835   0024A6  0E64               	movlw	100
  1836   0024A8  EF76  F012         	goto	l104
  1837   0024AC                     l122:
  1838   0024AC  A2CB               	btfss	203,1,c	;volatile
  1839   0024AE  EF5B  F012         	goto	u871
  1840   0024B2  EF5D  F012         	goto	u870
  1841   0024B6                     u871:
  1842   0024B6  EF60  F012         	goto	l124
  1843   0024BA                     u870:
  1844   0024BA  0E65               	movlw	101
  1845   0024BC  EF76  F012         	goto	l104
  1846   0024C0                     l124:
  1847   0024C0  A4CB               	btfss	203,2,c	;volatile
  1848   0024C2  EF65  F012         	goto	u881
  1849   0024C6  EF67  F012         	goto	u880
  1850   0024CA                     u881:
  1851   0024CA  EF6A  F012         	goto	l126
  1852   0024CE                     u880:
  1853   0024CE  0E66               	movlw	102
  1854   0024D0  EF76  F012         	goto	l104
  1855   0024D4                     l126:
  1856   0024D4  A6CB               	btfss	203,3,c	;volatile
  1857   0024D6  EF6F  F012         	goto	u891
  1858   0024DA  EF71  F012         	goto	u890
  1859   0024DE                     u891:
  1860   0024DE  EF74  F012         	goto	l123
  1861   0024E2                     u890:
  1862   0024E2  0E67               	movlw	103
  1863   0024E4  EF76  F012         	goto	l104
  1864   0024E8                     l123:
  1865                           
  1866                           ;lab7.c: 252:     PORTBbits.RB7 = 0;
  1867   0024E8  9ECB               	bcf	203,7,c	;volatile
  1868   0024EA                     
  1869                           ;lab7.c: 254:     return NOVALUE;
  1870   0024EA  0EFF               	movlw	255
  1871   0024EC                     l104:
  1872   0024EC  0012               	return		;funcret
  1873   0024EE                     __end_of_scanKeypad:
  1874                           	callstack 0
  1875                           
  1876 ;; *************** function _display *****************
  1877 ;; Defined at:
  1878 ;;		line 158 in file "lab7.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;  dValue          2    8[COMRAM] int 
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;  digit1          2   12[COMRAM] int 
  1883 ;;  digit2          2   10[COMRAM] int 
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  1    wreg      void 
  1886 ;; Registers used:
  1887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1893 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1894 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1896 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1897 ;;Total ram usage:        6 bytes
  1898 ;; Hardware stack levels used: 1
  1899 ;; Hardware stack levels required when called: 1
  1900 ;; This function calls:
  1901 ;;		___awdiv
  1902 ;;		___awmod
  1903 ;;		___wmul
  1904 ;; This function is called by:
  1905 ;;		_main
  1906 ;;		_scanKeypad
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           	psect	text2
  1911   0024EE                     __ptext2:
  1912                           	callstack 0
  1913   0024EE                     _display:
  1914                           	callstack 28
  1915   0024EE                     
  1916                           ;lab7.c: 160:     LATA = 0;
  1917   0024EE  6ABA               	clrf	186,c	;volatile
  1918                           
  1919                           ;lab7.c: 161:     LATC = 0;
  1920   0024F0  6ABC               	clrf	188,c	;volatile
  1921                           
  1922                           ;lab7.c: 162:     LATD = 0;
  1923   0024F2  6ABD               	clrf	189,c	;volatile
  1924   0024F4                     
  1925                           ;lab7.c: 164:     if(dValue >= 100) {
  1926   0024F4  BE0A               	btfsc	(display@dValue+1)^0,7,c
  1927   0024F6  EF86  F012         	goto	u691
  1928   0024FA  500A               	movf	(display@dValue+1)^0,w,c
  1929   0024FC  E109               	bnz	u690
  1930   0024FE  0E64               	movlw	100
  1931   002500  5C09               	subwf	display@dValue^0,w,c
  1932   002502  A0D8               	btfss	status,0,c
  1933   002504  EF86  F012         	goto	u691
  1934   002508  EF88  F012         	goto	u690
  1935   00250C                     u691:
  1936   00250C  EF8A  F012         	goto	l1321
  1937   002510                     u690:
  1938   002510  EFE8  F012         	goto	l96
  1939   002514                     l1321:
  1940                           
  1941                           ;lab7.c: 169:     if(dValue < 0) {
  1942   002514  BE0A               	btfsc	(display@dValue+1)^0,7,c
  1943   002516  EF91  F012         	goto	u700
  1944   00251A  EF8F  F012         	goto	u701
  1945   00251E                     u701:
  1946   00251E  EF9F  F012         	goto	l1327
  1947   002522                     u700:
  1948   002522                     
  1949                           ;lab7.c: 170:         PORTDbits.RD7 = 1;
  1950   002522  8ECD               	bsf	205,7,c	;volatile
  1951   002524                     
  1952                           ;lab7.c: 171:         dValue *= -1;
  1953   002524  C009  F001         	movff	display@dValue,___wmul@multiplier
  1954   002528  C00A  F002         	movff	display@dValue+1,___wmul@multiplier+1
  1955   00252C  0EFF               	movlw	255
  1956   00252E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1957   002530  6803               	setf	___wmul@multiplicand^0,c
  1958   002532  EC05  F014         	call	___wmul	;wreg free
  1959   002536  C001  F009         	movff	?___wmul,display@dValue
  1960   00253A  C002  F00A         	movff	?___wmul+1,display@dValue+1
  1961   00253E                     l1327:
  1962                           
  1963                           ;lab7.c: 175:     int digit1, digit2;;lab7.c: 176:     digit1 = dValue / 10;
  1964   00253E  C009  F001         	movff	display@dValue,___awdiv@dividend
  1965   002542  C00A  F002         	movff	display@dValue+1,___awdiv@dividend+1
  1966   002546  0E00               	movlw	0
  1967   002548  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1968   00254A  0E0A               	movlw	10
  1969   00254C  6E03               	movwf	___awdiv@divisor^0,c
  1970   00254E  EC4D  F013         	call	___awdiv	;wreg free
  1971   002552  C001  F00D         	movff	?___awdiv,display@digit1
  1972   002556  C002  F00E         	movff	?___awdiv+1,display@digit1+1
  1973   00255A                     
  1974                           ;lab7.c: 177:     digit2 = dValue % 10;
  1975   00255A  C009  F001         	movff	display@dValue,___awmod@dividend
  1976   00255E  C00A  F002         	movff	display@dValue+1,___awmod@dividend+1
  1977   002562  0E00               	movlw	0
  1978   002564  6E04               	movwf	(___awmod@divisor+1)^0,c
  1979   002566  0E0A               	movlw	10
  1980   002568  6E03               	movwf	___awmod@divisor^0,c
  1981   00256A  ECAE  F013         	call	___awmod	;wreg free
  1982   00256E  C001  F00B         	movff	?___awmod,display@digit2
  1983   002572  C002  F00C         	movff	?___awmod+1,display@digit2+1
  1984   002576                     
  1985                           ;lab7.c: 179:     if (digit1 != 0) {
  1986   002576  500D               	movf	display@digit1^0,w,c
  1987   002578  100E               	iorwf	(display@digit1+1)^0,w,c
  1988   00257A  B4D8               	btfsc	status,2,c
  1989   00257C  EFC2  F012         	goto	u711
  1990   002580  EFC4  F012         	goto	u710
  1991   002584                     u711:
  1992   002584  EFE2  F012         	goto	l1341
  1993   002588                     u710:
  1994   002588                     
  1995                           ;lab7.c: 180:         LATC = sevSeg[digit1];
  1996   002588  500D               	movf	display@digit1^0,w,c
  1997   00258A  0F1A               	addlw	low _sevSeg
  1998   00258C  6ED9               	movwf	fsr2l,c
  1999   00258E  6ADA               	clrf	fsr2h,c
  2000   002590  50DF               	movf	indf2,w,c
  2001   002592  6EBC               	movwf	188,c	;volatile
  2002                           
  2003                           ;lab7.c: 181:         if ((sevSeg[digit1] & 0b1) == 1) {
  2004   002594  500D               	movf	display@digit1^0,w,c
  2005   002596  0F1A               	addlw	low _sevSeg
  2006   002598  6ED9               	movwf	fsr2l,c
  2007   00259A  6ADA               	clrf	fsr2h,c
  2008   00259C  A0DF               	btfss	indf2,0,c
  2009   00259E  EFD3  F012         	goto	u721
  2010   0025A2  EFD5  F012         	goto	u720
  2011   0025A6                     u721:
  2012   0025A6  EFD6  F012         	goto	l1337
  2013   0025AA                     u720:
  2014   0025AA                     
  2015                           ;lab7.c: 182:             PORTAbits.RA0 = 1;
  2016   0025AA  80CA               	bsf	202,0,c	;volatile
  2017   0025AC                     l1337:
  2018                           
  2019                           ;lab7.c: 184:         if ((sevSeg[digit1] & 0b10) == 2) {
  2020   0025AC  500D               	movf	display@digit1^0,w,c
  2021   0025AE  0F1A               	addlw	low _sevSeg
  2022   0025B0  6ED9               	movwf	fsr2l,c
  2023   0025B2  6ADA               	clrf	fsr2h,c
  2024   0025B4  A2DF               	btfss	indf2,1,c
  2025   0025B6  EFDF  F012         	goto	u731
  2026   0025BA  EFE1  F012         	goto	u730
  2027   0025BE                     u731:
  2028   0025BE  EFE2  F012         	goto	l1341
  2029   0025C2                     u730:
  2030   0025C2                     
  2031                           ;lab7.c: 185:             PORTAbits.RA1 = 1;
  2032   0025C2  82CA               	bsf	202,1,c	;volatile
  2033   0025C4                     l1341:
  2034                           
  2035                           ;lab7.c: 188:     LATD += sevSeg[digit2];
  2036   0025C4  500B               	movf	display@digit2^0,w,c
  2037   0025C6  0F1A               	addlw	low _sevSeg
  2038   0025C8  6ED9               	movwf	fsr2l,c
  2039   0025CA  6ADA               	clrf	fsr2h,c
  2040   0025CC  50DF               	movf	indf2,w,c
  2041   0025CE  26BD               	addwf	189,f,c	;volatile
  2042   0025D0                     l96:
  2043   0025D0  0012               	return		;funcret
  2044   0025D2                     __end_of_display:
  2045                           	callstack 0
  2046                           
  2047 ;; *************** function ___wmul *****************
  2048 ;; Defined at:
  2049 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul16.c"
  2050 ;; Parameters:    Size  Location     Type
  2051 ;;  multiplier      2    0[COMRAM] unsigned int 
  2052 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;  product         2    4[COMRAM] unsigned int 
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  2    0[COMRAM] unsigned int 
  2057 ;; Registers used:
  2058 ;;		wreg, status,2, status,0, prodl, prodh
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2064 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2065 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2067 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2068 ;;Total ram usage:        6 bytes
  2069 ;; Hardware stack levels used: 1
  2070 ;; This function calls:
  2071 ;;		Nothing
  2072 ;; This function is called by:
  2073 ;;		_main
  2074 ;;		_display
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077                           
  2078                           	psect	text3
  2079   00280A                     __ptext3:
  2080                           	callstack 0
  2081   00280A                     ___wmul:
  2082                           	callstack 28
  2083   00280A  5001               	movf	___wmul@multiplier^0,w,c
  2084   00280C  0203               	mulwf	___wmul@multiplicand^0,c
  2085   00280E  006F FFCC  F005    	movff	prodl,___wmul@product
  2086   002814  006F FFD0  F006    	movff	prodh,___wmul@product+1
  2087   00281A  5001               	movf	___wmul@multiplier^0,w,c
  2088   00281C  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2089   00281E  50F3               	movf	243,w,c
  2090   002820  2606               	addwf	(___wmul@product+1)^0,f,c
  2091   002822  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2092   002824  0203               	mulwf	___wmul@multiplicand^0,c
  2093   002826  50F3               	movf	243,w,c
  2094   002828  2606               	addwf	(___wmul@product+1)^0,f,c
  2095   00282A  C005  F001         	movff	___wmul@product,?___wmul
  2096   00282E  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2097   002832  0012               	return		;funcret
  2098   002834                     __end_of___wmul:
  2099                           	callstack 0
  2100                           
  2101 ;; *************** function ___awmod *****************
  2102 ;; Defined at:
  2103 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;  dividend        2    0[COMRAM] int 
  2106 ;;  divisor         2    2[COMRAM] int 
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;  sign            1    5[COMRAM] unsigned char 
  2109 ;;  counter         1    4[COMRAM] unsigned char 
  2110 ;; Return value:  Size  Location     Type
  2111 ;;                  2    0[COMRAM] int 
  2112 ;; Registers used:
  2113 ;;		wreg, status,2, status,0
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2119 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2120 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2122 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2123 ;;Total ram usage:        6 bytes
  2124 ;; Hardware stack levels used: 1
  2125 ;; This function calls:
  2126 ;;		Nothing
  2127 ;; This function is called by:
  2128 ;;		_display
  2129 ;; This function uses a non-reentrant model
  2130 ;;
  2131                           
  2132                           	psect	text4
  2133   00275C                     __ptext4:
  2134                           	callstack 0
  2135   00275C                     ___awmod:
  2136                           	callstack 28
  2137   00275C  6A06               	clrf	___awmod@sign^0,c
  2138   00275E  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2139   002760  EFB6  F013         	goto	u630
  2140   002764  EFB4  F013         	goto	u631
  2141   002768                     u631:
  2142   002768  EFBC  F013         	goto	l1287
  2143   00276C                     u630:
  2144   00276C  6C01               	negf	___awmod@dividend^0,c
  2145   00276E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2146   002770  B0D8               	btfsc	status,0,c
  2147   002772  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2148   002774  0E01               	movlw	1
  2149   002776  6E06               	movwf	___awmod@sign^0,c
  2150   002778                     l1287:
  2151   002778  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2152   00277A  EFC3  F013         	goto	u640
  2153   00277E  EFC1  F013         	goto	u641
  2154   002782                     u641:
  2155   002782  EFC7  F013         	goto	l1291
  2156   002786                     u640:
  2157   002786  6C03               	negf	___awmod@divisor^0,c
  2158   002788  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2159   00278A  B0D8               	btfsc	status,0,c
  2160   00278C  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2161   00278E                     l1291:
  2162   00278E  5003               	movf	___awmod@divisor^0,w,c
  2163   002790  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2164   002792  B4D8               	btfsc	status,2,c
  2165   002794  EFCE  F013         	goto	u651
  2166   002798  EFD0  F013         	goto	u650
  2167   00279C                     u651:
  2168   00279C  EFF4  F013         	goto	l1307
  2169   0027A0                     u650:
  2170   0027A0  0E01               	movlw	1
  2171   0027A2  6E05               	movwf	___awmod@counter^0,c
  2172   0027A4  EFD8  F013         	goto	l1297
  2173   0027A8                     l1295:
  2174   0027A8  90D8               	bcf	status,0,c
  2175   0027AA  3603               	rlcf	___awmod@divisor^0,f,c
  2176   0027AC  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2177   0027AE  2A05               	incf	___awmod@counter^0,f,c
  2178   0027B0                     l1297:
  2179   0027B0  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2180   0027B2  EFDD  F013         	goto	u661
  2181   0027B6  EFDF  F013         	goto	u660
  2182   0027BA                     u661:
  2183   0027BA  EFD4  F013         	goto	l1295
  2184   0027BE                     u660:
  2185   0027BE                     l1299:
  2186   0027BE  5003               	movf	___awmod@divisor^0,w,c
  2187   0027C0  5C01               	subwf	___awmod@dividend^0,w,c
  2188   0027C2  5004               	movf	(___awmod@divisor+1)^0,w,c
  2189   0027C4  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2190   0027C6  A0D8               	btfss	status,0,c
  2191   0027C8  EFE8  F013         	goto	u671
  2192   0027CC  EFEA  F013         	goto	u670
  2193   0027D0                     u671:
  2194   0027D0  EFEE  F013         	goto	l1303
  2195   0027D4                     u670:
  2196   0027D4  5003               	movf	___awmod@divisor^0,w,c
  2197   0027D6  5E01               	subwf	___awmod@dividend^0,f,c
  2198   0027D8  5004               	movf	(___awmod@divisor+1)^0,w,c
  2199   0027DA  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2200   0027DC                     l1303:
  2201   0027DC  90D8               	bcf	status,0,c
  2202   0027DE  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2203   0027E0  3203               	rrcf	___awmod@divisor^0,f,c
  2204   0027E2  2E05               	decfsz	___awmod@counter^0,f,c
  2205   0027E4  EFDF  F013         	goto	l1299
  2206   0027E8                     l1307:
  2207   0027E8  5006               	movf	___awmod@sign^0,w,c
  2208   0027EA  B4D8               	btfsc	status,2,c
  2209   0027EC  EFFA  F013         	goto	u681
  2210   0027F0  EFFC  F013         	goto	u680
  2211   0027F4                     u681:
  2212   0027F4  EF00  F014         	goto	l1311
  2213   0027F8                     u680:
  2214   0027F8  6C01               	negf	___awmod@dividend^0,c
  2215   0027FA  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2216   0027FC  B0D8               	btfsc	status,0,c
  2217   0027FE  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2218   002800                     l1311:
  2219   002800  C001  F001         	movff	___awmod@dividend,?___awmod
  2220   002804  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2221   002808  0012               	return		;funcret
  2222   00280A                     __end_of___awmod:
  2223                           	callstack 0
  2224                           
  2225 ;; *************** function _calculate *****************
  2226 ;; Defined at:
  2227 ;;		line 259 in file "lab7.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;  val1            2    8[COMRAM] int 
  2230 ;;  val2            2   10[COMRAM] int 
  2231 ;;  op              1   12[COMRAM] enum E16765
  2232 ;; Auto vars:     Size  Location     Type
  2233 ;;		None
  2234 ;; Return value:  Size  Location     Type
  2235 ;;                  2    8[COMRAM] int 
  2236 ;; Registers used:
  2237 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2243 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2245 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2246 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2247 ;;Total ram usage:        7 bytes
  2248 ;; Hardware stack levels used: 1
  2249 ;; Hardware stack levels required when called: 1
  2250 ;; This function calls:
  2251 ;;		___awdiv
  2252 ;; This function is called by:
  2253 ;;		_main
  2254 ;; This function uses a non-reentrant model
  2255 ;;
  2256                           
  2257                           	psect	text5
  2258   0025D2                     __ptext5:
  2259                           	callstack 0
  2260   0025D2                     _calculate:
  2261                           	callstack 29
  2262   0025D2                     
  2263                           ;lab7.c: 260:     switch (op) {
  2264   0025D2  EF2F  F013         	goto	l1473
  2265   0025D6                     l1445:
  2266                           
  2267                           ;lab7.c: 262:             return val1 + val2;
  2268   0025D6  500B               	movf	calculate@val2^0,w,c
  2269   0025D8  2409               	addwf	calculate@val1^0,w,c
  2270   0025DA  6E09               	movwf	?_calculate^0,c
  2271   0025DC  500C               	movf	(calculate@val2+1)^0,w,c
  2272   0025DE  200A               	addwfc	(calculate@val1+1)^0,w,c
  2273   0025E0  6E0A               	movwf	(?_calculate+1)^0,c
  2274   0025E2  EF4C  F013         	goto	l133
  2275   0025E6                     l1449:
  2276                           
  2277                           ;lab7.c: 264:             return val1 - val2;
  2278   0025E6  500B               	movf	calculate@val2^0,w,c
  2279   0025E8  5C09               	subwf	calculate@val1^0,w,c
  2280   0025EA  6E09               	movwf	?_calculate^0,c
  2281   0025EC  500C               	movf	(calculate@val2+1)^0,w,c
  2282   0025EE  580A               	subwfb	(calculate@val1+1)^0,w,c
  2283   0025F0  6E0A               	movwf	(?_calculate+1)^0,c
  2284   0025F2  EF4C  F013         	goto	l133
  2285   0025F6                     l1453:
  2286                           
  2287                           ;lab7.c: 266:             return val1 * val2;
  2288   0025F6  500B               	movf	calculate@val2^0,w,c
  2289   0025F8  0209               	mulwf	calculate@val1^0,c
  2290   0025FA  006F FFCC  F00E    	movff	prodl,??_calculate
  2291   002600  006F FFD0  F00F    	movff	prodh,??_calculate+1
  2292   002606  020A               	mulwf	(calculate@val1+1)^0,c
  2293   002608  50F3               	movf	prodl,w,c
  2294   00260A  260F               	addwf	(??_calculate+1)^0,f,c
  2295   00260C  500C               	movf	(calculate@val2+1)^0,w,c
  2296   00260E  0209               	mulwf	calculate@val1^0,c
  2297   002610  50F3               	movf	prodl,w,c
  2298   002612  260F               	addwf	(??_calculate+1)^0,f,c
  2299   002614  C00E  F009         	movff	??_calculate,?_calculate
  2300   002618  C00F  F00A         	movff	??_calculate+1,?_calculate+1
  2301   00261C  EF4C  F013         	goto	l133
  2302   002620                     l1457:
  2303                           
  2304                           ;lab7.c: 268:             if (val2 == 0) {
  2305   002620  500B               	movf	calculate@val2^0,w,c
  2306   002622  100C               	iorwf	(calculate@val2+1)^0,w,c
  2307   002624  A4D8               	btfss	status,2,c
  2308   002626  EF17  F013         	goto	u901
  2309   00262A  EF19  F013         	goto	u900
  2310   00262E                     u901:
  2311   00262E  EF1F  F013         	goto	l1463
  2312   002632                     u900:
  2313   002632                     l1459:
  2314                           
  2315                           ;lab7.c: 269:                 return 0;
  2316   002632  0E00               	movlw	0
  2317   002634  6E0A               	movwf	(?_calculate+1)^0,c
  2318   002636  0E00               	movlw	0
  2319   002638  6E09               	movwf	?_calculate^0,c
  2320   00263A  EF4C  F013         	goto	l133
  2321   00263E                     l1463:
  2322                           
  2323                           ;lab7.c: 271:             return val1 / val2;
  2324   00263E  C009  F001         	movff	calculate@val1,___awdiv@dividend
  2325   002642  C00A  F002         	movff	calculate@val1+1,___awdiv@dividend+1
  2326   002646  C00B  F003         	movff	calculate@val2,___awdiv@divisor
  2327   00264A  C00C  F004         	movff	calculate@val2+1,___awdiv@divisor+1
  2328   00264E  EC4D  F013         	call	___awdiv	;wreg free
  2329   002652  C001  F009         	movff	?___awdiv,?_calculate
  2330   002656  C002  F00A         	movff	?___awdiv+1,?_calculate+1
  2331   00265A  EF4C  F013         	goto	l133
  2332   00265E                     l1473:
  2333   00265E  500D               	movf	calculate@op^0,w,c
  2334   002660  6E0E               	movwf	??_calculate^0,c
  2335   002662  6A0F               	clrf	(??_calculate+1)^0,c
  2336                           
  2337                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2338                           ; Switch size 1, requested type "simple"
  2339                           ; Number of cases is 1, Range of values is 0 to 0
  2340                           ; switch strategies available:
  2341                           ; Name         Instructions Cycles
  2342                           ; simple_byte            4     3 (average)
  2343                           ;	Chosen strategy is simple_byte
  2344   002664  500F               	movf	(??_calculate+1)^0,w,c
  2345   002666  0A00               	xorlw	0	; case 0
  2346   002668  B4D8               	btfsc	status,2,c
  2347   00266A  EF39  F013         	goto	l1643
  2348   00266E  EF19  F013         	goto	l1459
  2349   002672                     l1643:
  2350                           
  2351                           ; Switch size 1, requested type "simple"
  2352                           ; Number of cases is 4, Range of values is 100 to 103
  2353                           ; switch strategies available:
  2354                           ; Name         Instructions Cycles
  2355                           ; simple_byte           13     7 (average)
  2356                           ;	Chosen strategy is simple_byte
  2357   002672  500E               	movf	??_calculate^0,w,c
  2358   002674  0A64               	xorlw	100	; case 100
  2359   002676  B4D8               	btfsc	status,2,c
  2360   002678  EFEB  F012         	goto	l1445
  2361   00267C  0A01               	xorlw	1	; case 101
  2362   00267E  B4D8               	btfsc	status,2,c
  2363   002680  EFF3  F012         	goto	l1449
  2364   002684  0A03               	xorlw	3	; case 102
  2365   002686  B4D8               	btfsc	status,2,c
  2366   002688  EFFB  F012         	goto	l1453
  2367   00268C  0A01               	xorlw	1	; case 103
  2368   00268E  B4D8               	btfsc	status,2,c
  2369   002690  EF10  F013         	goto	l1457
  2370   002694  EF19  F013         	goto	l1459
  2371   002698                     l133:
  2372   002698  0012               	return		;funcret
  2373   00269A                     __end_of_calculate:
  2374                           	callstack 0
  2375                           
  2376 ;; *************** function ___awdiv *****************
  2377 ;; Defined at:
  2378 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;  dividend        2    0[COMRAM] int 
  2381 ;;  divisor         2    2[COMRAM] int 
  2382 ;; Auto vars:     Size  Location     Type
  2383 ;;  quotient        2    6[COMRAM] int 
  2384 ;;  sign            1    5[COMRAM] unsigned char 
  2385 ;;  counter         1    4[COMRAM] unsigned char 
  2386 ;; Return value:  Size  Location     Type
  2387 ;;                  2    0[COMRAM] int 
  2388 ;; Registers used:
  2389 ;;		wreg, status,2, status,0
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/0
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2395 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2396 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2398 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2399 ;;Total ram usage:        8 bytes
  2400 ;; Hardware stack levels used: 1
  2401 ;; This function calls:
  2402 ;;		Nothing
  2403 ;; This function is called by:
  2404 ;;		_display
  2405 ;;		_calculate
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409                           	psect	text6
  2410   00269A                     __ptext6:
  2411                           	callstack 0
  2412   00269A                     ___awdiv:
  2413                           	callstack 28
  2414   00269A  6A06               	clrf	___awdiv@sign^0,c
  2415   00269C  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2416   00269E  EF55  F013         	goto	u570
  2417   0026A2  EF53  F013         	goto	u571
  2418   0026A6                     u571:
  2419   0026A6  EF5B  F013         	goto	l1243
  2420   0026AA                     u570:
  2421   0026AA  6C03               	negf	___awdiv@divisor^0,c
  2422   0026AC  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2423   0026AE  B0D8               	btfsc	status,0,c
  2424   0026B0  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2425   0026B2  0E01               	movlw	1
  2426   0026B4  6E06               	movwf	___awdiv@sign^0,c
  2427   0026B6                     l1243:
  2428   0026B6  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2429   0026B8  EF62  F013         	goto	u580
  2430   0026BC  EF60  F013         	goto	u581
  2431   0026C0                     u581:
  2432   0026C0  EF68  F013         	goto	l1249
  2433   0026C4                     u580:
  2434   0026C4  6C01               	negf	___awdiv@dividend^0,c
  2435   0026C6  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2436   0026C8  B0D8               	btfsc	status,0,c
  2437   0026CA  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2438   0026CC  0E01               	movlw	1
  2439   0026CE  1A06               	xorwf	___awdiv@sign^0,f,c
  2440   0026D0                     l1249:
  2441   0026D0  0E00               	movlw	0
  2442   0026D2  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2443   0026D4  0E00               	movlw	0
  2444   0026D6  6E07               	movwf	___awdiv@quotient^0,c
  2445   0026D8  5003               	movf	___awdiv@divisor^0,w,c
  2446   0026DA  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2447   0026DC  B4D8               	btfsc	status,2,c
  2448   0026DE  EF73  F013         	goto	u591
  2449   0026E2  EF75  F013         	goto	u590
  2450   0026E6                     u591:
  2451   0026E6  EF9D  F013         	goto	l1271
  2452   0026EA                     u590:
  2453   0026EA  0E01               	movlw	1
  2454   0026EC  6E05               	movwf	___awdiv@counter^0,c
  2455   0026EE  EF7D  F013         	goto	l1257
  2456   0026F2                     l1255:
  2457   0026F2  90D8               	bcf	status,0,c
  2458   0026F4  3603               	rlcf	___awdiv@divisor^0,f,c
  2459   0026F6  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2460   0026F8  2A05               	incf	___awdiv@counter^0,f,c
  2461   0026FA                     l1257:
  2462   0026FA  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2463   0026FC  EF82  F013         	goto	u601
  2464   002700  EF84  F013         	goto	u600
  2465   002704                     u601:
  2466   002704  EF79  F013         	goto	l1255
  2467   002708                     u600:
  2468   002708                     l1259:
  2469   002708  90D8               	bcf	status,0,c
  2470   00270A  3607               	rlcf	___awdiv@quotient^0,f,c
  2471   00270C  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2472   00270E  5003               	movf	___awdiv@divisor^0,w,c
  2473   002710  5C01               	subwf	___awdiv@dividend^0,w,c
  2474   002712  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2475   002714  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2476   002716  A0D8               	btfss	status,0,c
  2477   002718  EF90  F013         	goto	u611
  2478   00271C  EF92  F013         	goto	u610
  2479   002720                     u611:
  2480   002720  EF97  F013         	goto	l1267
  2481   002724                     u610:
  2482   002724  5003               	movf	___awdiv@divisor^0,w,c
  2483   002726  5E01               	subwf	___awdiv@dividend^0,f,c
  2484   002728  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2485   00272A  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2486   00272C  8007               	bsf	___awdiv@quotient^0,0,c
  2487   00272E                     l1267:
  2488   00272E  90D8               	bcf	status,0,c
  2489   002730  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2490   002732  3203               	rrcf	___awdiv@divisor^0,f,c
  2491   002734  2E05               	decfsz	___awdiv@counter^0,f,c
  2492   002736  EF84  F013         	goto	l1259
  2493   00273A                     l1271:
  2494   00273A  5006               	movf	___awdiv@sign^0,w,c
  2495   00273C  B4D8               	btfsc	status,2,c
  2496   00273E  EFA3  F013         	goto	u621
  2497   002742  EFA5  F013         	goto	u620
  2498   002746                     u621:
  2499   002746  EFA9  F013         	goto	l1275
  2500   00274A                     u620:
  2501   00274A  6C07               	negf	___awdiv@quotient^0,c
  2502   00274C  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2503   00274E  B0D8               	btfsc	status,0,c
  2504   002750  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2505   002752                     l1275:
  2506   002752  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2507   002756  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2508   00275A  0012               	return		;funcret
  2509   00275C                     __end_of___awdiv:
  2510                           	callstack 0
  2511                           
  2512                           	psect	smallconst
  2513   002000                     __psmallconst:
  2514                           	callstack 0
  2515   002000  00                 	db	0
  2516   002001  00                 	db	0	; dummy byte at the end
  2517   002000                     __smallconst    set	__psmallconst
  2518   002000                     __mediumconst   set	__psmallconst
  2519   000003                     __activetblptr  equ	3
  2520                           
  2521                           	psect	rparam
  2522   000001                     ___rparam_used  equ	1
  2523   000000                     ___param_bank   equ	0
  2524   000000                     __Lparam        equ	__Lrparam
  2525   000000                     __Hparam        equ	__Hrparam
  2526                           
  2527                           	psect	config
  2528                           
  2529                           ;Config register CONFIG1L @ 0x300000
  2530                           ;	External Oscillator Selection
  2531                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  2532                           ;	Reset Oscillator Selection
  2533                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  2534   300000                     	org	3145728
  2535   300000  F8                 	db	248
  2536                           
  2537                           ;Config register CONFIG1H @ 0x300001
  2538                           ;	Clock out Enable bit
  2539                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  2540                           ;	PRLOCKED One-Way Set Enable bit
  2541                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  2542                           ;	Clock Switch Enable bit
  2543                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  2544                           ;	Fail-Safe Clock Monitor Enable bit
  2545                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  2546   300001                     	org	3145729
  2547   300001  FF                 	db	255
  2548                           
  2549                           ;Config register CONFIG2L @ 0x300002
  2550                           ;	MCLR Enable bit
  2551                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  2552                           ;	Power-up timer selection bits
  2553                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  2554                           ;	Multi-vector enable bit
  2555                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  2556                           ;	IVTLOCK bit One-way set enable bit
  2557                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  2558                           ;	Low Power BOR Enable bit
  2559                           ;	LPBOREN = OFF, ULPBOR disabled
  2560                           ;	Brown-out Reset Enable bits
  2561                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  2562   300002                     	org	3145730
  2563   300002  FF                 	db	255
  2564                           
  2565                           ;Config register CONFIG2H @ 0x300003
  2566                           ;	Brown-out Reset Voltage Selection bits
  2567                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  2568                           ;	ZCD Disable bit
  2569                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  2570                           ;	PPSLOCK bit One-Way Set Enable bit
  2571                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  2572                           ;	Stack Full/Underflow Reset Enable bit
  2573                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2574                           ;	Debugger Enable bit
  2575                           ;	DEBUG = OFF, Background debugger disabled
  2576                           ;	Extended Instruction Set Enable bit
  2577                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2578   300003                     	org	3145731
  2579   300003  FF                 	db	255
  2580                           
  2581                           ;Config register CONFIG3L @ 0x300004
  2582                           ;	WDT Period selection bits
  2583                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2584                           ;	WDT operating mode
  2585                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2586   300004                     	org	3145732
  2587   300004  9F                 	db	159
  2588                           
  2589                           ;Config register CONFIG3H @ 0x300005
  2590                           ;	WDT Window Select bits
  2591                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2592                           ;	WDT input clock selector
  2593                           ;	WDTCCS = SC, Software Control
  2594   300005                     	org	3145733
  2595   300005  FF                 	db	255
  2596                           
  2597                           ;Config register CONFIG4L @ 0x300006
  2598                           ;	Boot Block Size selection bits
  2599                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  2600                           ;	Boot Block enable bit
  2601                           ;	BBEN = OFF, Boot block disabled
  2602                           ;	Storage Area Flash enable bit
  2603                           ;	SAFEN = OFF, SAF disabled
  2604                           ;	Application Block write protection bit
  2605                           ;	WRTAPP = OFF, Application Block not write protected
  2606   300006                     	org	3145734
  2607   300006  FF                 	db	255
  2608                           
  2609                           ;Config register CONFIG4H @ 0x300007
  2610                           ;	Boot Block Write Protection bit
  2611                           ;	WRTB = OFF, Boot Block not write-protected
  2612                           ;	Configuration Register Write Protection bit
  2613                           ;	WRTC = OFF, Configuration registers not write-protected
  2614                           ;	Data EEPROM Write Protection bit
  2615                           ;	WRTD = OFF, Data EEPROM not write-protected
  2616                           ;	SAF Write protection bit
  2617                           ;	WRTSAF = OFF, SAF not Write Protected
  2618                           ;	Low Voltage Programming Enable bit
  2619                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  2620   300007                     	org	3145735
  2621   300007  FF                 	db	255
  2622                           
  2623                           ;Config register CONFIG5L @ 0x300008
  2624                           ;	PFM and Data EEPROM Code Protection bit
  2625                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  2626   300008                     	org	3145736
  2627   300008  FF                 	db	255
  2628                           
  2629                           ;Config register CONFIG5H @ 0x300009
  2630                           ;	unspecified, using default values
  2631   300009                     	org	3145737
  2632   300009  FF                 	db	255
  2633                           tosu	equ	0x3FFF
  2634                           tosh	equ	0x3FFE
  2635                           tosl	equ	0x3FFD
  2636                           stkptr	equ	0x3FFC
  2637                           pclatu	equ	0x3FFB
  2638                           pclath	equ	0x3FFA
  2639                           pcl	equ	0x3FF9
  2640                           tblptru	equ	0x3FF8
  2641                           tblptrh	equ	0x3FF7
  2642                           tblptrl	equ	0x3FF6
  2643                           tablat	equ	0x3FF5
  2644                           prodh	equ	0x3FF4
  2645                           prodl	equ	0x3FF3
  2646                           indf0	equ	0x3FEF
  2647                           postinc0	equ	0x3FEE
  2648                           postdec0	equ	0x3FED
  2649                           preinc0	equ	0x3FEC
  2650                           plusw0	equ	0x3FEB
  2651                           fsr0h	equ	0x3FEA
  2652                           fsr0l	equ	0x3FE9
  2653                           wreg	equ	0x3FE8
  2654                           indf1	equ	0x3FE7
  2655                           postinc1	equ	0x3FE6
  2656                           postdec1	equ	0x3FE5
  2657                           preinc1	equ	0x3FE4
  2658                           plusw1	equ	0x3FE3
  2659                           fsr1h	equ	0x3FE2
  2660                           fsr1l	equ	0x3FE1
  2661                           bsr	equ	0x3FE0
  2662                           indf2	equ	0x3FDF
  2663                           postinc2	equ	0x3FDE
  2664                           postdec2	equ	0x3FDD
  2665                           preinc2	equ	0x3FDC
  2666                           plusw2	equ	0x3FDB
  2667                           fsr2h	equ	0x3FDA
  2668                           fsr2l	equ	0x3FD9
  2669                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     25      35
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_calculate
    _main->_scanKeypad
    _scanKeypad->_display
    _display->___awdiv
    _calculate->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    3522
                                             15 COMRAM    10    10      0
                             ___wmul
                          _calculate
                            _display
                         _scanKeypad
 ---------------------------------------------------------------------------------
 (1) _scanKeypad                                           1     1      0     997
                                             14 COMRAM     1     1      0
                            _display
 ---------------------------------------------------------------------------------
 (2) _display                                              6     4      2     997
                                              8 COMRAM     6     4      2
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     165
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _calculate                                            7     2      5     527
                                              8 COMRAM     7     2      5
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     304
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul
   _calculate
     ___awdiv
   _display
     ___awdiv
     ___awmod
     ___wmul
   _scanKeypad
     _display

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRllh      1337      0       0      0.0%
BITBIGSFRlll       576      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     25      35     36.8%
BITBIGSFRlh         80      0       0      0.0%
BITBIGSFRh          52      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      35      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Apr 08 15:39:43 2025

                     l73 21AA                       l96 25D0             ___awdiv@sign 0006  
    ___wmul@multiplicand 0003                      l110 2418                      l103 2394  
                    l112 242C                      l104 24EC                      l105 23A8  
                    l122 24AC                      l106 23BC                      l123 24E8  
                    l115 2458                      l107 23EC                      l124 24C0  
                    l116 2494                      l108 2404                      l133 2698  
                    l117 246C                      l109 2440                      l142 2832  
                    l126 24D4                      l119 2480                      l373 275A  
                    l386 2808                      u600 2708                      u601 2704  
                    u610 2724                      u611 2720                      u620 274A  
                    u700 2522                      u621 2746                      u701 251E  
                    u630 276C                      u710 2588                      u631 2768  
                    u711 2584                      u640 2786                      u720 25AA  
                    u800 2426                      u641 2782                      u721 25A6  
                    u801 2422                      u570 26AA                      u650 27A0  
                    u730 25C2                      u810 243A                      u571 26A6  
                    u651 279C                      u731 25BE                      u811 2436  
                    u580 26C4                      u900 2632                      u660 27BE  
                    u820 2452                      u740 238E                      u581 26C0  
                    u901 262E                      u661 27BA                      u821 244E  
                    u741 238A                      u590 26EA                      u670 27D4  
                    u830 2466                      u750 23A2                      u910 2050  
                    u591 26E6                      u671 27D0                      u831 2462  
                    u751 239E                      u911 204C                      u680 27F8  
                    u840 247A                      u760 23B6                      u920 2062  
                    u681 27F4                      u841 2476                      u761 23B2  
                    u921 205E                      u690 2510                      u850 248E  
                    u770 23CA                      u930 20AE                      u691 250C  
                    u851 248A                      u771 23C6                      u931 20AA  
                    u860 24A6                      u780 23FE                      u940 20C0  
                    u861 24A2                      u781 23FA                      u941 20BC  
                    u870 24BA                      u790 2412                      u950 20D2  
                    u871 24B6                      u791 240E                      u951 20CE  
                    u880 24CE                      u960 20E6                      u881 24CA  
                    u961 20E2                      u890 24E2                      u970 214A  
                    u891 24DE                      u971 2146                      u980 215A  
                    u981 2156                      u990 216C                      u991 2168  
           ___awmod@sign 0006                      wreg 3FE8                     l1301 27D4  
                   l1311 2800                     l1303 27DC                     l1231 282A  
                   l1241 26B2                     l1305 27E2                     l1321 2514  
                   l1401 2466                     l1251 26D8                     l1243 26B6  
                   l1235 269A                     l1307 27E8                     l1331 2576  
                   l1323 2522                     l1315 24EE                     l1261 270E  
                   l1253 26EA                     l1245 26C4                     l1237 269C  
                   l1309 27F8                     l1229 280A                     l1333 2588  
                   l1341 25C4                     l1325 2524                     l1317 24F4  
                   l1413 248E                     l1501 201E                     l1263 2724  
                   l1255 26F2                     l1271 273A                     l1247 26CC  
                   l1239 26AA                     l1335 25AA                     l1327 253E  
                   l1423 24BA                     l1407 247A                     l1351 2380  
                   l1511 2040                     l1503 2020                     l1273 274A  
                   l1265 272C                     l1257 26FA                     l1249 26D0  
                   l1281 275E                     l1337 25AC                     l1329 255A  
                   l1417 24A6                     l1361 23B6                     l1353 238E  
                   l1345 2366                     l1601 22AE                     l1521 207A  
                   l1513 2050                     l1505 2022                     l1275 2752  
                   l1267 272E                     l1259 2708                     l1443 25D2  
                   l1291 278E                     l1283 276C                     l1339 25C2  
                   l1435 24E2                     l1347 236E                     l1611 22F2  
                   l1603 22B6                     l1531 20C0                     l1523 2092  
                   l1507 2024                     l1269 2734                     l1453 25F6  
                   l1445 25D6                     l1293 27A0                     l1285 2774  
                   l1429 24CE                     l1373 23FE                     l1365 23CA  
                   l1357 23A2                     l1349 237E                     l1621 2346  
                   l1605 22C2                     l1613 2304                     l1541 210A  
                   l1525 2098                     l1517 2066                     l1509 203A  
                   l1463 263E                     l1295 27A8                     l1287 2778  
                   l1279 275C                     l1439 24EA                     l1391 243A  
                   l1367 23D6                     l1607 22DA                     l1551 214A  
                   l1543 2116                     l1535 20D6                     l1527 209E  
                   l1519 206E                     l1457 2620                     l1449 25E6  
                   l1473 265E                     l1297 27B0                     l1289 2786  
                   l1385 2426                     l1369 23E6                     l1617 231A  
                   l1609 22E0                     l1561 2194                     l1553 215A  
                   l1545 212E                     l1537 20E6                     l1529 20AE  
                   l1481 2004                     l1643 2672                     l1459 2632  
                   l1299 27BE                     l1395 2452                     l1379 2412  
                   l1619 233A                     l1571 21DA                     l1547 2134  
                   l1539 2102                     l1555 216C                     l1491 2012  
                   l1483 2008                     l1581 2214                     l1573 21EA  
                   l1565 21AC                     l1557 217C                     l1549 213A  
                   l1493 2014                     l1485 200A                     l1591 225A  
                   l1583 222C                     l1567 21B8                     l1559 218C  
                   l1495 2016                     l1487 200C                     l1479 2002  
                   l1593 226C                     l1585 2232                     l1577 2200  
                   l1569 21D4                     l1497 201A                     l1489 2010  
                   l1587 2238                     l1579 2208                     l1499 201C  
                   l1597 2282                     l1589 2248                     l1599 2292  
                   u1000 217C                     u1001 2178                     u1010 218C  
                   u1011 2188                     u1100 22F2                     u1020 21A6  
                   u1101 22EE                     u1021 21A2                     u1110 2304  
                   u1030 21EA                     u1111 2300                     u1031 21E6  
                   u1120 2316                     u1040 21FC                     u1121 2312  
                   u1041 21F8                     u1050 2248                     u1051 2244  
                   u1060 225A                     u1061 2256                     u1070 226C  
                   u1207 23DC                     u1071 2268                     u1080 227E  
                   u1081 227A                     u1137 2084                     u1090 2292  
                   u1091 228E                     u1147 2120                     u1157 21C2  
                   _LATA 3FBA                     u1167 221E                     _LATC 3FBC  
                   _LATD 3FBD                     u1177 22CC                     u1187 2350  
                   u1197 2374                     _main 2002                     fsr2h 3FDA  
                   indf2 3FDF                     fsr1l 3FE1                     fsr2l 3FD9  
                   prodh 3FF4                     prodl 3FF3                     start FFFC  
           ___param_bank 0000                    ?_main 0001          __end_of___awdiv 275C  
        __end_of___awmod 280A          ___awdiv@divisor 0003                    _T1CON 3FB2  
        ___awdiv@counter 0005                    _TRISA 3FC2                    _TRISB 3FC3  
                  _TRISC 3FC4                    _TRISD 3FC5          __end_of_display 25D2  
           main@operator 0014                    tablat 3FF5                    status 3FD8  
        __initialization 2834             __end_of_main 2366                   ??_main 0010  
          __activetblptr 0003                   _ADCON0 3EF8                   _ADCON1 3EF9  
                 _ADCON2 3EFA         ___awdiv@dividend 0001                   _ANSELA 3A40  
                 _ANSELB 3A50                   _ANSELC 3A60                   _ANSELD 3A70  
          calculate@val1 0009            calculate@val2 000B            display@dValue 0009  
          display@digit1 000D            display@digit2 000B                   ___wmul 280A  
              ??___awdiv 0005                ??___awmod 0005         ___awdiv@quotient 0007  
        ___awmod@divisor 0003                   _sevSeg 001A                   isa$std 0001  
        ___awmod@counter 0005                ??_display 000B             __pdataCOMRAM 001A  
           __mediumconst 2000                   tblptrh 3FF7                   tblptrl 3FF6  
                 tblptru 3FF8               __accesstop 0060  __end_of__initialization 2856  
          ___rparam_used 0001           __pcstackCOMRAM 0001                  ?___wmul 0001  
                _CCP2CON 3F7A        __end_of_calculate 269A                  __Hparam 0000  
                __Lparam 0000                  ___awdiv 269A                  ___awmod 275C  
           __psmallconst 2000                  __pcinit 2834                  __ramtop 2000  
             _scanKeypad 2366                  __ptext0 2002                  __ptext1 2366  
                __ptext2 24EE                  __ptext3 280A                  __ptext4 275C  
                __ptext5 25D2                  __ptext6 269A                  _display 24EE  
       ___awmod@dividend 0001     end_of_initialization 2856                  postdec1 3FE5  
                postinc0 3FEE                _PORTAbits 3FCA                _PORTBbits 3FCB  
              _PORTDbits 3FCD               main@value1 0015               main@value2 0017  
             main@result 0012           __end_of___wmul 2834            __pidataCOMRAM 285C  
            ?_scanKeypad 0001      start_initialization 2834                 ??___wmul 0005  
              _calculate 25D2                 ?___awdiv 0001                 ?___awmod 0001  
               ?_display 0009              __smallconst 2000           ___wmul@product 0005  
             ?_calculate 0009        ___wmul@multiplier 0001                copy_data0 2848  
            calculate@op 000D                 __Hrparam 0000                 __Lrparam 0000  
           ??_scanKeypad 000F              ??_calculate 000E       __end_of_scanKeypad 24EE  
               isa$xinst 0000                 main@ret1 0019  
