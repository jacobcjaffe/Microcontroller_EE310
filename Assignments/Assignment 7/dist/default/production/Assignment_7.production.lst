

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Apr 08 12:58:39 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    13                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    14                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=1
    16                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20   000000                     
    21                           ; Generated 12/10/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F47K42 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   003FE0                     bsr             equ	16352
    56   003FE9                     fsr0            equ	16361
    57   003FEA                     fsr0h           equ	16362
    58   003FE9                     fsr0l           equ	16361
    59   003FE1                     fsr1            equ	16353
    60   003FE2                     fsr1h           equ	16354
    61   003FE1                     fsr1l           equ	16353
    62   003FD9                     fsr2            equ	16345
    63   003FDA                     fsr2h           equ	16346
    64   003FD9                     fsr2l           equ	16345
    65   003FEF                     indf0           equ	16367
    66   003FE7                     indf1           equ	16359
    67   003FDF                     indf2           equ	16351
    68   003FD2                     intcon          equ	16338
    69   0039E5                     nvmcon          equ	14821
    70   003FF9                     pcl             equ	16377
    71   003FFA                     pclath          equ	16378
    72   003FFB                     pclatu          equ	16379
    73   003FEB                     plusw0          equ	16363
    74   003FE3                     plusw1          equ	16355
    75   003FDB                     plusw2          equ	16347
    76   003FED                     postdec0        equ	16365
    77   003FE5                     postdec1        equ	16357
    78   003FDD                     postdec2        equ	16349
    79   003FEE                     postinc0        equ	16366
    80   003FE6                     postinc1        equ	16358
    81   003FDE                     postinc2        equ	16350
    82   003FEC                     preinc0         equ	16364
    83   003FE4                     preinc1         equ	16356
    84   003FDC                     preinc2         equ	16348
    85   003FF3                     prod            equ	16371
    86   003FF4                     prodh           equ	16372
    87   003FF3                     prodl           equ	16371
    88   003FD8                     status          equ	16344
    89   003FF5                     tablat          equ	16373
    90   003FF6                     tblptr          equ	16374
    91   003FF7                     tblptrh         equ	16375
    92   003FF6                     tblptrl         equ	16374
    93   003FF8                     tblptru         equ	16376
    94   003FFD                     tosl            equ	16381
    95   003FE8                     wreg            equ	16360
    96   003880                     STATUS_CSHAD    equ	14464	;# 
    97   003881                     WREG_CSHAD      equ	14465	;# 
    98   003882                     BSR_CSHAD       equ	14466	;# 
    99   003883                     SHADCON         equ	14467	;# 
   100   003884                     STATUS_SHAD     equ	14468	;# 
   101   003885                     WREG_SHAD       equ	14469	;# 
   102   003886                     BSR_SHAD        equ	14470	;# 
   103   003887                     PCLATH_SHAD     equ	14471	;# 
   104   003888                     PCLATU_SHAD     equ	14472	;# 
   105   003889                     FSR0SH          equ	14473	;# 
   106   003889                     FSR0L_SHAD      equ	14473	;# 
   107   00388A                     FSR0H_SHAD      equ	14474	;# 
   108   00388B                     FSR1SH          equ	14475	;# 
   109   00388B                     FSR1L_SHAD      equ	14475	;# 
   110   00388C                     FSR1H_SHAD      equ	14476	;# 
   111   00388D                     FSR2SH          equ	14477	;# 
   112   00388D                     FSR2L_SHAD      equ	14477	;# 
   113   00388E                     FSR2H_SHAD      equ	14478	;# 
   114   00388F                     PRODSH          equ	14479	;# 
   115   00388F                     PRODL_SHAD      equ	14479	;# 
   116   003890                     PRODH_SHAD      equ	14480	;# 
   117   00389D                     IVTADL          equ	14493	;# 
   118   00389E                     IVTADH          equ	14494	;# 
   119   00389F                     IVTADU          equ	14495	;# 
   120   00395B                     WDTCON0         equ	14683	;# 
   121   00395C                     WDTCON1         equ	14684	;# 
   122   00395D                     WDTPSL          equ	14685	;# 
   123   00395E                     WDTPSH          equ	14686	;# 
   124   00395F                     WDTTMR          equ	14687	;# 
   125   003960                     CRCDATA         equ	14688	;# 
   126   003960                     CRCDATL         equ	14688	;# 
   127   003961                     CRCDATH         equ	14689	;# 
   128   003962                     CRCACC          equ	14690	;# 
   129   003962                     CRCACCL         equ	14690	;# 
   130   003963                     CRCACCH         equ	14691	;# 
   131   003964                     CRCSHFT         equ	14692	;# 
   132   003964                     CRCSHIFTL       equ	14692	;# 
   133   003965                     CRCSHIFTH       equ	14693	;# 
   134   003966                     CRCXOR          equ	14694	;# 
   135   003966                     CRCXORL         equ	14694	;# 
   136   003967                     CRCXORH         equ	14695	;# 
   137   003968                     CRCCON0         equ	14696	;# 
   138   003969                     CRCCON1         equ	14697	;# 
   139   003976                     SCANLADR        equ	14710	;# 
   140   003976                     SCANLADRL       equ	14710	;# 
   141   003977                     SCANLADRH       equ	14711	;# 
   142   003978                     SCANLADRU       equ	14712	;# 
   143   003979                     SCANHADR        equ	14713	;# 
   144   003979                     SCANHADRL       equ	14713	;# 
   145   00397A                     SCANHADRH       equ	14714	;# 
   146   00397B                     SCANHADRU       equ	14715	;# 
   147   00397C                     SCANCON0        equ	14716	;# 
   148   00397D                     SCANTRIG        equ	14717	;# 
   149   003980                     IPR0            equ	14720	;# 
   150   003981                     IPR1            equ	14721	;# 
   151   003982                     IPR2            equ	14722	;# 
   152   003983                     IPR3            equ	14723	;# 
   153   003984                     IPR4            equ	14724	;# 
   154   003985                     IPR5            equ	14725	;# 
   155   003986                     IPR6            equ	14726	;# 
   156   003987                     IPR7            equ	14727	;# 
   157   003988                     IPR8            equ	14728	;# 
   158   003989                     IPR9            equ	14729	;# 
   159   00398A                     IPR10           equ	14730	;# 
   160   003990                     PIE0            equ	14736	;# 
   161   003991                     PIE1            equ	14737	;# 
   162   003992                     PIE2            equ	14738	;# 
   163   003993                     PIE3            equ	14739	;# 
   164   003994                     PIE4            equ	14740	;# 
   165   003995                     PIE5            equ	14741	;# 
   166   003996                     PIE6            equ	14742	;# 
   167   003997                     PIE7            equ	14743	;# 
   168   003998                     PIE8            equ	14744	;# 
   169   003999                     PIE9            equ	14745	;# 
   170   00399A                     PIE10           equ	14746	;# 
   171   0039A0                     PIR0            equ	14752	;# 
   172   0039A1                     PIR1            equ	14753	;# 
   173   0039A2                     PIR2            equ	14754	;# 
   174   0039A3                     PIR3            equ	14755	;# 
   175   0039A4                     PIR4            equ	14756	;# 
   176   0039A5                     PIR5            equ	14757	;# 
   177   0039A6                     PIR6            equ	14758	;# 
   178   0039A7                     PIR7            equ	14759	;# 
   179   0039A8                     PIR8            equ	14760	;# 
   180   0039A9                     PIR9            equ	14761	;# 
   181   0039AA                     PIR10           equ	14762	;# 
   182   0039C0                     PMD0            equ	14784	;# 
   183   0039C1                     PMD1            equ	14785	;# 
   184   0039C2                     PMD2            equ	14786	;# 
   185   0039C3                     PMD3            equ	14787	;# 
   186   0039C4                     PMD4            equ	14788	;# 
   187   0039C5                     PMD5            equ	14789	;# 
   188   0039C6                     PMD6            equ	14790	;# 
   189   0039C7                     PMD7            equ	14791	;# 
   190   0039D0                     BORCON          equ	14800	;# 
   191   0039D1                     VREGCON         equ	14801	;# 
   192   0039D8                     CPUDOZE         equ	14808	;# 
   193   0039D9                     OSCCON1         equ	14809	;# 
   194   0039DA                     OSCCON2         equ	14810	;# 
   195   0039DB                     OSCCON3         equ	14811	;# 
   196   0039DC                     OSCSTAT         equ	14812	;# 
   197   0039DC                     OSCSTAT1        equ	14812	;# 
   198   0039DD                     OSCEN           equ	14813	;# 
   199   0039DE                     OSCTUNE         equ	14814	;# 
   200   0039DF                     OSCFRQ          equ	14815	;# 
   201   0039E0                     NVMADRL         equ	14816	;# 
   202   0039E1                     NVMADRH         equ	14817	;# 
   203   0039E3                     NVMDAT          equ	14819	;# 
   204   0039E5                     NVMCON1         equ	14821	;# 
   205   0039E6                     NVMCON2         equ	14822	;# 
   206   0039EF                     PRLOCK          equ	14831	;# 
   207   0039F1                     ISRPR           equ	14833	;# 
   208   0039F2                     MAINPR          equ	14834	;# 
   209   0039F3                     DMA1PR          equ	14835	;# 
   210   0039F4                     DMA2PR          equ	14836	;# 
   211   0039F7                     SCANPR          equ	14839	;# 
   212   003A00                     RA0PPS          equ	14848	;# 
   213   003A01                     RA1PPS          equ	14849	;# 
   214   003A02                     RA2PPS          equ	14850	;# 
   215   003A03                     RA3PPS          equ	14851	;# 
   216   003A04                     RA4PPS          equ	14852	;# 
   217   003A05                     RA5PPS          equ	14853	;# 
   218   003A06                     RA6PPS          equ	14854	;# 
   219   003A07                     RA7PPS          equ	14855	;# 
   220   003A08                     RB0PPS          equ	14856	;# 
   221   003A09                     RB1PPS          equ	14857	;# 
   222   003A0A                     RB2PPS          equ	14858	;# 
   223   003A0B                     RB3PPS          equ	14859	;# 
   224   003A0C                     RB4PPS          equ	14860	;# 
   225   003A0D                     RB5PPS          equ	14861	;# 
   226   003A0E                     RB6PPS          equ	14862	;# 
   227   003A0F                     RB7PPS          equ	14863	;# 
   228   003A10                     RC0PPS          equ	14864	;# 
   229   003A11                     RC1PPS          equ	14865	;# 
   230   003A12                     RC2PPS          equ	14866	;# 
   231   003A13                     RC3PPS          equ	14867	;# 
   232   003A14                     RC4PPS          equ	14868	;# 
   233   003A15                     RC5PPS          equ	14869	;# 
   234   003A16                     RC6PPS          equ	14870	;# 
   235   003A17                     RC7PPS          equ	14871	;# 
   236   003A18                     RD0PPS          equ	14872	;# 
   237   003A19                     RD1PPS          equ	14873	;# 
   238   003A1A                     RD2PPS          equ	14874	;# 
   239   003A1B                     RD3PPS          equ	14875	;# 
   240   003A1C                     RD4PPS          equ	14876	;# 
   241   003A1D                     RD5PPS          equ	14877	;# 
   242   003A1E                     RD6PPS          equ	14878	;# 
   243   003A1F                     RD7PPS          equ	14879	;# 
   244   003A20                     RE0PPS          equ	14880	;# 
   245   003A21                     RE1PPS          equ	14881	;# 
   246   003A22                     RE2PPS          equ	14882	;# 
   247   003A40                     ANSELA          equ	14912	;# 
   248   003A41                     WPUA            equ	14913	;# 
   249   003A42                     ODCONA          equ	14914	;# 
   250   003A43                     SLRCONA         equ	14915	;# 
   251   003A44                     INLVLA          equ	14916	;# 
   252   003A45                     IOCAP           equ	14917	;# 
   253   003A46                     IOCAN           equ	14918	;# 
   254   003A47                     IOCAF           equ	14919	;# 
   255   003A50                     ANSELB          equ	14928	;# 
   256   003A51                     WPUB            equ	14929	;# 
   257   003A52                     ODCONB          equ	14930	;# 
   258   003A53                     SLRCONB         equ	14931	;# 
   259   003A54                     INLVLB          equ	14932	;# 
   260   003A55                     IOCBP           equ	14933	;# 
   261   003A56                     IOCBN           equ	14934	;# 
   262   003A57                     IOCBF           equ	14935	;# 
   263   003A5A                     RB1I2C          equ	14938	;# 
   264   003A5B                     RB2I2C          equ	14939	;# 
   265   003A60                     ANSELC          equ	14944	;# 
   266   003A61                     WPUC            equ	14945	;# 
   267   003A62                     ODCONC          equ	14946	;# 
   268   003A63                     SLRCONC         equ	14947	;# 
   269   003A64                     INLVLC          equ	14948	;# 
   270   003A65                     IOCCP           equ	14949	;# 
   271   003A66                     IOCCN           equ	14950	;# 
   272   003A67                     IOCCF           equ	14951	;# 
   273   003A6A                     RC3I2C          equ	14954	;# 
   274   003A6B                     RC4I2C          equ	14955	;# 
   275   003A70                     ANSELD          equ	14960	;# 
   276   003A71                     WPUD            equ	14961	;# 
   277   003A72                     ODCOND          equ	14962	;# 
   278   003A73                     SLRCOND         equ	14963	;# 
   279   003A74                     INLVLD          equ	14964	;# 
   280   003A7A                     RD0I2C          equ	14970	;# 
   281   003A7B                     RD1I2C          equ	14971	;# 
   282   003A80                     ANSELE          equ	14976	;# 
   283   003A81                     WPUE            equ	14977	;# 
   284   003A82                     ODCONE          equ	14978	;# 
   285   003A83                     SLRCONE         equ	14979	;# 
   286   003A84                     INLVLE          equ	14980	;# 
   287   003A85                     IOCEP           equ	14981	;# 
   288   003A86                     IOCEN           equ	14982	;# 
   289   003A87                     IOCEF           equ	14983	;# 
   290   003ABF                     PPSLOCK         equ	15039	;# 
   291   003AC0                     INT0PPS         equ	15040	;# 
   292   003AC1                     INT1PPS         equ	15041	;# 
   293   003AC2                     INT2PPS         equ	15042	;# 
   294   003AC3                     T0CKIPPS        equ	15043	;# 
   295   003AC4                     T1CKIPPS        equ	15044	;# 
   296   003AC5                     T1GPPS          equ	15045	;# 
   297   003AC6                     T3CKIPPS        equ	15046	;# 
   298   003AC7                     T3GPPS          equ	15047	;# 
   299   003AC8                     T5CKIPPS        equ	15048	;# 
   300   003AC9                     T5GPPS          equ	15049	;# 
   301   003ACA                     T2INPPS         equ	15050	;# 
   302   003ACB                     T4INPPS         equ	15051	;# 
   303   003ACC                     T6INPPS         equ	15052	;# 
   304   003ACD                     CCP1PPS         equ	15053	;# 
   305   003ACE                     CCP2PPS         equ	15054	;# 
   306   003ACF                     CCP3PPS         equ	15055	;# 
   307   003AD0                     CCP4PPS         equ	15056	;# 
   308   003AD1                     SMT1WINPPS      equ	15057	;# 
   309   003AD2                     SMT1SIGPPS      equ	15058	;# 
   310   003AD3                     CWG1INPPS       equ	15059	;# 
   311   003AD4                     CWG2INPPS       equ	15060	;# 
   312   003AD5                     CWG3INPPS       equ	15061	;# 
   313   003AD6                     MD1CARLPPS      equ	15062	;# 
   314   003AD7                     MD1CARHPPS      equ	15063	;# 
   315   003AD8                     MD1SRCPPS       equ	15064	;# 
   316   003AD9                     CLCIN0PPS       equ	15065	;# 
   317   003ADA                     CLCIN1PPS       equ	15066	;# 
   318   003ADB                     CLCIN2PPS       equ	15067	;# 
   319   003ADC                     CLCIN3PPS       equ	15068	;# 
   320   003ADD                     ADACTPPS        equ	15069	;# 
   321   003ADE                     SPI1SCKPPS      equ	15070	;# 
   322   003ADF                     SPI1SDIPPS      equ	15071	;# 
   323   003AE0                     SPI1SSPPS       equ	15072	;# 
   324   003AE1                     I2C1SCLPPS      equ	15073	;# 
   325   003AE2                     I2C1SDAPPS      equ	15074	;# 
   326   003AE3                     I2C2SCLPPS      equ	15075	;# 
   327   003AE4                     I2C2SDAPPS      equ	15076	;# 
   328   003AE5                     U1RXPPS         equ	15077	;# 
   329   003AE6                     U1CTSPPS        equ	15078	;# 
   330   003AE8                     U2RXPPS         equ	15080	;# 
   331   003AE9                     U2CTSPPS        equ	15081	;# 
   332   003BC9                     DMA2BUF         equ	15305	;# 
   333   003BCA                     DMA2DCNT        equ	15306	;# 
   334   003BCA                     DMA2DCNTL       equ	15306	;# 
   335   003BCB                     DMA2DCNTH       equ	15307	;# 
   336   003BCC                     DMA2DPTR        equ	15308	;# 
   337   003BCC                     DMA2DPTRL       equ	15308	;# 
   338   003BCD                     DMA2DPTRH       equ	15309	;# 
   339   003BCE                     DMA2DSZ         equ	15310	;# 
   340   003BCE                     DMA2DSZL        equ	15310	;# 
   341   003BCF                     DMA2DSZH        equ	15311	;# 
   342   003BD0                     DMA2DSA         equ	15312	;# 
   343   003BD0                     DMA2DSAL        equ	15312	;# 
   344   003BD1                     DMA2DSAH        equ	15313	;# 
   345   003BD2                     DMA2SCNT        equ	15314	;# 
   346   003BD2                     DMA2SCNTL       equ	15314	;# 
   347   003BD3                     DMA2SCNTH       equ	15315	;# 
   348   003BD4                     DMA2SPTR        equ	15316	;# 
   349   003BD4                     DMA2SPTRL       equ	15316	;# 
   350   003BD5                     DMA2SPTRH       equ	15317	;# 
   351   003BD6                     DMA2SPTRU       equ	15318	;# 
   352   003BD7                     DMA2SSZ         equ	15319	;# 
   353   003BD7                     DMA2SSZL        equ	15319	;# 
   354   003BD8                     DMA2SSZH        equ	15320	;# 
   355   003BD9                     DMA2SSA         equ	15321	;# 
   356   003BD9                     DMA2SSAL        equ	15321	;# 
   357   003BDA                     DMA2SSAH        equ	15322	;# 
   358   003BDB                     DMA2SSAU        equ	15323	;# 
   359   003BDC                     DMA2CON0        equ	15324	;# 
   360   003BDD                     DMA2CON1        equ	15325	;# 
   361   003BDE                     DMA2AIRQ        equ	15326	;# 
   362   003BDF                     DMA2SIRQ        equ	15327	;# 
   363   003BE9                     DMA1BUF         equ	15337	;# 
   364   003BEA                     DMA1DCNT        equ	15338	;# 
   365   003BEA                     DMA1DCNTL       equ	15338	;# 
   366   003BEB                     DMA1DCNTH       equ	15339	;# 
   367   003BEC                     DMA1DPTR        equ	15340	;# 
   368   003BEC                     DMA1DPTRL       equ	15340	;# 
   369   003BED                     DMA1DPTRH       equ	15341	;# 
   370   003BEE                     DMA1DSZ         equ	15342	;# 
   371   003BEE                     DMA1DSZL        equ	15342	;# 
   372   003BEF                     DMA1DSZH        equ	15343	;# 
   373   003BF0                     DMA1DSA         equ	15344	;# 
   374   003BF0                     DMA1DSAL        equ	15344	;# 
   375   003BF1                     DMA1DSAH        equ	15345	;# 
   376   003BF2                     DMA1SCNT        equ	15346	;# 
   377   003BF2                     DMA1SCNTL       equ	15346	;# 
   378   003BF3                     DMA1SCNTH       equ	15347	;# 
   379   003BF4                     DMA1SPTR        equ	15348	;# 
   380   003BF4                     DMA1SPTRL       equ	15348	;# 
   381   003BF5                     DMA1SPTRH       equ	15349	;# 
   382   003BF6                     DMA1SPTRU       equ	15350	;# 
   383   003BF7                     DMA1SSZ         equ	15351	;# 
   384   003BF7                     DMA1SSZL        equ	15351	;# 
   385   003BF8                     DMA1SSZH        equ	15352	;# 
   386   003BF9                     DMA1SSA         equ	15353	;# 
   387   003BF9                     DMA1SSAL        equ	15353	;# 
   388   003BFA                     DMA1SSAH        equ	15354	;# 
   389   003BFB                     DMA1SSAU        equ	15355	;# 
   390   003BFC                     DMA1CON0        equ	15356	;# 
   391   003BFD                     DMA1CON1        equ	15357	;# 
   392   003BFE                     DMA1AIRQ        equ	15358	;# 
   393   003BFF                     DMA1SIRQ        equ	15359	;# 
   394   003C56                     CLC4CON         equ	15446	;# 
   395   003C57                     CLC4POL         equ	15447	;# 
   396   003C58                     CLC4SEL0        equ	15448	;# 
   397   003C59                     CLC4SEL1        equ	15449	;# 
   398   003C5A                     CLC4SEL2        equ	15450	;# 
   399   003C5B                     CLC4SEL3        equ	15451	;# 
   400   003C5C                     CLC4GLS0        equ	15452	;# 
   401   003C5D                     CLC4GLS1        equ	15453	;# 
   402   003C5E                     CLC4GLS2        equ	15454	;# 
   403   003C5F                     CLC4GLS3        equ	15455	;# 
   404   003C60                     CLC3CON         equ	15456	;# 
   405   003C61                     CLC3POL         equ	15457	;# 
   406   003C62                     CLC3SEL0        equ	15458	;# 
   407   003C63                     CLC3SEL1        equ	15459	;# 
   408   003C64                     CLC3SEL2        equ	15460	;# 
   409   003C65                     CLC3SEL3        equ	15461	;# 
   410   003C66                     CLC3GLS0        equ	15462	;# 
   411   003C67                     CLC3GLS1        equ	15463	;# 
   412   003C68                     CLC3GLS2        equ	15464	;# 
   413   003C69                     CLC3GLS3        equ	15465	;# 
   414   003C6A                     CLC2CON         equ	15466	;# 
   415   003C6B                     CLC2POL         equ	15467	;# 
   416   003C6C                     CLC2SEL0        equ	15468	;# 
   417   003C6D                     CLC2SEL1        equ	15469	;# 
   418   003C6E                     CLC2SEL2        equ	15470	;# 
   419   003C6F                     CLC2SEL3        equ	15471	;# 
   420   003C70                     CLC2GLS0        equ	15472	;# 
   421   003C71                     CLC2GLS1        equ	15473	;# 
   422   003C72                     CLC2GLS2        equ	15474	;# 
   423   003C73                     CLC2GLS3        equ	15475	;# 
   424   003C74                     CLC1CON         equ	15476	;# 
   425   003C75                     CLC1POL         equ	15477	;# 
   426   003C76                     CLC1SEL0        equ	15478	;# 
   427   003C77                     CLC1SEL1        equ	15479	;# 
   428   003C78                     CLC1SEL2        equ	15480	;# 
   429   003C79                     CLC1SEL3        equ	15481	;# 
   430   003C7A                     CLC1GLS0        equ	15482	;# 
   431   003C7B                     CLC1GLS1        equ	15483	;# 
   432   003C7C                     CLC1GLS2        equ	15484	;# 
   433   003C7D                     CLC1GLS3        equ	15485	;# 
   434   003C7E                     CLCDATA0        equ	15486	;# 
   435   003CE5                     CLKRCON         equ	15589	;# 
   436   003CE6                     CLKRCLK         equ	15590	;# 
   437   003CFA                     MD1CON0         equ	15610	;# 
   438   003CFB                     MD1CON1         equ	15611	;# 
   439   003CFC                     MD1SRC          equ	15612	;# 
   440   003CFD                     MD1CARL         equ	15613	;# 
   441   003CFE                     MD1CARH         equ	15614	;# 
   442   003D10                     SPI1RXB         equ	15632	;# 
   443   003D11                     SPI1TXB         equ	15633	;# 
   444   003D12                     SPI1TCNT        equ	15634	;# 
   445   003D12                     SPI1TCNTL       equ	15634	;# 
   446   003D13                     SPI1TCNTH       equ	15635	;# 
   447   003D14                     SPI1CON0        equ	15636	;# 
   448   003D15                     SPI1CON1        equ	15637	;# 
   449   003D16                     SPI1CON2        equ	15638	;# 
   450   003D17                     SPI1STATUS      equ	15639	;# 
   451   003D18                     SPI1TWIDTH      equ	15640	;# 
   452   003D19                     SPI1BAUD        equ	15641	;# 
   453   003D1A                     SPI1INTF        equ	15642	;# 
   454   003D1B                     SPI1INTE        equ	15643	;# 
   455   003D1C                     SPI1CLK         equ	15644	;# 
   456   003D54                     I2C2RXB         equ	15700	;# 
   457   003D55                     I2C2TXB         equ	15701	;# 
   458   003D56                     I2C2CNT         equ	15702	;# 
   459   003D57                     I2C2ADB0        equ	15703	;# 
   460   003D58                     I2C2ADB1        equ	15704	;# 
   461   003D59                     I2C2ADR0        equ	15705	;# 
   462   003D5A                     I2C2ADR1        equ	15706	;# 
   463   003D5B                     I2C2ADR2        equ	15707	;# 
   464   003D5C                     I2C2ADR3        equ	15708	;# 
   465   003D5D                     I2C2CON0        equ	15709	;# 
   466   003D5E                     I2C2CON1        equ	15710	;# 
   467   003D5F                     I2C2CON2        equ	15711	;# 
   468   003D60                     I2C2ERR         equ	15712	;# 
   469   003D61                     I2C2STAT0       equ	15713	;# 
   470   003D62                     I2C2STAT1       equ	15714	;# 
   471   003D63                     I2C2PIR         equ	15715	;# 
   472   003D64                     I2C2PIE         equ	15716	;# 
   473   003D65                     I2C2CLK         equ	15717	;# 
   474   003D66                     I2C2BTO         equ	15718	;# 
   475   003D6A                     I2C1RXB         equ	15722	;# 
   476   003D6B                     I2C1TXB         equ	15723	;# 
   477   003D6C                     I2C1CNT         equ	15724	;# 
   478   003D6D                     I2C1ADB0        equ	15725	;# 
   479   003D6E                     I2C1ADB1        equ	15726	;# 
   480   003D6F                     I2C1ADR0        equ	15727	;# 
   481   003D70                     I2C1ADR1        equ	15728	;# 
   482   003D71                     I2C1ADR2        equ	15729	;# 
   483   003D72                     I2C1ADR3        equ	15730	;# 
   484   003D73                     I2C1CON0        equ	15731	;# 
   485   003D74                     I2C1CON1        equ	15732	;# 
   486   003D75                     I2C1CON2        equ	15733	;# 
   487   003D76                     I2C1ERR         equ	15734	;# 
   488   003D77                     I2C1STAT0       equ	15735	;# 
   489   003D78                     I2C1STAT1       equ	15736	;# 
   490   003D79                     I2C1PIR         equ	15737	;# 
   491   003D7A                     I2C1PIE         equ	15738	;# 
   492   003D7B                     I2C1CLK         equ	15739	;# 
   493   003D7C                     I2C1BTO         equ	15740	;# 
   494   003DD0                     U2RXB           equ	15824	;# 
   495   003DD0                     U2RXBL          equ	15824	;# 
   496   003DD2                     U2TXB           equ	15826	;# 
   497   003DD2                     U2TXBL          equ	15826	;# 
   498   003DD4                     U2P1            equ	15828	;# 
   499   003DD4                     U2P1L           equ	15828	;# 
   500   003DD6                     U2P2            equ	15830	;# 
   501   003DD6                     U2P2L           equ	15830	;# 
   502   003DD8                     U2P3            equ	15832	;# 
   503   003DD8                     U2P3L           equ	15832	;# 
   504   003DDA                     U2CON0          equ	15834	;# 
   505   003DDB                     U2CON1          equ	15835	;# 
   506   003DDC                     U2CON2          equ	15836	;# 
   507   003DDD                     U2BRG           equ	15837	;# 
   508   003DDD                     U2BRGL          equ	15837	;# 
   509   003DDE                     U2BRGH          equ	15838	;# 
   510   003DDF                     U2FIFO          equ	15839	;# 
   511   003DE0                     U2UIR           equ	15840	;# 
   512   003DE1                     U2ERRIR         equ	15841	;# 
   513   003DE2                     U2ERRIE         equ	15842	;# 
   514   003DE8                     U1RXB           equ	15848	;# 
   515   003DE8                     U1RXBL          equ	15848	;# 
   516   003DE9                     U1RXCHK         equ	15849	;# 
   517   003DEA                     U1TXB           equ	15850	;# 
   518   003DEA                     U1TXBL          equ	15850	;# 
   519   003DEB                     U1TXCHK         equ	15851	;# 
   520   003DEC                     U1P1            equ	15852	;# 
   521   003DEC                     U1P1L           equ	15852	;# 
   522   003DED                     U1P1H           equ	15853	;# 
   523   003DEE                     U1P2            equ	15854	;# 
   524   003DEE                     U1P2L           equ	15854	;# 
   525   003DEF                     U1P2H           equ	15855	;# 
   526   003DF0                     U1P3            equ	15856	;# 
   527   003DF0                     U1P3L           equ	15856	;# 
   528   003DF1                     U1P3H           equ	15857	;# 
   529   003DF2                     U1CON0          equ	15858	;# 
   530   003DF3                     U1CON1          equ	15859	;# 
   531   003DF4                     U1CON2          equ	15860	;# 
   532   003DF5                     U1BRG           equ	15861	;# 
   533   003DF5                     U1BRGL          equ	15861	;# 
   534   003DF6                     U1BRGH          equ	15862	;# 
   535   003DF7                     U1FIFO          equ	15863	;# 
   536   003DF8                     U1UIR           equ	15864	;# 
   537   003DF9                     U1ERRIR         equ	15865	;# 
   538   003DFA                     U1ERRIE         equ	15866	;# 
   539   003E9C                     DAC1CON1        equ	16028	;# 
   540   003E9E                     DAC1CON0        equ	16030	;# 
   541   003EB8                     CM2CON0         equ	16056	;# 
   542   003EB9                     CM2CON1         equ	16057	;# 
   543   003EBA                     CM2NCH          equ	16058	;# 
   544   003EBB                     CM2PCH          equ	16059	;# 
   545   003EBC                     CM1CON0         equ	16060	;# 
   546   003EBD                     CM1CON1         equ	16061	;# 
   547   003EBE                     CM1NCH          equ	16062	;# 
   548   003EBF                     CM1PCH          equ	16063	;# 
   549   003EC0                     CMOUT           equ	16064	;# 
   550   003EC1                     FVRCON          equ	16065	;# 
   551   003EC3                     ZCDCON          equ	16067	;# 
   552   003EC9                     HLVDCON0        equ	16073	;# 
   553   003ECA                     HLVDCON1        equ	16074	;# 
   554   003ED7                     ADCP            equ	16087	;# 
   555   003EDE                     ADLTH           equ	16094	;# 
   556   003EDE                     ADLTHL          equ	16094	;# 
   557   003EDF                     ADLTHH          equ	16095	;# 
   558   003EE0                     ADUTH           equ	16096	;# 
   559   003EE0                     ADUTHL          equ	16096	;# 
   560   003EE1                     ADUTHH          equ	16097	;# 
   561   003EE2                     ADERR           equ	16098	;# 
   562   003EE2                     ADERRL          equ	16098	;# 
   563   003EE3                     ADERRH          equ	16099	;# 
   564   003EE4                     ADSTPT          equ	16100	;# 
   565   003EE4                     ADSTPTL         equ	16100	;# 
   566   003EE5                     ADSTPTH         equ	16101	;# 
   567   003EE6                     ADFLTR          equ	16102	;# 
   568   003EE6                     ADFLTRL         equ	16102	;# 
   569   003EE7                     ADFLTRH         equ	16103	;# 
   570   003EE8                     ADACC           equ	16104	;# 
   571   003EE8                     ADACCL          equ	16104	;# 
   572   003EE9                     ADACCH          equ	16105	;# 
   573   003EEA                     ADACCU          equ	16106	;# 
   574   003EEB                     ADCNT           equ	16107	;# 
   575   003EEC                     ADRPT           equ	16108	;# 
   576   003EED                     ADPREV          equ	16109	;# 
   577   003EED                     ADPREVL         equ	16109	;# 
   578   003EEE                     ADPREVH         equ	16110	;# 
   579   003EEF                     ADRES           equ	16111	;# 
   580   003EEF                     ADRESL          equ	16111	;# 
   581   003EF0                     ADRESH          equ	16112	;# 
   582   003EF1                     ADPCH           equ	16113	;# 
   583   003EF3                     ADACQ           equ	16115	;# 
   584   003EF3                     ADACQL          equ	16115	;# 
   585   003EF4                     ADACQH          equ	16116	;# 
   586   003EF5                     ADCAP           equ	16117	;# 
   587   003EF6                     ADPRE           equ	16118	;# 
   588   003EF6                     ADPREL          equ	16118	;# 
   589   003EF7                     ADPREH          equ	16119	;# 
   590   003EF8                     ADCON0          equ	16120	;# 
   591   003EF9                     ADCON1          equ	16121	;# 
   592   003EFA                     ADCON2          equ	16122	;# 
   593   003EFB                     ADCON3          equ	16123	;# 
   594   003EFC                     ADSTAT          equ	16124	;# 
   595   003EFD                     ADREF           equ	16125	;# 
   596   003EFE                     ADACT           equ	16126	;# 
   597   003EFF                     ADCLK           equ	16127	;# 
   598   003F12                     SMT1TMR         equ	16146	;# 
   599   003F12                     SMT1TMRL        equ	16146	;# 
   600   003F13                     SMT1TMRH        equ	16147	;# 
   601   003F14                     SMT1TMRU        equ	16148	;# 
   602   003F15                     SMT1CPR         equ	16149	;# 
   603   003F15                     SMT1CPRL        equ	16149	;# 
   604   003F16                     SMT1CPRH        equ	16150	;# 
   605   003F17                     SMT1CPRU        equ	16151	;# 
   606   003F18                     SMT1CPW         equ	16152	;# 
   607   003F18                     SMT1CPWL        equ	16152	;# 
   608   003F19                     SMT1CPWH        equ	16153	;# 
   609   003F1A                     SMT1CPWU        equ	16154	;# 
   610   003F1B                     SMT1PR          equ	16155	;# 
   611   003F1B                     SMT1PRL         equ	16155	;# 
   612   003F1C                     SMT1PRH         equ	16156	;# 
   613   003F1D                     SMT1PRU         equ	16157	;# 
   614   003F1E                     SMT1CON0        equ	16158	;# 
   615   003F1F                     SMT1CON1        equ	16159	;# 
   616   003F20                     SMT1STAT        equ	16160	;# 
   617   003F21                     SMT1CLK         equ	16161	;# 
   618   003F22                     SMT1SIG         equ	16162	;# 
   619   003F23                     SMT1WIN         equ	16163	;# 
   620   003F38                     NCO1ACC         equ	16184	;# 
   621   003F38                     NCO1ACCL        equ	16184	;# 
   622   003F39                     NCO1ACCH        equ	16185	;# 
   623   003F3A                     NCO1ACCU        equ	16186	;# 
   624   003F3B                     NCO1INC         equ	16187	;# 
   625   003F3B                     NCO1INCL        equ	16187	;# 
   626   003F3C                     NCO1INCH        equ	16188	;# 
   627   003F3D                     NCO1INCU        equ	16189	;# 
   628   003F3E                     NCO1CON         equ	16190	;# 
   629   003F3F                     NCO1CLK         equ	16191	;# 
   630   003F40                     CWG3CLK         equ	16192	;# 
   631   003F40                     CWG3CLKCON      equ	16192	;# 
   632   003F41                     CWG3ISM         equ	16193	;# 
   633   003F41                     CWG3DAT         equ	16193	;# 
   634   003F42                     CWG3DBR         equ	16194	;# 
   635   003F43                     CWG3DBF         equ	16195	;# 
   636   003F44                     CWG3CON0        equ	16196	;# 
   637   003F45                     CWG3CON1        equ	16197	;# 
   638   003F46                     CWG3AS0         equ	16198	;# 
   639   003F47                     CWG3AS1         equ	16199	;# 
   640   003F48                     CWG3STR         equ	16200	;# 
   641   003F49                     CWG2CLK         equ	16201	;# 
   642   003F49                     CWG2CLKCON      equ	16201	;# 
   643   003F4A                     CWG2ISM         equ	16202	;# 
   644   003F4A                     CWG2DAT         equ	16202	;# 
   645   003F4B                     CWG2DBR         equ	16203	;# 
   646   003F4C                     CWG2DBF         equ	16204	;# 
   647   003F4D                     CWG2CON0        equ	16205	;# 
   648   003F4E                     CWG2CON1        equ	16206	;# 
   649   003F4F                     CWG2AS0         equ	16207	;# 
   650   003F50                     CWG2AS1         equ	16208	;# 
   651   003F51                     CWG2STR         equ	16209	;# 
   652   003F52                     CWG1CLK         equ	16210	;# 
   653   003F52                     CWG1CLKCON      equ	16210	;# 
   654   003F53                     CWG1ISM         equ	16211	;# 
   655   003F53                     CWG1DAT         equ	16211	;# 
   656   003F54                     CWG1DBR         equ	16212	;# 
   657   003F55                     CWG1DBF         equ	16213	;# 
   658   003F56                     CWG1CON0        equ	16214	;# 
   659   003F57                     CWG1CON1        equ	16215	;# 
   660   003F58                     CWG1AS0         equ	16216	;# 
   661   003F59                     CWG1AS1         equ	16217	;# 
   662   003F5A                     CWG1STR         equ	16218	;# 
   663   003F5E                     CCPTMRS0        equ	16222	;# 
   664   003F5F                     CCPTMRS1        equ	16223	;# 
   665   003F60                     PWM8DC          equ	16224	;# 
   666   003F60                     PWM8DCL         equ	16224	;# 
   667   003F61                     PWM8DCH         equ	16225	;# 
   668   003F62                     PWM8CON         equ	16226	;# 
   669   003F64                     PWM7DC          equ	16228	;# 
   670   003F64                     PWM7DCL         equ	16228	;# 
   671   003F65                     PWM7DCH         equ	16229	;# 
   672   003F66                     PWM7CON         equ	16230	;# 
   673   003F68                     PWM6DC          equ	16232	;# 
   674   003F68                     PWM6DCL         equ	16232	;# 
   675   003F69                     PWM6DCH         equ	16233	;# 
   676   003F6A                     PWM6CON         equ	16234	;# 
   677   003F6C                     PWM5DC          equ	16236	;# 
   678   003F6C                     PWM5DCL         equ	16236	;# 
   679   003F6D                     PWM5DCH         equ	16237	;# 
   680   003F6E                     PWM5CON         equ	16238	;# 
   681   003F70                     CCPR4           equ	16240	;# 
   682   003F70                     CCPR4L          equ	16240	;# 
   683   003F71                     CCPR4H          equ	16241	;# 
   684   003F72                     CCP4CON         equ	16242	;# 
   685   003F73                     CCP4CAP         equ	16243	;# 
   686   003F74                     CCPR3           equ	16244	;# 
   687   003F74                     CCPR3L          equ	16244	;# 
   688   003F75                     CCPR3H          equ	16245	;# 
   689   003F76                     CCP3CON         equ	16246	;# 
   690   003F77                     CCP3CAP         equ	16247	;# 
   691   003F78                     CCPR2           equ	16248	;# 
   692   003F78                     CCPR2L          equ	16248	;# 
   693   003F79                     CCPR2H          equ	16249	;# 
   694   003F7A                     CCP2CON         equ	16250	;# 
   695   003F7B                     CCP2CAP         equ	16251	;# 
   696   003F7C                     CCPR1           equ	16252	;# 
   697   003F7C                     CCPR1L          equ	16252	;# 
   698   003F7D                     CCPR1H          equ	16253	;# 
   699   003F7E                     CCP1CON         equ	16254	;# 
   700   003F7F                     CCP1CAP         equ	16255	;# 
   701   003F92                     T6TMR           equ	16274	;# 
   702   003F92                     TMR6            equ	16274	;# 
   703   003F93                     T6PR            equ	16275	;# 
   704   003F93                     PR6             equ	16275	;# 
   705   003F94                     T6CON           equ	16276	;# 
   706   003F95                     T6HLT           equ	16277	;# 
   707   003F96                     T6CLKCON        equ	16278	;# 
   708   003F96                     T6CLK           equ	16278	;# 
   709   003F97                     T6RST           equ	16279	;# 
   710   003F98                     TMR5            equ	16280	;# 
   711   003F98                     TMR5L           equ	16280	;# 
   712   003F99                     TMR5H           equ	16281	;# 
   713   003F9A                     T5CON           equ	16282	;# 
   714   003F9A                     TMR5CON         equ	16282	;# 
   715   003F9B                     T5GCON          equ	16283	;# 
   716   003F9B                     TMR5GCON        equ	16283	;# 
   717   003F9C                     T5GATE          equ	16284	;# 
   718   003F9C                     TMR5GATE        equ	16284	;# 
   719   003F9D                     T5CLK           equ	16285	;# 
   720   003F9D                     TMR5CLK         equ	16285	;# 
   721   003F9D                     PR5             equ	16285	;# 
   722   003F9E                     T4TMR           equ	16286	;# 
   723   003F9E                     TMR4            equ	16286	;# 
   724   003F9F                     T4PR            equ	16287	;# 
   725   003F9F                     PR4             equ	16287	;# 
   726   003FA0                     T4CON           equ	16288	;# 
   727   003FA1                     T4HLT           equ	16289	;# 
   728   003FA2                     T4CLKCON        equ	16290	;# 
   729   003FA2                     T4CLK           equ	16290	;# 
   730   003FA3                     T4RST           equ	16291	;# 
   731   003FA4                     TMR3            equ	16292	;# 
   732   003FA4                     TMR3L           equ	16292	;# 
   733   003FA5                     TMR3H           equ	16293	;# 
   734   003FA6                     T3CON           equ	16294	;# 
   735   003FA6                     TMR3CON         equ	16294	;# 
   736   003FA7                     T3GCON          equ	16295	;# 
   737   003FA7                     TMR3GCON        equ	16295	;# 
   738   003FA8                     T3GATE          equ	16296	;# 
   739   003FA8                     TMR3GATE        equ	16296	;# 
   740   003FA9                     T3CLK           equ	16297	;# 
   741   003FA9                     TMR3CLK         equ	16297	;# 
   742   003FA9                     PR3             equ	16297	;# 
   743   003FAA                     T2TMR           equ	16298	;# 
   744   003FAA                     TMR2            equ	16298	;# 
   745   003FAB                     T2PR            equ	16299	;# 
   746   003FAB                     PR2             equ	16299	;# 
   747   003FAC                     T2CON           equ	16300	;# 
   748   003FAD                     T2HLT           equ	16301	;# 
   749   003FAE                     T2CLKCON        equ	16302	;# 
   750   003FAE                     T2CLK           equ	16302	;# 
   751   003FAF                     T2RST           equ	16303	;# 
   752   003FB0                     TMR1            equ	16304	;# 
   753   003FB0                     TMR1L           equ	16304	;# 
   754   003FB1                     TMR1H           equ	16305	;# 
   755   003FB2                     T1CON           equ	16306	;# 
   756   003FB2                     TMR1CON         equ	16306	;# 
   757   003FB3                     T1GCON          equ	16307	;# 
   758   003FB3                     TMR1GCON        equ	16307	;# 
   759   003FB4                     T1GATE          equ	16308	;# 
   760   003FB4                     TMR1GATE        equ	16308	;# 
   761   003FB5                     T1CLK           equ	16309	;# 
   762   003FB5                     TMR1CLK         equ	16309	;# 
   763   003FB5                     PR1             equ	16309	;# 
   764   003FB6                     TMR0L           equ	16310	;# 
   765   003FB6                     TMR0            equ	16310	;# 
   766   003FB7                     TMR0H           equ	16311	;# 
   767   003FB7                     PR0             equ	16311	;# 
   768   003FB8                     T0CON0          equ	16312	;# 
   769   003FB9                     T0CON1          equ	16313	;# 
   770   003FBA                     LATA            equ	16314	;# 
   771   003FBB                     LATB            equ	16315	;# 
   772   003FBC                     LATC            equ	16316	;# 
   773   003FBD                     LATD            equ	16317	;# 
   774   003FBE                     LATE            equ	16318	;# 
   775   003FC2                     TRISA           equ	16322	;# 
   776   003FC3                     TRISB           equ	16323	;# 
   777   003FC4                     TRISC           equ	16324	;# 
   778   003FC5                     TRISD           equ	16325	;# 
   779   003FC6                     TRISE           equ	16326	;# 
   780   003FCA                     PORTA           equ	16330	;# 
   781   003FCB                     PORTB           equ	16331	;# 
   782   003FCC                     PORTC           equ	16332	;# 
   783   003FCD                     PORTD           equ	16333	;# 
   784   003FCE                     PORTE           equ	16334	;# 
   785   003FD2                     INTCON0         equ	16338	;# 
   786   003FD3                     INTCON1         equ	16339	;# 
   787   003FD4                     IVTLOCK         equ	16340	;# 
   788   003FD5                     IVTBASE         equ	16341	;# 
   789   003FD5                     IVTBASEL        equ	16341	;# 
   790   003FD6                     IVTBASEH        equ	16342	;# 
   791   003FD7                     IVTBASEU        equ	16343	;# 
   792   003FD8                     STATUS          equ	16344	;# 
   793   003FD9                     FSR2            equ	16345	;# 
   794   003FD9                     FSR2L           equ	16345	;# 
   795   003FDA                     FSR2H           equ	16346	;# 
   796   003FDB                     PLUSW2          equ	16347	;# 
   797   003FDC                     PREINC2         equ	16348	;# 
   798   003FDD                     POSTDEC2        equ	16349	;# 
   799   003FDE                     POSTINC2        equ	16350	;# 
   800   003FDF                     INDF2           equ	16351	;# 
   801   003FE0                     BSR             equ	16352	;# 
   802   003FE1                     FSR1            equ	16353	;# 
   803   003FE1                     FSR1L           equ	16353	;# 
   804   003FE2                     FSR1H           equ	16354	;# 
   805   003FE3                     PLUSW1          equ	16355	;# 
   806   003FE4                     PREINC1         equ	16356	;# 
   807   003FE5                     POSTDEC1        equ	16357	;# 
   808   003FE6                     POSTINC1        equ	16358	;# 
   809   003FE7                     INDF1           equ	16359	;# 
   810   003FE8                     WREG            equ	16360	;# 
   811   003FE9                     FSR0            equ	16361	;# 
   812   003FE9                     FSR0L           equ	16361	;# 
   813   003FEA                     FSR0H           equ	16362	;# 
   814   003FEB                     PLUSW0          equ	16363	;# 
   815   003FEC                     PREINC0         equ	16364	;# 
   816   003FED                     POSTDEC0        equ	16365	;# 
   817   003FEE                     POSTINC0        equ	16366	;# 
   818   003FEF                     INDF0           equ	16367	;# 
   819   003FF0                     PCON0           equ	16368	;# 
   820   003FF1                     PCON1           equ	16369	;# 
   821   003FF3                     PROD            equ	16371	;# 
   822   003FF3                     PRODL           equ	16371	;# 
   823   003FF4                     PRODH           equ	16372	;# 
   824   003FF5                     TABLAT          equ	16373	;# 
   825   003FF6                     TBLPTR          equ	16374	;# 
   826   003FF6                     TBLPTRL         equ	16374	;# 
   827   003FF7                     TBLPTRH         equ	16375	;# 
   828   003FF8                     TBLPTRU         equ	16376	;# 
   829   003FF9                     PCLAT           equ	16377	;# 
   830   003FF9                     PCL             equ	16377	;# 
   831   003FFA                     PCLATH          equ	16378	;# 
   832   003FFB                     PCLATU          equ	16379	;# 
   833   003FFC                     STKPTR          equ	16380	;# 
   834   003FFD                     TOS             equ	16381	;# 
   835   003FFD                     TOSL            equ	16381	;# 
   836   003FFE                     TOSH            equ	16382	;# 
   837   003FFF                     TOSU            equ	16383	;# 
   838                           
   839                           	psect	idataCOMRAM
   840   00274C                     __pidataCOMRAM:
   841                           	callstack 0
   842                           
   843                           ;initializer for _sevSeg
   844   00274C  3F                 	db	63
   845   00274D  06                 	db	6
   846   00274E  5B                 	db	91
   847   00274F  4F                 	db	79
   848   002750  66                 	db	102
   849   002751  6D                 	db	109
   850   002752  7D                 	db	125
   851   002753  07                 	db	7
   852   002754  7F                 	db	127
   853   002755  6F                 	db	111
   854   003A70                     _ANSELD         set	14960
   855   003A60                     _ANSELC         set	14944
   856   003A50                     _ANSELB         set	14928
   857   003A40                     _ANSELA         set	14912
   858   003EFA                     _ADCON2         set	16122
   859   003EF9                     _ADCON1         set	16121
   860   003EF8                     _ADCON0         set	16120
   861   003FCB                     _PORTBbits      set	16331
   862   003FCA                     _PORTAbits      set	16330
   863   003FCD                     _PORTDbits      set	16333
   864   003FBD                     _LATD           set	16317
   865   003FBC                     _LATC           set	16316
   866   003FBA                     _LATA           set	16314
   867   003F7A                     _CCP2CON        set	16250
   868   003FB2                     _T1CON          set	16306
   869   003FC5                     _TRISD          set	16325
   870   003FC4                     _TRISC          set	16324
   871   003FC3                     _TRISB          set	16323
   872   003FC2                     _TRISA          set	16322
   873                           
   874                           ; #config settings
   875                           
   876                           	psect	cinit
   877   002724                     __pcinit:
   878                           	callstack 0
   879   002724                     start_initialization:
   880                           	callstack 0
   881   002724                     __initialization:
   882                           	callstack 0
   883                           
   884                           ; Initialize objects allocated to COMRAM (10 bytes)
   885                           ; load TBLPTR registers with __pidataCOMRAM
   886   002724  0E4C               	movlw	low __pidataCOMRAM
   887   002726  6EF6               	movwf	tblptrl,c
   888   002728  0E27               	movlw	high __pidataCOMRAM
   889   00272A  6EF7               	movwf	tblptrh,c
   890   00272C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   891   00272E  6EF8               	movwf	tblptru,c
   892   002730  EE00  F01A         	lfsr	0,__pdataCOMRAM
   893   002734  EE10 F00A          	lfsr	1,10
   894   002738                     copy_data0:
   895   002738  0009               	tblrd		*+
   896   00273A  006F FFD7 FFEE     	movff	tablat,postinc0
   897   002740  50E5               	movf	postdec1,w,c
   898   002742  50E1               	movf	fsr1l,w,c
   899   002744  E1F9               	bnz	copy_data0
   900   002746                     end_of_initialization:
   901                           	callstack 0
   902   002746                     __end_of__initialization:
   903                           	callstack 0
   904   002746  0100               	movlb	0
   905   002748  EF01  F010         	goto	_main	;jump to C main() function
   906                           
   907                           	psect	dataCOMRAM
   908   00001A                     __pdataCOMRAM:
   909                           	callstack 0
   910   00001A                     _sevSeg:
   911                           	callstack 0
   912   00001A                     	ds	10
   913                           
   914                           	psect	cstackCOMRAM
   915   000001                     __pcstackCOMRAM:
   916                           	callstack 0
   917   000001                     ?___wmul:
   918                           	callstack 0
   919   000001                     ?___awdiv:
   920                           	callstack 0
   921   000001                     ?___awmod:
   922                           	callstack 0
   923   000001                     ___wmul@multiplier:
   924                           	callstack 0
   925   000001                     ___awdiv@dividend:
   926                           	callstack 0
   927   000001                     ___awmod@dividend:
   928                           	callstack 0
   929   000001                     
   930                           ; 1 bytes @ 0x0
   931   000001                     	ds	2
   932   000003                     ___wmul@multiplicand:
   933                           	callstack 0
   934   000003                     ___awdiv@divisor:
   935                           	callstack 0
   936   000003                     ___awmod@divisor:
   937                           	callstack 0
   938                           
   939                           ; 2 bytes @ 0x2
   940   000003                     	ds	2
   941   000005                     ___awdiv@counter:
   942                           	callstack 0
   943   000005                     ___awmod@counter:
   944                           	callstack 0
   945   000005                     ___wmul@product:
   946                           	callstack 0
   947   000005                     
   948                           ; 1 bytes @ 0x4
   949   000005                     	ds	1
   950   000006                     ___awdiv@sign:
   951                           	callstack 0
   952   000006                     ___awmod@sign:
   953                           	callstack 0
   954                           
   955                           ; 1 bytes @ 0x5
   956   000006                     	ds	1
   957   000007                     ___awdiv@quotient:
   958                           	callstack 0
   959                           
   960                           ; 2 bytes @ 0x6
   961   000007                     	ds	2
   962   000009                     ?_calculate:
   963                           	callstack 0
   964   000009                     display@dValue:
   965                           	callstack 0
   966   000009                     calculate@val1:
   967                           	callstack 0
   968                           
   969                           ; 2 bytes @ 0x8
   970   000009                     	ds	2
   971   00000B                     display@digit2:
   972                           	callstack 0
   973   00000B                     calculate@val2:
   974                           	callstack 0
   975   00000B                     
   976                           ; 1 bytes @ 0xA
   977   00000B                     	ds	2
   978   00000D                     calculate@op:
   979                           	callstack 0
   980   00000D                     display@digit1:
   981                           	callstack 0
   982                           
   983                           ; 2 bytes @ 0xC
   984   00000D                     	ds	1
   985   00000E                     ??_calculate:
   986                           
   987                           ; 1 bytes @ 0xD
   988   00000E                     	ds	2
   989   000010                     ??_main:
   990                           
   991                           ; 1 bytes @ 0xF
   992   000010                     	ds	2
   993   000012                     main@result:
   994                           	callstack 0
   995                           
   996                           ; 2 bytes @ 0x11
   997   000012                     	ds	2
   998   000014                     main@value1:
   999                           	callstack 0
  1000                           
  1001                           ; 2 bytes @ 0x13
  1002   000014                     	ds	2
  1003   000016                     main@operator:
  1004                           	callstack 0
  1005                           
  1006                           ; 1 bytes @ 0x15
  1007   000016                     	ds	1
  1008   000017                     main@value2:
  1009                           	callstack 0
  1010                           
  1011                           ; 2 bytes @ 0x16
  1012   000017                     	ds	2
  1013   000019                     main@ret1:
  1014                           	callstack 0
  1015                           
  1016                           ; 1 bytes @ 0x18
  1017   000019                     	ds	1
  1018                           
  1019 ;;
  1020 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1021 ;;
  1022 ;; *************** function _main *****************
  1023 ;; Defined at:
  1024 ;;		line 59 in file "lab7.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;		None
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;  value2          2   22[COMRAM] int 
  1029 ;;  value1          2   19[COMRAM] int 
  1030 ;;  result          2   17[COMRAM] int 
  1031 ;;  ret1            1   24[COMRAM] enum E16765
  1032 ;;  operator        1   21[COMRAM] enum E16765
  1033 ;; Return value:  Size  Location     Type
  1034 ;;                  1    wreg      void 
  1035 ;; Registers used:
  1036 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1037 ;; Tracked objects:
  1038 ;;		On entry : 0/0
  1039 ;;		On exit  : 0/0
  1040 ;;		Unchanged: 0/0
  1041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1043 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1044 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1045 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1046 ;;Total ram usage:       10 bytes
  1047 ;; Hardware stack levels required when called: 2
  1048 ;; This function calls:
  1049 ;;		___wmul
  1050 ;;		_calculate
  1051 ;;		_display
  1052 ;;		_scanKeypad
  1053 ;; This function is called by:
  1054 ;;		Startup code after reset
  1055 ;; This function uses a non-reentrant model
  1056 ;;
  1057                           
  1058                           	psect	text0
  1059   002002                     __ptext0:
  1060                           	callstack 0
  1061   002002                     _main:
  1062                           	callstack 29
  1063   002002                     
  1064                           ;lab7.c: 60:     enum VALUE ret1;;lab7.c: 61:     enum VALUE operator;;lab7.c: 62:     i
      +                          nt value1, value2, result;;lab7.c: 64:     TRISA = 0x00;
  1065   002002  6AC2               	clrf	194,c	;volatile
  1066   002004                     
  1067                           ;lab7.c: 65:     TRISB = 0b00001111;
  1068   002004  0E0F               	movlw	15
  1069   002006  6EC3               	movwf	195,c	;volatile
  1070   002008                     
  1071                           ;lab7.c: 66:     TRISC = 0x00;
  1072   002008  6AC4               	clrf	196,c	;volatile
  1073   00200A                     
  1074                           ;lab7.c: 67:     TRISD = 0x00;
  1075   00200A  6AC5               	clrf	197,c	;volatile
  1076   00200C                     
  1077                           ;lab7.c: 69:     ADCON0 = 0;
  1078   00200C  013E               	movlb	62	; () banked
  1079   00200E  6BF8               	clrf	248,b	;volatile
  1080   002010                     
  1081                           ; BSR set to: 62
  1082                           ;lab7.c: 70:     ADCON1 = 0;
  1083   002010  6BF9               	clrf	249,b	;volatile
  1084   002012                     
  1085                           ; BSR set to: 62
  1086                           ;lab7.c: 71:     ADCON2 = 0;
  1087   002012  6BFA               	clrf	250,b	;volatile
  1088   002014                     
  1089                           ; BSR set to: 62
  1090                           ;lab7.c: 72:     T1CON = 0;
  1091   002014  6AB2               	clrf	178,c	;volatile
  1092   002016                     
  1093                           ; BSR set to: 62
  1094                           ;lab7.c: 73:     ANSELA = 0;
  1095   002016  013A               	movlb	58	; () banked
  1096   002018  6B40               	clrf	64,b	;volatile
  1097   00201A                     
  1098                           ; BSR set to: 58
  1099                           ;lab7.c: 74:     ANSELB = 0;
  1100   00201A  6B50               	clrf	80,b	;volatile
  1101   00201C                     
  1102                           ; BSR set to: 58
  1103                           ;lab7.c: 75:     ANSELC = 0;
  1104   00201C  6B60               	clrf	96,b	;volatile
  1105   00201E                     
  1106                           ; BSR set to: 58
  1107                           ;lab7.c: 76:     ANSELD = 0;
  1108   00201E  6B70               	clrf	112,b	;volatile
  1109   002020                     
  1110                           ; BSR set to: 58
  1111                           ;lab7.c: 78:     CCP2CON = 0x00;
  1112   002020  6A7A               	clrf	122,c	;volatile
  1113   002022                     l1352:
  1114                           
  1115                           ;lab7.c: 82:         ret1 = NOVALUE;
  1116   002022  6819               	setf	main@ret1^0,c
  1117   002024                     
  1118                           ;lab7.c: 83:         operator = NOVALUE;
  1119   002024  6816               	setf	main@operator^0,c
  1120                           
  1121                           ;lab7.c: 84:         value1 = 0;
  1122   002026  0E00               	movlw	0
  1123   002028  6E15               	movwf	(main@value1+1)^0,c
  1124   00202A  0E00               	movlw	0
  1125   00202C  6E14               	movwf	main@value1^0,c
  1126                           
  1127                           ;lab7.c: 85:         value2 = 0;
  1128   00202E  0E00               	movlw	0
  1129   002030  6E18               	movwf	(main@value2+1)^0,c
  1130   002032  0E00               	movlw	0
  1131   002034  6E17               	movwf	main@value2^0,c
  1132                           
  1133                           ;lab7.c: 88:         while((int)ret1 >= 100) {
  1134   002036  EF20  F010         	goto	l1358
  1135   00203A                     l1356:
  1136                           
  1137                           ;lab7.c: 89:             ret1 = scanKeypad();
  1138   00203A  EC4B  F011         	call	_scanKeypad	;wreg free
  1139   00203E  6E19               	movwf	main@ret1^0,c
  1140   002040                     l1358:
  1141                           
  1142                           ;lab7.c: 88:         while((int)ret1 >= 100) {
  1143   002040  0E64               	movlw	100
  1144   002042  6019               	cpfslt	main@ret1^0,c
  1145   002044  EF26  F010         	goto	u641
  1146   002048  EF28  F010         	goto	u640
  1147   00204C                     u641:
  1148   00204C  EF1D  F010         	goto	l1356
  1149   002050                     u640:
  1150   002050                     
  1151                           ;lab7.c: 91:         value1 += (int)ret1;
  1152   002050  5019               	movf	main@ret1^0,w,c
  1153   002052  2614               	addwf	main@value1^0,f,c
  1154   002054  0E00               	movlw	0
  1155   002056  2215               	addwfc	(main@value1+1)^0,f,c
  1156   002058                     
  1157                           ;lab7.c: 92:         display(value1);
  1158   002058  C014  F009         	movff	main@value1,display@dValue
  1159   00205C  C015  F00A         	movff	main@value1+1,display@dValue+1
  1160   002060  ECEF  F011         	call	_display	;wreg free
  1161   002064                     
  1162                           ;lab7.c: 93:         _delay((unsigned long)((300)*(4000000/4000.0)));
  1163   002064  0E02               	movlw	2
  1164   002066  6E11               	movwf	(??_main+1)^0,c
  1165   002068  0E86               	movlw	134
  1166   00206A  6E10               	movwf	??_main^0,c
  1167   00206C  0E99               	movlw	153
  1168   00206E                     u767:
  1169   00206E  2EE8               	decfsz	wreg,f,c
  1170   002070  D7FE               	bra	u767
  1171   002072  2E10               	decfsz	??_main^0,f,c
  1172   002074  D7FC               	bra	u767
  1173   002076  2E11               	decfsz	(??_main+1)^0,f,c
  1174   002078  D7FA               	bra	u767
  1175   00207A  0000               	nop	
  1176   00207C                     
  1177                           ;lab7.c: 94:         ret1 = NOVALUE;
  1178   00207C  6819               	setf	main@ret1^0,c
  1179                           
  1180                           ;lab7.c: 96:         while((ret1 == NOVALUE) && (ret1 != COMPUTE)) {
  1181   00207E  EF45  F010         	goto	l1372
  1182   002082                     l1368:
  1183   002082  EC4B  F011         	call	_scanKeypad	;wreg free
  1184   002086                     
  1185                           ;lab7.c: 98:             ret1 = ADD;
  1186   002086  0E64               	movlw	100
  1187   002088  6E19               	movwf	main@ret1^0,c
  1188   00208A                     l1372:
  1189                           
  1190                           ;lab7.c: 96:         while((ret1 == NOVALUE) && (ret1 != COMPUTE)) {
  1191   00208A  2819               	incf	main@ret1^0,w,c
  1192   00208C  A4D8               	btfss	status,2,c
  1193   00208E  EF4B  F010         	goto	u651
  1194   002092  EF4D  F010         	goto	u650
  1195   002096                     u651:
  1196   002096  EF56  F010         	goto	l1376
  1197   00209A                     u650:
  1198   00209A  0E69               	movlw	105
  1199   00209C  1819               	xorwf	main@ret1^0,w,c
  1200   00209E  A4D8               	btfss	status,2,c
  1201   0020A0  EF54  F010         	goto	u661
  1202   0020A4  EF56  F010         	goto	u660
  1203   0020A8                     u661:
  1204   0020A8  EF41  F010         	goto	l1368
  1205   0020AC                     u660:
  1206   0020AC                     l1376:
  1207                           
  1208                           ;lab7.c: 102:         if (ret1 < 100) {
  1209   0020AC  0E64               	movlw	100
  1210   0020AE  6019               	cpfslt	main@ret1^0,c
  1211   0020B0  EF5C  F010         	goto	u671
  1212   0020B4  EF5E  F010         	goto	u670
  1213   0020B8                     u671:
  1214   0020B8  EF99  F010         	goto	l62
  1215   0020BC                     u670:
  1216   0020BC                     
  1217                           ;lab7.c: 103:             value1 *= 10;
  1218   0020BC  C014  F001         	movff	main@value1,___wmul@multiplier
  1219   0020C0  C015  F002         	movff	main@value1+1,___wmul@multiplier+1
  1220   0020C4  0E00               	movlw	0
  1221   0020C6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1222   0020C8  0E0A               	movlw	10
  1223   0020CA  6E03               	movwf	___wmul@multiplicand^0,c
  1224   0020CC  EC7D  F013         	call	___wmul	;wreg free
  1225   0020D0  C001  F014         	movff	?___wmul,main@value1
  1226   0020D4  C002  F015         	movff	?___wmul+1,main@value1+1
  1227   0020D8                     
  1228                           ;lab7.c: 104:             value1 += ret1;
  1229   0020D8  5019               	movf	main@ret1^0,w,c
  1230   0020DA  2614               	addwf	main@value1^0,f,c
  1231   0020DC  0E00               	movlw	0
  1232   0020DE  2215               	addwfc	(main@value1+1)^0,f,c
  1233   0020E0                     
  1234                           ;lab7.c: 105:             display(value1);
  1235   0020E0  C014  F009         	movff	main@value1,display@dValue
  1236   0020E4  C015  F00A         	movff	main@value1+1,display@dValue+1
  1237   0020E8  ECEF  F011         	call	_display	;wreg free
  1238   0020EC                     
  1239                           ;lab7.c: 106:             _delay((unsigned long)((300)*(4000000/4000.0)));
  1240   0020EC  0E02               	movlw	2
  1241   0020EE  6E11               	movwf	(??_main+1)^0,c
  1242   0020F0  0E86               	movlw	134
  1243   0020F2  6E10               	movwf	??_main^0,c
  1244   0020F4  0E99               	movlw	153
  1245   0020F6                     u777:
  1246   0020F6  2EE8               	decfsz	wreg,f,c
  1247   0020F8  D7FE               	bra	u777
  1248   0020FA  2E10               	decfsz	??_main^0,f,c
  1249   0020FC  D7FC               	bra	u777
  1250   0020FE  2E11               	decfsz	(??_main+1)^0,f,c
  1251   002100  D7FA               	bra	u777
  1252   002102  0000               	nop	
  1253   002104                     
  1254                           ;lab7.c: 109:             while((operator < 100) || (operator > 104)) {
  1255   002104  EF87  F010         	goto	l1390
  1256   002108                     l1388:
  1257                           
  1258                           ;lab7.c: 110:                 operator = scanKeypad();
  1259   002108  EC4B  F011         	call	_scanKeypad	;wreg free
  1260   00210C  6E16               	movwf	main@operator^0,c
  1261   00210E                     l1390:
  1262                           
  1263                           ;lab7.c: 109:             while((operator < 100) || (operator > 104)) {
  1264   00210E  0E63               	movlw	99
  1265   002110  6416               	cpfsgt	main@operator^0,c
  1266   002112  EF8D  F010         	goto	u681
  1267   002116  EF8F  F010         	goto	u680
  1268   00211A                     u681:
  1269   00211A  EF84  F010         	goto	l1388
  1270   00211E                     u680:
  1271   00211E  0E69               	movlw	105
  1272   002120  6016               	cpfslt	main@operator^0,c
  1273   002122  EF95  F010         	goto	u691
  1274   002126  EF97  F010         	goto	u690
  1275   00212A                     u691:
  1276   00212A  EF84  F010         	goto	l1388
  1277   00212E                     u690:
  1278   00212E  EF9B  F010         	goto	l66
  1279   002132                     l62:
  1280                           
  1281                           ;lab7.c: 114:             operator = ret1;
  1282   002132  C019  F016         	movff	main@ret1,main@operator
  1283   002136                     l66:
  1284                           
  1285                           ;lab7.c: 116:         ret1 = NOVALUE;
  1286   002136  6819               	setf	main@ret1^0,c
  1287   002138                     
  1288                           ;lab7.c: 117:         display(operator);
  1289   002138  C016  F009         	movff	main@operator,display@dValue
  1290   00213C  6A0A               	clrf	(display@dValue+1)^0,c
  1291   00213E  ECEF  F011         	call	_display	;wreg free
  1292   002142                     
  1293                           ;lab7.c: 119:         _delay((unsigned long)((300)*(4000000/4000.0)));
  1294   002142  0E02               	movlw	2
  1295   002144  6E11               	movwf	(??_main+1)^0,c
  1296   002146  0E86               	movlw	134
  1297   002148  6E10               	movwf	??_main^0,c
  1298   00214A  0E99               	movlw	153
  1299   00214C                     u787:
  1300   00214C  2EE8               	decfsz	wreg,f,c
  1301   00214E  D7FE               	bra	u787
  1302   002150  2E10               	decfsz	??_main^0,f,c
  1303   002152  D7FC               	bra	u787
  1304   002154  2E11               	decfsz	(??_main+1)^0,f,c
  1305   002156  D7FA               	bra	u787
  1306   002158  0000               	nop	
  1307                           
  1308                           ;lab7.c: 121:         while(ret1 >= 100) {
  1309   00215A  EFB2  F010         	goto	l1400
  1310   00215E                     l1398:
  1311                           
  1312                           ;lab7.c: 122:             ret1 = scanKeypad();
  1313   00215E  EC4B  F011         	call	_scanKeypad	;wreg free
  1314   002162  6E19               	movwf	main@ret1^0,c
  1315   002164                     l1400:
  1316                           
  1317                           ;lab7.c: 121:         while(ret1 >= 100) {
  1318   002164  0E64               	movlw	100
  1319   002166  6019               	cpfslt	main@ret1^0,c
  1320   002168  EFB8  F010         	goto	u701
  1321   00216C  EFBA  F010         	goto	u700
  1322   002170                     u701:
  1323   002170  EFAF  F010         	goto	l1398
  1324   002174                     u700:
  1325   002174                     
  1326                           ;lab7.c: 124:         value2 += ret1;
  1327   002174  5019               	movf	main@ret1^0,w,c
  1328   002176  2617               	addwf	main@value2^0,f,c
  1329   002178  0E00               	movlw	0
  1330   00217A  2218               	addwfc	(main@value2+1)^0,f,c
  1331   00217C                     
  1332                           ;lab7.c: 125:         display(value2);
  1333   00217C  C017  F009         	movff	main@value2,display@dValue
  1334   002180  C018  F00A         	movff	main@value2+1,display@dValue+1
  1335   002184  ECEF  F011         	call	_display	;wreg free
  1336   002188                     
  1337                           ;lab7.c: 126:         _delay((unsigned long)((300)*(4000000/4000.0)));
  1338   002188  0E02               	movlw	2
  1339   00218A  6E11               	movwf	(??_main+1)^0,c
  1340   00218C  0E86               	movlw	134
  1341   00218E  6E10               	movwf	??_main^0,c
  1342   002190  0E99               	movlw	153
  1343   002192                     u797:
  1344   002192  2EE8               	decfsz	wreg,f,c
  1345   002194  D7FE               	bra	u797
  1346   002196  2E10               	decfsz	??_main^0,f,c
  1347   002198  D7FC               	bra	u797
  1348   00219A  2E11               	decfsz	(??_main+1)^0,f,c
  1349   00219C  D7FA               	bra	u797
  1350   00219E  0000               	nop	
  1351   0021A0                     
  1352                           ;lab7.c: 127:         ret1 = NOVALUE;
  1353   0021A0  6819               	setf	main@ret1^0,c
  1354                           
  1355                           ;lab7.c: 130:         while((ret1 >= 100) && (ret1 != COMPUTE)) {
  1356   0021A2  EFD6  F010         	goto	l1412
  1357   0021A6                     l1410:
  1358                           
  1359                           ;lab7.c: 131:             ret1 = scanKeypad();
  1360   0021A6  EC4B  F011         	call	_scanKeypad	;wreg free
  1361   0021AA  6E19               	movwf	main@ret1^0,c
  1362   0021AC                     l1412:
  1363                           
  1364                           ;lab7.c: 130:         while((ret1 >= 100) && (ret1 != COMPUTE)) {
  1365   0021AC  0E63               	movlw	99
  1366   0021AE  6419               	cpfsgt	main@ret1^0,c
  1367   0021B0  EFDC  F010         	goto	u711
  1368   0021B4  EFDE  F010         	goto	u710
  1369   0021B8                     u711:
  1370   0021B8  EFE7  F010         	goto	l1416
  1371   0021BC                     u710:
  1372   0021BC  0E69               	movlw	105
  1373   0021BE  1819               	xorwf	main@ret1^0,w,c
  1374   0021C0  A4D8               	btfss	status,2,c
  1375   0021C2  EFE5  F010         	goto	u721
  1376   0021C6  EFE7  F010         	goto	u720
  1377   0021CA                     u721:
  1378   0021CA  EFD3  F010         	goto	l1410
  1379   0021CE                     u720:
  1380   0021CE                     l1416:
  1381                           
  1382                           ;lab7.c: 133:         if (ret1 < 100) {
  1383   0021CE  0E64               	movlw	100
  1384   0021D0  6019               	cpfslt	main@ret1^0,c
  1385   0021D2  EFED  F010         	goto	u731
  1386   0021D6  EFEF  F010         	goto	u730
  1387   0021DA                     u731:
  1388   0021DA  EF15  F011         	goto	l1428
  1389   0021DE                     u730:
  1390   0021DE                     
  1391                           ;lab7.c: 134:             value2 *= 10;
  1392   0021DE  C017  F001         	movff	main@value2,___wmul@multiplier
  1393   0021E2  C018  F002         	movff	main@value2+1,___wmul@multiplier+1
  1394   0021E6  0E00               	movlw	0
  1395   0021E8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1396   0021EA  0E0A               	movlw	10
  1397   0021EC  6E03               	movwf	___wmul@multiplicand^0,c
  1398   0021EE  EC7D  F013         	call	___wmul	;wreg free
  1399   0021F2  C001  F017         	movff	?___wmul,main@value2
  1400   0021F6  C002  F018         	movff	?___wmul+1,main@value2+1
  1401   0021FA                     
  1402                           ;lab7.c: 135:             value2 += ret1;
  1403   0021FA  5019               	movf	main@ret1^0,w,c
  1404   0021FC  2617               	addwf	main@value2^0,f,c
  1405   0021FE  0E00               	movlw	0
  1406   002200  2218               	addwfc	(main@value2+1)^0,f,c
  1407   002202                     
  1408                           ;lab7.c: 136:             display(value2);
  1409   002202  C017  F009         	movff	main@value2,display@dValue
  1410   002206  C018  F00A         	movff	main@value2+1,display@dValue+1
  1411   00220A  ECEF  F011         	call	_display	;wreg free
  1412                           
  1413                           ;lab7.c: 138:             while(ret1 != COMPUTE) {
  1414   00220E  EF0C  F011         	goto	l1426
  1415   002212                     l1424:
  1416                           
  1417                           ;lab7.c: 139:                 ret1 = scanKeypad();
  1418   002212  EC4B  F011         	call	_scanKeypad	;wreg free
  1419   002216  6E19               	movwf	main@ret1^0,c
  1420   002218                     l1426:
  1421                           
  1422                           ;lab7.c: 138:             while(ret1 != COMPUTE) {
  1423   002218  0E69               	movlw	105
  1424   00221A  1819               	xorwf	main@ret1^0,w,c
  1425   00221C  A4D8               	btfss	status,2,c
  1426   00221E  EF13  F011         	goto	u741
  1427   002222  EF15  F011         	goto	u740
  1428   002226                     u741:
  1429   002226  EF09  F011         	goto	l1424
  1430   00222A                     u740:
  1431   00222A                     l1428:
  1432                           
  1433                           ;lab7.c: 143:         display(value2);
  1434   00222A  C017  F009         	movff	main@value2,display@dValue
  1435   00222E  C018  F00A         	movff	main@value2+1,display@dValue+1
  1436   002232  ECEF  F011         	call	_display	;wreg free
  1437   002236                     
  1438                           ;lab7.c: 144:         _delay((unsigned long)((300)*(4000000/4000.0)));
  1439   002236  0E02               	movlw	2
  1440   002238  6E11               	movwf	(??_main+1)^0,c
  1441   00223A  0E86               	movlw	134
  1442   00223C  6E10               	movwf	??_main^0,c
  1443   00223E  0E99               	movlw	153
  1444   002240                     u807:
  1445   002240  2EE8               	decfsz	wreg,f,c
  1446   002242  D7FE               	bra	u807
  1447   002244  2E10               	decfsz	??_main^0,f,c
  1448   002246  D7FC               	bra	u807
  1449   002248  2E11               	decfsz	(??_main+1)^0,f,c
  1450   00224A  D7FA               	bra	u807
  1451   00224C  0000               	nop	
  1452   00224E                     
  1453                           ;lab7.c: 145:         result = calculate(value1, value2, operator);
  1454   00224E  C014  F009         	movff	main@value1,calculate@val1
  1455   002252  C015  F00A         	movff	main@value1+1,calculate@val1+1
  1456   002256  C017  F00B         	movff	main@value2,calculate@val2
  1457   00225A  C018  F00C         	movff	main@value2+1,calculate@val2+1
  1458   00225E  C016  F00D         	movff	main@operator,calculate@op
  1459   002262  EC61  F012         	call	_calculate	;wreg free
  1460   002266  C009  F012         	movff	?_calculate,main@result
  1461   00226A  C00A  F013         	movff	?_calculate+1,main@result+1
  1462   00226E                     l1434:
  1463   00226E  EC4B  F011         	call	_scanKeypad	;wreg free
  1464   002272  0A69               	xorlw	105
  1465   002274  A4D8               	btfss	status,2,c
  1466   002276  EF3F  F011         	goto	u751
  1467   00227A  EF41  F011         	goto	u750
  1468   00227E                     u751:
  1469   00227E  EF37  F011         	goto	l1434
  1470   002282                     u750:
  1471   002282                     
  1472                           ;lab7.c: 147:         display(result);
  1473   002282  C012  F009         	movff	main@result,display@dValue
  1474   002286  C013  F00A         	movff	main@result+1,display@dValue+1
  1475   00228A  ECEF  F011         	call	_display	;wreg free
  1476   00228E  EF11  F010         	goto	l1352
  1477   002292  EFFE  F0FF         	goto	start
  1478   002296                     __end_of_main:
  1479                           	callstack 0
  1480                           
  1481 ;; *************** function _scanKeypad *****************
  1482 ;; Defined at:
  1483 ;;		line 190 in file "lab7.c"
  1484 ;; Parameters:    Size  Location     Type
  1485 ;;		None
  1486 ;; Auto vars:     Size  Location     Type
  1487 ;;		None
  1488 ;; Return value:  Size  Location     Type
  1489 ;;                  1    wreg      enum E16765
  1490 ;; Registers used:
  1491 ;;		wreg
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1501 ;;Total ram usage:        0 bytes
  1502 ;; Hardware stack levels used: 1
  1503 ;; This function calls:
  1504 ;;		Nothing
  1505 ;; This function is called by:
  1506 ;;		_main
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           	psect	text1
  1511   002296                     __ptext1:
  1512                           	callstack 0
  1513   002296                     _scanKeypad:
  1514                           	callstack 30
  1515   002296                     
  1516                           ;lab7.c: 193:     PORTBbits.RB4 = 0;
  1517   002296  98CB               	bcf	203,4,c	;volatile
  1518                           
  1519                           ;lab7.c: 194:     PORTBbits.RB5 = 0;
  1520   002298  9ACB               	bcf	203,5,c	;volatile
  1521                           
  1522                           ;lab7.c: 195:     PORTBbits.RB6 = 0;
  1523   00229A  9CCB               	bcf	203,6,c	;volatile
  1524                           
  1525                           ;lab7.c: 196:     PORTBbits.RB7 = 0;
  1526   00229C  9ECB               	bcf	203,7,c	;volatile
  1527                           
  1528                           ;lab7.c: 198:     PORTBbits.RB4 = 1;
  1529   00229E  88CB               	bsf	203,4,c	;volatile
  1530                           
  1531                           ;lab7.c: 199:     if (PORTBbits.RB0 == 1) {
  1532   0022A0  A0CB               	btfss	203,0,c	;volatile
  1533   0022A2  EF55  F011         	goto	u131
  1534   0022A6  EF57  F011         	goto	u130
  1535   0022AA                     u131:
  1536   0022AA  EF5A  F011         	goto	l95
  1537   0022AE                     u130:
  1538   0022AE                     
  1539                           ;lab7.c: 200:         return one;
  1540   0022AE  0E01               	movlw	1
  1541   0022B0  EFEE  F011         	goto	l96
  1542   0022B4                     l95:
  1543                           
  1544                           ;lab7.c: 202:     if (PORTBbits.RB1 == 1) {
  1545   0022B4  A2CB               	btfss	203,1,c	;volatile
  1546   0022B6  EF5F  F011         	goto	u141
  1547   0022BA  EF61  F011         	goto	u140
  1548   0022BE                     u141:
  1549   0022BE  EF64  F011         	goto	l97
  1550   0022C2                     u140:
  1551   0022C2                     
  1552                           ;lab7.c: 203:         return four;
  1553   0022C2  0E04               	movlw	4
  1554   0022C4  EFEE  F011         	goto	l96
  1555   0022C8                     l97:
  1556                           
  1557                           ;lab7.c: 205:     if (PORTBbits.RB2 == 1) {
  1558   0022C8  A4CB               	btfss	203,2,c	;volatile
  1559   0022CA  EF69  F011         	goto	u151
  1560   0022CE  EF6B  F011         	goto	u150
  1561   0022D2                     u151:
  1562   0022D2  EF6E  F011         	goto	l98
  1563   0022D6                     u150:
  1564   0022D6                     
  1565                           ;lab7.c: 206:         return seven;
  1566   0022D6  0E07               	movlw	7
  1567   0022D8  EFEE  F011         	goto	l96
  1568   0022DC                     l98:
  1569                           
  1570                           ;lab7.c: 208:     PORTBbits.RB4 = 0;
  1571   0022DC  98CB               	bcf	203,4,c	;volatile
  1572                           
  1573                           ;lab7.c: 211:     PORTBbits.RB5 = 1;
  1574   0022DE  8ACB               	bsf	203,5,c	;volatile
  1575                           
  1576                           ;lab7.c: 212:     if (PORTBbits.RB0 == 1) {
  1577   0022E0  A0CB               	btfss	203,0,c	;volatile
  1578   0022E2  EF75  F011         	goto	u161
  1579   0022E6  EF77  F011         	goto	u160
  1580   0022EA                     u161:
  1581   0022EA  EF7A  F011         	goto	l99
  1582   0022EE                     u160:
  1583   0022EE                     
  1584                           ;lab7.c: 213:         return two;
  1585   0022EE  0E02               	movlw	2
  1586   0022F0  EFEE  F011         	goto	l96
  1587   0022F4                     l99:
  1588   0022F4  A2CB               	btfss	203,1,c	;volatile
  1589   0022F6  EF7F  F011         	goto	u171
  1590   0022FA  EF81  F011         	goto	u170
  1591   0022FE                     u171:
  1592   0022FE  EF84  F011         	goto	l101
  1593   002302                     u170:
  1594   002302                     
  1595                           ;lab7.c: 216:         return five;
  1596   002302  0E05               	movlw	5
  1597   002304  EFEE  F011         	goto	l96
  1598   002308                     l101:
  1599   002308  A4CB               	btfss	203,2,c	;volatile
  1600   00230A  EF89  F011         	goto	u181
  1601   00230E  EF8B  F011         	goto	u180
  1602   002312                     u181:
  1603   002312  EF8E  F011         	goto	l103
  1604   002316                     u180:
  1605   002316                     
  1606                           ;lab7.c: 219:         return eight;
  1607   002316  0E08               	movlw	8
  1608   002318  EFEE  F011         	goto	l96
  1609   00231C                     l103:
  1610   00231C  A6CB               	btfss	203,3,c	;volatile
  1611   00231E  EF93  F011         	goto	u191
  1612   002322  EF95  F011         	goto	u190
  1613   002326                     u191:
  1614   002326  EF98  F011         	goto	l100
  1615   00232A                     u190:
  1616   00232A                     
  1617                           ;lab7.c: 222:         return zero;
  1618   00232A  0E00               	movlw	0
  1619   00232C  EFEE  F011         	goto	l96
  1620   002330                     l100:
  1621                           
  1622                           ;lab7.c: 224:     PORTBbits.RB5 = 0;
  1623   002330  9ACB               	bcf	203,5,c	;volatile
  1624                           
  1625                           ;lab7.c: 227:     PORTBbits.RB6 = 1;
  1626   002332  8CCB               	bsf	203,6,c	;volatile
  1627                           
  1628                           ;lab7.c: 228:     if (PORTBbits.RB0 == 1) { return three; }
  1629   002334  A0CB               	btfss	203,0,c	;volatile
  1630   002336  EF9F  F011         	goto	u201
  1631   00233A  EFA1  F011         	goto	u200
  1632   00233E                     u201:
  1633   00233E  EFA4  F011         	goto	l106
  1634   002342                     u200:
  1635   002342  0E03               	movlw	3
  1636   002344  EFEE  F011         	goto	l96
  1637   002348                     l106:
  1638   002348  A2CB               	btfss	203,1,c	;volatile
  1639   00234A  EFA9  F011         	goto	u211
  1640   00234E  EFAB  F011         	goto	u210
  1641   002352                     u211:
  1642   002352  EFAE  F011         	goto	l108
  1643   002356                     u210:
  1644   002356  0E06               	movlw	6
  1645   002358  EFEE  F011         	goto	l96
  1646   00235C                     l108:
  1647   00235C  A4CB               	btfss	203,2,c	;volatile
  1648   00235E  EFB3  F011         	goto	u221
  1649   002362  EFB5  F011         	goto	u220
  1650   002366                     u221:
  1651   002366  EFB8  F011         	goto	l110
  1652   00236A                     u220:
  1653   00236A  0E09               	movlw	9
  1654   00236C  EFEE  F011         	goto	l96
  1655   002370                     l110:
  1656   002370  A6CB               	btfss	203,3,c	;volatile
  1657   002372  EFBD  F011         	goto	u231
  1658   002376  EFBF  F011         	goto	u230
  1659   00237A                     u231:
  1660   00237A  EFC2  F011         	goto	l107
  1661   00237E                     u230:
  1662   00237E  0E69               	movlw	105
  1663   002380  EFEE  F011         	goto	l96
  1664   002384                     l107:
  1665                           
  1666                           ;lab7.c: 232:     PORTBbits.RB6 = 0;
  1667   002384  9CCB               	bcf	203,6,c	;volatile
  1668                           
  1669                           ;lab7.c: 235:     PORTBbits.RB7 = 1;
  1670   002386  8ECB               	bsf	203,7,c	;volatile
  1671                           
  1672                           ;lab7.c: 236:     if (PORTBbits.RB0 == 1) { return ADD; }
  1673   002388  A0CB               	btfss	203,0,c	;volatile
  1674   00238A  EFC9  F011         	goto	u241
  1675   00238E  EFCB  F011         	goto	u240
  1676   002392                     u241:
  1677   002392  EFCE  F011         	goto	l113
  1678   002396                     u240:
  1679   002396  0E64               	movlw	100
  1680   002398  EFEE  F011         	goto	l96
  1681   00239C                     l113:
  1682   00239C  A2CB               	btfss	203,1,c	;volatile
  1683   00239E  EFD3  F011         	goto	u251
  1684   0023A2  EFD5  F011         	goto	u250
  1685   0023A6                     u251:
  1686   0023A6  EFD8  F011         	goto	l115
  1687   0023AA                     u250:
  1688   0023AA  0E65               	movlw	101
  1689   0023AC  EFEE  F011         	goto	l96
  1690   0023B0                     l115:
  1691   0023B0  A4CB               	btfss	203,2,c	;volatile
  1692   0023B2  EFDD  F011         	goto	u261
  1693   0023B6  EFDF  F011         	goto	u260
  1694   0023BA                     u261:
  1695   0023BA  EFE2  F011         	goto	l117
  1696   0023BE                     u260:
  1697   0023BE  0E66               	movlw	102
  1698   0023C0  EFEE  F011         	goto	l96
  1699   0023C4                     l117:
  1700   0023C4  A6CB               	btfss	203,3,c	;volatile
  1701   0023C6  EFE7  F011         	goto	u271
  1702   0023CA  EFE9  F011         	goto	u270
  1703   0023CE                     u271:
  1704   0023CE  EFEC  F011         	goto	l114
  1705   0023D2                     u270:
  1706   0023D2  0E67               	movlw	103
  1707   0023D4  EFEE  F011         	goto	l96
  1708   0023D8                     l114:
  1709                           
  1710                           ;lab7.c: 240:     PORTBbits.RB7 = 0;
  1711   0023D8  9ECB               	bcf	203,7,c	;volatile
  1712   0023DA                     
  1713                           ;lab7.c: 242:     return NOVALUE;
  1714   0023DA  0EFF               	movlw	255
  1715   0023DC                     l96:
  1716   0023DC  0012               	return		;funcret
  1717   0023DE                     __end_of_scanKeypad:
  1718                           	callstack 0
  1719                           
  1720 ;; *************** function _display *****************
  1721 ;; Defined at:
  1722 ;;		line 152 in file "lab7.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;  dValue          2    8[COMRAM] int 
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;  digit1          2   12[COMRAM] int 
  1727 ;;  digit2          2   10[COMRAM] int 
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  1    wreg      void 
  1730 ;; Registers used:
  1731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1737 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1738 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1740 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1741 ;;Total ram usage:        6 bytes
  1742 ;; Hardware stack levels used: 1
  1743 ;; Hardware stack levels required when called: 1
  1744 ;; This function calls:
  1745 ;;		___awdiv
  1746 ;;		___awmod
  1747 ;;		___wmul
  1748 ;; This function is called by:
  1749 ;;		_main
  1750 ;; This function uses a non-reentrant model
  1751 ;;
  1752                           
  1753                           	psect	text2
  1754   0023DE                     __ptext2:
  1755                           	callstack 0
  1756   0023DE                     _display:
  1757                           	callstack 29
  1758   0023DE                     
  1759                           ;lab7.c: 154:     LATA = 0;
  1760   0023DE  6ABA               	clrf	186,c	;volatile
  1761                           
  1762                           ;lab7.c: 155:     LATC = 0;
  1763   0023E0  6ABC               	clrf	188,c	;volatile
  1764                           
  1765                           ;lab7.c: 156:     LATD = 0;
  1766   0023E2  6ABD               	clrf	189,c	;volatile
  1767   0023E4                     
  1768                           ;lab7.c: 158:     if(dValue >= 100) {
  1769   0023E4  BE0A               	btfsc	(display@dValue+1)^0,7,c
  1770   0023E6  EFFE  F011         	goto	u581
  1771   0023EA  500A               	movf	(display@dValue+1)^0,w,c
  1772   0023EC  E109               	bnz	u580
  1773   0023EE  0E64               	movlw	100
  1774   0023F0  5C09               	subwf	display@dValue^0,w,c
  1775   0023F2  A0D8               	btfss	status,0,c
  1776   0023F4  EFFE  F011         	goto	u581
  1777   0023F8  EF00  F012         	goto	u580
  1778   0023FC                     u581:
  1779   0023FC  EF02  F012         	goto	l1266
  1780   002400                     u580:
  1781   002400  EF60  F012         	goto	l88
  1782   002404                     l1266:
  1783                           
  1784                           ;lab7.c: 163:     if(dValue < 0) {
  1785   002404  BE0A               	btfsc	(display@dValue+1)^0,7,c
  1786   002406  EF09  F012         	goto	u590
  1787   00240A  EF07  F012         	goto	u591
  1788   00240E                     u591:
  1789   00240E  EF17  F012         	goto	l1272
  1790   002412                     u590:
  1791   002412                     
  1792                           ;lab7.c: 164:         PORTDbits.RD7 = 1;
  1793   002412  8ECD               	bsf	205,7,c	;volatile
  1794   002414                     
  1795                           ;lab7.c: 165:         dValue *= -1;
  1796   002414  C009  F001         	movff	display@dValue,___wmul@multiplier
  1797   002418  C00A  F002         	movff	display@dValue+1,___wmul@multiplier+1
  1798   00241C  0EFF               	movlw	255
  1799   00241E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1800   002420  6803               	setf	___wmul@multiplicand^0,c
  1801   002422  EC7D  F013         	call	___wmul	;wreg free
  1802   002426  C001  F009         	movff	?___wmul,display@dValue
  1803   00242A  C002  F00A         	movff	?___wmul+1,display@dValue+1
  1804   00242E                     l1272:
  1805                           
  1806                           ;lab7.c: 169:     int digit1, digit2;;lab7.c: 170:     digit1 = dValue / 10;
  1807   00242E  C009  F001         	movff	display@dValue,___awdiv@dividend
  1808   002432  C00A  F002         	movff	display@dValue+1,___awdiv@dividend+1
  1809   002436  0E00               	movlw	0
  1810   002438  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1811   00243A  0E0A               	movlw	10
  1812   00243C  6E03               	movwf	___awdiv@divisor^0,c
  1813   00243E  ECC5  F012         	call	___awdiv	;wreg free
  1814   002442  C001  F00D         	movff	?___awdiv,display@digit1
  1815   002446  C002  F00E         	movff	?___awdiv+1,display@digit1+1
  1816   00244A                     
  1817                           ;lab7.c: 171:     digit2 = dValue % 10;
  1818   00244A  C009  F001         	movff	display@dValue,___awmod@dividend
  1819   00244E  C00A  F002         	movff	display@dValue+1,___awmod@dividend+1
  1820   002452  0E00               	movlw	0
  1821   002454  6E04               	movwf	(___awmod@divisor+1)^0,c
  1822   002456  0E0A               	movlw	10
  1823   002458  6E03               	movwf	___awmod@divisor^0,c
  1824   00245A  EC26  F013         	call	___awmod	;wreg free
  1825   00245E  C001  F00B         	movff	?___awmod,display@digit2
  1826   002462  C002  F00C         	movff	?___awmod+1,display@digit2+1
  1827   002466                     
  1828                           ;lab7.c: 173:     if (digit1 != 0) {
  1829   002466  500D               	movf	display@digit1^0,w,c
  1830   002468  100E               	iorwf	(display@digit1+1)^0,w,c
  1831   00246A  B4D8               	btfsc	status,2,c
  1832   00246C  EF3A  F012         	goto	u601
  1833   002470  EF3C  F012         	goto	u600
  1834   002474                     u601:
  1835   002474  EF5A  F012         	goto	l1286
  1836   002478                     u600:
  1837   002478                     
  1838                           ;lab7.c: 174:         LATC = sevSeg[digit1];
  1839   002478  500D               	movf	display@digit1^0,w,c
  1840   00247A  0F1A               	addlw	low _sevSeg
  1841   00247C  6ED9               	movwf	fsr2l,c
  1842   00247E  6ADA               	clrf	fsr2h,c
  1843   002480  50DF               	movf	indf2,w,c
  1844   002482  6EBC               	movwf	188,c	;volatile
  1845                           
  1846                           ;lab7.c: 175:         if ((sevSeg[digit1] & 0b1) == 1) {
  1847   002484  500D               	movf	display@digit1^0,w,c
  1848   002486  0F1A               	addlw	low _sevSeg
  1849   002488  6ED9               	movwf	fsr2l,c
  1850   00248A  6ADA               	clrf	fsr2h,c
  1851   00248C  A0DF               	btfss	indf2,0,c
  1852   00248E  EF4B  F012         	goto	u611
  1853   002492  EF4D  F012         	goto	u610
  1854   002496                     u611:
  1855   002496  EF4E  F012         	goto	l1282
  1856   00249A                     u610:
  1857   00249A                     
  1858                           ;lab7.c: 176:             PORTAbits.RA0 = 1;
  1859   00249A  80CA               	bsf	202,0,c	;volatile
  1860   00249C                     l1282:
  1861                           
  1862                           ;lab7.c: 178:         if ((sevSeg[digit1] & 0b10) == 2) {
  1863   00249C  500D               	movf	display@digit1^0,w,c
  1864   00249E  0F1A               	addlw	low _sevSeg
  1865   0024A0  6ED9               	movwf	fsr2l,c
  1866   0024A2  6ADA               	clrf	fsr2h,c
  1867   0024A4  A2DF               	btfss	indf2,1,c
  1868   0024A6  EF57  F012         	goto	u621
  1869   0024AA  EF59  F012         	goto	u620
  1870   0024AE                     u621:
  1871   0024AE  EF5A  F012         	goto	l1286
  1872   0024B2                     u620:
  1873   0024B2                     
  1874                           ;lab7.c: 179:             PORTAbits.RA1 = 1;
  1875   0024B2  82CA               	bsf	202,1,c	;volatile
  1876   0024B4                     l1286:
  1877                           
  1878                           ;lab7.c: 182:     LATD += sevSeg[digit2];
  1879   0024B4  500B               	movf	display@digit2^0,w,c
  1880   0024B6  0F1A               	addlw	low _sevSeg
  1881   0024B8  6ED9               	movwf	fsr2l,c
  1882   0024BA  6ADA               	clrf	fsr2h,c
  1883   0024BC  50DF               	movf	indf2,w,c
  1884   0024BE  26BD               	addwf	189,f,c	;volatile
  1885   0024C0                     l88:
  1886   0024C0  0012               	return		;funcret
  1887   0024C2                     __end_of_display:
  1888                           	callstack 0
  1889                           
  1890 ;; *************** function ___wmul *****************
  1891 ;; Defined at:
  1892 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul16.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;  multiplier      2    0[COMRAM] unsigned int 
  1895 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;  product         2    4[COMRAM] unsigned int 
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  2    0[COMRAM] unsigned int 
  1900 ;; Registers used:
  1901 ;;		wreg, status,2, status,0, prodl, prodh
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1907 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1908 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1910 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1911 ;;Total ram usage:        6 bytes
  1912 ;; Hardware stack levels used: 1
  1913 ;; This function calls:
  1914 ;;		Nothing
  1915 ;; This function is called by:
  1916 ;;		_main
  1917 ;;		_display
  1918 ;; This function uses a non-reentrant model
  1919 ;;
  1920                           
  1921                           	psect	text3
  1922   0026FA                     __ptext3:
  1923                           	callstack 0
  1924   0026FA                     ___wmul:
  1925                           	callstack 29
  1926   0026FA  5001               	movf	___wmul@multiplier^0,w,c
  1927   0026FC  0203               	mulwf	___wmul@multiplicand^0,c
  1928   0026FE  006F FFCC  F005    	movff	prodl,___wmul@product
  1929   002704  006F FFD0  F006    	movff	prodh,___wmul@product+1
  1930   00270A  5001               	movf	___wmul@multiplier^0,w,c
  1931   00270C  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1932   00270E  50F3               	movf	243,w,c
  1933   002710  2606               	addwf	(___wmul@product+1)^0,f,c
  1934   002712  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1935   002714  0203               	mulwf	___wmul@multiplicand^0,c
  1936   002716  50F3               	movf	243,w,c
  1937   002718  2606               	addwf	(___wmul@product+1)^0,f,c
  1938   00271A  C005  F001         	movff	___wmul@product,?___wmul
  1939   00271E  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1940   002722  0012               	return		;funcret
  1941   002724                     __end_of___wmul:
  1942                           	callstack 0
  1943                           
  1944 ;; *************** function ___awmod *****************
  1945 ;; Defined at:
  1946 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  1947 ;; Parameters:    Size  Location     Type
  1948 ;;  dividend        2    0[COMRAM] int 
  1949 ;;  divisor         2    2[COMRAM] int 
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;  sign            1    5[COMRAM] unsigned char 
  1952 ;;  counter         1    4[COMRAM] unsigned char 
  1953 ;; Return value:  Size  Location     Type
  1954 ;;                  2    0[COMRAM] int 
  1955 ;; Registers used:
  1956 ;;		wreg, status,2, status,0
  1957 ;; Tracked objects:
  1958 ;;		On entry : 0/0
  1959 ;;		On exit  : 0/0
  1960 ;;		Unchanged: 0/0
  1961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1962 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1963 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1965 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1966 ;;Total ram usage:        6 bytes
  1967 ;; Hardware stack levels used: 1
  1968 ;; This function calls:
  1969 ;;		Nothing
  1970 ;; This function is called by:
  1971 ;;		_display
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           
  1975                           	psect	text4
  1976   00264C                     __ptext4:
  1977                           	callstack 0
  1978   00264C                     ___awmod:
  1979                           	callstack 29
  1980   00264C  6A06               	clrf	___awmod@sign^0,c
  1981   00264E  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1982   002650  EF2E  F013         	goto	u520
  1983   002654  EF2C  F013         	goto	u521
  1984   002658                     u521:
  1985   002658  EF34  F013         	goto	l1232
  1986   00265C                     u520:
  1987   00265C  6C01               	negf	___awmod@dividend^0,c
  1988   00265E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1989   002660  B0D8               	btfsc	status,0,c
  1990   002662  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1991   002664  0E01               	movlw	1
  1992   002666  6E06               	movwf	___awmod@sign^0,c
  1993   002668                     l1232:
  1994   002668  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1995   00266A  EF3B  F013         	goto	u530
  1996   00266E  EF39  F013         	goto	u531
  1997   002672                     u531:
  1998   002672  EF3F  F013         	goto	l1236
  1999   002676                     u530:
  2000   002676  6C03               	negf	___awmod@divisor^0,c
  2001   002678  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2002   00267A  B0D8               	btfsc	status,0,c
  2003   00267C  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2004   00267E                     l1236:
  2005   00267E  5003               	movf	___awmod@divisor^0,w,c
  2006   002680  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2007   002682  B4D8               	btfsc	status,2,c
  2008   002684  EF46  F013         	goto	u541
  2009   002688  EF48  F013         	goto	u540
  2010   00268C                     u541:
  2011   00268C  EF6C  F013         	goto	l1252
  2012   002690                     u540:
  2013   002690  0E01               	movlw	1
  2014   002692  6E05               	movwf	___awmod@counter^0,c
  2015   002694  EF50  F013         	goto	l1242
  2016   002698                     l1240:
  2017   002698  90D8               	bcf	status,0,c
  2018   00269A  3603               	rlcf	___awmod@divisor^0,f,c
  2019   00269C  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2020   00269E  2A05               	incf	___awmod@counter^0,f,c
  2021   0026A0                     l1242:
  2022   0026A0  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2023   0026A2  EF55  F013         	goto	u551
  2024   0026A6  EF57  F013         	goto	u550
  2025   0026AA                     u551:
  2026   0026AA  EF4C  F013         	goto	l1240
  2027   0026AE                     u550:
  2028   0026AE                     l1244:
  2029   0026AE  5003               	movf	___awmod@divisor^0,w,c
  2030   0026B0  5C01               	subwf	___awmod@dividend^0,w,c
  2031   0026B2  5004               	movf	(___awmod@divisor+1)^0,w,c
  2032   0026B4  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2033   0026B6  A0D8               	btfss	status,0,c
  2034   0026B8  EF60  F013         	goto	u561
  2035   0026BC  EF62  F013         	goto	u560
  2036   0026C0                     u561:
  2037   0026C0  EF66  F013         	goto	l1248
  2038   0026C4                     u560:
  2039   0026C4  5003               	movf	___awmod@divisor^0,w,c
  2040   0026C6  5E01               	subwf	___awmod@dividend^0,f,c
  2041   0026C8  5004               	movf	(___awmod@divisor+1)^0,w,c
  2042   0026CA  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2043   0026CC                     l1248:
  2044   0026CC  90D8               	bcf	status,0,c
  2045   0026CE  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2046   0026D0  3203               	rrcf	___awmod@divisor^0,f,c
  2047   0026D2  2E05               	decfsz	___awmod@counter^0,f,c
  2048   0026D4  EF57  F013         	goto	l1244
  2049   0026D8                     l1252:
  2050   0026D8  5006               	movf	___awmod@sign^0,w,c
  2051   0026DA  B4D8               	btfsc	status,2,c
  2052   0026DC  EF72  F013         	goto	u571
  2053   0026E0  EF74  F013         	goto	u570
  2054   0026E4                     u571:
  2055   0026E4  EF78  F013         	goto	l1256
  2056   0026E8                     u570:
  2057   0026E8  6C01               	negf	___awmod@dividend^0,c
  2058   0026EA  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2059   0026EC  B0D8               	btfsc	status,0,c
  2060   0026EE  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2061   0026F0                     l1256:
  2062   0026F0  C001  F001         	movff	___awmod@dividend,?___awmod
  2063   0026F4  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2064   0026F8  0012               	return		;funcret
  2065   0026FA                     __end_of___awmod:
  2066                           	callstack 0
  2067                           
  2068 ;; *************** function _calculate *****************
  2069 ;; Defined at:
  2070 ;;		line 247 in file "lab7.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;  val1            2    8[COMRAM] int 
  2073 ;;  val2            2   10[COMRAM] int 
  2074 ;;  op              1   12[COMRAM] enum E16765
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;		None
  2077 ;; Return value:  Size  Location     Type
  2078 ;;                  2    8[COMRAM] int 
  2079 ;; Registers used:
  2080 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2086 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2088 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2089 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2090 ;;Total ram usage:        7 bytes
  2091 ;; Hardware stack levels used: 1
  2092 ;; Hardware stack levels required when called: 1
  2093 ;; This function calls:
  2094 ;;		___awdiv
  2095 ;; This function is called by:
  2096 ;;		_main
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100                           	psect	text5
  2101   0024C2                     __ptext5:
  2102                           	callstack 0
  2103   0024C2                     _calculate:
  2104                           	callstack 29
  2105   0024C2                     
  2106                           ;lab7.c: 248:     switch (op) {
  2107   0024C2  EFA7  F012         	goto	l1320
  2108   0024C6                     l1292:
  2109                           
  2110                           ;lab7.c: 250:             return val1 + val2;
  2111   0024C6  500B               	movf	calculate@val2^0,w,c
  2112   0024C8  2409               	addwf	calculate@val1^0,w,c
  2113   0024CA  6E09               	movwf	?_calculate^0,c
  2114   0024CC  500C               	movf	(calculate@val2+1)^0,w,c
  2115   0024CE  200A               	addwfc	(calculate@val1+1)^0,w,c
  2116   0024D0  6E0A               	movwf	(?_calculate+1)^0,c
  2117   0024D2  EFC4  F012         	goto	l124
  2118   0024D6                     l1296:
  2119                           
  2120                           ;lab7.c: 252:             return val1 - val2;
  2121   0024D6  500B               	movf	calculate@val2^0,w,c
  2122   0024D8  5C09               	subwf	calculate@val1^0,w,c
  2123   0024DA  6E09               	movwf	?_calculate^0,c
  2124   0024DC  500C               	movf	(calculate@val2+1)^0,w,c
  2125   0024DE  580A               	subwfb	(calculate@val1+1)^0,w,c
  2126   0024E0  6E0A               	movwf	(?_calculate+1)^0,c
  2127   0024E2  EFC4  F012         	goto	l124
  2128   0024E6                     l1300:
  2129                           
  2130                           ;lab7.c: 254:             return val1 * val2;
  2131   0024E6  500B               	movf	calculate@val2^0,w,c
  2132   0024E8  0209               	mulwf	calculate@val1^0,c
  2133   0024EA  006F FFCC  F00E    	movff	prodl,??_calculate
  2134   0024F0  006F FFD0  F00F    	movff	prodh,??_calculate+1
  2135   0024F6  020A               	mulwf	(calculate@val1+1)^0,c
  2136   0024F8  50F3               	movf	prodl,w,c
  2137   0024FA  260F               	addwf	(??_calculate+1)^0,f,c
  2138   0024FC  500C               	movf	(calculate@val2+1)^0,w,c
  2139   0024FE  0209               	mulwf	calculate@val1^0,c
  2140   002500  50F3               	movf	prodl,w,c
  2141   002502  260F               	addwf	(??_calculate+1)^0,f,c
  2142   002504  C00E  F009         	movff	??_calculate,?_calculate
  2143   002508  C00F  F00A         	movff	??_calculate+1,?_calculate+1
  2144   00250C  EFC4  F012         	goto	l124
  2145   002510                     l1304:
  2146                           
  2147                           ;lab7.c: 256:             if (val2 == 0) {
  2148   002510  500B               	movf	calculate@val2^0,w,c
  2149   002512  100C               	iorwf	(calculate@val2+1)^0,w,c
  2150   002514  A4D8               	btfss	status,2,c
  2151   002516  EF8F  F012         	goto	u631
  2152   00251A  EF91  F012         	goto	u630
  2153   00251E                     u631:
  2154   00251E  EF97  F012         	goto	l1310
  2155   002522                     u630:
  2156   002522                     l1306:
  2157                           
  2158                           ;lab7.c: 257:                 return 0;
  2159   002522  0E00               	movlw	0
  2160   002524  6E0A               	movwf	(?_calculate+1)^0,c
  2161   002526  0E00               	movlw	0
  2162   002528  6E09               	movwf	?_calculate^0,c
  2163   00252A  EFC4  F012         	goto	l124
  2164   00252E                     l1310:
  2165                           
  2166                           ;lab7.c: 259:             return val1 / val2;
  2167   00252E  C009  F001         	movff	calculate@val1,___awdiv@dividend
  2168   002532  C00A  F002         	movff	calculate@val1+1,___awdiv@dividend+1
  2169   002536  C00B  F003         	movff	calculate@val2,___awdiv@divisor
  2170   00253A  C00C  F004         	movff	calculate@val2+1,___awdiv@divisor+1
  2171   00253E  ECC5  F012         	call	___awdiv	;wreg free
  2172   002542  C001  F009         	movff	?___awdiv,?_calculate
  2173   002546  C002  F00A         	movff	?___awdiv+1,?_calculate+1
  2174   00254A  EFC4  F012         	goto	l124
  2175   00254E                     l1320:
  2176   00254E  500D               	movf	calculate@op^0,w,c
  2177   002550  6E0E               	movwf	??_calculate^0,c
  2178   002552  6A0F               	clrf	(??_calculate+1)^0,c
  2179                           
  2180                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2181                           ; Switch size 1, requested type "simple"
  2182                           ; Number of cases is 1, Range of values is 0 to 0
  2183                           ; switch strategies available:
  2184                           ; Name         Instructions Cycles
  2185                           ; simple_byte            4     3 (average)
  2186                           ;	Chosen strategy is simple_byte
  2187   002554  500F               	movf	(??_calculate+1)^0,w,c
  2188   002556  0A00               	xorlw	0	; case 0
  2189   002558  B4D8               	btfsc	status,2,c
  2190   00255A  EFB1  F012         	goto	l1458
  2191   00255E  EF91  F012         	goto	l1306
  2192   002562                     l1458:
  2193                           
  2194                           ; Switch size 1, requested type "simple"
  2195                           ; Number of cases is 4, Range of values is 100 to 103
  2196                           ; switch strategies available:
  2197                           ; Name         Instructions Cycles
  2198                           ; simple_byte           13     7 (average)
  2199                           ;	Chosen strategy is simple_byte
  2200   002562  500E               	movf	??_calculate^0,w,c
  2201   002564  0A64               	xorlw	100	; case 100
  2202   002566  B4D8               	btfsc	status,2,c
  2203   002568  EF63  F012         	goto	l1292
  2204   00256C  0A01               	xorlw	1	; case 101
  2205   00256E  B4D8               	btfsc	status,2,c
  2206   002570  EF6B  F012         	goto	l1296
  2207   002574  0A03               	xorlw	3	; case 102
  2208   002576  B4D8               	btfsc	status,2,c
  2209   002578  EF73  F012         	goto	l1300
  2210   00257C  0A01               	xorlw	1	; case 103
  2211   00257E  B4D8               	btfsc	status,2,c
  2212   002580  EF88  F012         	goto	l1304
  2213   002584  EF91  F012         	goto	l1306
  2214   002588                     l124:
  2215   002588  0012               	return		;funcret
  2216   00258A                     __end_of_calculate:
  2217                           	callstack 0
  2218                           
  2219 ;; *************** function ___awdiv *****************
  2220 ;; Defined at:
  2221 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;  dividend        2    0[COMRAM] int 
  2224 ;;  divisor         2    2[COMRAM] int 
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;  quotient        2    6[COMRAM] int 
  2227 ;;  sign            1    5[COMRAM] unsigned char 
  2228 ;;  counter         1    4[COMRAM] unsigned char 
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  2    0[COMRAM] int 
  2231 ;; Registers used:
  2232 ;;		wreg, status,2, status,0
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2238 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2239 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2241 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2242 ;;Total ram usage:        8 bytes
  2243 ;; Hardware stack levels used: 1
  2244 ;; This function calls:
  2245 ;;		Nothing
  2246 ;; This function is called by:
  2247 ;;		_display
  2248 ;;		_calculate
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           	psect	text6
  2253   00258A                     __ptext6:
  2254                           	callstack 0
  2255   00258A                     ___awdiv:
  2256                           	callstack 29
  2257   00258A  6A06               	clrf	___awdiv@sign^0,c
  2258   00258C  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2259   00258E  EFCD  F012         	goto	u460
  2260   002592  EFCB  F012         	goto	u461
  2261   002596                     u461:
  2262   002596  EFD3  F012         	goto	l1188
  2263   00259A                     u460:
  2264   00259A  6C03               	negf	___awdiv@divisor^0,c
  2265   00259C  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2266   00259E  B0D8               	btfsc	status,0,c
  2267   0025A0  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2268   0025A2  0E01               	movlw	1
  2269   0025A4  6E06               	movwf	___awdiv@sign^0,c
  2270   0025A6                     l1188:
  2271   0025A6  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2272   0025A8  EFDA  F012         	goto	u470
  2273   0025AC  EFD8  F012         	goto	u471
  2274   0025B0                     u471:
  2275   0025B0  EFE0  F012         	goto	l1194
  2276   0025B4                     u470:
  2277   0025B4  6C01               	negf	___awdiv@dividend^0,c
  2278   0025B6  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2279   0025B8  B0D8               	btfsc	status,0,c
  2280   0025BA  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2281   0025BC  0E01               	movlw	1
  2282   0025BE  1A06               	xorwf	___awdiv@sign^0,f,c
  2283   0025C0                     l1194:
  2284   0025C0  0E00               	movlw	0
  2285   0025C2  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2286   0025C4  0E00               	movlw	0
  2287   0025C6  6E07               	movwf	___awdiv@quotient^0,c
  2288   0025C8  5003               	movf	___awdiv@divisor^0,w,c
  2289   0025CA  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2290   0025CC  B4D8               	btfsc	status,2,c
  2291   0025CE  EFEB  F012         	goto	u481
  2292   0025D2  EFED  F012         	goto	u480
  2293   0025D6                     u481:
  2294   0025D6  EF15  F013         	goto	l1216
  2295   0025DA                     u480:
  2296   0025DA  0E01               	movlw	1
  2297   0025DC  6E05               	movwf	___awdiv@counter^0,c
  2298   0025DE  EFF5  F012         	goto	l1202
  2299   0025E2                     l1200:
  2300   0025E2  90D8               	bcf	status,0,c
  2301   0025E4  3603               	rlcf	___awdiv@divisor^0,f,c
  2302   0025E6  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2303   0025E8  2A05               	incf	___awdiv@counter^0,f,c
  2304   0025EA                     l1202:
  2305   0025EA  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2306   0025EC  EFFA  F012         	goto	u491
  2307   0025F0  EFFC  F012         	goto	u490
  2308   0025F4                     u491:
  2309   0025F4  EFF1  F012         	goto	l1200
  2310   0025F8                     u490:
  2311   0025F8                     l1204:
  2312   0025F8  90D8               	bcf	status,0,c
  2313   0025FA  3607               	rlcf	___awdiv@quotient^0,f,c
  2314   0025FC  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2315   0025FE  5003               	movf	___awdiv@divisor^0,w,c
  2316   002600  5C01               	subwf	___awdiv@dividend^0,w,c
  2317   002602  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2318   002604  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2319   002606  A0D8               	btfss	status,0,c
  2320   002608  EF08  F013         	goto	u501
  2321   00260C  EF0A  F013         	goto	u500
  2322   002610                     u501:
  2323   002610  EF0F  F013         	goto	l1212
  2324   002614                     u500:
  2325   002614  5003               	movf	___awdiv@divisor^0,w,c
  2326   002616  5E01               	subwf	___awdiv@dividend^0,f,c
  2327   002618  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2328   00261A  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2329   00261C  8007               	bsf	___awdiv@quotient^0,0,c
  2330   00261E                     l1212:
  2331   00261E  90D8               	bcf	status,0,c
  2332   002620  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2333   002622  3203               	rrcf	___awdiv@divisor^0,f,c
  2334   002624  2E05               	decfsz	___awdiv@counter^0,f,c
  2335   002626  EFFC  F012         	goto	l1204
  2336   00262A                     l1216:
  2337   00262A  5006               	movf	___awdiv@sign^0,w,c
  2338   00262C  B4D8               	btfsc	status,2,c
  2339   00262E  EF1B  F013         	goto	u511
  2340   002632  EF1D  F013         	goto	u510
  2341   002636                     u511:
  2342   002636  EF21  F013         	goto	l1220
  2343   00263A                     u510:
  2344   00263A  6C07               	negf	___awdiv@quotient^0,c
  2345   00263C  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2346   00263E  B0D8               	btfsc	status,0,c
  2347   002640  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2348   002642                     l1220:
  2349   002642  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2350   002646  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2351   00264A  0012               	return		;funcret
  2352   00264C                     __end_of___awdiv:
  2353                           	callstack 0
  2354                           
  2355                           	psect	smallconst
  2356   002000                     __psmallconst:
  2357                           	callstack 0
  2358   002000  00                 	db	0
  2359   002001  00                 	db	0	; dummy byte at the end
  2360   002000                     __smallconst    set	__psmallconst
  2361   002000                     __mediumconst   set	__psmallconst
  2362   000003                     __activetblptr  equ	3
  2363                           
  2364                           	psect	rparam
  2365   000001                     ___rparam_used  equ	1
  2366   000000                     ___param_bank   equ	0
  2367   000000                     __Lparam        equ	__Lrparam
  2368   000000                     __Hparam        equ	__Hrparam
  2369                           
  2370                           	psect	config
  2371                           
  2372                           ;Config register CONFIG1L @ 0x300000
  2373                           ;	External Oscillator Selection
  2374                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  2375                           ;	Reset Oscillator Selection
  2376                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  2377   300000                     	org	3145728
  2378   300000  F8                 	db	248
  2379                           
  2380                           ;Config register CONFIG1H @ 0x300001
  2381                           ;	Clock out Enable bit
  2382                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  2383                           ;	PRLOCKED One-Way Set Enable bit
  2384                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  2385                           ;	Clock Switch Enable bit
  2386                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  2387                           ;	Fail-Safe Clock Monitor Enable bit
  2388                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  2389   300001                     	org	3145729
  2390   300001  FF                 	db	255
  2391                           
  2392                           ;Config register CONFIG2L @ 0x300002
  2393                           ;	MCLR Enable bit
  2394                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  2395                           ;	Power-up timer selection bits
  2396                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  2397                           ;	Multi-vector enable bit
  2398                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  2399                           ;	IVTLOCK bit One-way set enable bit
  2400                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  2401                           ;	Low Power BOR Enable bit
  2402                           ;	LPBOREN = OFF, ULPBOR disabled
  2403                           ;	Brown-out Reset Enable bits
  2404                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  2405   300002                     	org	3145730
  2406   300002  FF                 	db	255
  2407                           
  2408                           ;Config register CONFIG2H @ 0x300003
  2409                           ;	Brown-out Reset Voltage Selection bits
  2410                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  2411                           ;	ZCD Disable bit
  2412                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  2413                           ;	PPSLOCK bit One-Way Set Enable bit
  2414                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  2415                           ;	Stack Full/Underflow Reset Enable bit
  2416                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2417                           ;	Debugger Enable bit
  2418                           ;	DEBUG = OFF, Background debugger disabled
  2419                           ;	Extended Instruction Set Enable bit
  2420                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2421   300003                     	org	3145731
  2422   300003  FF                 	db	255
  2423                           
  2424                           ;Config register CONFIG3L @ 0x300004
  2425                           ;	WDT Period selection bits
  2426                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2427                           ;	WDT operating mode
  2428                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2429   300004                     	org	3145732
  2430   300004  9F                 	db	159
  2431                           
  2432                           ;Config register CONFIG3H @ 0x300005
  2433                           ;	WDT Window Select bits
  2434                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2435                           ;	WDT input clock selector
  2436                           ;	WDTCCS = SC, Software Control
  2437   300005                     	org	3145733
  2438   300005  FF                 	db	255
  2439                           
  2440                           ;Config register CONFIG4L @ 0x300006
  2441                           ;	Boot Block Size selection bits
  2442                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  2443                           ;	Boot Block enable bit
  2444                           ;	BBEN = OFF, Boot block disabled
  2445                           ;	Storage Area Flash enable bit
  2446                           ;	SAFEN = OFF, SAF disabled
  2447                           ;	Application Block write protection bit
  2448                           ;	WRTAPP = OFF, Application Block not write protected
  2449   300006                     	org	3145734
  2450   300006  FF                 	db	255
  2451                           
  2452                           ;Config register CONFIG4H @ 0x300007
  2453                           ;	Boot Block Write Protection bit
  2454                           ;	WRTB = OFF, Boot Block not write-protected
  2455                           ;	Configuration Register Write Protection bit
  2456                           ;	WRTC = OFF, Configuration registers not write-protected
  2457                           ;	Data EEPROM Write Protection bit
  2458                           ;	WRTD = OFF, Data EEPROM not write-protected
  2459                           ;	SAF Write protection bit
  2460                           ;	WRTSAF = OFF, SAF not Write Protected
  2461                           ;	Low Voltage Programming Enable bit
  2462                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  2463   300007                     	org	3145735
  2464   300007  FF                 	db	255
  2465                           
  2466                           ;Config register CONFIG5L @ 0x300008
  2467                           ;	PFM and Data EEPROM Code Protection bit
  2468                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  2469   300008                     	org	3145736
  2470   300008  FF                 	db	255
  2471                           
  2472                           ;Config register CONFIG5H @ 0x300009
  2473                           ;	unspecified, using default values
  2474   300009                     	org	3145737
  2475   300009  FF                 	db	255
  2476                           tosu	equ	0x3FFF
  2477                           tosh	equ	0x3FFE
  2478                           tosl	equ	0x3FFD
  2479                           stkptr	equ	0x3FFC
  2480                           pclatu	equ	0x3FFB
  2481                           pclath	equ	0x3FFA
  2482                           pcl	equ	0x3FF9
  2483                           tblptru	equ	0x3FF8
  2484                           tblptrh	equ	0x3FF7
  2485                           tblptrl	equ	0x3FF6
  2486                           tablat	equ	0x3FF5
  2487                           prodh	equ	0x3FF4
  2488                           prodl	equ	0x3FF3
  2489                           indf0	equ	0x3FEF
  2490                           postinc0	equ	0x3FEE
  2491                           postdec0	equ	0x3FED
  2492                           preinc0	equ	0x3FEC
  2493                           plusw0	equ	0x3FEB
  2494                           fsr0h	equ	0x3FEA
  2495                           fsr0l	equ	0x3FE9
  2496                           wreg	equ	0x3FE8
  2497                           indf1	equ	0x3FE7
  2498                           postinc1	equ	0x3FE6
  2499                           postdec1	equ	0x3FE5
  2500                           preinc1	equ	0x3FE4
  2501                           plusw1	equ	0x3FE3
  2502                           fsr1h	equ	0x3FE2
  2503                           fsr1l	equ	0x3FE1
  2504                           bsr	equ	0x3FE0
  2505                           indf2	equ	0x3FDF
  2506                           postinc2	equ	0x3FDE
  2507                           postdec2	equ	0x3FDD
  2508                           preinc2	equ	0x3FDC
  2509                           plusw2	equ	0x3FDB
  2510                           fsr2h	equ	0x3FDA
  2511                           fsr2l	equ	0x3FD9
  2512                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     25      35
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_calculate
    _display->___awdiv
    _calculate->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    2328
                                             15 COMRAM    10    10      0
                             ___wmul
                          _calculate
                            _display
                         _scanKeypad
 ---------------------------------------------------------------------------------
 (1) _scanKeypad                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                              6     4      2     997
                                              8 COMRAM     6     4      2
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     165
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _calculate                                            7     2      5     527
                                              8 COMRAM     7     2      5
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     304
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul
   _calculate
     ___awdiv
   _display
     ___awdiv
     ___awmod
     ___wmul
   _scanKeypad

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRllh      1337      0       0      0.0%
BITBIGSFRlll       576      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     25      35     36.8%
BITBIGSFRlh         80      0       0      0.0%
BITBIGSFRh          52      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      35      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Apr 08 12:58:39 2025

                     l62 2132                       l66 2136                       l95 22B4  
                     l88 24C0                       l96 23DC                       l97 22C8  
                     l98 22DC                       l99 22F4             ___awdiv@sign 0006  
    ___wmul@multiplicand 0003                      l100 2330                      l101 2308  
                    l110 2370                      l103 231C                      l113 239C  
                    l114 23D8                      l106 2348                      l115 23B0  
                    l107 2384                      l124 2588                      l108 235C  
                    l133 2722                      l117 23C4                      l364 264A  
                    l377 26F8                      l902 22D6                      l912 2302  
                    l906 22EE                      l940 236A                      l924 232A  
                    l950 2396                      l934 2356                      l918 2316  
                    l928 2342                      l962 23BE                      l946 237E  
                    l972 23DA                      l956 23AA                      l892 2296  
                    l894 22AE                      l968 23D2                      l898 22C2  
                    u200 2342                      u201 233E                      u210 2356  
                    u130 22AE                      u211 2352                      u131 22AA  
                    u220 236A                      u140 22C2                      u221 2366  
                    u141 22BE                      u230 237E                      u150 22D6  
                    u231 237A                      u151 22D2                      u240 2396  
                    u160 22EE                      u241 2392                      u161 22EA  
                    u250 23AA                      u170 2302                      u251 23A6  
                    u171 22FE                      u500 2614                      u260 23BE  
                    u180 2316                      u501 2610                      u261 23BA  
                    u181 2312                      u510 263A                      u270 23D2  
                    u190 232A                      u511 2636                      u271 23CE  
                    u191 2326                      u520 265C                      u600 2478  
                    u521 2658                      u601 2474                      u530 2676  
                    u610 249A                      u531 2672                      u611 2496  
                    u460 259A                      u540 2690                      u620 24B2  
                    u700 2174                      u461 2596                      u541 268C  
                    u621 24AE                      u701 2170                      u470 25B4  
                    u630 2522                      u550 26AE                      u710 21BC  
                    u471 25B0                      u631 251E                      u551 26AA  
                    u711 21B8                      u480 25DA                      u560 26C4  
                    u720 21CE                      u640 2050                      u481 25D6  
                    u561 26C0                      u721 21CA                      u641 204C  
                    u490 25F8                      u570 26E8                      u730 21DE  
                    u650 209A                      u491 25F4                      u571 26E4  
                    u731 21DA                      u651 2096                      u580 2400  
                    u740 222A                      u660 20AC                      u581 23FC  
                    u741 2226                      u661 20A8                      u590 2412  
                    u750 2282                      u670 20BC                      u591 240E  
                    u751 227E                      u807 2240                      u671 20B8  
                    u680 211E                      u681 211A                      u690 212E  
                    u691 212A                      u767 206E                      u777 20F6  
                    u787 214C                      u797 2192             ___awmod@sign 0006  
                    wreg 3FE8                     l1200 25E2                     l1210 261C  
                   l1202 25EA                     l1220 2642                     l1212 261E  
                   l1204 25F8                     l1300 24E6                     l1214 2624  
                   l1206 25FE                     l1310 252E                     l1230 2664  
                   l1208 2614                     l1216 262A                     l1304 2510  
                   l1320 254E                     l1240 2698                     l1232 2668  
                   l1224 264C                     l1400 2164                     l1218 263A  
                   l1306 2522                     l1250 26D2                     l1242 26A0  
                   l1234 2676                     l1226 264E                     l1410 21A6  
                   l1402 2174                     l1330 2008                     l1180 258A  
                   l1244 26AE                     l1252 26D8                     l1236 267E  
                   l1228 265C                     l1260 23DE                     l1420 21FA  
                   l1412 21AC                     l1404 217C                     l1340 2014  
                   l1332 200A                     l1190 25B4                     l1182 258C  
                   l1254 26E8                     l1246 26C4                     l1238 2690  
                   l1174 26FA                     l1270 2414                     l1262 23E4  
                   l1430 2236                     l1422 2202                     l1414 21BC  
                   l1406 2188                     l1350 2020                     l1342 2016  
                   l1334 200C                     l1326 2002                     l1192 25BC  
                   l1184 259A                     l1256 26F0                     l1248 26CC  
                   l1176 271A                     l1280 249A                     l1272 242E  
                   l1432 224E                     l1424 2212                     l1416 21CE  
                   l1408 21A0                     l1360 2050                     l1352 2022  
                   l1344 201A                     l1336 2010                     l1328 2004  
                   l1194 25C0                     l1186 25A2                     l1290 24C2  
                   l1282 249C                     l1274 244A                     l1266 2404  
                   l1434 226E                     l1426 2218                     l1418 21DE  
                   l1370 2086                     l1362 2058                     l1354 2024  
                   l1346 201C                     l1338 2012                     l1196 25C8  
                   l1188 25A6                     l1292 24C6                     l1284 24B2  
                   l1276 2466                     l1268 2412                     l1436 2282  
                   l1428 222A                     l1380 20D8                     l1372 208A  
                   l1364 2064                     l1356 203A                     l1348 201E  
                   l1198 25DA                     l1278 2478                     l1286 24B4  
                   l1390 210E                     l1382 20E0                     l1374 209A  
                   l1366 207C                     l1358 2040                     l1296 24D6  
                   l1392 211E                     l1384 20EC                     l1376 20AC  
                   l1368 2082                     l1458 2562                     l1394 2138  
                   l1386 2104                     l1378 20BC                     l1396 2142  
                   l1388 2108                     l1398 215E                     _LATA 3FBA  
                   _LATC 3FBC                     _LATD 3FBD                     _main 2002  
                   fsr2h 3FDA                     indf2 3FDF                     fsr1l 3FE1  
                   fsr2l 3FD9                     prodh 3FF4                     prodl 3FF3  
                   start FFFC             ___param_bank 0000                    ?_main 0001  
        __end_of___awdiv 264C          __end_of___awmod 26FA          ___awdiv@divisor 0003  
                  _T1CON 3FB2          ___awdiv@counter 0005                    _TRISA 3FC2  
                  _TRISB 3FC3                    _TRISC 3FC4                    _TRISD 3FC5  
        __end_of_display 24C2             main@operator 0016                    tablat 3FF5  
                  status 3FD8          __initialization 2724             __end_of_main 2296  
                 ??_main 0010            __activetblptr 0003                   _ADCON0 3EF8  
                 _ADCON1 3EF9                   _ADCON2 3EFA         ___awdiv@dividend 0001  
                 _ANSELA 3A40                   _ANSELB 3A50                   _ANSELC 3A60  
                 _ANSELD 3A70            calculate@val1 0009            calculate@val2 000B  
          display@dValue 0009            display@digit1 000D            display@digit2 000B  
                 ___wmul 26FA                ??___awdiv 0005                ??___awmod 0005  
       ___awdiv@quotient 0007          ___awmod@divisor 0003                   _sevSeg 001A  
                 isa$std 0001          ___awmod@counter 0005                ??_display 000B  
           __pdataCOMRAM 001A             __mediumconst 2000                   tblptrh 3FF7  
                 tblptrl 3FF6                   tblptru 3FF8               __accesstop 0060  
__end_of__initialization 2746            ___rparam_used 0001           __pcstackCOMRAM 0001  
                ?___wmul 0001                  _CCP2CON 3F7A        __end_of_calculate 258A  
                __Hparam 0000                  __Lparam 0000                  ___awdiv 258A  
                ___awmod 264C             __psmallconst 2000                  __pcinit 2724  
                __ramtop 2000               _scanKeypad 2296                  __ptext0 2002  
                __ptext1 2296                  __ptext2 23DE                  __ptext3 26FA  
                __ptext4 264C                  __ptext5 24C2                  __ptext6 258A  
                _display 23DE         ___awmod@dividend 0001     end_of_initialization 2746  
                postdec1 3FE5                  postinc0 3FEE                _PORTAbits 3FCA  
              _PORTBbits 3FCB                _PORTDbits 3FCD               main@value1 0014  
             main@value2 0017               main@result 0012           __end_of___wmul 2724  
          __pidataCOMRAM 274C              ?_scanKeypad 0001      start_initialization 2724  
               ??___wmul 0005                _calculate 24C2                 ?___awdiv 0001  
               ?___awmod 0001                 ?_display 0009              __smallconst 2000  
         ___wmul@product 0005               ?_calculate 0009        ___wmul@multiplier 0001  
              copy_data0 2738              calculate@op 000D                 __Hrparam 0000  
               __Lrparam 0000             ??_scanKeypad 0001              ??_calculate 000E  
     __end_of_scanKeypad 23DE                 isa$xinst 0000                 main@ret1 0019  
