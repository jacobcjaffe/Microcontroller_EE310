

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Apr 29 15:27:12 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=1
    10                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21   000000                     
    22                           ; Generated 12/10/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F47K42 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56   003FE0                     bsr             equ	16352
    57   003FE9                     fsr0            equ	16361
    58   003FEA                     fsr0h           equ	16362
    59   003FE9                     fsr0l           equ	16361
    60   003FE1                     fsr1            equ	16353
    61   003FE2                     fsr1h           equ	16354
    62   003FE1                     fsr1l           equ	16353
    63   003FD9                     fsr2            equ	16345
    64   003FDA                     fsr2h           equ	16346
    65   003FD9                     fsr2l           equ	16345
    66   003FEF                     indf0           equ	16367
    67   003FE7                     indf1           equ	16359
    68   003FDF                     indf2           equ	16351
    69   003FD2                     intcon          equ	16338
    70   0039E5                     nvmcon          equ	14821
    71   003FF9                     pcl             equ	16377
    72   003FFA                     pclath          equ	16378
    73   003FFB                     pclatu          equ	16379
    74   003FEB                     plusw0          equ	16363
    75   003FE3                     plusw1          equ	16355
    76   003FDB                     plusw2          equ	16347
    77   003FED                     postdec0        equ	16365
    78   003FE5                     postdec1        equ	16357
    79   003FDD                     postdec2        equ	16349
    80   003FEE                     postinc0        equ	16366
    81   003FE6                     postinc1        equ	16358
    82   003FDE                     postinc2        equ	16350
    83   003FEC                     preinc0         equ	16364
    84   003FE4                     preinc1         equ	16356
    85   003FDC                     preinc2         equ	16348
    86   003FF3                     prod            equ	16371
    87   003FF4                     prodh           equ	16372
    88   003FF3                     prodl           equ	16371
    89   003FD8                     status          equ	16344
    90   003FF5                     tablat          equ	16373
    91   003FF6                     tblptr          equ	16374
    92   003FF7                     tblptrh         equ	16375
    93   003FF6                     tblptrl         equ	16374
    94   003FF8                     tblptru         equ	16376
    95   003FFD                     tosl            equ	16381
    96   003FE8                     wreg            equ	16360
    97   003880                     STATUS_CSHAD    equ	14464	;# 
    98   003881                     WREG_CSHAD      equ	14465	;# 
    99   003882                     BSR_CSHAD       equ	14466	;# 
   100   003883                     SHADCON         equ	14467	;# 
   101   003884                     STATUS_SHAD     equ	14468	;# 
   102   003885                     WREG_SHAD       equ	14469	;# 
   103   003886                     BSR_SHAD        equ	14470	;# 
   104   003887                     PCLATH_SHAD     equ	14471	;# 
   105   003888                     PCLATU_SHAD     equ	14472	;# 
   106   003889                     FSR0SH          equ	14473	;# 
   107   003889                     FSR0L_SHAD      equ	14473	;# 
   108   00388A                     FSR0H_SHAD      equ	14474	;# 
   109   00388B                     FSR1SH          equ	14475	;# 
   110   00388B                     FSR1L_SHAD      equ	14475	;# 
   111   00388C                     FSR1H_SHAD      equ	14476	;# 
   112   00388D                     FSR2SH          equ	14477	;# 
   113   00388D                     FSR2L_SHAD      equ	14477	;# 
   114   00388E                     FSR2H_SHAD      equ	14478	;# 
   115   00388F                     PRODSH          equ	14479	;# 
   116   00388F                     PRODL_SHAD      equ	14479	;# 
   117   003890                     PRODH_SHAD      equ	14480	;# 
   118   00389D                     IVTADL          equ	14493	;# 
   119   00389E                     IVTADH          equ	14494	;# 
   120   00389F                     IVTADU          equ	14495	;# 
   121   00395B                     WDTCON0         equ	14683	;# 
   122   00395C                     WDTCON1         equ	14684	;# 
   123   00395D                     WDTPSL          equ	14685	;# 
   124   00395E                     WDTPSH          equ	14686	;# 
   125   00395F                     WDTTMR          equ	14687	;# 
   126   003960                     CRCDATA         equ	14688	;# 
   127   003960                     CRCDATL         equ	14688	;# 
   128   003961                     CRCDATH         equ	14689	;# 
   129   003962                     CRCACC          equ	14690	;# 
   130   003962                     CRCACCL         equ	14690	;# 
   131   003963                     CRCACCH         equ	14691	;# 
   132   003964                     CRCSHFT         equ	14692	;# 
   133   003964                     CRCSHIFTL       equ	14692	;# 
   134   003965                     CRCSHIFTH       equ	14693	;# 
   135   003966                     CRCXOR          equ	14694	;# 
   136   003966                     CRCXORL         equ	14694	;# 
   137   003967                     CRCXORH         equ	14695	;# 
   138   003968                     CRCCON0         equ	14696	;# 
   139   003969                     CRCCON1         equ	14697	;# 
   140   003976                     SCANLADR        equ	14710	;# 
   141   003976                     SCANLADRL       equ	14710	;# 
   142   003977                     SCANLADRH       equ	14711	;# 
   143   003978                     SCANLADRU       equ	14712	;# 
   144   003979                     SCANHADR        equ	14713	;# 
   145   003979                     SCANHADRL       equ	14713	;# 
   146   00397A                     SCANHADRH       equ	14714	;# 
   147   00397B                     SCANHADRU       equ	14715	;# 
   148   00397C                     SCANCON0        equ	14716	;# 
   149   00397D                     SCANTRIG        equ	14717	;# 
   150   003980                     IPR0            equ	14720	;# 
   151   003981                     IPR1            equ	14721	;# 
   152   003982                     IPR2            equ	14722	;# 
   153   003983                     IPR3            equ	14723	;# 
   154   003984                     IPR4            equ	14724	;# 
   155   003985                     IPR5            equ	14725	;# 
   156   003986                     IPR6            equ	14726	;# 
   157   003987                     IPR7            equ	14727	;# 
   158   003988                     IPR8            equ	14728	;# 
   159   003989                     IPR9            equ	14729	;# 
   160   00398A                     IPR10           equ	14730	;# 
   161   003990                     PIE0            equ	14736	;# 
   162   003991                     PIE1            equ	14737	;# 
   163   003992                     PIE2            equ	14738	;# 
   164   003993                     PIE3            equ	14739	;# 
   165   003994                     PIE4            equ	14740	;# 
   166   003995                     PIE5            equ	14741	;# 
   167   003996                     PIE6            equ	14742	;# 
   168   003997                     PIE7            equ	14743	;# 
   169   003998                     PIE8            equ	14744	;# 
   170   003999                     PIE9            equ	14745	;# 
   171   00399A                     PIE10           equ	14746	;# 
   172   0039A0                     PIR0            equ	14752	;# 
   173   0039A1                     PIR1            equ	14753	;# 
   174   0039A2                     PIR2            equ	14754	;# 
   175   0039A3                     PIR3            equ	14755	;# 
   176   0039A4                     PIR4            equ	14756	;# 
   177   0039A5                     PIR5            equ	14757	;# 
   178   0039A6                     PIR6            equ	14758	;# 
   179   0039A7                     PIR7            equ	14759	;# 
   180   0039A8                     PIR8            equ	14760	;# 
   181   0039A9                     PIR9            equ	14761	;# 
   182   0039AA                     PIR10           equ	14762	;# 
   183   0039C0                     PMD0            equ	14784	;# 
   184   0039C1                     PMD1            equ	14785	;# 
   185   0039C2                     PMD2            equ	14786	;# 
   186   0039C3                     PMD3            equ	14787	;# 
   187   0039C4                     PMD4            equ	14788	;# 
   188   0039C5                     PMD5            equ	14789	;# 
   189   0039C6                     PMD6            equ	14790	;# 
   190   0039C7                     PMD7            equ	14791	;# 
   191   0039D0                     BORCON          equ	14800	;# 
   192   0039D1                     VREGCON         equ	14801	;# 
   193   0039D8                     CPUDOZE         equ	14808	;# 
   194   0039D9                     OSCCON1         equ	14809	;# 
   195   0039DA                     OSCCON2         equ	14810	;# 
   196   0039DB                     OSCCON3         equ	14811	;# 
   197   0039DC                     OSCSTAT         equ	14812	;# 
   198   0039DC                     OSCSTAT1        equ	14812	;# 
   199   0039DD                     OSCEN           equ	14813	;# 
   200   0039DE                     OSCTUNE         equ	14814	;# 
   201   0039DF                     OSCFRQ          equ	14815	;# 
   202   0039E0                     NVMADRL         equ	14816	;# 
   203   0039E1                     NVMADRH         equ	14817	;# 
   204   0039E3                     NVMDAT          equ	14819	;# 
   205   0039E5                     NVMCON1         equ	14821	;# 
   206   0039E6                     NVMCON2         equ	14822	;# 
   207   0039EF                     PRLOCK          equ	14831	;# 
   208   0039F1                     ISRPR           equ	14833	;# 
   209   0039F2                     MAINPR          equ	14834	;# 
   210   0039F3                     DMA1PR          equ	14835	;# 
   211   0039F4                     DMA2PR          equ	14836	;# 
   212   0039F7                     SCANPR          equ	14839	;# 
   213   003A00                     RA0PPS          equ	14848	;# 
   214   003A01                     RA1PPS          equ	14849	;# 
   215   003A02                     RA2PPS          equ	14850	;# 
   216   003A03                     RA3PPS          equ	14851	;# 
   217   003A04                     RA4PPS          equ	14852	;# 
   218   003A05                     RA5PPS          equ	14853	;# 
   219   003A06                     RA6PPS          equ	14854	;# 
   220   003A07                     RA7PPS          equ	14855	;# 
   221   003A08                     RB0PPS          equ	14856	;# 
   222   003A09                     RB1PPS          equ	14857	;# 
   223   003A0A                     RB2PPS          equ	14858	;# 
   224   003A0B                     RB3PPS          equ	14859	;# 
   225   003A0C                     RB4PPS          equ	14860	;# 
   226   003A0D                     RB5PPS          equ	14861	;# 
   227   003A0E                     RB6PPS          equ	14862	;# 
   228   003A0F                     RB7PPS          equ	14863	;# 
   229   003A10                     RC0PPS          equ	14864	;# 
   230   003A11                     RC1PPS          equ	14865	;# 
   231   003A12                     RC2PPS          equ	14866	;# 
   232   003A13                     RC3PPS          equ	14867	;# 
   233   003A14                     RC4PPS          equ	14868	;# 
   234   003A15                     RC5PPS          equ	14869	;# 
   235   003A16                     RC6PPS          equ	14870	;# 
   236   003A17                     RC7PPS          equ	14871	;# 
   237   003A18                     RD0PPS          equ	14872	;# 
   238   003A19                     RD1PPS          equ	14873	;# 
   239   003A1A                     RD2PPS          equ	14874	;# 
   240   003A1B                     RD3PPS          equ	14875	;# 
   241   003A1C                     RD4PPS          equ	14876	;# 
   242   003A1D                     RD5PPS          equ	14877	;# 
   243   003A1E                     RD6PPS          equ	14878	;# 
   244   003A1F                     RD7PPS          equ	14879	;# 
   245   003A20                     RE0PPS          equ	14880	;# 
   246   003A21                     RE1PPS          equ	14881	;# 
   247   003A22                     RE2PPS          equ	14882	;# 
   248   003A40                     ANSELA          equ	14912	;# 
   249   003A41                     WPUA            equ	14913	;# 
   250   003A42                     ODCONA          equ	14914	;# 
   251   003A43                     SLRCONA         equ	14915	;# 
   252   003A44                     INLVLA          equ	14916	;# 
   253   003A45                     IOCAP           equ	14917	;# 
   254   003A46                     IOCAN           equ	14918	;# 
   255   003A47                     IOCAF           equ	14919	;# 
   256   003A50                     ANSELB          equ	14928	;# 
   257   003A51                     WPUB            equ	14929	;# 
   258   003A52                     ODCONB          equ	14930	;# 
   259   003A53                     SLRCONB         equ	14931	;# 
   260   003A54                     INLVLB          equ	14932	;# 
   261   003A55                     IOCBP           equ	14933	;# 
   262   003A56                     IOCBN           equ	14934	;# 
   263   003A57                     IOCBF           equ	14935	;# 
   264   003A5A                     RB1I2C          equ	14938	;# 
   265   003A5B                     RB2I2C          equ	14939	;# 
   266   003A60                     ANSELC          equ	14944	;# 
   267   003A61                     WPUC            equ	14945	;# 
   268   003A62                     ODCONC          equ	14946	;# 
   269   003A63                     SLRCONC         equ	14947	;# 
   270   003A64                     INLVLC          equ	14948	;# 
   271   003A65                     IOCCP           equ	14949	;# 
   272   003A66                     IOCCN           equ	14950	;# 
   273   003A67                     IOCCF           equ	14951	;# 
   274   003A6A                     RC3I2C          equ	14954	;# 
   275   003A6B                     RC4I2C          equ	14955	;# 
   276   003A70                     ANSELD          equ	14960	;# 
   277   003A71                     WPUD            equ	14961	;# 
   278   003A72                     ODCOND          equ	14962	;# 
   279   003A73                     SLRCOND         equ	14963	;# 
   280   003A74                     INLVLD          equ	14964	;# 
   281   003A7A                     RD0I2C          equ	14970	;# 
   282   003A7B                     RD1I2C          equ	14971	;# 
   283   003A80                     ANSELE          equ	14976	;# 
   284   003A81                     WPUE            equ	14977	;# 
   285   003A82                     ODCONE          equ	14978	;# 
   286   003A83                     SLRCONE         equ	14979	;# 
   287   003A84                     INLVLE          equ	14980	;# 
   288   003A85                     IOCEP           equ	14981	;# 
   289   003A86                     IOCEN           equ	14982	;# 
   290   003A87                     IOCEF           equ	14983	;# 
   291   003ABF                     PPSLOCK         equ	15039	;# 
   292   003AC0                     INT0PPS         equ	15040	;# 
   293   003AC1                     INT1PPS         equ	15041	;# 
   294   003AC2                     INT2PPS         equ	15042	;# 
   295   003AC3                     T0CKIPPS        equ	15043	;# 
   296   003AC4                     T1CKIPPS        equ	15044	;# 
   297   003AC5                     T1GPPS          equ	15045	;# 
   298   003AC6                     T3CKIPPS        equ	15046	;# 
   299   003AC7                     T3GPPS          equ	15047	;# 
   300   003AC8                     T5CKIPPS        equ	15048	;# 
   301   003AC9                     T5GPPS          equ	15049	;# 
   302   003ACA                     T2INPPS         equ	15050	;# 
   303   003ACB                     T4INPPS         equ	15051	;# 
   304   003ACC                     T6INPPS         equ	15052	;# 
   305   003ACD                     CCP1PPS         equ	15053	;# 
   306   003ACE                     CCP2PPS         equ	15054	;# 
   307   003ACF                     CCP3PPS         equ	15055	;# 
   308   003AD0                     CCP4PPS         equ	15056	;# 
   309   003AD1                     SMT1WINPPS      equ	15057	;# 
   310   003AD2                     SMT1SIGPPS      equ	15058	;# 
   311   003AD3                     CWG1INPPS       equ	15059	;# 
   312   003AD4                     CWG2INPPS       equ	15060	;# 
   313   003AD5                     CWG3INPPS       equ	15061	;# 
   314   003AD6                     MD1CARLPPS      equ	15062	;# 
   315   003AD7                     MD1CARHPPS      equ	15063	;# 
   316   003AD8                     MD1SRCPPS       equ	15064	;# 
   317   003AD9                     CLCIN0PPS       equ	15065	;# 
   318   003ADA                     CLCIN1PPS       equ	15066	;# 
   319   003ADB                     CLCIN2PPS       equ	15067	;# 
   320   003ADC                     CLCIN3PPS       equ	15068	;# 
   321   003ADD                     ADACTPPS        equ	15069	;# 
   322   003ADE                     SPI1SCKPPS      equ	15070	;# 
   323   003ADF                     SPI1SDIPPS      equ	15071	;# 
   324   003AE0                     SPI1SSPPS       equ	15072	;# 
   325   003AE1                     I2C1SCLPPS      equ	15073	;# 
   326   003AE2                     I2C1SDAPPS      equ	15074	;# 
   327   003AE3                     I2C2SCLPPS      equ	15075	;# 
   328   003AE4                     I2C2SDAPPS      equ	15076	;# 
   329   003AE5                     U1RXPPS         equ	15077	;# 
   330   003AE6                     U1CTSPPS        equ	15078	;# 
   331   003AE8                     U2RXPPS         equ	15080	;# 
   332   003AE9                     U2CTSPPS        equ	15081	;# 
   333   003BC9                     DMA2BUF         equ	15305	;# 
   334   003BCA                     DMA2DCNT        equ	15306	;# 
   335   003BCA                     DMA2DCNTL       equ	15306	;# 
   336   003BCB                     DMA2DCNTH       equ	15307	;# 
   337   003BCC                     DMA2DPTR        equ	15308	;# 
   338   003BCC                     DMA2DPTRL       equ	15308	;# 
   339   003BCD                     DMA2DPTRH       equ	15309	;# 
   340   003BCE                     DMA2DSZ         equ	15310	;# 
   341   003BCE                     DMA2DSZL        equ	15310	;# 
   342   003BCF                     DMA2DSZH        equ	15311	;# 
   343   003BD0                     DMA2DSA         equ	15312	;# 
   344   003BD0                     DMA2DSAL        equ	15312	;# 
   345   003BD1                     DMA2DSAH        equ	15313	;# 
   346   003BD2                     DMA2SCNT        equ	15314	;# 
   347   003BD2                     DMA2SCNTL       equ	15314	;# 
   348   003BD3                     DMA2SCNTH       equ	15315	;# 
   349   003BD4                     DMA2SPTR        equ	15316	;# 
   350   003BD4                     DMA2SPTRL       equ	15316	;# 
   351   003BD5                     DMA2SPTRH       equ	15317	;# 
   352   003BD6                     DMA2SPTRU       equ	15318	;# 
   353   003BD7                     DMA2SSZ         equ	15319	;# 
   354   003BD7                     DMA2SSZL        equ	15319	;# 
   355   003BD8                     DMA2SSZH        equ	15320	;# 
   356   003BD9                     DMA2SSA         equ	15321	;# 
   357   003BD9                     DMA2SSAL        equ	15321	;# 
   358   003BDA                     DMA2SSAH        equ	15322	;# 
   359   003BDB                     DMA2SSAU        equ	15323	;# 
   360   003BDC                     DMA2CON0        equ	15324	;# 
   361   003BDD                     DMA2CON1        equ	15325	;# 
   362   003BDE                     DMA2AIRQ        equ	15326	;# 
   363   003BDF                     DMA2SIRQ        equ	15327	;# 
   364   003BE9                     DMA1BUF         equ	15337	;# 
   365   003BEA                     DMA1DCNT        equ	15338	;# 
   366   003BEA                     DMA1DCNTL       equ	15338	;# 
   367   003BEB                     DMA1DCNTH       equ	15339	;# 
   368   003BEC                     DMA1DPTR        equ	15340	;# 
   369   003BEC                     DMA1DPTRL       equ	15340	;# 
   370   003BED                     DMA1DPTRH       equ	15341	;# 
   371   003BEE                     DMA1DSZ         equ	15342	;# 
   372   003BEE                     DMA1DSZL        equ	15342	;# 
   373   003BEF                     DMA1DSZH        equ	15343	;# 
   374   003BF0                     DMA1DSA         equ	15344	;# 
   375   003BF0                     DMA1DSAL        equ	15344	;# 
   376   003BF1                     DMA1DSAH        equ	15345	;# 
   377   003BF2                     DMA1SCNT        equ	15346	;# 
   378   003BF2                     DMA1SCNTL       equ	15346	;# 
   379   003BF3                     DMA1SCNTH       equ	15347	;# 
   380   003BF4                     DMA1SPTR        equ	15348	;# 
   381   003BF4                     DMA1SPTRL       equ	15348	;# 
   382   003BF5                     DMA1SPTRH       equ	15349	;# 
   383   003BF6                     DMA1SPTRU       equ	15350	;# 
   384   003BF7                     DMA1SSZ         equ	15351	;# 
   385   003BF7                     DMA1SSZL        equ	15351	;# 
   386   003BF8                     DMA1SSZH        equ	15352	;# 
   387   003BF9                     DMA1SSA         equ	15353	;# 
   388   003BF9                     DMA1SSAL        equ	15353	;# 
   389   003BFA                     DMA1SSAH        equ	15354	;# 
   390   003BFB                     DMA1SSAU        equ	15355	;# 
   391   003BFC                     DMA1CON0        equ	15356	;# 
   392   003BFD                     DMA1CON1        equ	15357	;# 
   393   003BFE                     DMA1AIRQ        equ	15358	;# 
   394   003BFF                     DMA1SIRQ        equ	15359	;# 
   395   003C56                     CLC4CON         equ	15446	;# 
   396   003C57                     CLC4POL         equ	15447	;# 
   397   003C58                     CLC4SEL0        equ	15448	;# 
   398   003C59                     CLC4SEL1        equ	15449	;# 
   399   003C5A                     CLC4SEL2        equ	15450	;# 
   400   003C5B                     CLC4SEL3        equ	15451	;# 
   401   003C5C                     CLC4GLS0        equ	15452	;# 
   402   003C5D                     CLC4GLS1        equ	15453	;# 
   403   003C5E                     CLC4GLS2        equ	15454	;# 
   404   003C5F                     CLC4GLS3        equ	15455	;# 
   405   003C60                     CLC3CON         equ	15456	;# 
   406   003C61                     CLC3POL         equ	15457	;# 
   407   003C62                     CLC3SEL0        equ	15458	;# 
   408   003C63                     CLC3SEL1        equ	15459	;# 
   409   003C64                     CLC3SEL2        equ	15460	;# 
   410   003C65                     CLC3SEL3        equ	15461	;# 
   411   003C66                     CLC3GLS0        equ	15462	;# 
   412   003C67                     CLC3GLS1        equ	15463	;# 
   413   003C68                     CLC3GLS2        equ	15464	;# 
   414   003C69                     CLC3GLS3        equ	15465	;# 
   415   003C6A                     CLC2CON         equ	15466	;# 
   416   003C6B                     CLC2POL         equ	15467	;# 
   417   003C6C                     CLC2SEL0        equ	15468	;# 
   418   003C6D                     CLC2SEL1        equ	15469	;# 
   419   003C6E                     CLC2SEL2        equ	15470	;# 
   420   003C6F                     CLC2SEL3        equ	15471	;# 
   421   003C70                     CLC2GLS0        equ	15472	;# 
   422   003C71                     CLC2GLS1        equ	15473	;# 
   423   003C72                     CLC2GLS2        equ	15474	;# 
   424   003C73                     CLC2GLS3        equ	15475	;# 
   425   003C74                     CLC1CON         equ	15476	;# 
   426   003C75                     CLC1POL         equ	15477	;# 
   427   003C76                     CLC1SEL0        equ	15478	;# 
   428   003C77                     CLC1SEL1        equ	15479	;# 
   429   003C78                     CLC1SEL2        equ	15480	;# 
   430   003C79                     CLC1SEL3        equ	15481	;# 
   431   003C7A                     CLC1GLS0        equ	15482	;# 
   432   003C7B                     CLC1GLS1        equ	15483	;# 
   433   003C7C                     CLC1GLS2        equ	15484	;# 
   434   003C7D                     CLC1GLS3        equ	15485	;# 
   435   003C7E                     CLCDATA0        equ	15486	;# 
   436   003CE5                     CLKRCON         equ	15589	;# 
   437   003CE6                     CLKRCLK         equ	15590	;# 
   438   003CFA                     MD1CON0         equ	15610	;# 
   439   003CFB                     MD1CON1         equ	15611	;# 
   440   003CFC                     MD1SRC          equ	15612	;# 
   441   003CFD                     MD1CARL         equ	15613	;# 
   442   003CFE                     MD1CARH         equ	15614	;# 
   443   003D10                     SPI1RXB         equ	15632	;# 
   444   003D11                     SPI1TXB         equ	15633	;# 
   445   003D12                     SPI1TCNT        equ	15634	;# 
   446   003D12                     SPI1TCNTL       equ	15634	;# 
   447   003D13                     SPI1TCNTH       equ	15635	;# 
   448   003D14                     SPI1CON0        equ	15636	;# 
   449   003D15                     SPI1CON1        equ	15637	;# 
   450   003D16                     SPI1CON2        equ	15638	;# 
   451   003D17                     SPI1STATUS      equ	15639	;# 
   452   003D18                     SPI1TWIDTH      equ	15640	;# 
   453   003D19                     SPI1BAUD        equ	15641	;# 
   454   003D1A                     SPI1INTF        equ	15642	;# 
   455   003D1B                     SPI1INTE        equ	15643	;# 
   456   003D1C                     SPI1CLK         equ	15644	;# 
   457   003D54                     I2C2RXB         equ	15700	;# 
   458   003D55                     I2C2TXB         equ	15701	;# 
   459   003D56                     I2C2CNT         equ	15702	;# 
   460   003D57                     I2C2ADB0        equ	15703	;# 
   461   003D58                     I2C2ADB1        equ	15704	;# 
   462   003D59                     I2C2ADR0        equ	15705	;# 
   463   003D5A                     I2C2ADR1        equ	15706	;# 
   464   003D5B                     I2C2ADR2        equ	15707	;# 
   465   003D5C                     I2C2ADR3        equ	15708	;# 
   466   003D5D                     I2C2CON0        equ	15709	;# 
   467   003D5E                     I2C2CON1        equ	15710	;# 
   468   003D5F                     I2C2CON2        equ	15711	;# 
   469   003D60                     I2C2ERR         equ	15712	;# 
   470   003D61                     I2C2STAT0       equ	15713	;# 
   471   003D62                     I2C2STAT1       equ	15714	;# 
   472   003D63                     I2C2PIR         equ	15715	;# 
   473   003D64                     I2C2PIE         equ	15716	;# 
   474   003D65                     I2C2CLK         equ	15717	;# 
   475   003D66                     I2C2BTO         equ	15718	;# 
   476   003D6A                     I2C1RXB         equ	15722	;# 
   477   003D6B                     I2C1TXB         equ	15723	;# 
   478   003D6C                     I2C1CNT         equ	15724	;# 
   479   003D6D                     I2C1ADB0        equ	15725	;# 
   480   003D6E                     I2C1ADB1        equ	15726	;# 
   481   003D6F                     I2C1ADR0        equ	15727	;# 
   482   003D70                     I2C1ADR1        equ	15728	;# 
   483   003D71                     I2C1ADR2        equ	15729	;# 
   484   003D72                     I2C1ADR3        equ	15730	;# 
   485   003D73                     I2C1CON0        equ	15731	;# 
   486   003D74                     I2C1CON1        equ	15732	;# 
   487   003D75                     I2C1CON2        equ	15733	;# 
   488   003D76                     I2C1ERR         equ	15734	;# 
   489   003D77                     I2C1STAT0       equ	15735	;# 
   490   003D78                     I2C1STAT1       equ	15736	;# 
   491   003D79                     I2C1PIR         equ	15737	;# 
   492   003D7A                     I2C1PIE         equ	15738	;# 
   493   003D7B                     I2C1CLK         equ	15739	;# 
   494   003D7C                     I2C1BTO         equ	15740	;# 
   495   003DD0                     U2RXB           equ	15824	;# 
   496   003DD0                     U2RXBL          equ	15824	;# 
   497   003DD2                     U2TXB           equ	15826	;# 
   498   003DD2                     U2TXBL          equ	15826	;# 
   499   003DD4                     U2P1            equ	15828	;# 
   500   003DD4                     U2P1L           equ	15828	;# 
   501   003DD6                     U2P2            equ	15830	;# 
   502   003DD6                     U2P2L           equ	15830	;# 
   503   003DD8                     U2P3            equ	15832	;# 
   504   003DD8                     U2P3L           equ	15832	;# 
   505   003DDA                     U2CON0          equ	15834	;# 
   506   003DDB                     U2CON1          equ	15835	;# 
   507   003DDC                     U2CON2          equ	15836	;# 
   508   003DDD                     U2BRG           equ	15837	;# 
   509   003DDD                     U2BRGL          equ	15837	;# 
   510   003DDE                     U2BRGH          equ	15838	;# 
   511   003DDF                     U2FIFO          equ	15839	;# 
   512   003DE0                     U2UIR           equ	15840	;# 
   513   003DE1                     U2ERRIR         equ	15841	;# 
   514   003DE2                     U2ERRIE         equ	15842	;# 
   515   003DE8                     U1RXB           equ	15848	;# 
   516   003DE8                     U1RXBL          equ	15848	;# 
   517   003DE9                     U1RXCHK         equ	15849	;# 
   518   003DEA                     U1TXB           equ	15850	;# 
   519   003DEA                     U1TXBL          equ	15850	;# 
   520   003DEB                     U1TXCHK         equ	15851	;# 
   521   003DEC                     U1P1            equ	15852	;# 
   522   003DEC                     U1P1L           equ	15852	;# 
   523   003DED                     U1P1H           equ	15853	;# 
   524   003DEE                     U1P2            equ	15854	;# 
   525   003DEE                     U1P2L           equ	15854	;# 
   526   003DEF                     U1P2H           equ	15855	;# 
   527   003DF0                     U1P3            equ	15856	;# 
   528   003DF0                     U1P3L           equ	15856	;# 
   529   003DF1                     U1P3H           equ	15857	;# 
   530   003DF2                     U1CON0          equ	15858	;# 
   531   003DF3                     U1CON1          equ	15859	;# 
   532   003DF4                     U1CON2          equ	15860	;# 
   533   003DF5                     U1BRG           equ	15861	;# 
   534   003DF5                     U1BRGL          equ	15861	;# 
   535   003DF6                     U1BRGH          equ	15862	;# 
   536   003DF7                     U1FIFO          equ	15863	;# 
   537   003DF8                     U1UIR           equ	15864	;# 
   538   003DF9                     U1ERRIR         equ	15865	;# 
   539   003DFA                     U1ERRIE         equ	15866	;# 
   540   003E9C                     DAC1CON1        equ	16028	;# 
   541   003E9E                     DAC1CON0        equ	16030	;# 
   542   003EB8                     CM2CON0         equ	16056	;# 
   543   003EB9                     CM2CON1         equ	16057	;# 
   544   003EBA                     CM2NCH          equ	16058	;# 
   545   003EBB                     CM2PCH          equ	16059	;# 
   546   003EBC                     CM1CON0         equ	16060	;# 
   547   003EBD                     CM1CON1         equ	16061	;# 
   548   003EBE                     CM1NCH          equ	16062	;# 
   549   003EBF                     CM1PCH          equ	16063	;# 
   550   003EC0                     CMOUT           equ	16064	;# 
   551   003EC1                     FVRCON          equ	16065	;# 
   552   003EC3                     ZCDCON          equ	16067	;# 
   553   003EC9                     HLVDCON0        equ	16073	;# 
   554   003ECA                     HLVDCON1        equ	16074	;# 
   555   003ED7                     ADCP            equ	16087	;# 
   556   003EDE                     ADLTH           equ	16094	;# 
   557   003EDE                     ADLTHL          equ	16094	;# 
   558   003EDF                     ADLTHH          equ	16095	;# 
   559   003EE0                     ADUTH           equ	16096	;# 
   560   003EE0                     ADUTHL          equ	16096	;# 
   561   003EE1                     ADUTHH          equ	16097	;# 
   562   003EE2                     ADERR           equ	16098	;# 
   563   003EE2                     ADERRL          equ	16098	;# 
   564   003EE3                     ADERRH          equ	16099	;# 
   565   003EE4                     ADSTPT          equ	16100	;# 
   566   003EE4                     ADSTPTL         equ	16100	;# 
   567   003EE5                     ADSTPTH         equ	16101	;# 
   568   003EE6                     ADFLTR          equ	16102	;# 
   569   003EE6                     ADFLTRL         equ	16102	;# 
   570   003EE7                     ADFLTRH         equ	16103	;# 
   571   003EE8                     ADACC           equ	16104	;# 
   572   003EE8                     ADACCL          equ	16104	;# 
   573   003EE9                     ADACCH          equ	16105	;# 
   574   003EEA                     ADACCU          equ	16106	;# 
   575   003EEB                     ADCNT           equ	16107	;# 
   576   003EEC                     ADRPT           equ	16108	;# 
   577   003EED                     ADPREV          equ	16109	;# 
   578   003EED                     ADPREVL         equ	16109	;# 
   579   003EEE                     ADPREVH         equ	16110	;# 
   580   003EEF                     ADRES           equ	16111	;# 
   581   003EEF                     ADRESL          equ	16111	;# 
   582   003EF0                     ADRESH          equ	16112	;# 
   583   003EF1                     ADPCH           equ	16113	;# 
   584   003EF3                     ADACQ           equ	16115	;# 
   585   003EF3                     ADACQL          equ	16115	;# 
   586   003EF4                     ADACQH          equ	16116	;# 
   587   003EF5                     ADCAP           equ	16117	;# 
   588   003EF6                     ADPRE           equ	16118	;# 
   589   003EF6                     ADPREL          equ	16118	;# 
   590   003EF7                     ADPREH          equ	16119	;# 
   591   003EF8                     ADCON0          equ	16120	;# 
   592   003EF9                     ADCON1          equ	16121	;# 
   593   003EFA                     ADCON2          equ	16122	;# 
   594   003EFB                     ADCON3          equ	16123	;# 
   595   003EFC                     ADSTAT          equ	16124	;# 
   596   003EFD                     ADREF           equ	16125	;# 
   597   003EFE                     ADACT           equ	16126	;# 
   598   003EFF                     ADCLK           equ	16127	;# 
   599   003F12                     SMT1TMR         equ	16146	;# 
   600   003F12                     SMT1TMRL        equ	16146	;# 
   601   003F13                     SMT1TMRH        equ	16147	;# 
   602   003F14                     SMT1TMRU        equ	16148	;# 
   603   003F15                     SMT1CPR         equ	16149	;# 
   604   003F15                     SMT1CPRL        equ	16149	;# 
   605   003F16                     SMT1CPRH        equ	16150	;# 
   606   003F17                     SMT1CPRU        equ	16151	;# 
   607   003F18                     SMT1CPW         equ	16152	;# 
   608   003F18                     SMT1CPWL        equ	16152	;# 
   609   003F19                     SMT1CPWH        equ	16153	;# 
   610   003F1A                     SMT1CPWU        equ	16154	;# 
   611   003F1B                     SMT1PR          equ	16155	;# 
   612   003F1B                     SMT1PRL         equ	16155	;# 
   613   003F1C                     SMT1PRH         equ	16156	;# 
   614   003F1D                     SMT1PRU         equ	16157	;# 
   615   003F1E                     SMT1CON0        equ	16158	;# 
   616   003F1F                     SMT1CON1        equ	16159	;# 
   617   003F20                     SMT1STAT        equ	16160	;# 
   618   003F21                     SMT1CLK         equ	16161	;# 
   619   003F22                     SMT1SIG         equ	16162	;# 
   620   003F23                     SMT1WIN         equ	16163	;# 
   621   003F38                     NCO1ACC         equ	16184	;# 
   622   003F38                     NCO1ACCL        equ	16184	;# 
   623   003F39                     NCO1ACCH        equ	16185	;# 
   624   003F3A                     NCO1ACCU        equ	16186	;# 
   625   003F3B                     NCO1INC         equ	16187	;# 
   626   003F3B                     NCO1INCL        equ	16187	;# 
   627   003F3C                     NCO1INCH        equ	16188	;# 
   628   003F3D                     NCO1INCU        equ	16189	;# 
   629   003F3E                     NCO1CON         equ	16190	;# 
   630   003F3F                     NCO1CLK         equ	16191	;# 
   631   003F40                     CWG3CLK         equ	16192	;# 
   632   003F40                     CWG3CLKCON      equ	16192	;# 
   633   003F41                     CWG3ISM         equ	16193	;# 
   634   003F41                     CWG3DAT         equ	16193	;# 
   635   003F42                     CWG3DBR         equ	16194	;# 
   636   003F43                     CWG3DBF         equ	16195	;# 
   637   003F44                     CWG3CON0        equ	16196	;# 
   638   003F45                     CWG3CON1        equ	16197	;# 
   639   003F46                     CWG3AS0         equ	16198	;# 
   640   003F47                     CWG3AS1         equ	16199	;# 
   641   003F48                     CWG3STR         equ	16200	;# 
   642   003F49                     CWG2CLK         equ	16201	;# 
   643   003F49                     CWG2CLKCON      equ	16201	;# 
   644   003F4A                     CWG2ISM         equ	16202	;# 
   645   003F4A                     CWG2DAT         equ	16202	;# 
   646   003F4B                     CWG2DBR         equ	16203	;# 
   647   003F4C                     CWG2DBF         equ	16204	;# 
   648   003F4D                     CWG2CON0        equ	16205	;# 
   649   003F4E                     CWG2CON1        equ	16206	;# 
   650   003F4F                     CWG2AS0         equ	16207	;# 
   651   003F50                     CWG2AS1         equ	16208	;# 
   652   003F51                     CWG2STR         equ	16209	;# 
   653   003F52                     CWG1CLK         equ	16210	;# 
   654   003F52                     CWG1CLKCON      equ	16210	;# 
   655   003F53                     CWG1ISM         equ	16211	;# 
   656   003F53                     CWG1DAT         equ	16211	;# 
   657   003F54                     CWG1DBR         equ	16212	;# 
   658   003F55                     CWG1DBF         equ	16213	;# 
   659   003F56                     CWG1CON0        equ	16214	;# 
   660   003F57                     CWG1CON1        equ	16215	;# 
   661   003F58                     CWG1AS0         equ	16216	;# 
   662   003F59                     CWG1AS1         equ	16217	;# 
   663   003F5A                     CWG1STR         equ	16218	;# 
   664   003F5E                     CCPTMRS0        equ	16222	;# 
   665   003F5F                     CCPTMRS1        equ	16223	;# 
   666   003F60                     PWM8DC          equ	16224	;# 
   667   003F60                     PWM8DCL         equ	16224	;# 
   668   003F61                     PWM8DCH         equ	16225	;# 
   669   003F62                     PWM8CON         equ	16226	;# 
   670   003F64                     PWM7DC          equ	16228	;# 
   671   003F64                     PWM7DCL         equ	16228	;# 
   672   003F65                     PWM7DCH         equ	16229	;# 
   673   003F66                     PWM7CON         equ	16230	;# 
   674   003F68                     PWM6DC          equ	16232	;# 
   675   003F68                     PWM6DCL         equ	16232	;# 
   676   003F69                     PWM6DCH         equ	16233	;# 
   677   003F6A                     PWM6CON         equ	16234	;# 
   678   003F6C                     PWM5DC          equ	16236	;# 
   679   003F6C                     PWM5DCL         equ	16236	;# 
   680   003F6D                     PWM5DCH         equ	16237	;# 
   681   003F6E                     PWM5CON         equ	16238	;# 
   682   003F70                     CCPR4           equ	16240	;# 
   683   003F70                     CCPR4L          equ	16240	;# 
   684   003F71                     CCPR4H          equ	16241	;# 
   685   003F72                     CCP4CON         equ	16242	;# 
   686   003F73                     CCP4CAP         equ	16243	;# 
   687   003F74                     CCPR3           equ	16244	;# 
   688   003F74                     CCPR3L          equ	16244	;# 
   689   003F75                     CCPR3H          equ	16245	;# 
   690   003F76                     CCP3CON         equ	16246	;# 
   691   003F77                     CCP3CAP         equ	16247	;# 
   692   003F78                     CCPR2           equ	16248	;# 
   693   003F78                     CCPR2L          equ	16248	;# 
   694   003F79                     CCPR2H          equ	16249	;# 
   695   003F7A                     CCP2CON         equ	16250	;# 
   696   003F7B                     CCP2CAP         equ	16251	;# 
   697   003F7C                     CCPR1           equ	16252	;# 
   698   003F7C                     CCPR1L          equ	16252	;# 
   699   003F7D                     CCPR1H          equ	16253	;# 
   700   003F7E                     CCP1CON         equ	16254	;# 
   701   003F7F                     CCP1CAP         equ	16255	;# 
   702   003F92                     T6TMR           equ	16274	;# 
   703   003F92                     TMR6            equ	16274	;# 
   704   003F93                     T6PR            equ	16275	;# 
   705   003F93                     PR6             equ	16275	;# 
   706   003F94                     T6CON           equ	16276	;# 
   707   003F95                     T6HLT           equ	16277	;# 
   708   003F96                     T6CLKCON        equ	16278	;# 
   709   003F96                     T6CLK           equ	16278	;# 
   710   003F97                     T6RST           equ	16279	;# 
   711   003F98                     TMR5            equ	16280	;# 
   712   003F98                     TMR5L           equ	16280	;# 
   713   003F99                     TMR5H           equ	16281	;# 
   714   003F9A                     T5CON           equ	16282	;# 
   715   003F9A                     TMR5CON         equ	16282	;# 
   716   003F9B                     T5GCON          equ	16283	;# 
   717   003F9B                     TMR5GCON        equ	16283	;# 
   718   003F9C                     T5GATE          equ	16284	;# 
   719   003F9C                     TMR5GATE        equ	16284	;# 
   720   003F9D                     T5CLK           equ	16285	;# 
   721   003F9D                     TMR5CLK         equ	16285	;# 
   722   003F9D                     PR5             equ	16285	;# 
   723   003F9E                     T4TMR           equ	16286	;# 
   724   003F9E                     TMR4            equ	16286	;# 
   725   003F9F                     T4PR            equ	16287	;# 
   726   003F9F                     PR4             equ	16287	;# 
   727   003FA0                     T4CON           equ	16288	;# 
   728   003FA1                     T4HLT           equ	16289	;# 
   729   003FA2                     T4CLKCON        equ	16290	;# 
   730   003FA2                     T4CLK           equ	16290	;# 
   731   003FA3                     T4RST           equ	16291	;# 
   732   003FA4                     TMR3            equ	16292	;# 
   733   003FA4                     TMR3L           equ	16292	;# 
   734   003FA5                     TMR3H           equ	16293	;# 
   735   003FA6                     T3CON           equ	16294	;# 
   736   003FA6                     TMR3CON         equ	16294	;# 
   737   003FA7                     T3GCON          equ	16295	;# 
   738   003FA7                     TMR3GCON        equ	16295	;# 
   739   003FA8                     T3GATE          equ	16296	;# 
   740   003FA8                     TMR3GATE        equ	16296	;# 
   741   003FA9                     T3CLK           equ	16297	;# 
   742   003FA9                     TMR3CLK         equ	16297	;# 
   743   003FA9                     PR3             equ	16297	;# 
   744   003FAA                     T2TMR           equ	16298	;# 
   745   003FAA                     TMR2            equ	16298	;# 
   746   003FAB                     T2PR            equ	16299	;# 
   747   003FAB                     PR2             equ	16299	;# 
   748   003FAC                     T2CON           equ	16300	;# 
   749   003FAD                     T2HLT           equ	16301	;# 
   750   003FAE                     T2CLKCON        equ	16302	;# 
   751   003FAE                     T2CLK           equ	16302	;# 
   752   003FAF                     T2RST           equ	16303	;# 
   753   003FB0                     TMR1            equ	16304	;# 
   754   003FB0                     TMR1L           equ	16304	;# 
   755   003FB1                     TMR1H           equ	16305	;# 
   756   003FB2                     T1CON           equ	16306	;# 
   757   003FB2                     TMR1CON         equ	16306	;# 
   758   003FB3                     T1GCON          equ	16307	;# 
   759   003FB3                     TMR1GCON        equ	16307	;# 
   760   003FB4                     T1GATE          equ	16308	;# 
   761   003FB4                     TMR1GATE        equ	16308	;# 
   762   003FB5                     T1CLK           equ	16309	;# 
   763   003FB5                     TMR1CLK         equ	16309	;# 
   764   003FB5                     PR1             equ	16309	;# 
   765   003FB6                     TMR0L           equ	16310	;# 
   766   003FB6                     TMR0            equ	16310	;# 
   767   003FB7                     TMR0H           equ	16311	;# 
   768   003FB7                     PR0             equ	16311	;# 
   769   003FB8                     T0CON0          equ	16312	;# 
   770   003FB9                     T0CON1          equ	16313	;# 
   771   003FBA                     LATA            equ	16314	;# 
   772   003FBB                     LATB            equ	16315	;# 
   773   003FBC                     LATC            equ	16316	;# 
   774   003FBD                     LATD            equ	16317	;# 
   775   003FBE                     LATE            equ	16318	;# 
   776   003FC2                     TRISA           equ	16322	;# 
   777   003FC3                     TRISB           equ	16323	;# 
   778   003FC4                     TRISC           equ	16324	;# 
   779   003FC5                     TRISD           equ	16325	;# 
   780   003FC6                     TRISE           equ	16326	;# 
   781   003FCA                     PORTA           equ	16330	;# 
   782   003FCB                     PORTB           equ	16331	;# 
   783   003FCC                     PORTC           equ	16332	;# 
   784   003FCD                     PORTD           equ	16333	;# 
   785   003FCE                     PORTE           equ	16334	;# 
   786   003FD2                     INTCON0         equ	16338	;# 
   787   003FD3                     INTCON1         equ	16339	;# 
   788   003FD4                     IVTLOCK         equ	16340	;# 
   789   003FD5                     IVTBASE         equ	16341	;# 
   790   003FD5                     IVTBASEL        equ	16341	;# 
   791   003FD6                     IVTBASEH        equ	16342	;# 
   792   003FD7                     IVTBASEU        equ	16343	;# 
   793   003FD8                     STATUS          equ	16344	;# 
   794   003FD9                     FSR2            equ	16345	;# 
   795   003FD9                     FSR2L           equ	16345	;# 
   796   003FDA                     FSR2H           equ	16346	;# 
   797   003FDB                     PLUSW2          equ	16347	;# 
   798   003FDC                     PREINC2         equ	16348	;# 
   799   003FDD                     POSTDEC2        equ	16349	;# 
   800   003FDE                     POSTINC2        equ	16350	;# 
   801   003FDF                     INDF2           equ	16351	;# 
   802   003FE0                     BSR             equ	16352	;# 
   803   003FE1                     FSR1            equ	16353	;# 
   804   003FE1                     FSR1L           equ	16353	;# 
   805   003FE2                     FSR1H           equ	16354	;# 
   806   003FE3                     PLUSW1          equ	16355	;# 
   807   003FE4                     PREINC1         equ	16356	;# 
   808   003FE5                     POSTDEC1        equ	16357	;# 
   809   003FE6                     POSTINC1        equ	16358	;# 
   810   003FE7                     INDF1           equ	16359	;# 
   811   003FE8                     WREG            equ	16360	;# 
   812   003FE9                     FSR0            equ	16361	;# 
   813   003FE9                     FSR0L           equ	16361	;# 
   814   003FEA                     FSR0H           equ	16362	;# 
   815   003FEB                     PLUSW0          equ	16363	;# 
   816   003FEC                     PREINC0         equ	16364	;# 
   817   003FED                     POSTDEC0        equ	16365	;# 
   818   003FEE                     POSTINC0        equ	16366	;# 
   819   003FEF                     INDF0           equ	16367	;# 
   820   003FF0                     PCON0           equ	16368	;# 
   821   003FF1                     PCON1           equ	16369	;# 
   822   003FF3                     PROD            equ	16371	;# 
   823   003FF3                     PRODL           equ	16371	;# 
   824   003FF4                     PRODH           equ	16372	;# 
   825   003FF5                     TABLAT          equ	16373	;# 
   826   003FF6                     TBLPTR          equ	16374	;# 
   827   003FF6                     TBLPTRL         equ	16374	;# 
   828   003FF7                     TBLPTRH         equ	16375	;# 
   829   003FF8                     TBLPTRU         equ	16376	;# 
   830   003FF9                     PCLAT           equ	16377	;# 
   831   003FF9                     PCL             equ	16377	;# 
   832   003FFA                     PCLATH          equ	16378	;# 
   833   003FFB                     PCLATU          equ	16379	;# 
   834   003FFC                     STKPTR          equ	16380	;# 
   835   003FFD                     TOS             equ	16381	;# 
   836   003FFD                     TOSL            equ	16381	;# 
   837   003FFE                     TOSH            equ	16382	;# 
   838   003FFF                     TOSU            equ	16383	;# 
   839   0039DF                     _OSCFRQ         set	14815
   840   0039DC                     _OSCSTATbits    set	14812
   841   0039A4                     _PIR4bits       set	14756
   842   003A50                     _ANSELB         set	14928
   843   003A70                     _ANSELD         set	14960
   844   003A0B                     _RB3PPS         set	14859
   845   003ABF                     _PPSLOCKbits    set	15039
   846   003ABF                     _PPSLOCK        set	15039
   847   003F5E                     _CCPTMRS0bits   set	16222
   848   003FCD                     _PORTDbits      set	16333
   849   003FCB                     _PORTBbits      set	16331
   850   003FCB                     _PORTB          set	16331
   851   003FC3                     _TRISB          set	16323
   852   003FCD                     _PORTD          set	16333
   853   003FC5                     _TRISD          set	16325
   854   003F7A                     _CCP2CONbits    set	16250
   855   003F78                     _CCPR2L         set	16248
   856   003F79                     _CCPR2H         set	16249
   857   003F7A                     _CCP2CON        set	16250
   858   003FC3                     _TRISBbits      set	16323
   859   003FAB                     _PR2            set	16299
   860   003FAA                     _TMR2           set	16298
   861   003FAC                     _T2CONbits      set	16300
   862   003FAC                     _T2CON          set	16300
   863   003FAA                     _T2TMR          set	16298
   864   003FAF                     _T2RST          set	16303
   865   003FAD                     _T2HLT          set	16301
   866   003FAE                     _T2CLKCON       set	16302
   867   003FAB                     _T2PR           set	16299
   868                           
   869                           ; #config settings
   870                           
   871                           	psect	cinit
   872   002202                     __pcinit:
   873                           	callstack 0
   874   002202                     start_initialization:
   875                           	callstack 0
   876   002202                     __initialization:
   877                           	callstack 0
   878                           
   879                           ; Clear objects allocated to COMRAM (4 bytes)
   880   002202  6A13               	clrf	(__pbssCOMRAM+3)& (0+255),c
   881   002204  6A12               	clrf	(__pbssCOMRAM+2)& (0+255),c
   882   002206  6A11               	clrf	(__pbssCOMRAM+1)& (0+255),c
   883   002208  6A10               	clrf	__pbssCOMRAM& (0+255),c
   884   00220A                     end_of_initialization:
   885                           	callstack 0
   886   00220A                     __end_of__initialization:
   887                           	callstack 0
   888   00220A  0100               	movlb	0
   889   00220C  EF01  F010         	goto	_main	;jump to C main() function
   890                           
   891                           	psect	bssCOMRAM
   892   000010                     __pbssCOMRAM:
   893                           	callstack 0
   894   000010                     _checkdutyCycle:
   895                           	callstack 0
   896   000010                     	ds	2
   897   000012                     _pwmStatus:
   898                           	callstack 0
   899   000012                     	ds	1
   900   000013                     _preScale:
   901                           	callstack 0
   902   000013                     	ds	1
   903                           
   904                           	psect	cstackCOMRAM
   905   000001                     __pcstackCOMRAM:
   906                           	callstack 0
   907   000001                     ?___lldiv:
   908                           	callstack 0
   909   000001                     PWM2_LoadDutyValue@dutyValue:
   910                           	callstack 0
   911   000001                     ___lldiv@dividend:
   912                           	callstack 0
   913   000001                     
   914                           ; 1 bytes @ 0x0
   915   000001                     	ds	2
   916   000003                     
   917                           ; 1 bytes @ 0x2
   918   000003                     	ds	2
   919   000005                     ___lldiv@divisor:
   920                           	callstack 0
   921                           
   922                           ; 4 bytes @ 0x4
   923   000005                     	ds	4
   924   000009                     ___lldiv@quotient:
   925                           	callstack 0
   926   000009                     
   927                           ; 1 bytes @ 0x8
   928   000009                     	ds	4
   929   00000D                     ___lldiv@counter:
   930                           	callstack 0
   931                           
   932                           ; 1 bytes @ 0xC
   933   00000D                     	ds	1
   934   00000E                     ??_main:
   935                           
   936                           ; 1 bytes @ 0xD
   937   00000E                     	ds	2
   938                           
   939 ;;
   940 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   941 ;;
   942 ;; *************** function _main *****************
   943 ;; Defined at:
   944 ;;		line 74 in file "main.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;		None
   947 ;; Auto vars:     Size  Location     Type
   948 ;;		None
   949 ;; Return value:  Size  Location     Type
   950 ;;                  1    wreg      void 
   951 ;; Registers used:
   952 ;;		wreg, status,2, status,0, cstack
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   960 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   961 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   962 ;;Total ram usage:        2 bytes
   963 ;; Hardware stack levels required when called: 2
   964 ;; This function calls:
   965 ;;		_PWM2_Initialize
   966 ;;		_PWM2_LoadDutyValue
   967 ;;		_PWM2_OutputStatusGet
   968 ;;		_PWM_Output_D8_Enable
   969 ;;		_TMR2_Initialize
   970 ;;		_TMR2_StartTimer
   971 ;;		___lldiv
   972 ;; This function is called by:
   973 ;;		Startup code after reset
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977                           	psect	text0
   978   002002                     __ptext0:
   979                           	callstack 0
   980   002002                     _main:
   981                           	callstack 29
   982   002002                     
   983                           ;main.c: 75:     OSCSTATbits.HFOR =1;
   984   002002  0139               	movlb	57	; () banked
   985   002004  8DDC               	bsf	220,6,b	;volatile
   986   002006                     
   987                           ; BSR set to: 57
   988                           ;main.c: 76:     OSCFRQ=0x02;
   989   002006  0E02               	movlw	2
   990   002008  6FDF               	movwf	223,b	;volatile
   991   00200A                     
   992                           ; BSR set to: 57
   993                           ;main.c: 78:     ANSELD = 0b00000000;
   994   00200A  013A               	movlb	58	; () banked
   995   00200C  6B70               	clrf	112,b	;volatile
   996   00200E                     
   997                           ; BSR set to: 58
   998                           ;main.c: 79:     TRISD= 0b00000000;
   999   00200E  6AC5               	clrf	197,c	;volatile
  1000   002010                     
  1001                           ; BSR set to: 58
  1002                           ;main.c: 80:     PORTD= 0b00000000;
  1003   002010  6ACD               	clrf	205,c	;volatile
  1004   002012                     
  1005                           ; BSR set to: 58
  1006                           ;main.c: 81:     ANSELB = 0x00;
  1007   002012  6B50               	clrf	80,b	;volatile
  1008   002014                     
  1009                           ; BSR set to: 58
  1010                           ;main.c: 82:     TRISB = 0x00;
  1011   002014  6AC3               	clrf	195,c	;volatile
  1012   002016                     
  1013                           ; BSR set to: 58
  1014                           ;main.c: 83:     PORTB = 0x00;
  1015   002016  6ACB               	clrf	203,c	;volatile
  1016   002018                     
  1017                           ; BSR set to: 58
  1018                           ;main.c: 84:     TMR2_Initialize();
  1019   002018  ECE0  F010         	call	_TMR2_Initialize	;wreg free
  1020                           
  1021                           ;main.c: 85:     TMR2_StartTimer();
  1022   00201C  EC08  F011         	call	_TMR2_StartTimer	;wreg free
  1023   002020                     
  1024                           ;main.c: 87:     PWM_Output_D8_Enable();
  1025   002020  ECD2  F010         	call	_PWM_Output_D8_Enable	;wreg free
  1026   002024                     
  1027                           ;main.c: 88:     PWM2_Initialize();
  1028   002024  ECEC  F010         	call	_PWM2_Initialize	;wreg free
  1029   002028                     
  1030                           ;main.c: 89:     PWM2_LoadDutyValue(340 );
  1031   002028  0E01               	movlw	1
  1032   00202A  6E02               	movwf	(PWM2_LoadDutyValue@dutyValue+1)^0,c
  1033   00202C  0E54               	movlw	84
  1034   00202E  6E01               	movwf	PWM2_LoadDutyValue@dutyValue^0,c
  1035   002030  ECBA  F010         	call	_PWM2_LoadDutyValue	;wreg free
  1036   002034                     
  1037                           ;main.c: 94:     checkdutyCycle =(uint16_t)((100UL*340)/(4*(T2PR+1)));
  1038   002034  0ED0               	movlw	208
  1039   002036  6E01               	movwf	___lldiv@dividend^0,c
  1040   002038  0E84               	movlw	132
  1041   00203A  6E02               	movwf	(___lldiv@dividend+1)^0,c
  1042   00203C  0E00               	movlw	0
  1043   00203E  6E03               	movwf	(___lldiv@dividend+2)^0,c
  1044   002040  0E00               	movlw	0
  1045   002042  6E04               	movwf	(___lldiv@dividend+3)^0,c
  1046   002044  50AB               	movf	171,w,c	;volatile
  1047   002046  6E0E               	movwf	??_main^0,c
  1048   002048  6A0F               	clrf	(??_main+1)^0,c
  1049   00204A  90D8               	bcf	status,0,c
  1050   00204C  360E               	rlcf	??_main^0,f,c
  1051   00204E  360F               	rlcf	(??_main+1)^0,f,c
  1052   002050  90D8               	bcf	status,0,c
  1053   002052  360E               	rlcf	??_main^0,f,c
  1054   002054  360F               	rlcf	(??_main+1)^0,f,c
  1055   002056  0E04               	movlw	4
  1056   002058  260E               	addwf	??_main^0,f,c
  1057   00205A  0E00               	movlw	0
  1058   00205C  220F               	addwfc	(??_main+1)^0,f,c
  1059   00205E  C00E  F005         	movff	??_main,___lldiv@divisor
  1060   002062  C00F  F006         	movff	??_main+1,___lldiv@divisor+1
  1061   002066  0E00               	movlw	0
  1062   002068  BE06               	btfsc	(___lldiv@divisor+1)^0,7,c
  1063   00206A  0EFF               	movlw	-1
  1064   00206C  6E07               	movwf	(___lldiv@divisor+2)^0,c
  1065   00206E  6E08               	movwf	(___lldiv@divisor+3)^0,c
  1066   002070  EC68  F010         	call	___lldiv	;wreg free
  1067   002074  C001  F010         	movff	?___lldiv,_checkdutyCycle
  1068   002078  C002  F011         	movff	?___lldiv+1,_checkdutyCycle+1
  1069   00207C                     
  1070                           ;main.c: 96:     preScale = ((T2CON >> 4) & (0x0F));
  1071   00207C  38AC               	swapf	172,w,c	;volatile
  1072   00207E  0B0F               	andlw	15
  1073   002080  0B0F               	andlw	15
  1074   002082  6E13               	movwf	_preScale^0,c
  1075   002084                     l997:
  1076                           
  1077                           ;main.c: 99:         pwmStatus = PWM2_OutputStatusGet();
  1078   002084  ECF7  F010         	call	_PWM2_OutputStatusGet	;wreg free
  1079   002088  6E12               	movwf	_pwmStatus^0,c
  1080   00208A                     
  1081                           ;main.c: 100:         PORTBbits.RB2 = pwmStatus;
  1082   00208A  B012               	btfsc	_pwmStatus^0,0,c
  1083   00208C  D002               	bra	u155
  1084   00208E  94CB               	bcf	203,2,c	;volatile
  1085   002090  D001               	bra	u156
  1086   002092                     u155:
  1087   002092  84CB               	bsf	203,2,c	;volatile
  1088   002094                     u156:
  1089   002094                     
  1090                           ;main.c: 102:         if (PIR4bits.TMR2IF == 1) {
  1091   002094  0139               	movlb	57	; () banked
  1092   002096  A5A4               	btfss	164,2,b	;volatile
  1093   002098  EF50  F010         	goto	u161
  1094   00209C  EF52  F010         	goto	u160
  1095   0020A0                     u161:
  1096   0020A0  EF42  F010         	goto	l997
  1097   0020A4                     u160:
  1098   0020A4                     
  1099                           ; BSR set to: 57
  1100                           ;main.c: 103:             PIR4bits.TMR2IF = 0;
  1101   0020A4  95A4               	bcf	164,2,b	;volatile
  1102   0020A6                     
  1103                           ; BSR set to: 57
  1104                           ;main.c: 104:             PORTDbits.RD1= ~PORTDbits.RD1;
  1105   0020A6  B2CD               	btfsc	205,1,c	;volatile
  1106   0020A8  EF58  F010         	goto	u171
  1107   0020AC  EF5B  F010         	goto	u170
  1108   0020B0                     u171:
  1109   0020B0  0E01               	movlw	1
  1110   0020B2  EF5C  F010         	goto	u176
  1111   0020B6                     u170:
  1112   0020B6  0E00               	movlw	0
  1113   0020B8                     u176:
  1114   0020B8  0AFF               	xorlw	255
  1115   0020BA  6E0E               	movwf	??_main^0,c
  1116   0020BC  460E               	rlncf	??_main^0,f,c
  1117   0020BE  50CD               	movf	205,w,c	;volatile
  1118   0020C0  180E               	xorwf	??_main^0,w,c
  1119   0020C2  0BFD               	andlw	-3
  1120   0020C4  180E               	xorwf	??_main^0,w,c
  1121   0020C6  6ECD               	movwf	205,c	;volatile
  1122   0020C8  EF42  F010         	goto	l997
  1123   0020CC  EFFE  F0FF         	goto	start
  1124   0020D0                     __end_of_main:
  1125                           	callstack 0
  1126                           
  1127 ;; *************** function ___lldiv *****************
  1128 ;; Defined at:
  1129 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__lldiv.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;  dividend        4    0[COMRAM] unsigned long 
  1132 ;;  divisor         4    4[COMRAM] unsigned long 
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;  quotient        4    8[COMRAM] unsigned long 
  1135 ;;  counter         1   12[COMRAM] unsigned char 
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  4    0[COMRAM] unsigned long 
  1138 ;; Registers used:
  1139 ;;		wreg, status,2, status,0
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1145 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1146 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1148 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1149 ;;Total ram usage:       13 bytes
  1150 ;; Hardware stack levels used: 1
  1151 ;; This function calls:
  1152 ;;		Nothing
  1153 ;; This function is called by:
  1154 ;;		_main
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158                           	psect	text1
  1159   0020D0                     __ptext1:
  1160                           	callstack 0
  1161   0020D0                     ___lldiv:
  1162                           	callstack 30
  1163   0020D0  0E00               	movlw	0
  1164   0020D2  6E09               	movwf	___lldiv@quotient^0,c
  1165   0020D4  0E00               	movlw	0
  1166   0020D6  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  1167   0020D8  0E00               	movlw	0
  1168   0020DA  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  1169   0020DC  0E00               	movlw	0
  1170   0020DE  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  1171   0020E0  5005               	movf	___lldiv@divisor^0,w,c
  1172   0020E2  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  1173   0020E4  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  1174   0020E6  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  1175   0020E8  B4D8               	btfsc	status,2,c
  1176   0020EA  EF79  F010         	goto	u121
  1177   0020EE  EF7B  F010         	goto	u120
  1178   0020F2                     u121:
  1179   0020F2  EFB1  F010         	goto	l153
  1180   0020F6                     u120:
  1181   0020F6  0E01               	movlw	1
  1182   0020F8  6E0D               	movwf	___lldiv@counter^0,c
  1183   0020FA  EF85  F010         	goto	l955
  1184   0020FE                     l953:
  1185   0020FE  90D8               	bcf	status,0,c
  1186   002100  3605               	rlcf	___lldiv@divisor^0,f,c
  1187   002102  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  1188   002104  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  1189   002106  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  1190   002108  2A0D               	incf	___lldiv@counter^0,f,c
  1191   00210A                     l955:
  1192   00210A  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  1193   00210C  EF8A  F010         	goto	u131
  1194   002110  EF8C  F010         	goto	u130
  1195   002114                     u131:
  1196   002114  EF7F  F010         	goto	l953
  1197   002118                     u130:
  1198   002118                     l957:
  1199   002118  90D8               	bcf	status,0,c
  1200   00211A  3609               	rlcf	___lldiv@quotient^0,f,c
  1201   00211C  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  1202   00211E  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  1203   002120  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  1204   002122  5005               	movf	___lldiv@divisor^0,w,c
  1205   002124  5C01               	subwf	___lldiv@dividend^0,w,c
  1206   002126  5006               	movf	(___lldiv@divisor+1)^0,w,c
  1207   002128  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  1208   00212A  5007               	movf	(___lldiv@divisor+2)^0,w,c
  1209   00212C  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  1210   00212E  5008               	movf	(___lldiv@divisor+3)^0,w,c
  1211   002130  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  1212   002132  A0D8               	btfss	status,0,c
  1213   002134  EF9E  F010         	goto	u141
  1214   002138  EFA0  F010         	goto	u140
  1215   00213C                     u141:
  1216   00213C  EFA9  F010         	goto	l965
  1217   002140                     u140:
  1218   002140  5005               	movf	___lldiv@divisor^0,w,c
  1219   002142  5E01               	subwf	___lldiv@dividend^0,f,c
  1220   002144  5006               	movf	(___lldiv@divisor+1)^0,w,c
  1221   002146  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  1222   002148  5007               	movf	(___lldiv@divisor+2)^0,w,c
  1223   00214A  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  1224   00214C  5008               	movf	(___lldiv@divisor+3)^0,w,c
  1225   00214E  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  1226   002150  8009               	bsf	___lldiv@quotient^0,0,c
  1227   002152                     l965:
  1228   002152  90D8               	bcf	status,0,c
  1229   002154  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  1230   002156  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  1231   002158  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  1232   00215A  3205               	rrcf	___lldiv@divisor^0,f,c
  1233   00215C  2E0D               	decfsz	___lldiv@counter^0,f,c
  1234   00215E  EF8C  F010         	goto	l957
  1235   002162                     l153:
  1236   002162  C009  F001         	movff	___lldiv@quotient,?___lldiv
  1237   002166  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  1238   00216A  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  1239   00216E  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  1240   002172  0012               	return		;funcret
  1241   002174                     __end_of___lldiv:
  1242                           	callstack 0
  1243                           
  1244 ;; *************** function _TMR2_StartTimer *****************
  1245 ;; Defined at:
  1246 ;;		line 74 in file "./PWM.h"
  1247 ;; Parameters:    Size  Location     Type
  1248 ;;		None
  1249 ;; Auto vars:     Size  Location     Type
  1250 ;;		None
  1251 ;; Return value:  Size  Location     Type
  1252 ;;                  1    wreg      void 
  1253 ;; Registers used:
  1254 ;;		cstack
  1255 ;; Tracked objects:
  1256 ;;		On entry : 0/0
  1257 ;;		On exit  : 0/0
  1258 ;;		Unchanged: 0/0
  1259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1264 ;;Total ram usage:        0 bytes
  1265 ;; Hardware stack levels used: 1
  1266 ;; Hardware stack levels required when called: 1
  1267 ;; This function calls:
  1268 ;;		_TMR2_Start
  1269 ;; This function is called by:
  1270 ;;		_main
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           
  1274                           	psect	text2
  1275   002210                     __ptext2:
  1276                           	callstack 0
  1277   002210                     _TMR2_StartTimer:
  1278                           	callstack 29
  1279   002210                     
  1280                           ;./PWM.h: 76:     TMR2_Start();
  1281   002210  EC0B  F011         	call	_TMR2_Start	;wreg free
  1282   002214  0012               	return		;funcret
  1283   002216                     __end_of_TMR2_StartTimer:
  1284                           	callstack 0
  1285                           
  1286 ;; *************** function _TMR2_Start *****************
  1287 ;; Defined at:
  1288 ;;		line 68 in file "./PWM.h"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;		None
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;		None
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  1    wreg      void 
  1295 ;; Registers used:
  1296 ;;		None
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1306 ;;Total ram usage:        0 bytes
  1307 ;; Hardware stack levels used: 1
  1308 ;; This function calls:
  1309 ;;		Nothing
  1310 ;; This function is called by:
  1311 ;;		_TMR2_StartTimer
  1312 ;; This function uses a non-reentrant model
  1313 ;;
  1314                           
  1315                           	psect	text3
  1316   002216                     __ptext3:
  1317                           	callstack 0
  1318   002216                     _TMR2_Start:
  1319                           	callstack 29
  1320   002216                     
  1321                           ;./PWM.h: 71:     T2CONbits.TMR2ON = 1;
  1322   002216  8EAC               	bsf	172,7,c	;volatile
  1323   002218  0012               	return		;funcret
  1324   00221A                     __end_of_TMR2_Start:
  1325                           	callstack 0
  1326                           
  1327 ;; *************** function _TMR2_Initialize *****************
  1328 ;; Defined at:
  1329 ;;		line 30 in file "./PWM.h"
  1330 ;; Parameters:    Size  Location     Type
  1331 ;;		None
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;		None
  1334 ;; Return value:  Size  Location     Type
  1335 ;;                  1    wreg      void 
  1336 ;; Registers used:
  1337 ;;		wreg, status,2
  1338 ;; Tracked objects:
  1339 ;;		On entry : 0/0
  1340 ;;		On exit  : 0/0
  1341 ;;		Unchanged: 0/0
  1342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1347 ;;Total ram usage:        0 bytes
  1348 ;; Hardware stack levels used: 1
  1349 ;; This function calls:
  1350 ;;		Nothing
  1351 ;; This function is called by:
  1352 ;;		_main
  1353 ;; This function uses a non-reentrant model
  1354 ;;
  1355                           
  1356                           	psect	text4
  1357   0021C0                     __ptext4:
  1358                           	callstack 0
  1359   0021C0                     _TMR2_Initialize:
  1360                           	callstack 30
  1361   0021C0                     
  1362                           ;./PWM.h: 35:     T2CLKCON = 0x01;
  1363   0021C0  0E01               	movlw	1
  1364   0021C2  6EAE               	movwf	174,c	;volatile
  1365   0021C4                     
  1366                           ;./PWM.h: 38:     T2HLT = 0x00;
  1367   0021C4  6AAD               	clrf	173,c	;volatile
  1368   0021C6                     
  1369                           ;./PWM.h: 41:     T2RST = 0x00;
  1370   0021C6  6AAF               	clrf	175,c	;volatile
  1371                           
  1372                           ;./PWM.h: 44:     T2PR = 0xFF >> 1;
  1373   0021C8  0E7F               	movlw	127
  1374   0021CA  6EAB               	movwf	171,c	;volatile
  1375   0021CC                     
  1376                           ;./PWM.h: 47:     T2TMR = 0x00;
  1377   0021CC  6AAA               	clrf	170,c	;volatile
  1378   0021CE                     
  1379                           ;./PWM.h: 50:     PIR4bits.TMR2IF = 0;
  1380   0021CE  0139               	movlb	57	; () banked
  1381   0021D0  95A4               	bcf	164,2,b	;volatile
  1382                           
  1383                           ;./PWM.h: 53:     T2CON = 0xB0;
  1384   0021D2  0EB0               	movlw	176
  1385   0021D4  6EAC               	movwf	172,c	;volatile
  1386   0021D6                     
  1387                           ; BSR set to: 57
  1388   0021D6  0012               	return		;funcret
  1389   0021D8                     __end_of_TMR2_Initialize:
  1390                           	callstack 0
  1391                           
  1392 ;; *************** function _PWM_Output_D8_Enable *****************
  1393 ;; Defined at:
  1394 ;;		line 142 in file "./PWM.h"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;		None
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;		None
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  1    wreg      void 
  1401 ;; Registers used:
  1402 ;;		wreg, status,2
  1403 ;; Tracked objects:
  1404 ;;		On entry : 0/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1412 ;;Total ram usage:        0 bytes
  1413 ;; Hardware stack levels used: 1
  1414 ;; This function calls:
  1415 ;;		Nothing
  1416 ;; This function is called by:
  1417 ;;		_main
  1418 ;; This function uses a non-reentrant model
  1419 ;;
  1420                           
  1421                           	psect	text5
  1422   0021A4                     __ptext5:
  1423                           	callstack 0
  1424   0021A4                     _PWM_Output_D8_Enable:
  1425                           	callstack 30
  1426   0021A4                     
  1427                           ;./PWM.h: 143:     PPSLOCK = 0x55;
  1428   0021A4  0E55               	movlw	85
  1429   0021A6  013A               	movlb	58	; () banked
  1430   0021A8  6FBF               	movwf	191,b	;volsfr
  1431                           
  1432                           ;./PWM.h: 144:     PPSLOCK = 0xAA;
  1433   0021AA  0EAA               	movlw	170
  1434   0021AC  6FBF               	movwf	191,b	;volsfr
  1435   0021AE                     
  1436                           ; BSR set to: 58
  1437                           ;./PWM.h: 145:     PPSLOCKbits.PPSLOCKED = 0x00;
  1438   0021AE  91BF               	bcf	191,0,b	;volsfr
  1439                           
  1440                           ;./PWM.h: 148:     RB3PPS = 0x0A;
  1441   0021B0  0E0A               	movlw	10
  1442   0021B2  6F0B               	movwf	11,b	;volatile
  1443                           
  1444                           ;./PWM.h: 150:     PPSLOCK = 0x55;
  1445   0021B4  0E55               	movlw	85
  1446   0021B6  6FBF               	movwf	191,b	;volsfr
  1447                           
  1448                           ;./PWM.h: 151:     PPSLOCK = 0xAA;
  1449   0021B8  0EAA               	movlw	170
  1450   0021BA  6FBF               	movwf	191,b	;volsfr
  1451   0021BC                     
  1452                           ; BSR set to: 58
  1453                           ;./PWM.h: 152:     PPSLOCKbits.PPSLOCKED = 0x01;
  1454   0021BC  81BF               	bsf	191,0,b	;volsfr
  1455   0021BE                     
  1456                           ; BSR set to: 58
  1457   0021BE  0012               	return		;funcret
  1458   0021C0                     __end_of_PWM_Output_D8_Enable:
  1459                           	callstack 0
  1460                           
  1461 ;; *************** function _PWM2_OutputStatusGet *****************
  1462 ;; Defined at:
  1463 ;;		line 205 in file "./PWM.h"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;		None
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;		None
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  1    wreg      _Bool 
  1470 ;; Registers used:
  1471 ;;		wreg
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1481 ;;Total ram usage:        0 bytes
  1482 ;; Hardware stack levels used: 1
  1483 ;; This function calls:
  1484 ;;		Nothing
  1485 ;; This function is called by:
  1486 ;;		_main
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           	psect	text6
  1491   0021EE                     __ptext6:
  1492                           	callstack 0
  1493   0021EE                     _PWM2_OutputStatusGet:
  1494                           	callstack 30
  1495   0021EE                     
  1496                           ;./PWM.h: 208:     return(CCP2CONbits.OUT);
  1497   0021EE  BA7A               	btfsc	122,5,c	;volatile
  1498   0021F0  EFFC  F010         	goto	u31
  1499   0021F4  EFFF  F010         	goto	u30
  1500   0021F8                     u31:
  1501   0021F8  0E01               	movlw	1
  1502   0021FA  EF00  F011         	goto	u36
  1503   0021FE                     u30:
  1504   0021FE  0E00               	movlw	0
  1505   002200                     u36:
  1506   002200  0012               	return		;funcret
  1507   002202                     __end_of_PWM2_OutputStatusGet:
  1508                           	callstack 0
  1509                           
  1510 ;; *************** function _PWM2_LoadDutyValue *****************
  1511 ;; Defined at:
  1512 ;;		line 187 in file "./PWM.h"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;  dutyValue       2    0[COMRAM] unsigned short 
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;		None
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  1    wreg      void 
  1519 ;; Registers used:
  1520 ;;		wreg, status,2, status,0
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1526 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1529 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1530 ;;Total ram usage:        2 bytes
  1531 ;; Hardware stack levels used: 1
  1532 ;; This function calls:
  1533 ;;		Nothing
  1534 ;; This function is called by:
  1535 ;;		_main
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           	psect	text7
  1540   002174                     __ptext7:
  1541                           	callstack 0
  1542   002174                     _PWM2_LoadDutyValue:
  1543                           	callstack 30
  1544   002174                     
  1545                           ;./PWM.h: 187: void PWM2_LoadDutyValue(uint16_t dutyValue);./PWM.h: 188: {;./PWM.h: 189:
      +                               dutyValue &= 0x03FF;
  1546   002174  0EFF               	movlw	255
  1547   002176  1601               	andwf	PWM2_LoadDutyValue@dutyValue^0,f,c
  1548   002178  0E03               	movlw	3
  1549   00217A  1602               	andwf	(PWM2_LoadDutyValue@dutyValue+1)^0,f,c
  1550   00217C                     
  1551                           ;./PWM.h: 192:     if(CCP2CONbits.FMT)
  1552   00217C  A87A               	btfss	122,4,c	;volatile
  1553   00217E  EFC3  F010         	goto	u101
  1554   002182  EFC5  F010         	goto	u100
  1555   002186                     u101:
  1556   002186  EFCC  F010         	goto	l939
  1557   00218A                     u100:
  1558   00218A                     
  1559                           ;./PWM.h: 193:     {;./PWM.h: 194:         dutyValue <<= 6;
  1560   00218A  0E06               	movlw	6
  1561   00218C                     u115:
  1562   00218C  90D8               	bcf	status,0,c
  1563   00218E  3601               	rlcf	PWM2_LoadDutyValue@dutyValue^0,f,c
  1564   002190  3602               	rlcf	(PWM2_LoadDutyValue@dutyValue+1)^0,f,c
  1565   002192  2EE8               	decfsz	wreg,f,c
  1566   002194  EFC6  F010         	goto	u115
  1567   002198                     l939:
  1568                           
  1569                           ;./PWM.h: 195:         CCPR2H = dutyValue >> 8;
  1570   002198  5002               	movf	(PWM2_LoadDutyValue@dutyValue+1)^0,w,c
  1571   00219A  6E79               	movwf	121,c	;volatile
  1572   00219C                     
  1573                           ;./PWM.h: 196:         CCPR2L = dutyValue;
  1574   00219C  0060  F007  FF78   	movff	PWM2_LoadDutyValue@dutyValue,16248	;volatile
  1575   0021A2  0012               	return		;funcret
  1576   0021A4                     __end_of_PWM2_LoadDutyValue:
  1577                           	callstack 0
  1578                           
  1579 ;; *************** function _PWM2_Initialize *****************
  1580 ;; Defined at:
  1581 ;;		line 170 in file "./PWM.h"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;		None
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;		None
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  1    wreg      void 
  1588 ;; Registers used:
  1589 ;;		wreg, status,2
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1599 ;;Total ram usage:        0 bytes
  1600 ;; Hardware stack levels used: 1
  1601 ;; This function calls:
  1602 ;;		Nothing
  1603 ;; This function is called by:
  1604 ;;		_main
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           	psect	text8
  1609   0021D8                     __ptext8:
  1610                           	callstack 0
  1611   0021D8                     _PWM2_Initialize:
  1612                           	callstack 30
  1613   0021D8                     
  1614                           ;./PWM.h: 175:  CCP2CON = 0x8C;
  1615   0021D8  0E8C               	movlw	140
  1616   0021DA  6E7A               	movwf	122,c	;volatile
  1617   0021DC                     
  1618                           ;./PWM.h: 178:  CCPR2H = 0x0;
  1619   0021DC  6A79               	clrf	121,c	;volatile
  1620                           
  1621                           ;./PWM.h: 181:  CCPR2L = 0x0f;
  1622   0021DE  0E0F               	movlw	15
  1623   0021E0  6E78               	movwf	120,c	;volatile
  1624                           
  1625                           ;./PWM.h: 184:  CCPTMRS0bits.C2TSEL = 0x1;
  1626   0021E2  013F               	movlb	63	; () banked
  1627   0021E4  515E               	movf	94,w,b	;volatile
  1628   0021E6  0BF3               	andlw	-13
  1629   0021E8  0904               	iorlw	4
  1630   0021EA  6F5E               	movwf	94,b	;volatile
  1631   0021EC                     
  1632                           ; BSR set to: 63
  1633   0021EC  0012               	return		;funcret
  1634   0021EE                     __end_of_PWM2_Initialize:
  1635                           	callstack 0
  1636                           
  1637                           	psect	smallconst
  1638   002000                     __psmallconst:
  1639                           	callstack 0
  1640   002000  00                 	db	0
  1641   002001  00                 	db	0	; dummy byte at the end
  1642   002000                     __smallconst    set	__psmallconst
  1643   002000                     __mediumconst   set	__psmallconst
  1644   000000                     __activetblptr  equ	0
  1645                           
  1646                           	psect	rparam
  1647   000001                     ___rparam_used  equ	1
  1648   000000                     ___param_bank   equ	0
  1649   000000                     __Lparam        equ	__Lrparam
  1650   000000                     __Hparam        equ	__Hrparam
  1651                           
  1652                           	psect	config
  1653                           
  1654                           ;Config register CONFIG1L @ 0x300000
  1655                           ;	External Oscillator Selection
  1656                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  1657                           ;	Reset Oscillator Selection
  1658                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1659   300000                     	org	3145728
  1660   300000  F8                 	db	248
  1661                           
  1662                           ;Config register CONFIG1H @ 0x300001
  1663                           ;	Clock out Enable bit
  1664                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1665                           ;	PRLOCKED One-Way Set Enable bit
  1666                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  1667                           ;	Clock Switch Enable bit
  1668                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1669                           ;	Fail-Safe Clock Monitor Enable bit
  1670                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1671   300001                     	org	3145729
  1672   300001  FF                 	db	255
  1673                           
  1674                           ;Config register CONFIG2L @ 0x300002
  1675                           ;	MCLR Enable bit
  1676                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1677                           ;	Power-up timer selection bits
  1678                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1679                           ;	Multi-vector enable bit
  1680                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  1681                           ;	IVTLOCK bit One-way set enable bit
  1682                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  1683                           ;	Low Power BOR Enable bit
  1684                           ;	LPBOREN = OFF, ULPBOR disabled
  1685                           ;	Brown-out Reset Enable bits
  1686                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  1687   300002                     	org	3145730
  1688   300002  FF                 	db	255
  1689                           
  1690                           ;Config register CONFIG2H @ 0x300003
  1691                           ;	Brown-out Reset Voltage Selection bits
  1692                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  1693                           ;	ZCD Disable bit
  1694                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  1695                           ;	PPSLOCK bit One-Way Set Enable bit
  1696                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  1697                           ;	Stack Full/Underflow Reset Enable bit
  1698                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1699                           ;	Debugger Enable bit
  1700                           ;	DEBUG = OFF, Background debugger disabled
  1701                           ;	Extended Instruction Set Enable bit
  1702                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1703   300003                     	org	3145731
  1704   300003  FF                 	db	255
  1705                           
  1706                           ;Config register CONFIG3L @ 0x300004
  1707                           ;	WDT Period selection bits
  1708                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1709                           ;	WDT operating mode
  1710                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1711   300004                     	org	3145732
  1712   300004  9F                 	db	159
  1713                           
  1714                           ;Config register CONFIG3H @ 0x300005
  1715                           ;	WDT Window Select bits
  1716                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1717                           ;	WDT input clock selector
  1718                           ;	WDTCCS = SC, Software Control
  1719   300005                     	org	3145733
  1720   300005  FF                 	db	255
  1721                           
  1722                           ;Config register CONFIG4L @ 0x300006
  1723                           ;	Boot Block Size selection bits
  1724                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1725                           ;	Boot Block enable bit
  1726                           ;	BBEN = OFF, Boot block disabled
  1727                           ;	Storage Area Flash enable bit
  1728                           ;	SAFEN = OFF, SAF disabled
  1729                           ;	Application Block write protection bit
  1730                           ;	WRTAPP = OFF, Application Block not write protected
  1731   300006                     	org	3145734
  1732   300006  FF                 	db	255
  1733                           
  1734                           ;Config register CONFIG4H @ 0x300007
  1735                           ;	Boot Block Write Protection bit
  1736                           ;	WRTB = OFF, Boot Block not write-protected
  1737                           ;	Configuration Register Write Protection bit
  1738                           ;	WRTC = OFF, Configuration registers not write-protected
  1739                           ;	Data EEPROM Write Protection bit
  1740                           ;	WRTD = OFF, Data EEPROM not write-protected
  1741                           ;	SAF Write protection bit
  1742                           ;	WRTSAF = OFF, SAF not Write Protected
  1743                           ;	Low Voltage Programming Enable bit
  1744                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  1745   300007                     	org	3145735
  1746   300007  FF                 	db	255
  1747                           
  1748                           ;Config register CONFIG5L @ 0x300008
  1749                           ;	PFM and Data EEPROM Code Protection bit
  1750                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1751   300008                     	org	3145736
  1752   300008  FF                 	db	255
  1753                           
  1754                           ;Config register CONFIG5H @ 0x300009
  1755                           ;	unspecified, using default values
  1756   300009                     	org	3145737
  1757   300009  FF                 	db	255
  1758                           tosu	equ	0x3FFF
  1759                           tosh	equ	0x3FFE
  1760                           tosl	equ	0x3FFD
  1761                           stkptr	equ	0x3FFC
  1762                           pclatu	equ	0x3FFB
  1763                           pclath	equ	0x3FFA
  1764                           pcl	equ	0x3FF9
  1765                           tblptru	equ	0x3FF8
  1766                           tblptrh	equ	0x3FF7
  1767                           tblptrl	equ	0x3FF6
  1768                           tablat	equ	0x3FF5
  1769                           prodh	equ	0x3FF4
  1770                           prodl	equ	0x3FF3
  1771                           indf0	equ	0x3FEF
  1772                           postinc0	equ	0x3FEE
  1773                           postdec0	equ	0x3FED
  1774                           preinc0	equ	0x3FEC
  1775                           plusw0	equ	0x3FEB
  1776                           fsr0h	equ	0x3FEA
  1777                           fsr0l	equ	0x3FE9
  1778                           wreg	equ	0x3FE8
  1779                           indf1	equ	0x3FE7
  1780                           postinc1	equ	0x3FE6
  1781                           postdec1	equ	0x3FE5
  1782                           preinc1	equ	0x3FE4
  1783                           plusw1	equ	0x3FE3
  1784                           fsr1h	equ	0x3FE2
  1785                           fsr1l	equ	0x3FE1
  1786                           bsr	equ	0x3FE0
  1787                           indf2	equ	0x3FDF
  1788                           postinc2	equ	0x3FDE
  1789                           postdec2	equ	0x3FDD
  1790                           preinc2	equ	0x3FDC
  1791                           plusw2	equ	0x3FDB
  1792                           fsr2h	equ	0x3FDA
  1793                           fsr2l	equ	0x3FD9
  1794                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     15      19
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     255
                                             13 COMRAM     2     2      0
                    _PWM2_Initialize
                 _PWM2_LoadDutyValue
               _PWM2_OutputStatusGet
               _PWM_Output_D8_Enable
                    _TMR2_Initialize
                    _TMR2_StartTimer
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     164
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _TMR2_StartTimer                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (2) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Output_D8_Enable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM2_OutputStatusGet                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM2_LoadDutyValue                                   2     0      2      91
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM2_Initialize
   _PWM2_LoadDutyValue
   _PWM2_OutputStatusGet
   _PWM_Output_D8_Enable
   _TMR2_Initialize
   _TMR2_StartTimer
     _TMR2_Start
   ___lldiv

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRlllh     1390      0       0      0.0%
BITBIGSFRlllll     420      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0       0      0.0%
BITBIGSFRllllh     102      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     15      19     20.0%
BITBIGSFRh          80      0       0      0.0%
BITBIGSFRllh        49      0       0      0.0%
BITBIGSFRlh          2      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      19      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Apr 29 15:27:12 2025

       ?_PWM_Output_D8_Enable 0001                            l61 21D6                            l64 2218  
                          l67 2214                            l94 21BE                            u30 21FE  
                          u31 21F8                            u36 2200                           l100 21EC  
                         l105 21A2                           l108 2200                           l160 2172  
                         l153 2162                           l801 21C0                           l803 21C4  
                         l811 2210                           l805 21C6                           l831 21D8  
                         l807 21CC                           l833 21DC                           l825 21A4  
                         l809 21CE                           l827 21AE                           l941 219C  
                         l933 2174                           l829 21BC                           l935 217C  
                         l951 20F6                           l937 218A                           l849 21EE  
                         l961 2140                           l953 20FE                           l939 2198  
                         l963 2150                           l955 210A                           l947 20D0  
                         l971 2006                           l965 2152                           l957 2118  
                         l949 20E0                           l981 2014                           l973 200A  
                         l799 2216                           l967 215C                           l959 2122  
                         l991 2028                           l983 2016                           l975 200E  
                         l993 2034                           l985 2018                           l977 2010  
                         l969 2002                           l995 207C                           l987 2020  
                         l979 2012                           l997 2084                           l989 2024  
                         l999 208A                           u100 218A                           u101 2186  
                         u120 20F6                           u121 20F2                           u130 2118  
                         u115 218C                           u131 2114                           u140 2140  
                         u141 213C                           u160 20A4                           u161 20A0  
                         u170 20B6                           u171 20B0                           u155 2092  
                         u156 2094                           _PR2 3FAB                           u176 20B8  
             _TMR2_Initialize 21C0                           wreg 3FE8  __end_of_PWM2_OutputStatusGet 2202  
                        l1001 2094                          l1003 20A4                          l1005 20A6  
                        _T2PR 3FAB                          _TMR2 3FAA                          _main 2002  
                        start FFFC                  ___param_bank 0000       __end_of_PWM2_Initialize 21EE  
              _checkdutyCycle 0010                         ?_main 0001               __end_of___lldiv 2174  
                       _T2CON 3FAC                         _T2HLT 3FAD                         _T2TMR 3FAA  
                       _T2RST 3FAF                         _PORTB 3FCB                         _PORTD 3FCD  
                       _TRISB 3FC3                         _TRISD 3FC5                   ?_TMR2_Start 0001  
                       status 3FD8               _TMR2_StartTimer 2210        ??_PWM_Output_D8_Enable 0001  
             __initialization 2202                  __end_of_main 20D0       __end_of_TMR2_Initialize 21D8  
                      ??_main 000E                 __activetblptr 0000                        _CCPR2H 3F79  
                      _CCPR2L 3F78                        _ANSELB 3A50                        _ANSELD 3A70  
                      _RB3PPS 3A0B                        _OSCFRQ 39DF                  _CCPTMRS0bits 3F5E  
                   ??___lldiv 0009              ?_PWM2_Initialize 0001          _PWM2_OutputStatusGet 21EE  
                      isa$std 0001                  __mediumconst 2000       __end_of_TMR2_StartTimer 2216  
                  __accesstop 0060       __end_of__initialization 220A    __end_of_PWM2_LoadDutyValue 21A4  
               ___rparam_used 0001                __pcstackCOMRAM 0001         ?_PWM2_OutputStatusGet 0001  
            ?_TMR2_Initialize 0001                       _CCP2CON 3F7A                       _PPSLOCK 3ABF  
                ??_TMR2_Start 0001              ?_TMR2_StartTimer 0001                       __Hparam 0000  
                     __Lparam 0000        ??_PWM2_OutputStatusGet 0001                       ___lldiv 20D0  
                __psmallconst 2000            __end_of_TMR2_Start 221A                       __pcinit 2202  
                     __ramtop 2000                       __ptext0 2002                       __ptext1 20D0  
                     __ptext2 2210                       __ptext3 2216                       __ptext4 21C0  
                     __ptext5 21A4                       __ptext6 21EE                       __ptext7 2174  
                     __ptext8 21D8                     _T2CONbits 3FAC          end_of_initialization 220A  
             ___lldiv@divisor 0005               ___lldiv@counter 000D                     _PORTBbits 3FCB  
                   _PORTDbits 3FCD                     _TRISBbits 3FC3                   _CCP2CONbits 3F7A  
          _PWM2_LoadDutyValue 2174           start_initialization 2202           ?_PWM2_LoadDutyValue 0001  
        ??_PWM2_LoadDutyValue 0003   PWM2_LoadDutyValue@dutyValue 0001                   __pbssCOMRAM 0010  
                    ?___lldiv 0001                   __smallconst 2000                      _T2CLKCON 3FAE  
           ??_PWM2_Initialize 0001                      _PIR4bits 39A4                     _pwmStatus 0012  
__end_of_PWM_Output_D8_Enable 21C0             ??_TMR2_Initialize 0001                      __Hrparam 0000  
                    __Lrparam 0000                      _preScale 0013                      isa$xinst 0000  
           ??_TMR2_StartTimer 0001                   _OSCSTATbits 39DC              ___lldiv@dividend 0001  
                 _PPSLOCKbits 3ABF          _PWM_Output_D8_Enable 21A4              ___lldiv@quotient 0009  
             _PWM2_Initialize 21D8                    _TMR2_Start 2216  
