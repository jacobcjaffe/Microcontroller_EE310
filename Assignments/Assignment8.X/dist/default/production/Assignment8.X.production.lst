

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu Apr 24 17:48:58 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text13,global,reloc=4,class=CODE,space=0,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	ivt0x4008,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    36   000000                     
    37                           ; Generated 12/10/2023 GMT
    38                           ; 
    39                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F47K42 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71   003FE0                     bsr             equ	16352
    72   003FE9                     fsr0            equ	16361
    73   003FEA                     fsr0h           equ	16362
    74   003FE9                     fsr0l           equ	16361
    75   003FE1                     fsr1            equ	16353
    76   003FE2                     fsr1h           equ	16354
    77   003FE1                     fsr1l           equ	16353
    78   003FD9                     fsr2            equ	16345
    79   003FDA                     fsr2h           equ	16346
    80   003FD9                     fsr2l           equ	16345
    81   003FEF                     indf0           equ	16367
    82   003FE7                     indf1           equ	16359
    83   003FDF                     indf2           equ	16351
    84   003FD2                     intcon          equ	16338
    85   0039E5                     nvmcon          equ	14821
    86   003FF9                     pcl             equ	16377
    87   003FFA                     pclath          equ	16378
    88   003FFB                     pclatu          equ	16379
    89   003FEB                     plusw0          equ	16363
    90   003FE3                     plusw1          equ	16355
    91   003FDB                     plusw2          equ	16347
    92   003FED                     postdec0        equ	16365
    93   003FE5                     postdec1        equ	16357
    94   003FDD                     postdec2        equ	16349
    95   003FEE                     postinc0        equ	16366
    96   003FE6                     postinc1        equ	16358
    97   003FDE                     postinc2        equ	16350
    98   003FEC                     preinc0         equ	16364
    99   003FE4                     preinc1         equ	16356
   100   003FDC                     preinc2         equ	16348
   101   003FF3                     prod            equ	16371
   102   003FF4                     prodh           equ	16372
   103   003FF3                     prodl           equ	16371
   104   003FD8                     status          equ	16344
   105   003FF5                     tablat          equ	16373
   106   003FF6                     tblptr          equ	16374
   107   003FF7                     tblptrh         equ	16375
   108   003FF6                     tblptrl         equ	16374
   109   003FF8                     tblptru         equ	16376
   110   003FFD                     tosl            equ	16381
   111   003FE8                     wreg            equ	16360
   112   003880                     STATUS_CSHAD    equ	14464	;# 
   113   003881                     WREG_CSHAD      equ	14465	;# 
   114   003882                     BSR_CSHAD       equ	14466	;# 
   115   003883                     SHADCON         equ	14467	;# 
   116   003884                     STATUS_SHAD     equ	14468	;# 
   117   003885                     WREG_SHAD       equ	14469	;# 
   118   003886                     BSR_SHAD        equ	14470	;# 
   119   003887                     PCLATH_SHAD     equ	14471	;# 
   120   003888                     PCLATU_SHAD     equ	14472	;# 
   121   003889                     FSR0SH          equ	14473	;# 
   122   003889                     FSR0L_SHAD      equ	14473	;# 
   123   00388A                     FSR0H_SHAD      equ	14474	;# 
   124   00388B                     FSR1SH          equ	14475	;# 
   125   00388B                     FSR1L_SHAD      equ	14475	;# 
   126   00388C                     FSR1H_SHAD      equ	14476	;# 
   127   00388D                     FSR2SH          equ	14477	;# 
   128   00388D                     FSR2L_SHAD      equ	14477	;# 
   129   00388E                     FSR2H_SHAD      equ	14478	;# 
   130   00388F                     PRODSH          equ	14479	;# 
   131   00388F                     PRODL_SHAD      equ	14479	;# 
   132   003890                     PRODH_SHAD      equ	14480	;# 
   133   00389D                     IVTADL          equ	14493	;# 
   134   00389E                     IVTADH          equ	14494	;# 
   135   00389F                     IVTADU          equ	14495	;# 
   136   00395B                     WDTCON0         equ	14683	;# 
   137   00395C                     WDTCON1         equ	14684	;# 
   138   00395D                     WDTPSL          equ	14685	;# 
   139   00395E                     WDTPSH          equ	14686	;# 
   140   00395F                     WDTTMR          equ	14687	;# 
   141   003960                     CRCDATA         equ	14688	;# 
   142   003960                     CRCDATL         equ	14688	;# 
   143   003961                     CRCDATH         equ	14689	;# 
   144   003962                     CRCACC          equ	14690	;# 
   145   003962                     CRCACCL         equ	14690	;# 
   146   003963                     CRCACCH         equ	14691	;# 
   147   003964                     CRCSHFT         equ	14692	;# 
   148   003964                     CRCSHIFTL       equ	14692	;# 
   149   003965                     CRCSHIFTH       equ	14693	;# 
   150   003966                     CRCXOR          equ	14694	;# 
   151   003966                     CRCXORL         equ	14694	;# 
   152   003967                     CRCXORH         equ	14695	;# 
   153   003968                     CRCCON0         equ	14696	;# 
   154   003969                     CRCCON1         equ	14697	;# 
   155   003976                     SCANLADR        equ	14710	;# 
   156   003976                     SCANLADRL       equ	14710	;# 
   157   003977                     SCANLADRH       equ	14711	;# 
   158   003978                     SCANLADRU       equ	14712	;# 
   159   003979                     SCANHADR        equ	14713	;# 
   160   003979                     SCANHADRL       equ	14713	;# 
   161   00397A                     SCANHADRH       equ	14714	;# 
   162   00397B                     SCANHADRU       equ	14715	;# 
   163   00397C                     SCANCON0        equ	14716	;# 
   164   00397D                     SCANTRIG        equ	14717	;# 
   165   003980                     IPR0            equ	14720	;# 
   166   003981                     IPR1            equ	14721	;# 
   167   003982                     IPR2            equ	14722	;# 
   168   003983                     IPR3            equ	14723	;# 
   169   003984                     IPR4            equ	14724	;# 
   170   003985                     IPR5            equ	14725	;# 
   171   003986                     IPR6            equ	14726	;# 
   172   003987                     IPR7            equ	14727	;# 
   173   003988                     IPR8            equ	14728	;# 
   174   003989                     IPR9            equ	14729	;# 
   175   00398A                     IPR10           equ	14730	;# 
   176   003990                     PIE0            equ	14736	;# 
   177   003991                     PIE1            equ	14737	;# 
   178   003992                     PIE2            equ	14738	;# 
   179   003993                     PIE3            equ	14739	;# 
   180   003994                     PIE4            equ	14740	;# 
   181   003995                     PIE5            equ	14741	;# 
   182   003996                     PIE6            equ	14742	;# 
   183   003997                     PIE7            equ	14743	;# 
   184   003998                     PIE8            equ	14744	;# 
   185   003999                     PIE9            equ	14745	;# 
   186   00399A                     PIE10           equ	14746	;# 
   187   0039A0                     PIR0            equ	14752	;# 
   188   0039A1                     PIR1            equ	14753	;# 
   189   0039A2                     PIR2            equ	14754	;# 
   190   0039A3                     PIR3            equ	14755	;# 
   191   0039A4                     PIR4            equ	14756	;# 
   192   0039A5                     PIR5            equ	14757	;# 
   193   0039A6                     PIR6            equ	14758	;# 
   194   0039A7                     PIR7            equ	14759	;# 
   195   0039A8                     PIR8            equ	14760	;# 
   196   0039A9                     PIR9            equ	14761	;# 
   197   0039AA                     PIR10           equ	14762	;# 
   198   0039C0                     PMD0            equ	14784	;# 
   199   0039C1                     PMD1            equ	14785	;# 
   200   0039C2                     PMD2            equ	14786	;# 
   201   0039C3                     PMD3            equ	14787	;# 
   202   0039C4                     PMD4            equ	14788	;# 
   203   0039C5                     PMD5            equ	14789	;# 
   204   0039C6                     PMD6            equ	14790	;# 
   205   0039C7                     PMD7            equ	14791	;# 
   206   0039D0                     BORCON          equ	14800	;# 
   207   0039D1                     VREGCON         equ	14801	;# 
   208   0039D8                     CPUDOZE         equ	14808	;# 
   209   0039D9                     OSCCON1         equ	14809	;# 
   210   0039DA                     OSCCON2         equ	14810	;# 
   211   0039DB                     OSCCON3         equ	14811	;# 
   212   0039DC                     OSCSTAT         equ	14812	;# 
   213   0039DC                     OSCSTAT1        equ	14812	;# 
   214   0039DD                     OSCEN           equ	14813	;# 
   215   0039DE                     OSCTUNE         equ	14814	;# 
   216   0039DF                     OSCFRQ          equ	14815	;# 
   217   0039E0                     NVMADRL         equ	14816	;# 
   218   0039E1                     NVMADRH         equ	14817	;# 
   219   0039E3                     NVMDAT          equ	14819	;# 
   220   0039E5                     NVMCON1         equ	14821	;# 
   221   0039E6                     NVMCON2         equ	14822	;# 
   222   0039EF                     PRLOCK          equ	14831	;# 
   223   0039F1                     ISRPR           equ	14833	;# 
   224   0039F2                     MAINPR          equ	14834	;# 
   225   0039F3                     DMA1PR          equ	14835	;# 
   226   0039F4                     DMA2PR          equ	14836	;# 
   227   0039F7                     SCANPR          equ	14839	;# 
   228   003A00                     RA0PPS          equ	14848	;# 
   229   003A01                     RA1PPS          equ	14849	;# 
   230   003A02                     RA2PPS          equ	14850	;# 
   231   003A03                     RA3PPS          equ	14851	;# 
   232   003A04                     RA4PPS          equ	14852	;# 
   233   003A05                     RA5PPS          equ	14853	;# 
   234   003A06                     RA6PPS          equ	14854	;# 
   235   003A07                     RA7PPS          equ	14855	;# 
   236   003A08                     RB0PPS          equ	14856	;# 
   237   003A09                     RB1PPS          equ	14857	;# 
   238   003A0A                     RB2PPS          equ	14858	;# 
   239   003A0B                     RB3PPS          equ	14859	;# 
   240   003A0C                     RB4PPS          equ	14860	;# 
   241   003A0D                     RB5PPS          equ	14861	;# 
   242   003A0E                     RB6PPS          equ	14862	;# 
   243   003A0F                     RB7PPS          equ	14863	;# 
   244   003A10                     RC0PPS          equ	14864	;# 
   245   003A11                     RC1PPS          equ	14865	;# 
   246   003A12                     RC2PPS          equ	14866	;# 
   247   003A13                     RC3PPS          equ	14867	;# 
   248   003A14                     RC4PPS          equ	14868	;# 
   249   003A15                     RC5PPS          equ	14869	;# 
   250   003A16                     RC6PPS          equ	14870	;# 
   251   003A17                     RC7PPS          equ	14871	;# 
   252   003A18                     RD0PPS          equ	14872	;# 
   253   003A19                     RD1PPS          equ	14873	;# 
   254   003A1A                     RD2PPS          equ	14874	;# 
   255   003A1B                     RD3PPS          equ	14875	;# 
   256   003A1C                     RD4PPS          equ	14876	;# 
   257   003A1D                     RD5PPS          equ	14877	;# 
   258   003A1E                     RD6PPS          equ	14878	;# 
   259   003A1F                     RD7PPS          equ	14879	;# 
   260   003A20                     RE0PPS          equ	14880	;# 
   261   003A21                     RE1PPS          equ	14881	;# 
   262   003A22                     RE2PPS          equ	14882	;# 
   263   003A40                     ANSELA          equ	14912	;# 
   264   003A41                     WPUA            equ	14913	;# 
   265   003A42                     ODCONA          equ	14914	;# 
   266   003A43                     SLRCONA         equ	14915	;# 
   267   003A44                     INLVLA          equ	14916	;# 
   268   003A45                     IOCAP           equ	14917	;# 
   269   003A46                     IOCAN           equ	14918	;# 
   270   003A47                     IOCAF           equ	14919	;# 
   271   003A50                     ANSELB          equ	14928	;# 
   272   003A51                     WPUB            equ	14929	;# 
   273   003A52                     ODCONB          equ	14930	;# 
   274   003A53                     SLRCONB         equ	14931	;# 
   275   003A54                     INLVLB          equ	14932	;# 
   276   003A55                     IOCBP           equ	14933	;# 
   277   003A56                     IOCBN           equ	14934	;# 
   278   003A57                     IOCBF           equ	14935	;# 
   279   003A5A                     RB1I2C          equ	14938	;# 
   280   003A5B                     RB2I2C          equ	14939	;# 
   281   003A60                     ANSELC          equ	14944	;# 
   282   003A61                     WPUC            equ	14945	;# 
   283   003A62                     ODCONC          equ	14946	;# 
   284   003A63                     SLRCONC         equ	14947	;# 
   285   003A64                     INLVLC          equ	14948	;# 
   286   003A65                     IOCCP           equ	14949	;# 
   287   003A66                     IOCCN           equ	14950	;# 
   288   003A67                     IOCCF           equ	14951	;# 
   289   003A6A                     RC3I2C          equ	14954	;# 
   290   003A6B                     RC4I2C          equ	14955	;# 
   291   003A70                     ANSELD          equ	14960	;# 
   292   003A71                     WPUD            equ	14961	;# 
   293   003A72                     ODCOND          equ	14962	;# 
   294   003A73                     SLRCOND         equ	14963	;# 
   295   003A74                     INLVLD          equ	14964	;# 
   296   003A7A                     RD0I2C          equ	14970	;# 
   297   003A7B                     RD1I2C          equ	14971	;# 
   298   003A80                     ANSELE          equ	14976	;# 
   299   003A81                     WPUE            equ	14977	;# 
   300   003A82                     ODCONE          equ	14978	;# 
   301   003A83                     SLRCONE         equ	14979	;# 
   302   003A84                     INLVLE          equ	14980	;# 
   303   003A85                     IOCEP           equ	14981	;# 
   304   003A86                     IOCEN           equ	14982	;# 
   305   003A87                     IOCEF           equ	14983	;# 
   306   003ABF                     PPSLOCK         equ	15039	;# 
   307   003AC0                     INT0PPS         equ	15040	;# 
   308   003AC1                     INT1PPS         equ	15041	;# 
   309   003AC2                     INT2PPS         equ	15042	;# 
   310   003AC3                     T0CKIPPS        equ	15043	;# 
   311   003AC4                     T1CKIPPS        equ	15044	;# 
   312   003AC5                     T1GPPS          equ	15045	;# 
   313   003AC6                     T3CKIPPS        equ	15046	;# 
   314   003AC7                     T3GPPS          equ	15047	;# 
   315   003AC8                     T5CKIPPS        equ	15048	;# 
   316   003AC9                     T5GPPS          equ	15049	;# 
   317   003ACA                     T2INPPS         equ	15050	;# 
   318   003ACB                     T4INPPS         equ	15051	;# 
   319   003ACC                     T6INPPS         equ	15052	;# 
   320   003ACD                     CCP1PPS         equ	15053	;# 
   321   003ACE                     CCP2PPS         equ	15054	;# 
   322   003ACF                     CCP3PPS         equ	15055	;# 
   323   003AD0                     CCP4PPS         equ	15056	;# 
   324   003AD1                     SMT1WINPPS      equ	15057	;# 
   325   003AD2                     SMT1SIGPPS      equ	15058	;# 
   326   003AD3                     CWG1INPPS       equ	15059	;# 
   327   003AD4                     CWG2INPPS       equ	15060	;# 
   328   003AD5                     CWG3INPPS       equ	15061	;# 
   329   003AD6                     MD1CARLPPS      equ	15062	;# 
   330   003AD7                     MD1CARHPPS      equ	15063	;# 
   331   003AD8                     MD1SRCPPS       equ	15064	;# 
   332   003AD9                     CLCIN0PPS       equ	15065	;# 
   333   003ADA                     CLCIN1PPS       equ	15066	;# 
   334   003ADB                     CLCIN2PPS       equ	15067	;# 
   335   003ADC                     CLCIN3PPS       equ	15068	;# 
   336   003ADD                     ADACTPPS        equ	15069	;# 
   337   003ADE                     SPI1SCKPPS      equ	15070	;# 
   338   003ADF                     SPI1SDIPPS      equ	15071	;# 
   339   003AE0                     SPI1SSPPS       equ	15072	;# 
   340   003AE1                     I2C1SCLPPS      equ	15073	;# 
   341   003AE2                     I2C1SDAPPS      equ	15074	;# 
   342   003AE3                     I2C2SCLPPS      equ	15075	;# 
   343   003AE4                     I2C2SDAPPS      equ	15076	;# 
   344   003AE5                     U1RXPPS         equ	15077	;# 
   345   003AE6                     U1CTSPPS        equ	15078	;# 
   346   003AE8                     U2RXPPS         equ	15080	;# 
   347   003AE9                     U2CTSPPS        equ	15081	;# 
   348   003BC9                     DMA2BUF         equ	15305	;# 
   349   003BCA                     DMA2DCNT        equ	15306	;# 
   350   003BCA                     DMA2DCNTL       equ	15306	;# 
   351   003BCB                     DMA2DCNTH       equ	15307	;# 
   352   003BCC                     DMA2DPTR        equ	15308	;# 
   353   003BCC                     DMA2DPTRL       equ	15308	;# 
   354   003BCD                     DMA2DPTRH       equ	15309	;# 
   355   003BCE                     DMA2DSZ         equ	15310	;# 
   356   003BCE                     DMA2DSZL        equ	15310	;# 
   357   003BCF                     DMA2DSZH        equ	15311	;# 
   358   003BD0                     DMA2DSA         equ	15312	;# 
   359   003BD0                     DMA2DSAL        equ	15312	;# 
   360   003BD1                     DMA2DSAH        equ	15313	;# 
   361   003BD2                     DMA2SCNT        equ	15314	;# 
   362   003BD2                     DMA2SCNTL       equ	15314	;# 
   363   003BD3                     DMA2SCNTH       equ	15315	;# 
   364   003BD4                     DMA2SPTR        equ	15316	;# 
   365   003BD4                     DMA2SPTRL       equ	15316	;# 
   366   003BD5                     DMA2SPTRH       equ	15317	;# 
   367   003BD6                     DMA2SPTRU       equ	15318	;# 
   368   003BD7                     DMA2SSZ         equ	15319	;# 
   369   003BD7                     DMA2SSZL        equ	15319	;# 
   370   003BD8                     DMA2SSZH        equ	15320	;# 
   371   003BD9                     DMA2SSA         equ	15321	;# 
   372   003BD9                     DMA2SSAL        equ	15321	;# 
   373   003BDA                     DMA2SSAH        equ	15322	;# 
   374   003BDB                     DMA2SSAU        equ	15323	;# 
   375   003BDC                     DMA2CON0        equ	15324	;# 
   376   003BDD                     DMA2CON1        equ	15325	;# 
   377   003BDE                     DMA2AIRQ        equ	15326	;# 
   378   003BDF                     DMA2SIRQ        equ	15327	;# 
   379   003BE9                     DMA1BUF         equ	15337	;# 
   380   003BEA                     DMA1DCNT        equ	15338	;# 
   381   003BEA                     DMA1DCNTL       equ	15338	;# 
   382   003BEB                     DMA1DCNTH       equ	15339	;# 
   383   003BEC                     DMA1DPTR        equ	15340	;# 
   384   003BEC                     DMA1DPTRL       equ	15340	;# 
   385   003BED                     DMA1DPTRH       equ	15341	;# 
   386   003BEE                     DMA1DSZ         equ	15342	;# 
   387   003BEE                     DMA1DSZL        equ	15342	;# 
   388   003BEF                     DMA1DSZH        equ	15343	;# 
   389   003BF0                     DMA1DSA         equ	15344	;# 
   390   003BF0                     DMA1DSAL        equ	15344	;# 
   391   003BF1                     DMA1DSAH        equ	15345	;# 
   392   003BF2                     DMA1SCNT        equ	15346	;# 
   393   003BF2                     DMA1SCNTL       equ	15346	;# 
   394   003BF3                     DMA1SCNTH       equ	15347	;# 
   395   003BF4                     DMA1SPTR        equ	15348	;# 
   396   003BF4                     DMA1SPTRL       equ	15348	;# 
   397   003BF5                     DMA1SPTRH       equ	15349	;# 
   398   003BF6                     DMA1SPTRU       equ	15350	;# 
   399   003BF7                     DMA1SSZ         equ	15351	;# 
   400   003BF7                     DMA1SSZL        equ	15351	;# 
   401   003BF8                     DMA1SSZH        equ	15352	;# 
   402   003BF9                     DMA1SSA         equ	15353	;# 
   403   003BF9                     DMA1SSAL        equ	15353	;# 
   404   003BFA                     DMA1SSAH        equ	15354	;# 
   405   003BFB                     DMA1SSAU        equ	15355	;# 
   406   003BFC                     DMA1CON0        equ	15356	;# 
   407   003BFD                     DMA1CON1        equ	15357	;# 
   408   003BFE                     DMA1AIRQ        equ	15358	;# 
   409   003BFF                     DMA1SIRQ        equ	15359	;# 
   410   003C56                     CLC4CON         equ	15446	;# 
   411   003C57                     CLC4POL         equ	15447	;# 
   412   003C58                     CLC4SEL0        equ	15448	;# 
   413   003C59                     CLC4SEL1        equ	15449	;# 
   414   003C5A                     CLC4SEL2        equ	15450	;# 
   415   003C5B                     CLC4SEL3        equ	15451	;# 
   416   003C5C                     CLC4GLS0        equ	15452	;# 
   417   003C5D                     CLC4GLS1        equ	15453	;# 
   418   003C5E                     CLC4GLS2        equ	15454	;# 
   419   003C5F                     CLC4GLS3        equ	15455	;# 
   420   003C60                     CLC3CON         equ	15456	;# 
   421   003C61                     CLC3POL         equ	15457	;# 
   422   003C62                     CLC3SEL0        equ	15458	;# 
   423   003C63                     CLC3SEL1        equ	15459	;# 
   424   003C64                     CLC3SEL2        equ	15460	;# 
   425   003C65                     CLC3SEL3        equ	15461	;# 
   426   003C66                     CLC3GLS0        equ	15462	;# 
   427   003C67                     CLC3GLS1        equ	15463	;# 
   428   003C68                     CLC3GLS2        equ	15464	;# 
   429   003C69                     CLC3GLS3        equ	15465	;# 
   430   003C6A                     CLC2CON         equ	15466	;# 
   431   003C6B                     CLC2POL         equ	15467	;# 
   432   003C6C                     CLC2SEL0        equ	15468	;# 
   433   003C6D                     CLC2SEL1        equ	15469	;# 
   434   003C6E                     CLC2SEL2        equ	15470	;# 
   435   003C6F                     CLC2SEL3        equ	15471	;# 
   436   003C70                     CLC2GLS0        equ	15472	;# 
   437   003C71                     CLC2GLS1        equ	15473	;# 
   438   003C72                     CLC2GLS2        equ	15474	;# 
   439   003C73                     CLC2GLS3        equ	15475	;# 
   440   003C74                     CLC1CON         equ	15476	;# 
   441   003C75                     CLC1POL         equ	15477	;# 
   442   003C76                     CLC1SEL0        equ	15478	;# 
   443   003C77                     CLC1SEL1        equ	15479	;# 
   444   003C78                     CLC1SEL2        equ	15480	;# 
   445   003C79                     CLC1SEL3        equ	15481	;# 
   446   003C7A                     CLC1GLS0        equ	15482	;# 
   447   003C7B                     CLC1GLS1        equ	15483	;# 
   448   003C7C                     CLC1GLS2        equ	15484	;# 
   449   003C7D                     CLC1GLS3        equ	15485	;# 
   450   003C7E                     CLCDATA0        equ	15486	;# 
   451   003CE5                     CLKRCON         equ	15589	;# 
   452   003CE6                     CLKRCLK         equ	15590	;# 
   453   003CFA                     MD1CON0         equ	15610	;# 
   454   003CFB                     MD1CON1         equ	15611	;# 
   455   003CFC                     MD1SRC          equ	15612	;# 
   456   003CFD                     MD1CARL         equ	15613	;# 
   457   003CFE                     MD1CARH         equ	15614	;# 
   458   003D10                     SPI1RXB         equ	15632	;# 
   459   003D11                     SPI1TXB         equ	15633	;# 
   460   003D12                     SPI1TCNT        equ	15634	;# 
   461   003D12                     SPI1TCNTL       equ	15634	;# 
   462   003D13                     SPI1TCNTH       equ	15635	;# 
   463   003D14                     SPI1CON0        equ	15636	;# 
   464   003D15                     SPI1CON1        equ	15637	;# 
   465   003D16                     SPI1CON2        equ	15638	;# 
   466   003D17                     SPI1STATUS      equ	15639	;# 
   467   003D18                     SPI1TWIDTH      equ	15640	;# 
   468   003D19                     SPI1BAUD        equ	15641	;# 
   469   003D1A                     SPI1INTF        equ	15642	;# 
   470   003D1B                     SPI1INTE        equ	15643	;# 
   471   003D1C                     SPI1CLK         equ	15644	;# 
   472   003D54                     I2C2RXB         equ	15700	;# 
   473   003D55                     I2C2TXB         equ	15701	;# 
   474   003D56                     I2C2CNT         equ	15702	;# 
   475   003D57                     I2C2ADB0        equ	15703	;# 
   476   003D58                     I2C2ADB1        equ	15704	;# 
   477   003D59                     I2C2ADR0        equ	15705	;# 
   478   003D5A                     I2C2ADR1        equ	15706	;# 
   479   003D5B                     I2C2ADR2        equ	15707	;# 
   480   003D5C                     I2C2ADR3        equ	15708	;# 
   481   003D5D                     I2C2CON0        equ	15709	;# 
   482   003D5E                     I2C2CON1        equ	15710	;# 
   483   003D5F                     I2C2CON2        equ	15711	;# 
   484   003D60                     I2C2ERR         equ	15712	;# 
   485   003D61                     I2C2STAT0       equ	15713	;# 
   486   003D62                     I2C2STAT1       equ	15714	;# 
   487   003D63                     I2C2PIR         equ	15715	;# 
   488   003D64                     I2C2PIE         equ	15716	;# 
   489   003D65                     I2C2CLK         equ	15717	;# 
   490   003D66                     I2C2BTO         equ	15718	;# 
   491   003D6A                     I2C1RXB         equ	15722	;# 
   492   003D6B                     I2C1TXB         equ	15723	;# 
   493   003D6C                     I2C1CNT         equ	15724	;# 
   494   003D6D                     I2C1ADB0        equ	15725	;# 
   495   003D6E                     I2C1ADB1        equ	15726	;# 
   496   003D6F                     I2C1ADR0        equ	15727	;# 
   497   003D70                     I2C1ADR1        equ	15728	;# 
   498   003D71                     I2C1ADR2        equ	15729	;# 
   499   003D72                     I2C1ADR3        equ	15730	;# 
   500   003D73                     I2C1CON0        equ	15731	;# 
   501   003D74                     I2C1CON1        equ	15732	;# 
   502   003D75                     I2C1CON2        equ	15733	;# 
   503   003D76                     I2C1ERR         equ	15734	;# 
   504   003D77                     I2C1STAT0       equ	15735	;# 
   505   003D78                     I2C1STAT1       equ	15736	;# 
   506   003D79                     I2C1PIR         equ	15737	;# 
   507   003D7A                     I2C1PIE         equ	15738	;# 
   508   003D7B                     I2C1CLK         equ	15739	;# 
   509   003D7C                     I2C1BTO         equ	15740	;# 
   510   003DD0                     U2RXB           equ	15824	;# 
   511   003DD0                     U2RXBL          equ	15824	;# 
   512   003DD2                     U2TXB           equ	15826	;# 
   513   003DD2                     U2TXBL          equ	15826	;# 
   514   003DD4                     U2P1            equ	15828	;# 
   515   003DD4                     U2P1L           equ	15828	;# 
   516   003DD6                     U2P2            equ	15830	;# 
   517   003DD6                     U2P2L           equ	15830	;# 
   518   003DD8                     U2P3            equ	15832	;# 
   519   003DD8                     U2P3L           equ	15832	;# 
   520   003DDA                     U2CON0          equ	15834	;# 
   521   003DDB                     U2CON1          equ	15835	;# 
   522   003DDC                     U2CON2          equ	15836	;# 
   523   003DDD                     U2BRG           equ	15837	;# 
   524   003DDD                     U2BRGL          equ	15837	;# 
   525   003DDE                     U2BRGH          equ	15838	;# 
   526   003DDF                     U2FIFO          equ	15839	;# 
   527   003DE0                     U2UIR           equ	15840	;# 
   528   003DE1                     U2ERRIR         equ	15841	;# 
   529   003DE2                     U2ERRIE         equ	15842	;# 
   530   003DE8                     U1RXB           equ	15848	;# 
   531   003DE8                     U1RXBL          equ	15848	;# 
   532   003DE9                     U1RXCHK         equ	15849	;# 
   533   003DEA                     U1TXB           equ	15850	;# 
   534   003DEA                     U1TXBL          equ	15850	;# 
   535   003DEB                     U1TXCHK         equ	15851	;# 
   536   003DEC                     U1P1            equ	15852	;# 
   537   003DEC                     U1P1L           equ	15852	;# 
   538   003DED                     U1P1H           equ	15853	;# 
   539   003DEE                     U1P2            equ	15854	;# 
   540   003DEE                     U1P2L           equ	15854	;# 
   541   003DEF                     U1P2H           equ	15855	;# 
   542   003DF0                     U1P3            equ	15856	;# 
   543   003DF0                     U1P3L           equ	15856	;# 
   544   003DF1                     U1P3H           equ	15857	;# 
   545   003DF2                     U1CON0          equ	15858	;# 
   546   003DF3                     U1CON1          equ	15859	;# 
   547   003DF4                     U1CON2          equ	15860	;# 
   548   003DF5                     U1BRG           equ	15861	;# 
   549   003DF5                     U1BRGL          equ	15861	;# 
   550   003DF6                     U1BRGH          equ	15862	;# 
   551   003DF7                     U1FIFO          equ	15863	;# 
   552   003DF8                     U1UIR           equ	15864	;# 
   553   003DF9                     U1ERRIR         equ	15865	;# 
   554   003DFA                     U1ERRIE         equ	15866	;# 
   555   003E9C                     DAC1CON1        equ	16028	;# 
   556   003E9E                     DAC1CON0        equ	16030	;# 
   557   003EB8                     CM2CON0         equ	16056	;# 
   558   003EB9                     CM2CON1         equ	16057	;# 
   559   003EBA                     CM2NCH          equ	16058	;# 
   560   003EBB                     CM2PCH          equ	16059	;# 
   561   003EBC                     CM1CON0         equ	16060	;# 
   562   003EBD                     CM1CON1         equ	16061	;# 
   563   003EBE                     CM1NCH          equ	16062	;# 
   564   003EBF                     CM1PCH          equ	16063	;# 
   565   003EC0                     CMOUT           equ	16064	;# 
   566   003EC1                     FVRCON          equ	16065	;# 
   567   003EC3                     ZCDCON          equ	16067	;# 
   568   003EC9                     HLVDCON0        equ	16073	;# 
   569   003ECA                     HLVDCON1        equ	16074	;# 
   570   003ED7                     ADCP            equ	16087	;# 
   571   003EDE                     ADLTH           equ	16094	;# 
   572   003EDE                     ADLTHL          equ	16094	;# 
   573   003EDF                     ADLTHH          equ	16095	;# 
   574   003EE0                     ADUTH           equ	16096	;# 
   575   003EE0                     ADUTHL          equ	16096	;# 
   576   003EE1                     ADUTHH          equ	16097	;# 
   577   003EE2                     ADERR           equ	16098	;# 
   578   003EE2                     ADERRL          equ	16098	;# 
   579   003EE3                     ADERRH          equ	16099	;# 
   580   003EE4                     ADSTPT          equ	16100	;# 
   581   003EE4                     ADSTPTL         equ	16100	;# 
   582   003EE5                     ADSTPTH         equ	16101	;# 
   583   003EE6                     ADFLTR          equ	16102	;# 
   584   003EE6                     ADFLTRL         equ	16102	;# 
   585   003EE7                     ADFLTRH         equ	16103	;# 
   586   003EE8                     ADACC           equ	16104	;# 
   587   003EE8                     ADACCL          equ	16104	;# 
   588   003EE9                     ADACCH          equ	16105	;# 
   589   003EEA                     ADACCU          equ	16106	;# 
   590   003EEB                     ADCNT           equ	16107	;# 
   591   003EEC                     ADRPT           equ	16108	;# 
   592   003EED                     ADPREV          equ	16109	;# 
   593   003EED                     ADPREVL         equ	16109	;# 
   594   003EEE                     ADPREVH         equ	16110	;# 
   595   003EEF                     ADRES           equ	16111	;# 
   596   003EEF                     ADRESL          equ	16111	;# 
   597   003EF0                     ADRESH          equ	16112	;# 
   598   003EF1                     ADPCH           equ	16113	;# 
   599   003EF3                     ADACQ           equ	16115	;# 
   600   003EF3                     ADACQL          equ	16115	;# 
   601   003EF4                     ADACQH          equ	16116	;# 
   602   003EF5                     ADCAP           equ	16117	;# 
   603   003EF6                     ADPRE           equ	16118	;# 
   604   003EF6                     ADPREL          equ	16118	;# 
   605   003EF7                     ADPREH          equ	16119	;# 
   606   003EF8                     ADCON0          equ	16120	;# 
   607   003EF9                     ADCON1          equ	16121	;# 
   608   003EFA                     ADCON2          equ	16122	;# 
   609   003EFB                     ADCON3          equ	16123	;# 
   610   003EFC                     ADSTAT          equ	16124	;# 
   611   003EFD                     ADREF           equ	16125	;# 
   612   003EFE                     ADACT           equ	16126	;# 
   613   003EFF                     ADCLK           equ	16127	;# 
   614   003F12                     SMT1TMR         equ	16146	;# 
   615   003F12                     SMT1TMRL        equ	16146	;# 
   616   003F13                     SMT1TMRH        equ	16147	;# 
   617   003F14                     SMT1TMRU        equ	16148	;# 
   618   003F15                     SMT1CPR         equ	16149	;# 
   619   003F15                     SMT1CPRL        equ	16149	;# 
   620   003F16                     SMT1CPRH        equ	16150	;# 
   621   003F17                     SMT1CPRU        equ	16151	;# 
   622   003F18                     SMT1CPW         equ	16152	;# 
   623   003F18                     SMT1CPWL        equ	16152	;# 
   624   003F19                     SMT1CPWH        equ	16153	;# 
   625   003F1A                     SMT1CPWU        equ	16154	;# 
   626   003F1B                     SMT1PR          equ	16155	;# 
   627   003F1B                     SMT1PRL         equ	16155	;# 
   628   003F1C                     SMT1PRH         equ	16156	;# 
   629   003F1D                     SMT1PRU         equ	16157	;# 
   630   003F1E                     SMT1CON0        equ	16158	;# 
   631   003F1F                     SMT1CON1        equ	16159	;# 
   632   003F20                     SMT1STAT        equ	16160	;# 
   633   003F21                     SMT1CLK         equ	16161	;# 
   634   003F22                     SMT1SIG         equ	16162	;# 
   635   003F23                     SMT1WIN         equ	16163	;# 
   636   003F38                     NCO1ACC         equ	16184	;# 
   637   003F38                     NCO1ACCL        equ	16184	;# 
   638   003F39                     NCO1ACCH        equ	16185	;# 
   639   003F3A                     NCO1ACCU        equ	16186	;# 
   640   003F3B                     NCO1INC         equ	16187	;# 
   641   003F3B                     NCO1INCL        equ	16187	;# 
   642   003F3C                     NCO1INCH        equ	16188	;# 
   643   003F3D                     NCO1INCU        equ	16189	;# 
   644   003F3E                     NCO1CON         equ	16190	;# 
   645   003F3F                     NCO1CLK         equ	16191	;# 
   646   003F40                     CWG3CLK         equ	16192	;# 
   647   003F40                     CWG3CLKCON      equ	16192	;# 
   648   003F41                     CWG3ISM         equ	16193	;# 
   649   003F41                     CWG3DAT         equ	16193	;# 
   650   003F42                     CWG3DBR         equ	16194	;# 
   651   003F43                     CWG3DBF         equ	16195	;# 
   652   003F44                     CWG3CON0        equ	16196	;# 
   653   003F45                     CWG3CON1        equ	16197	;# 
   654   003F46                     CWG3AS0         equ	16198	;# 
   655   003F47                     CWG3AS1         equ	16199	;# 
   656   003F48                     CWG3STR         equ	16200	;# 
   657   003F49                     CWG2CLK         equ	16201	;# 
   658   003F49                     CWG2CLKCON      equ	16201	;# 
   659   003F4A                     CWG2ISM         equ	16202	;# 
   660   003F4A                     CWG2DAT         equ	16202	;# 
   661   003F4B                     CWG2DBR         equ	16203	;# 
   662   003F4C                     CWG2DBF         equ	16204	;# 
   663   003F4D                     CWG2CON0        equ	16205	;# 
   664   003F4E                     CWG2CON1        equ	16206	;# 
   665   003F4F                     CWG2AS0         equ	16207	;# 
   666   003F50                     CWG2AS1         equ	16208	;# 
   667   003F51                     CWG2STR         equ	16209	;# 
   668   003F52                     CWG1CLK         equ	16210	;# 
   669   003F52                     CWG1CLKCON      equ	16210	;# 
   670   003F53                     CWG1ISM         equ	16211	;# 
   671   003F53                     CWG1DAT         equ	16211	;# 
   672   003F54                     CWG1DBR         equ	16212	;# 
   673   003F55                     CWG1DBF         equ	16213	;# 
   674   003F56                     CWG1CON0        equ	16214	;# 
   675   003F57                     CWG1CON1        equ	16215	;# 
   676   003F58                     CWG1AS0         equ	16216	;# 
   677   003F59                     CWG1AS1         equ	16217	;# 
   678   003F5A                     CWG1STR         equ	16218	;# 
   679   003F5E                     CCPTMRS0        equ	16222	;# 
   680   003F5F                     CCPTMRS1        equ	16223	;# 
   681   003F60                     PWM8DC          equ	16224	;# 
   682   003F60                     PWM8DCL         equ	16224	;# 
   683   003F61                     PWM8DCH         equ	16225	;# 
   684   003F62                     PWM8CON         equ	16226	;# 
   685   003F64                     PWM7DC          equ	16228	;# 
   686   003F64                     PWM7DCL         equ	16228	;# 
   687   003F65                     PWM7DCH         equ	16229	;# 
   688   003F66                     PWM7CON         equ	16230	;# 
   689   003F68                     PWM6DC          equ	16232	;# 
   690   003F68                     PWM6DCL         equ	16232	;# 
   691   003F69                     PWM6DCH         equ	16233	;# 
   692   003F6A                     PWM6CON         equ	16234	;# 
   693   003F6C                     PWM5DC          equ	16236	;# 
   694   003F6C                     PWM5DCL         equ	16236	;# 
   695   003F6D                     PWM5DCH         equ	16237	;# 
   696   003F6E                     PWM5CON         equ	16238	;# 
   697   003F70                     CCPR4           equ	16240	;# 
   698   003F70                     CCPR4L          equ	16240	;# 
   699   003F71                     CCPR4H          equ	16241	;# 
   700   003F72                     CCP4CON         equ	16242	;# 
   701   003F73                     CCP4CAP         equ	16243	;# 
   702   003F74                     CCPR3           equ	16244	;# 
   703   003F74                     CCPR3L          equ	16244	;# 
   704   003F75                     CCPR3H          equ	16245	;# 
   705   003F76                     CCP3CON         equ	16246	;# 
   706   003F77                     CCP3CAP         equ	16247	;# 
   707   003F78                     CCPR2           equ	16248	;# 
   708   003F78                     CCPR2L          equ	16248	;# 
   709   003F79                     CCPR2H          equ	16249	;# 
   710   003F7A                     CCP2CON         equ	16250	;# 
   711   003F7B                     CCP2CAP         equ	16251	;# 
   712   003F7C                     CCPR1           equ	16252	;# 
   713   003F7C                     CCPR1L          equ	16252	;# 
   714   003F7D                     CCPR1H          equ	16253	;# 
   715   003F7E                     CCP1CON         equ	16254	;# 
   716   003F7F                     CCP1CAP         equ	16255	;# 
   717   003F92                     T6TMR           equ	16274	;# 
   718   003F92                     TMR6            equ	16274	;# 
   719   003F93                     T6PR            equ	16275	;# 
   720   003F93                     PR6             equ	16275	;# 
   721   003F94                     T6CON           equ	16276	;# 
   722   003F95                     T6HLT           equ	16277	;# 
   723   003F96                     T6CLKCON        equ	16278	;# 
   724   003F96                     T6CLK           equ	16278	;# 
   725   003F97                     T6RST           equ	16279	;# 
   726   003F98                     TMR5            equ	16280	;# 
   727   003F98                     TMR5L           equ	16280	;# 
   728   003F99                     TMR5H           equ	16281	;# 
   729   003F9A                     T5CON           equ	16282	;# 
   730   003F9A                     TMR5CON         equ	16282	;# 
   731   003F9B                     T5GCON          equ	16283	;# 
   732   003F9B                     TMR5GCON        equ	16283	;# 
   733   003F9C                     T5GATE          equ	16284	;# 
   734   003F9C                     TMR5GATE        equ	16284	;# 
   735   003F9D                     T5CLK           equ	16285	;# 
   736   003F9D                     TMR5CLK         equ	16285	;# 
   737   003F9D                     PR5             equ	16285	;# 
   738   003F9E                     T4TMR           equ	16286	;# 
   739   003F9E                     TMR4            equ	16286	;# 
   740   003F9F                     T4PR            equ	16287	;# 
   741   003F9F                     PR4             equ	16287	;# 
   742   003FA0                     T4CON           equ	16288	;# 
   743   003FA1                     T4HLT           equ	16289	;# 
   744   003FA2                     T4CLKCON        equ	16290	;# 
   745   003FA2                     T4CLK           equ	16290	;# 
   746   003FA3                     T4RST           equ	16291	;# 
   747   003FA4                     TMR3            equ	16292	;# 
   748   003FA4                     TMR3L           equ	16292	;# 
   749   003FA5                     TMR3H           equ	16293	;# 
   750   003FA6                     T3CON           equ	16294	;# 
   751   003FA6                     TMR3CON         equ	16294	;# 
   752   003FA7                     T3GCON          equ	16295	;# 
   753   003FA7                     TMR3GCON        equ	16295	;# 
   754   003FA8                     T3GATE          equ	16296	;# 
   755   003FA8                     TMR3GATE        equ	16296	;# 
   756   003FA9                     T3CLK           equ	16297	;# 
   757   003FA9                     TMR3CLK         equ	16297	;# 
   758   003FA9                     PR3             equ	16297	;# 
   759   003FAA                     T2TMR           equ	16298	;# 
   760   003FAA                     TMR2            equ	16298	;# 
   761   003FAB                     T2PR            equ	16299	;# 
   762   003FAB                     PR2             equ	16299	;# 
   763   003FAC                     T2CON           equ	16300	;# 
   764   003FAD                     T2HLT           equ	16301	;# 
   765   003FAE                     T2CLKCON        equ	16302	;# 
   766   003FAE                     T2CLK           equ	16302	;# 
   767   003FAF                     T2RST           equ	16303	;# 
   768   003FB0                     TMR1            equ	16304	;# 
   769   003FB0                     TMR1L           equ	16304	;# 
   770   003FB1                     TMR1H           equ	16305	;# 
   771   003FB2                     T1CON           equ	16306	;# 
   772   003FB2                     TMR1CON         equ	16306	;# 
   773   003FB3                     T1GCON          equ	16307	;# 
   774   003FB3                     TMR1GCON        equ	16307	;# 
   775   003FB4                     T1GATE          equ	16308	;# 
   776   003FB4                     TMR1GATE        equ	16308	;# 
   777   003FB5                     T1CLK           equ	16309	;# 
   778   003FB5                     TMR1CLK         equ	16309	;# 
   779   003FB5                     PR1             equ	16309	;# 
   780   003FB6                     TMR0L           equ	16310	;# 
   781   003FB6                     TMR0            equ	16310	;# 
   782   003FB7                     TMR0H           equ	16311	;# 
   783   003FB7                     PR0             equ	16311	;# 
   784   003FB8                     T0CON0          equ	16312	;# 
   785   003FB9                     T0CON1          equ	16313	;# 
   786   003FBA                     LATA            equ	16314	;# 
   787   003FBB                     LATB            equ	16315	;# 
   788   003FBC                     LATC            equ	16316	;# 
   789   003FBD                     LATD            equ	16317	;# 
   790   003FBE                     LATE            equ	16318	;# 
   791   003FC2                     TRISA           equ	16322	;# 
   792   003FC3                     TRISB           equ	16323	;# 
   793   003FC4                     TRISC           equ	16324	;# 
   794   003FC5                     TRISD           equ	16325	;# 
   795   003FC6                     TRISE           equ	16326	;# 
   796   003FCA                     PORTA           equ	16330	;# 
   797   003FCB                     PORTB           equ	16331	;# 
   798   003FCC                     PORTC           equ	16332	;# 
   799   003FCD                     PORTD           equ	16333	;# 
   800   003FCE                     PORTE           equ	16334	;# 
   801   003FD2                     INTCON0         equ	16338	;# 
   802   003FD3                     INTCON1         equ	16339	;# 
   803   003FD4                     IVTLOCK         equ	16340	;# 
   804   003FD5                     IVTBASE         equ	16341	;# 
   805   003FD5                     IVTBASEL        equ	16341	;# 
   806   003FD6                     IVTBASEH        equ	16342	;# 
   807   003FD7                     IVTBASEU        equ	16343	;# 
   808   003FD8                     STATUS          equ	16344	;# 
   809   003FD9                     FSR2            equ	16345	;# 
   810   003FD9                     FSR2L           equ	16345	;# 
   811   003FDA                     FSR2H           equ	16346	;# 
   812   003FDB                     PLUSW2          equ	16347	;# 
   813   003FDC                     PREINC2         equ	16348	;# 
   814   003FDD                     POSTDEC2        equ	16349	;# 
   815   003FDE                     POSTINC2        equ	16350	;# 
   816   003FDF                     INDF2           equ	16351	;# 
   817   003FE0                     BSR             equ	16352	;# 
   818   003FE1                     FSR1            equ	16353	;# 
   819   003FE1                     FSR1L           equ	16353	;# 
   820   003FE2                     FSR1H           equ	16354	;# 
   821   003FE3                     PLUSW1          equ	16355	;# 
   822   003FE4                     PREINC1         equ	16356	;# 
   823   003FE5                     POSTDEC1        equ	16357	;# 
   824   003FE6                     POSTINC1        equ	16358	;# 
   825   003FE7                     INDF1           equ	16359	;# 
   826   003FE8                     WREG            equ	16360	;# 
   827   003FE9                     FSR0            equ	16361	;# 
   828   003FE9                     FSR0L           equ	16361	;# 
   829   003FEA                     FSR0H           equ	16362	;# 
   830   003FEB                     PLUSW0          equ	16363	;# 
   831   003FEC                     PREINC0         equ	16364	;# 
   832   003FED                     POSTDEC0        equ	16365	;# 
   833   003FEE                     POSTINC0        equ	16366	;# 
   834   003FEF                     INDF0           equ	16367	;# 
   835   003FF0                     PCON0           equ	16368	;# 
   836   003FF1                     PCON1           equ	16369	;# 
   837   003FF3                     PROD            equ	16371	;# 
   838   003FF3                     PRODL           equ	16371	;# 
   839   003FF4                     PRODH           equ	16372	;# 
   840   003FF5                     TABLAT          equ	16373	;# 
   841   003FF6                     TBLPTR          equ	16374	;# 
   842   003FF6                     TBLPTRL         equ	16374	;# 
   843   003FF7                     TBLPTRH         equ	16375	;# 
   844   003FF8                     TBLPTRU         equ	16376	;# 
   845   003FF9                     PCLAT           equ	16377	;# 
   846   003FF9                     PCL             equ	16377	;# 
   847   003FFA                     PCLATH          equ	16378	;# 
   848   003FFB                     PCLATU          equ	16379	;# 
   849   003FFC                     STKPTR          equ	16380	;# 
   850   003FFD                     TOS             equ	16381	;# 
   851   003FFD                     TOSL            equ	16381	;# 
   852   003FFE                     TOSH            equ	16382	;# 
   853   003FFF                     TOSU            equ	16383	;# 
   854                           
   855                           	psect	idataCOMRAM
   856   004A24                     __pidataCOMRAM:
   857                           	callstack 0
   858                           
   859                           ;initializer for _num
   860   004A24  30                 	db	48
   861   004A25  31                 	db	49
   862   004A26  32                 	db	50
   863   004A27  33                 	db	51
   864   004A28  34                 	db	52
   865   004A29  35                 	db	53
   866   004A2A  36                 	db	54
   867   004A2B  37                 	db	55
   868   004A2C  38                 	db	56
   869   004A2D  39                 	db	57
   870                           
   871                           ;initializer for _sevSeg
   872   004A2E  3F                 	db	63
   873   004A2F  06                 	db	6
   874   004A30  5B                 	db	91
   875   004A31  4F                 	db	79
   876   004A32  66                 	db	102
   877   004A33  6D                 	db	109
   878   004A34  7D                 	db	125
   879   004A35  07                 	db	7
   880   004A36  7F                 	db	127
   881   004A37  6F                 	db	111
   882                           
   883                           ;initializer for _code
   884   004A38  43                 	db	67
   885   004A39  6F                 	db	111
   886   004A3A  64                 	db	100
   887   004A3B  65                 	db	101
   888   004A3C  3A                 	db	58
   889   004A3D  20                 	db	32
   890   004A3E  00                 	db	0
   891   004A3F  00                 	db	0
   892   004A40  00                 	db	0
   893   004A41  00                 	db	0
   894   0039A1                     _PIR1           set	14753
   895   0039A1                     _PIR1bits       set	14753
   896   003991                     _PIE1bits       set	14737
   897   003981                     _IPR1bits       set	14721
   898   003A51                     _WPUB           set	14929
   899   003A80                     _ANSELE         set	14976
   900   003A70                     _ANSELD         set	14960
   901   003A60                     _ANSELC         set	14944
   902   003A50                     _ANSELB         set	14928
   903   003A40                     _ANSELA         set	14912
   904   003EFA                     _ADCON2         set	16122
   905   003EF9                     _ADCON1         set	16121
   906   003EF8                     _ADCON0         set	16120
   907   003FCA                     _PORTAbits      set	16330
   908   003FCC                     _PORTCbits      set	16332
   909   003FBD                     _LATD           set	16317
   910   003FC6                     _TRISE          set	16326
   911   003FC3                     _TRISB          set	16323
   912   003FC4                     _TRISC          set	16324
   913   003FC5                     _TRISD          set	16325
   914   003FC2                     _TRISA          set	16322
   915   003FD5                     _IVTBASEL       set	16341
   916   003FD6                     _IVTBASEH       set	16342
   917   003FD7                     _IVTBASEU       set	16343
   918   003FD2                     _INTCON0bits    set	16338
   919   01FDE2                     _LATC2          set	130530
   920   01FDE7                     _LATC7          set	130535
   921   01FDE5                     _LATC5          set	130533
   922   01FDE4                     _LATC4          set	130532
   923   01FDE3                     _LATC3          set	130531
   924                           
   925                           	psect	smallconst
   926   002000                     __psmallconst:
   927                           	callstack 0
   928   002000  00                 	db	0
   929   002001                     STR_3:
   930   002001  69                 	db	105	;'i'
   931   002002  6E                 	db	110	;'n'
   932   002003  74                 	db	116	;'t'
   933   002004  65                 	db	101	;'e'
   934   002005  72                 	db	114	;'r'
   935   002006  72                 	db	114	;'r'
   936   002007  75                 	db	117	;'u'
   937   002008  70                 	db	112	;'p'
   938   002009  74                 	db	116	;'t'
   939   00200A  00                 	db	0
   940   00200B                     STR_4:
   941   00200B  43                 	db	67	;'C'
   942   00200C  6F                 	db	111	;'o'
   943   00200D  64                 	db	100	;'d'
   944   00200E  65                 	db	101	;'e'
   945   00200F  3A                 	db	58	;':'
   946   002010  20                 	db	32
   947   002011  32                 	db	50	;'2'
   948   002012  30                 	db	48	;'0'
   949   002013  00                 	db	0
   950   002014                     STR_2:
   951   002014  6D                 	db	109	;'m'
   952   002015  6F                 	db	111	;'o'
   953   002016  74                 	db	116	;'t'
   954   002017  6F                 	db	111	;'o'
   955   002018  72                 	db	114	;'r'
   956   002019  20                 	db	32
   957   00201A  6F                 	db	111	;'o'
   958   00201B  6E                 	db	110	;'n'
   959   00201C  00                 	db	0
   960   00201D                     STR_1:
   961   00201D  77                 	db	119	;'w'
   962   00201E  72                 	db	114	;'r'
   963   00201F  6F                 	db	111	;'o'
   964   002020  6E                 	db	110	;'n'
   965   002021  67                 	db	103	;'g'
   966   002022  00                 	db	0
   967   002023  00                 	db	0	; dummy byte at the end
   968   002000                     __smallconst    set	__psmallconst
   969   002000                     __mediumconst   set	__psmallconst
   970   000002                     __activetblptr  equ	2
   971                           
   972                           ; #config settings
   973                           
   974                           	psect	cinit
   975   0048B2                     __pcinit:
   976                           	callstack 0
   977   0048B2                     start_initialization:
   978                           	callstack 0
   979   0048B2                     __initialization:
   980                           	callstack 0
   981                           
   982                           ; Initialize objects allocated to COMRAM (30 bytes)
   983                           ; load TBLPTR registers with __pidataCOMRAM
   984   0048B2  0E24               	movlw	low __pidataCOMRAM
   985   0048B4  6EF6               	movwf	tblptrl,c
   986   0048B6  0E4A               	movlw	high __pidataCOMRAM
   987   0048B8  6EF7               	movwf	tblptrh,c
   988   0048BA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   989   0048BC  6EF8               	movwf	tblptru,c
   990   0048BE  EE00  F027         	lfsr	0,__pdataCOMRAM
   991   0048C2  EE10 F01E          	lfsr	1,30
   992   0048C6                     copy_data0:
   993   0048C6  0009               	tblrd		*+
   994   0048C8  006F FFD7 FFEE     	movff	tablat,postinc0
   995   0048CE  50E5               	movf	postdec1,w,c
   996   0048D0  50E1               	movf	fsr1l,w,c
   997   0048D2  E1F9               	bnz	copy_data0
   998                           
   999                           ; Clear objects allocated to COMRAM (4 bytes)
  1000   0048D4  6A48               	clrf	(__pbssCOMRAM+3)& (0+255),c
  1001   0048D6  6A47               	clrf	(__pbssCOMRAM+2)& (0+255),c
  1002   0048D8  6A46               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1003   0048DA  6A45               	clrf	__pbssCOMRAM& (0+255),c
  1004                           
  1005                           ;
  1006                           ; Setup IVTBASE
  1007                           ;
  1008   003FD5                     IVTBASEL        equ	16341
  1009   003FD6                     IVTBASEH        equ	16342
  1010   003FD7                     IVTBASEU        equ	16343
  1011   0048DC  0E08               	movlw	(ivt0x4008_base shr 0)& (0+255)
  1012   0048DE  6ED5               	movwf	213,c
  1013   0048E0  0E40               	movlw	(ivt0x4008_base shr (0+8))& (0+255)
  1014   0048E2  6ED6               	movwf	214,c
  1015   0048E4  0E00               	movlw	(ivt0x4008_base shr (0+16))& (0+255)
  1016   0048E6  6ED7               	movwf	215,c
  1017   0048E8                     end_of_initialization:
  1018                           	callstack 0
  1019   0048E8                     __end_of__initialization:
  1020                           	callstack 0
  1021   0048E8  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1022   0048EA  6EF8               	movwf	tblptru,c
  1023   0048EC  0100               	movlb	0
  1024   0048EE  EF56  F023         	goto	_main	;jump to C main() function
  1025                           
  1026                           	psect	bssCOMRAM
  1027   000045                     __pbssCOMRAM:
  1028                           	callstack 0
  1029   000045                     _reset:
  1030                           	callstack 0
  1031   000045                     	ds	1
  1032   000046                     _inputStr:
  1033                           	callstack 0
  1034   000046                     	ds	3
  1035                           
  1036                           	psect	dataCOMRAM
  1037   000027                     __pdataCOMRAM:
  1038                           	callstack 0
  1039   000027                     _num:
  1040                           	callstack 0
  1041   000027                     	ds	10
  1042   000031                     _sevSeg:
  1043                           	callstack 0
  1044   000031                     	ds	10
  1045   00003B                     _code:
  1046                           	callstack 0
  1047   00003B                     	ds	10
  1048                           
  1049                           	psect	cstackBANK0
  1050   000060                     __pcstackBANK0:
  1051                           	callstack 0
  1052   000060                     ??_getCode:
  1053                           
  1054                           ; 1 bytes @ 0x0
  1055   000060                     	ds	2
  1056   000062                     getCode@input:
  1057                           	callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x2
  1060   000062                     	ds	2
  1061   000064                     getCode@i_293:
  1062                           	callstack 0
  1063                           
  1064                           ; 2 bytes @ 0x4
  1065   000064                     	ds	2
  1066   000066                     getCode@i_295:
  1067                           	callstack 0
  1068                           
  1069                           ; 2 bytes @ 0x6
  1070   000066                     	ds	2
  1071   000068                     getCode@temp:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x8
  1075   000068                     	ds	2
  1076   00006A                     ??_main:
  1077                           
  1078                           ; 1 bytes @ 0xA
  1079   00006A                     	ds	2
  1080                           
  1081                           	psect	cstackCOMRAM
  1082   000001                     __pcstackCOMRAM:
  1083                           	callstack 0
  1084   000001                     i2MSdelay@val:
  1085                           	callstack 0
  1086                           
  1087                           ; 2 bytes @ 0x0
  1088   000001                     	ds	2
  1089   000003                     i2MSdelay@i:
  1090                           	callstack 0
  1091   000003                     
  1092                           ; 1 bytes @ 0x2
  1093   000003                     	ds	2
  1094   000005                     i2MSdelay@j:
  1095                           	callstack 0
  1096                           
  1097                           ; 2 bytes @ 0x4
  1098   000005                     	ds	2
  1099   000007                     i2LCD_Command@cmd:
  1100                           	callstack 0
  1101   000007                     i2LCD_Char@dat:
  1102                           	callstack 0
  1103   000007                     
  1104                           ; 1 bytes @ 0x6
  1105   000007                     	ds	1
  1106   000008                     i2LCD_String@msg:
  1107                           	callstack 0
  1108   000008                     
  1109                           ; 1 bytes @ 0x7
  1110   000008                     	ds	2
  1111   00000A                     i2LCD_String_xy@pos:
  1112                           	callstack 0
  1113   00000A                     
  1114                           ; 1 bytes @ 0x9
  1115   00000A                     	ds	1
  1116   00000B                     i2LCD_String_xy@msg:
  1117                           	callstack 0
  1118                           
  1119                           ; 2 bytes @ 0xA
  1120   00000B                     	ds	2
  1121   00000D                     i2LCD_String_xy@row:
  1122                           	callstack 0
  1123   00000D                     
  1124                           ; 1 bytes @ 0xC
  1125   00000D                     	ds	1
  1126   00000E                     i2LCD_String_xy@location:
  1127                           	callstack 0
  1128                           
  1129                           ; 1 bytes @ 0xD
  1130   00000E                     	ds	1
  1131   00000F                     ??_INT0_ISR:
  1132                           
  1133                           ; 1 bytes @ 0xE
  1134   00000F                     	ds	6
  1135   000015                     INT0_ISR@i:
  1136                           	callstack 0
  1137                           
  1138                           ; 2 bytes @ 0x14
  1139   000015                     	ds	2
  1140   000017                     ?___awdiv:
  1141                           	callstack 0
  1142   000017                     ?___awmod:
  1143                           	callstack 0
  1144   000017                     MSdelay@val:
  1145                           	callstack 0
  1146   000017                     ___awdiv@dividend:
  1147                           	callstack 0
  1148   000017                     ___awmod@dividend:
  1149                           	callstack 0
  1150   000017                     ??_buzz:
  1151   000017                     
  1152                           ; 1 bytes @ 0x16
  1153   000017                     	ds	2
  1154   000019                     MSdelay@i:
  1155                           	callstack 0
  1156   000019                     buzz@j:
  1157                           	callstack 0
  1158   000019                     ___awdiv@divisor:
  1159                           	callstack 0
  1160   000019                     ___awmod@divisor:
  1161                           	callstack 0
  1162   000019                     
  1163                           ; 1 bytes @ 0x18
  1164   000019                     	ds	2
  1165   00001B                     ___awdiv@counter:
  1166                           	callstack 0
  1167   00001B                     ___awmod@counter:
  1168                           	callstack 0
  1169   00001B                     MSdelay@j:
  1170                           	callstack 0
  1171   00001B                     buzz@i:
  1172                           	callstack 0
  1173   00001B                     
  1174                           ; 1 bytes @ 0x1A
  1175   00001B                     	ds	1
  1176   00001C                     ___awdiv@sign:
  1177                           	callstack 0
  1178   00001C                     ___awmod@sign:
  1179                           	callstack 0
  1180                           
  1181                           ; 1 bytes @ 0x1B
  1182   00001C                     	ds	1
  1183   00001D                     LCD_Command@cmd:
  1184                           	callstack 0
  1185   00001D                     LCD_Char@dat:
  1186                           	callstack 0
  1187   00001D                     ___awdiv@quotient:
  1188                           	callstack 0
  1189   00001D                     
  1190                           ; 1 bytes @ 0x1C
  1191   00001D                     	ds	1
  1192   00001E                     LCD_String@msg:
  1193                           	callstack 0
  1194   00001E                     
  1195                           ; 1 bytes @ 0x1D
  1196   00001E                     	ds	2
  1197   000020                     LCD_String_xy@pos:
  1198                           	callstack 0
  1199   000020                     
  1200                           ; 1 bytes @ 0x1F
  1201   000020                     	ds	1
  1202   000021                     LCD_String_xy@msg:
  1203                           	callstack 0
  1204                           
  1205                           ; 2 bytes @ 0x20
  1206   000021                     	ds	2
  1207   000023                     LCD_String_xy@row:
  1208                           	callstack 0
  1209   000023                     
  1210                           ; 1 bytes @ 0x22
  1211   000023                     	ds	1
  1212   000024                     LCD_String_xy@location:
  1213                           	callstack 0
  1214                           
  1215                           ; 1 bytes @ 0x23
  1216   000024                     	ds	1
  1217   000025                     getCode@secret:
  1218                           	callstack 0
  1219                           
  1220                           ; 2 bytes @ 0x24
  1221   000025                     	ds	2
  1222                           
  1223 ;;
  1224 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1225 ;;
  1226 ;; *************** function _main *****************
  1227 ;; Defined at:
  1228 ;;		line 33 in file "main.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;		None
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;  secretCode      2    0        int 
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  1    wreg      void 
  1235 ;; Registers used:
  1236 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1244 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1245 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1246 ;;Total ram usage:        2 bytes
  1247 ;; Hardware stack levels required when called: 10
  1248 ;; This function calls:
  1249 ;;		_Initialize
  1250 ;;		_LCD_Init
  1251 ;;		_LCD_String_xy
  1252 ;;		_buzz
  1253 ;;		_getCode
  1254 ;; This function is called by:
  1255 ;;		Startup code after reset
  1256 ;; This function uses a non-reentrant model
  1257 ;;
  1258                           
  1259                           	psect	text0
  1260   0046AC                     __ptext0:
  1261                           	callstack 0
  1262   0046AC                     _main:
  1263                           	callstack 21
  1264   0046AC                     
  1265                           ;main.c: 36:     LATC2 = 1;
  1266   0046AC  84BC               	bsf	16316,2,c	;volatile
  1267   0046AE                     
  1268                           ;main.c: 40:     Initialize();
  1269   0046AE  ECB9  F024         	call	_Initialize	;wreg free
  1270   0046B2                     
  1271                           ;main.c: 41:     _delay((unsigned long)((50)*(4000000/4000.0)));
  1272   0046B2  0E41               	movlw	65
  1273   0046B4  0100               	movlb	0	; () banked
  1274   0046B6  6F6A               	movwf	??_main& (0+255),b
  1275   0046B8  0EEE               	movlw	238
  1276   0046BA                     u1277:
  1277   0046BA  2EE8               	decfsz	wreg,f,c
  1278   0046BC  D7FE               	bra	u1277
  1279   0046BE  2F6A               	decfsz	??_main& (0+255),f,b
  1280   0046C0  D7FC               	bra	u1277
  1281   0046C2  0000               	nop	
  1282   0046C4                     
  1283                           ;main.c: 44:     LCD_Init();
  1284   0046C4  ECD7  F024         	call	_LCD_Init	;wreg free
  1285   0046C8                     
  1286                           ;main.c: 45:     buzz();
  1287   0046C8  EC0E  F023         	call	_buzz	;wreg free
  1288   0046CC                     
  1289                           ;main.c: 48:     LATC7 = 1;
  1290   0046CC  8EBC               	bsf	16316,7,c	;volatile
  1291   0046CE                     
  1292                           ;main.c: 49:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1293   0046CE  0E82               	movlw	130
  1294   0046D0  0100               	movlb	0	; () banked
  1295   0046D2  6F6A               	movwf	??_main& (0+255),b
  1296   0046D4  0EDD               	movlw	221
  1297   0046D6                     u1287:
  1298   0046D6  2EE8               	decfsz	wreg,f,c
  1299   0046D8  D7FE               	bra	u1287
  1300   0046DA  2F6A               	decfsz	??_main& (0+255),f,b
  1301   0046DC  D7FC               	bra	u1287
  1302   0046DE  D000               	nop2	
  1303   0046E0                     l2076:
  1304                           
  1305                           ;main.c: 53:         LCD_String_xy(2,0,"Code: 20");
  1306   0046E0  0E00               	movlw	0
  1307   0046E2  6E20               	movwf	LCD_String_xy@pos^0,c
  1308   0046E4  0E0B               	movlw	low STR_4
  1309   0046E6  6E21               	movwf	LCD_String_xy@msg^0,c
  1310   0046E8  5021               	movf	LCD_String_xy@msg^0,w,c
  1311   0046EA  A4D8               	btfss	status,2,c
  1312   0046EC  0E20               	movlw	high __smallconst
  1313   0046EE  6E22               	movwf	(LCD_String_xy@msg+1)^0,c
  1314   0046F0  0E02               	movlw	2
  1315   0046F2  EC79  F024         	call	_LCD_String_xy
  1316   0046F6                     
  1317                           ;main.c: 54:         reset = 0;
  1318   0046F6  6A45               	clrf	_reset^0,c	;volatile
  1319   0046F8                     
  1320                           ;main.c: 56:         if (reset == 1) { continue; }
  1321   0046F8  0445               	decf	_reset^0,w,c	;volatile
  1322   0046FA  A4D8               	btfss	status,2,c
  1323   0046FC  EF82  F023         	goto	u1261
  1324   004700  EF84  F023         	goto	u1260
  1325   004704                     u1261:
  1326   004704  EF86  F023         	goto	l2084
  1327   004708                     u1260:
  1328   004708  EF70  F023         	goto	l2076
  1329   00470C                     l2084:
  1330   00470C                     
  1331                           ;main.c: 58:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  1332   00470C  0E06               	movlw	6
  1333   00470E  0100               	movlb	0	; () banked
  1334   004710  6F6B               	movwf	(??_main+1)& (0+255),b
  1335   004712  0E13               	movlw	19
  1336   004714  6F6A               	movwf	??_main& (0+255),b
  1337   004716  0EAD               	movlw	173
  1338   004718                     u1297:
  1339   004718  2EE8               	decfsz	wreg,f,c
  1340   00471A  D7FE               	bra	u1297
  1341   00471C  2F6A               	decfsz	??_main& (0+255),f,b
  1342   00471E  D7FC               	bra	u1297
  1343   004720  2F6B               	decfsz	(??_main+1)& (0+255),f,b
  1344   004722  D7FA               	bra	u1297
  1345   004724  D000               	nop2	
  1346   004726                     
  1347                           ;main.c: 59:         getCode(secretCode);
  1348   004726  0E00               	movlw	0
  1349   004728  6E26               	movwf	(getCode@secret+1)^0,c
  1350   00472A  0E14               	movlw	20
  1351   00472C  6E25               	movwf	getCode@secret^0,c
  1352   00472E  EC59  F020         	call	_getCode	;wreg free
  1353   004732  EF70  F023         	goto	l2076
  1354   004736  EF57  F020         	goto	start
  1355   00473A                     __end_of_main:
  1356                           	callstack 0
  1357                           
  1358 ;; *************** function _getCode *****************
  1359 ;; Defined at:
  1360 ;;		line 82 in file "./func.h"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;  secret          2   36[COMRAM] int 
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;  i               2    6[BANK0 ] int 
  1365 ;;  i               2    4[BANK0 ] int 
  1366 ;;  temp            2    8[BANK0 ] int 
  1367 ;;  input           2    2[BANK0 ] int 
  1368 ;;  i               2    0        int 
  1369 ;; Return value:  Size  Location     Type
  1370 ;;                  1    wreg      void 
  1371 ;; Registers used:
  1372 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1373 ;; Tracked objects:
  1374 ;;		On entry : 0/0
  1375 ;;		On exit  : 0/0
  1376 ;;		Unchanged: 0/0
  1377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1378 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1379 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1380 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1381 ;;      Totals:         2      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1382 ;;Total ram usage:       12 bytes
  1383 ;; Hardware stack levels used: 1
  1384 ;; Hardware stack levels required when called: 9
  1385 ;; This function calls:
  1386 ;;		_LCD_Clear
  1387 ;;		_LCD_String_xy
  1388 ;;		___awdiv
  1389 ;;		___awmod
  1390 ;; This function is called by:
  1391 ;;		_main
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           	psect	text1
  1396   0040B2                     __ptext1:
  1397                           	callstack 0
  1398   0040B2                     _getCode:
  1399                           	callstack 21
  1400   0040B2                     
  1401                           ;./func.h: 84:     int temp = 0;
  1402   0040B2  0E00               	movlw	0
  1403   0040B4  0100               	movlb	0	; () banked
  1404   0040B6  6F69               	movwf	(getCode@temp+1)& (0+255),b
  1405   0040B8  0E00               	movlw	0
  1406   0040BA  6F68               	movwf	getCode@temp& (0+255),b
  1407   0040BC                     
  1408                           ; BSR set to: 0
  1409                           ;./func.h: 85:     LCD_Clear();
  1410   0040BC  EC3F  F025         	call	_LCD_Clear	;wreg free
  1411   0040C0                     
  1412                           ;./func.h: 86:     inputStr[0] = '0';
  1413   0040C0  0E30               	movlw	48
  1414   0040C2  6E46               	movwf	_inputStr^0,c
  1415   0040C4                     
  1416                           ;./func.h: 87:     inputStr[1] = ' ';
  1417   0040C4  0E20               	movlw	32
  1418   0040C6  6E47               	movwf	(_inputStr+1)^0,c
  1419   0040C8                     
  1420                           ;./func.h: 89:     code[6] = num[secret / 10];
  1421   0040C8  C025  F017         	movff	getCode@secret,___awdiv@dividend
  1422   0040CC  C026  F018         	movff	getCode@secret+1,___awdiv@dividend+1
  1423   0040D0  0E00               	movlw	0
  1424   0040D2  6E1A               	movwf	(___awdiv@divisor+1)^0,c
  1425   0040D4  0E0A               	movlw	10
  1426   0040D6  6E19               	movwf	___awdiv@divisor^0,c
  1427   0040D8  EC56  F022         	call	___awdiv	;wreg free
  1428   0040DC  5017               	movf	?___awdiv^0,w,c
  1429   0040DE  0F27               	addlw	low _num
  1430   0040E0  6ED9               	movwf	fsr2l,c
  1431   0040E2  6ADA               	clrf	fsr2h,c
  1432   0040E4  50DF               	movf	indf2,w,c
  1433   0040E6  6E41               	movwf	(_code+6)^0,c
  1434   0040E8                     
  1435                           ;./func.h: 90:     code[7] = num[secret % 10];
  1436   0040E8  C025  F017         	movff	getCode@secret,___awmod@dividend
  1437   0040EC  C026  F018         	movff	getCode@secret+1,___awmod@dividend+1
  1438   0040F0  0E00               	movlw	0
  1439   0040F2  6E1A               	movwf	(___awmod@divisor+1)^0,c
  1440   0040F4  0E0A               	movlw	10
  1441   0040F6  6E19               	movwf	___awmod@divisor^0,c
  1442   0040F8  ECB7  F022         	call	___awmod	;wreg free
  1443   0040FC  5017               	movf	?___awmod^0,w,c
  1444   0040FE  0F27               	addlw	low _num
  1445   004100  6ED9               	movwf	fsr2l,c
  1446   004102  6ADA               	clrf	fsr2h,c
  1447   004104  50DF               	movf	indf2,w,c
  1448   004106  6E42               	movwf	(_code+7)^0,c
  1449   004108                     
  1450                           ;./func.h: 91:     LCD_String_xy(1,0, inputStr);
  1451   004108  0E00               	movlw	0
  1452   00410A  6E20               	movwf	LCD_String_xy@pos^0,c
  1453   00410C  0E46               	movlw	low _inputStr
  1454   00410E  6E21               	movwf	LCD_String_xy@msg^0,c
  1455   004110  6A22               	clrf	(LCD_String_xy@msg+1)^0,c
  1456   004112  0E01               	movlw	1
  1457   004114  EC79  F024         	call	_LCD_String_xy
  1458   004118                     
  1459                           ;./func.h: 92:     _delay((unsigned long)((10)*(4000000/4000.0)));
  1460   004118  0E0D               	movlw	13
  1461   00411A  0100               	movlb	0	; () banked
  1462   00411C  6F60               	movwf	??_getCode& (0+255),b
  1463   00411E  0EFB               	movlw	251
  1464   004120                     u1307:
  1465   004120  2EE8               	decfsz	wreg,f,c
  1466   004122  D7FE               	bra	u1307
  1467   004124  2F60               	decfsz	??_getCode& (0+255),f,b
  1468   004126  D7FC               	bra	u1307
  1469   004128  D000               	nop2	
  1470   00412A                     
  1471                           ;./func.h: 93:     LCD_String_xy(2, 0, code);
  1472   00412A  0E00               	movlw	0
  1473   00412C  6E20               	movwf	LCD_String_xy@pos^0,c
  1474   00412E  0E3B               	movlw	low _code
  1475   004130  6E21               	movwf	LCD_String_xy@msg^0,c
  1476   004132  6A22               	clrf	(LCD_String_xy@msg+1)^0,c
  1477   004134  0E02               	movlw	2
  1478   004136  EC79  F024         	call	_LCD_String_xy
  1479   00413A                     
  1480                           ;./func.h: 94:     _delay((unsigned long)((10)*(4000000/4000.0)));
  1481   00413A  0E0D               	movlw	13
  1482   00413C  0100               	movlb	0	; () banked
  1483   00413E  6F60               	movwf	??_getCode& (0+255),b
  1484   004140  0EFB               	movlw	251
  1485   004142                     u1317:
  1486   004142  2EE8               	decfsz	wreg,f,c
  1487   004144  D7FE               	bra	u1317
  1488   004146  2F60               	decfsz	??_getCode& (0+255),f,b
  1489   004148  D7FC               	bra	u1317
  1490   00414A  D000               	nop2	
  1491   00414C                     l1966:
  1492                           
  1493                           ;./func.h: 98:         if (reset == 1) { return; }
  1494   00414C  0445               	decf	_reset^0,w,c	;volatile
  1495   00414E  A4D8               	btfss	status,2,c
  1496   004150  EFAC  F020         	goto	u1131
  1497   004154  EFAE  F020         	goto	u1130
  1498   004158                     u1131:
  1499   004158  EFB0  F020         	goto	l149
  1500   00415C                     u1130:
  1501   00415C  EFF3  F021         	goto	l150
  1502   004160                     l149:
  1503   004160  A0CA               	btfss	202,0,c	;volatile
  1504   004162  EFB5  F020         	goto	u1141
  1505   004166  EFB7  F020         	goto	u1140
  1506   00416A                     u1141:
  1507   00416A  EFE2  F020         	goto	l1984
  1508   00416E                     u1140:
  1509   00416E                     
  1510                           ;./func.h: 100:             temp += 1;
  1511   00416E  0100               	movlb	0	; () banked
  1512   004170  4B68               	infsnz	getCode@temp& (0+255),f,b
  1513   004172  2B69               	incf	(getCode@temp+1)& (0+255),f,b
  1514   004174                     
  1515                           ; BSR set to: 0
  1516                           ;./func.h: 101:             if (temp == 10) { temp = 0; }
  1517   004174  0E0A               	movlw	10
  1518   004176  1968               	xorwf	getCode@temp& (0+255),w,b
  1519   004178  1169               	iorwf	(getCode@temp+1)& (0+255),w,b
  1520   00417A  A4D8               	btfss	status,2,c
  1521   00417C  EFC2  F020         	goto	u1151
  1522   004180  EFC4  F020         	goto	u1150
  1523   004184                     u1151:
  1524   004184  EFC8  F020         	goto	l1978
  1525   004188                     u1150:
  1526   004188                     
  1527                           ; BSR set to: 0
  1528   004188  0E00               	movlw	0
  1529   00418A  6F69               	movwf	(getCode@temp+1)& (0+255),b
  1530   00418C  0E00               	movlw	0
  1531   00418E  6F68               	movwf	getCode@temp& (0+255),b
  1532   004190                     l1978:
  1533                           
  1534                           ; BSR set to: 0
  1535                           ;./func.h: 102:             inputStr[0] = num[temp];
  1536   004190  5168               	movf	getCode@temp& (0+255),w,b
  1537   004192  0F27               	addlw	low _num
  1538   004194  6ED9               	movwf	fsr2l,c
  1539   004196  6ADA               	clrf	fsr2h,c
  1540   004198  50DF               	movf	indf2,w,c
  1541   00419A  6E46               	movwf	_inputStr^0,c
  1542   00419C                     
  1543                           ; BSR set to: 0
  1544                           ;./func.h: 103:             LCD_String_xy(1,0,inputStr);
  1545   00419C  0E00               	movlw	0
  1546   00419E  6E20               	movwf	LCD_String_xy@pos^0,c
  1547   0041A0  0E46               	movlw	low _inputStr
  1548   0041A2  6E21               	movwf	LCD_String_xy@msg^0,c
  1549   0041A4  6A22               	clrf	(LCD_String_xy@msg+1)^0,c
  1550   0041A6  0E01               	movlw	1
  1551   0041A8  EC79  F024         	call	_LCD_String_xy
  1552   0041AC                     
  1553                           ;./func.h: 104:             _delay((unsigned long)((300)*(4000000/4000.0)));
  1554   0041AC  0E02               	movlw	2
  1555   0041AE  0100               	movlb	0	; () banked
  1556   0041B0  6F61               	movwf	(??_getCode+1)& (0+255),b
  1557   0041B2  0E86               	movlw	134
  1558   0041B4  6F60               	movwf	??_getCode& (0+255),b
  1559   0041B6  0E99               	movlw	153
  1560   0041B8                     u1327:
  1561   0041B8  2EE8               	decfsz	wreg,f,c
  1562   0041BA  D7FE               	bra	u1327
  1563   0041BC  2F60               	decfsz	??_getCode& (0+255),f,b
  1564   0041BE  D7FC               	bra	u1327
  1565   0041C0  2F61               	decfsz	(??_getCode+1)& (0+255),f,b
  1566   0041C2  D7FA               	bra	u1327
  1567   0041C4                     l1984:
  1568                           
  1569                           ;./func.h: 106:         if (PORTCbits.RC6 == 1) {
  1570   0041C4  ACCC               	btfss	204,6,c	;volatile
  1571   0041C6  EFE7  F020         	goto	u1161
  1572   0041CA  EFE9  F020         	goto	u1160
  1573   0041CE                     u1161:
  1574   0041CE  EFA6  F020         	goto	l1966
  1575   0041D2                     u1160:
  1576   0041D2                     
  1577                           ;./func.h: 108:             input = temp * 10;
  1578   0041D2  0E0A               	movlw	10
  1579   0041D4  0100               	movlb	0	; () banked
  1580   0041D6  0368               	mulwf	getCode@temp& (0+255),b
  1581   0041D8  006F FFCC  F060    	movff	prodl,??_getCode
  1582   0041DE  006F FFD0  F061    	movff	prodh,??_getCode+1
  1583   0041E4  0369               	mulwf	(getCode@temp+1)& (0+255),b
  1584   0041E6  50F3               	movf	prodl,w,c
  1585   0041E8  2761               	addwf	(??_getCode+1)& (0+255),f,b
  1586   0041EA  C060  F062         	movff	??_getCode,getCode@input
  1587   0041EE  C061  F063         	movff	??_getCode+1,getCode@input+1
  1588   0041F2                     
  1589                           ; BSR set to: 0
  1590                           ;./func.h: 109:             _delay((unsigned long)((500)*(4000000/4000.0)));
  1591   0041F2  0E03               	movlw	3
  1592   0041F4  0100               	movlb	0	; () banked
  1593   0041F6  6F61               	movwf	(??_getCode+1)& (0+255),b
  1594   0041F8  0E8A               	movlw	138
  1595   0041FA  6F60               	movwf	??_getCode& (0+255),b
  1596   0041FC  0E55               	movlw	85
  1597   0041FE                     u1337:
  1598   0041FE  2EE8               	decfsz	wreg,f,c
  1599   004200  D7FE               	bra	u1337
  1600   004202  2F60               	decfsz	??_getCode& (0+255),f,b
  1601   004204  D7FC               	bra	u1337
  1602   004206  2F61               	decfsz	(??_getCode+1)& (0+255),f,b
  1603   004208  D7FA               	bra	u1337
  1604   00420A  D000               	nop2	
  1605   00420C                     
  1606                           ;./func.h: 113:     temp = 0;
  1607   00420C  0E00               	movlw	0
  1608   00420E  0100               	movlb	0	; () banked
  1609   004210  6F69               	movwf	(getCode@temp+1)& (0+255),b
  1610   004212  0E00               	movlw	0
  1611   004214  6F68               	movwf	getCode@temp& (0+255),b
  1612   004216                     
  1613                           ; BSR set to: 0
  1614                           ;./func.h: 114:     inputStr[1] = num[temp];
  1615   004216  C027  F047         	movff	_num,_inputStr+1
  1616   00421A                     
  1617                           ; BSR set to: 0
  1618                           ;./func.h: 115:     LCD_String_xy(1,0,inputStr);
  1619   00421A  0E00               	movlw	0
  1620   00421C  6E20               	movwf	LCD_String_xy@pos^0,c
  1621   00421E  0E46               	movlw	low _inputStr
  1622   004220  6E21               	movwf	LCD_String_xy@msg^0,c
  1623   004222  6A22               	clrf	(LCD_String_xy@msg+1)^0,c
  1624   004224  0E01               	movlw	1
  1625   004226  EC79  F024         	call	_LCD_String_xy
  1626   00422A                     l1996:
  1627                           
  1628                           ;./func.h: 118:         if (reset == 1) { return; }
  1629   00422A  0445               	decf	_reset^0,w,c	;volatile
  1630   00422C  A4D8               	btfss	status,2,c
  1631   00422E  EF1B  F021         	goto	u1171
  1632   004232  EF1D  F021         	goto	u1170
  1633   004236                     u1171:
  1634   004236  EF1F  F021         	goto	l158
  1635   00423A                     u1170:
  1636   00423A  EFF3  F021         	goto	l150
  1637   00423E                     l158:
  1638                           
  1639                           ;./func.h: 119:         if (PORTAbits.RA1 == 1) {
  1640   00423E  A2CA               	btfss	202,1,c	;volatile
  1641   004240  EF24  F021         	goto	u1181
  1642   004244  EF26  F021         	goto	u1180
  1643   004248                     u1181:
  1644   004248  EF51  F021         	goto	l2012
  1645   00424C                     u1180:
  1646   00424C                     
  1647                           ;./func.h: 120:             temp += 1;
  1648   00424C  0100               	movlb	0	; () banked
  1649   00424E  4B68               	infsnz	getCode@temp& (0+255),f,b
  1650   004250  2B69               	incf	(getCode@temp+1)& (0+255),f,b
  1651   004252                     
  1652                           ; BSR set to: 0
  1653                           ;./func.h: 121:             if (temp == 10) { temp = 0; }
  1654   004252  0E0A               	movlw	10
  1655   004254  1968               	xorwf	getCode@temp& (0+255),w,b
  1656   004256  1169               	iorwf	(getCode@temp+1)& (0+255),w,b
  1657   004258  A4D8               	btfss	status,2,c
  1658   00425A  EF31  F021         	goto	u1191
  1659   00425E  EF33  F021         	goto	u1190
  1660   004262                     u1191:
  1661   004262  EF37  F021         	goto	l2006
  1662   004266                     u1190:
  1663   004266                     
  1664                           ; BSR set to: 0
  1665   004266  0E00               	movlw	0
  1666   004268  6F69               	movwf	(getCode@temp+1)& (0+255),b
  1667   00426A  0E00               	movlw	0
  1668   00426C  6F68               	movwf	getCode@temp& (0+255),b
  1669   00426E                     l2006:
  1670                           
  1671                           ; BSR set to: 0
  1672                           ;./func.h: 122:             inputStr[1] = num[temp];
  1673   00426E  5168               	movf	getCode@temp& (0+255),w,b
  1674   004270  0F27               	addlw	low _num
  1675   004272  6ED9               	movwf	fsr2l,c
  1676   004274  6ADA               	clrf	fsr2h,c
  1677   004276  50DF               	movf	indf2,w,c
  1678   004278  6E47               	movwf	(_inputStr+1)^0,c
  1679   00427A                     
  1680                           ; BSR set to: 0
  1681                           ;./func.h: 123:             LCD_String_xy(1,0,inputStr);
  1682   00427A  0E00               	movlw	0
  1683   00427C  6E20               	movwf	LCD_String_xy@pos^0,c
  1684   00427E  0E46               	movlw	low _inputStr
  1685   004280  6E21               	movwf	LCD_String_xy@msg^0,c
  1686   004282  6A22               	clrf	(LCD_String_xy@msg+1)^0,c
  1687   004284  0E01               	movlw	1
  1688   004286  EC79  F024         	call	_LCD_String_xy
  1689   00428A                     
  1690                           ;./func.h: 124:             _delay((unsigned long)((300)*(4000000/4000.0)));
  1691   00428A  0E02               	movlw	2
  1692   00428C  0100               	movlb	0	; () banked
  1693   00428E  6F61               	movwf	(??_getCode+1)& (0+255),b
  1694   004290  0E86               	movlw	134
  1695   004292  6F60               	movwf	??_getCode& (0+255),b
  1696   004294  0E99               	movlw	153
  1697   004296                     u1347:
  1698   004296  2EE8               	decfsz	wreg,f,c
  1699   004298  D7FE               	bra	u1347
  1700   00429A  2F60               	decfsz	??_getCode& (0+255),f,b
  1701   00429C  D7FC               	bra	u1347
  1702   00429E  2F61               	decfsz	(??_getCode+1)& (0+255),f,b
  1703   0042A0  D7FA               	bra	u1347
  1704   0042A2                     l2012:
  1705                           
  1706                           ;./func.h: 126:         if (PORTCbits.RC6 == 1) {
  1707   0042A2  ACCC               	btfss	204,6,c	;volatile
  1708   0042A4  EF56  F021         	goto	u1201
  1709   0042A8  EF58  F021         	goto	u1200
  1710   0042AC                     u1201:
  1711   0042AC  EF15  F021         	goto	l1996
  1712   0042B0                     u1200:
  1713   0042B0                     
  1714                           ;./func.h: 127:             _delay((unsigned long)((500)*(4000000/4000.0)));
  1715   0042B0  0E03               	movlw	3
  1716   0042B2  0100               	movlb	0	; () banked
  1717   0042B4  6F61               	movwf	(??_getCode+1)& (0+255),b
  1718   0042B6  0E8A               	movlw	138
  1719   0042B8  6F60               	movwf	??_getCode& (0+255),b
  1720   0042BA  0E55               	movlw	85
  1721   0042BC                     u1357:
  1722   0042BC  2EE8               	decfsz	wreg,f,c
  1723   0042BE  D7FE               	bra	u1357
  1724   0042C0  2F60               	decfsz	??_getCode& (0+255),f,b
  1725   0042C2  D7FC               	bra	u1357
  1726   0042C4  2F61               	decfsz	(??_getCode+1)& (0+255),f,b
  1727   0042C6  D7FA               	bra	u1357
  1728   0042C8  D000               	nop2	
  1729   0042CA                     
  1730                           ;./func.h: 131:     input += temp;
  1731   0042CA  0100               	movlb	0	; () banked
  1732   0042CC  5168               	movf	getCode@temp& (0+255),w,b
  1733   0042CE  2762               	addwf	getCode@input& (0+255),f,b
  1734   0042D0  5169               	movf	(getCode@temp+1)& (0+255),w,b
  1735   0042D2  2363               	addwfc	(getCode@input+1)& (0+255),f,b
  1736                           
  1737                           ;./func.h: 134:     if (input != secret) {
  1738   0042D4  5025               	movf	getCode@secret^0,w,c
  1739   0042D6  1962               	xorwf	getCode@input& (0+255),w,b
  1740   0042D8  E109               	bnz	u1210
  1741   0042DA  5026               	movf	(getCode@secret+1)^0,w,c
  1742   0042DC  1963               	xorwf	(getCode@input+1)& (0+255),w,b
  1743   0042DE  B4D8               	btfsc	status,2,c
  1744   0042E0  EF74  F021         	goto	u1211
  1745   0042E4  EF76  F021         	goto	u1210
  1746   0042E8                     u1211:
  1747   0042E8  EFAE  F021         	goto	l2036
  1748   0042EC                     u1210:
  1749   0042EC                     
  1750                           ; BSR set to: 0
  1751                           ;./func.h: 135:         LCD_String_xy(1,0,"wrong");
  1752   0042EC  0E00               	movlw	0
  1753   0042EE  6E20               	movwf	LCD_String_xy@pos^0,c
  1754   0042F0  0E1D               	movlw	low STR_1
  1755   0042F2  6E21               	movwf	LCD_String_xy@msg^0,c
  1756   0042F4  5021               	movf	LCD_String_xy@msg^0,w,c
  1757   0042F6  A4D8               	btfss	status,2,c
  1758   0042F8  0E20               	movlw	high __smallconst
  1759   0042FA  6E22               	movwf	(LCD_String_xy@msg+1)^0,c
  1760   0042FC  0E01               	movlw	1
  1761   0042FE  EC79  F024         	call	_LCD_String_xy
  1762   004302                     
  1763                           ;./func.h: 137:         LATC5 = 1;
  1764   004302  8ABC               	bsf	16316,5,c	;volatile
  1765   004304                     
  1766                           ;./func.h: 139:         for(int i = 0; i < 60 ;i++) {
  1767   004304  0E00               	movlw	0
  1768   004306  0100               	movlb	0	; () banked
  1769   004308  6F65               	movwf	(getCode@i_293+1)& (0+255),b
  1770   00430A  0E00               	movlw	0
  1771   00430C  6F64               	movwf	getCode@i_293& (0+255),b
  1772   00430E                     l2028:
  1773                           
  1774                           ; BSR set to: 0
  1775                           ;./func.h: 140:             if (reset == 1) { return; }
  1776   00430E  0445               	decf	_reset^0,w,c	;volatile
  1777   004310  A4D8               	btfss	status,2,c
  1778   004312  EF8D  F021         	goto	u1221
  1779   004316  EF8F  F021         	goto	u1220
  1780   00431A                     u1221:
  1781   00431A  EF91  F021         	goto	l2032
  1782   00431E                     u1220:
  1783   00431E  EFF3  F021         	goto	l150
  1784   004322                     l2032:
  1785                           
  1786                           ; BSR set to: 0
  1787                           ;./func.h: 141:             _delay((unsigned long)((20)*(4000000/4000.0)));
  1788   004322  0E1A               	movlw	26
  1789   004324  0100               	movlb	0	; () banked
  1790   004326  6F60               	movwf	??_getCode& (0+255),b
  1791   004328  0EF8               	movlw	248
  1792   00432A                     u1367:
  1793   00432A  2EE8               	decfsz	wreg,f,c
  1794   00432C  D7FE               	bra	u1367
  1795   00432E  2F60               	decfsz	??_getCode& (0+255),f,b
  1796   004330  D7FC               	bra	u1367
  1797   004332  0000               	nop	
  1798   004334                     
  1799                           ;./func.h: 142:         }
  1800   004334  0100               	movlb	0	; () banked
  1801   004336  4B64               	infsnz	getCode@i_293& (0+255),f,b
  1802   004338  2B65               	incf	(getCode@i_293+1)& (0+255),f,b
  1803   00433A  BF65               	btfsc	(getCode@i_293+1)& (0+255),7,b
  1804   00433C  EFA9  F021         	goto	u1231
  1805   004340  5165               	movf	(getCode@i_293+1)& (0+255),w,b
  1806   004342  E109               	bnz	u1230
  1807   004344  0E3C               	movlw	60
  1808   004346  5D64               	subwf	getCode@i_293& (0+255),w,b
  1809   004348  A0D8               	btfss	status,0,c
  1810   00434A  EFA9  F021         	goto	u1231
  1811   00434E  EFAB  F021         	goto	u1230
  1812   004352                     u1231:
  1813   004352  EF87  F021         	goto	l2028
  1814   004356                     u1230:
  1815   004356                     
  1816                           ; BSR set to: 0
  1817                           ;./func.h: 143:         LATC5 = 0;
  1818   004356  9ABC               	bcf	16316,5,c	;volatile
  1819                           
  1820                           ;./func.h: 144:     }
  1821   004358  EFE4  F021         	goto	l2054
  1822   00435C                     l2036:
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;./func.h: 146:         LCD_String_xy(1,0,"motor on");
  1826   00435C  0E00               	movlw	0
  1827   00435E  6E20               	movwf	LCD_String_xy@pos^0,c
  1828   004360  0E14               	movlw	low STR_2
  1829   004362  6E21               	movwf	LCD_String_xy@msg^0,c
  1830   004364  5021               	movf	LCD_String_xy@msg^0,w,c
  1831   004366  A4D8               	btfss	status,2,c
  1832   004368  0E20               	movlw	high __smallconst
  1833   00436A  6E22               	movwf	(LCD_String_xy@msg+1)^0,c
  1834   00436C  0E01               	movlw	1
  1835   00436E  EC79  F024         	call	_LCD_String_xy
  1836   004372                     
  1837                           ;./func.h: 147:         LATC7 = 0;
  1838   004372  9EBC               	bcf	16316,7,c	;volatile
  1839   004374                     
  1840                           ;./func.h: 149:         for(int i = 0; i < 200; i++) {
  1841   004374  0E00               	movlw	0
  1842   004376  0100               	movlb	0	; () banked
  1843   004378  6F67               	movwf	(getCode@i_295+1)& (0+255),b
  1844   00437A  0E00               	movlw	0
  1845   00437C  6F66               	movwf	getCode@i_295& (0+255),b
  1846   00437E                     l2046:
  1847                           
  1848                           ; BSR set to: 0
  1849                           ;./func.h: 150:             if (reset == 1) { return; }
  1850   00437E  0445               	decf	_reset^0,w,c	;volatile
  1851   004380  A4D8               	btfss	status,2,c
  1852   004382  EFC5  F021         	goto	u1241
  1853   004386  EFC7  F021         	goto	u1240
  1854   00438A                     u1241:
  1855   00438A  EFC9  F021         	goto	l2050
  1856   00438E                     u1240:
  1857   00438E  EFF3  F021         	goto	l150
  1858   004392                     l2050:
  1859                           
  1860                           ; BSR set to: 0
  1861                           ;./func.h: 151:             _delay((unsigned long)((10)*(4000000/4000.0)));
  1862   004392  0E0D               	movlw	13
  1863   004394  0100               	movlb	0	; () banked
  1864   004396  6F60               	movwf	??_getCode& (0+255),b
  1865   004398  0EFB               	movlw	251
  1866   00439A                     u1377:
  1867   00439A  2EE8               	decfsz	wreg,f,c
  1868   00439C  D7FE               	bra	u1377
  1869   00439E  2F60               	decfsz	??_getCode& (0+255),f,b
  1870   0043A0  D7FC               	bra	u1377
  1871   0043A2  D000               	nop2	
  1872   0043A4                     
  1873                           ;./func.h: 152:         }
  1874   0043A4  0100               	movlb	0	; () banked
  1875   0043A6  4B66               	infsnz	getCode@i_295& (0+255),f,b
  1876   0043A8  2B67               	incf	(getCode@i_295+1)& (0+255),f,b
  1877   0043AA  BF67               	btfsc	(getCode@i_295+1)& (0+255),7,b
  1878   0043AC  EFE1  F021         	goto	u1251
  1879   0043B0  5167               	movf	(getCode@i_295+1)& (0+255),w,b
  1880   0043B2  E109               	bnz	u1250
  1881   0043B4  0EC8               	movlw	200
  1882   0043B6  5D66               	subwf	getCode@i_295& (0+255),w,b
  1883   0043B8  A0D8               	btfss	status,0,c
  1884   0043BA  EFE1  F021         	goto	u1251
  1885   0043BE  EFE3  F021         	goto	u1250
  1886   0043C2                     u1251:
  1887   0043C2  EFBF  F021         	goto	l2046
  1888   0043C6                     u1250:
  1889   0043C6                     
  1890                           ; BSR set to: 0
  1891                           ;./func.h: 153:         LATC7 = 1;
  1892   0043C6  8EBC               	bsf	16316,7,c	;volatile
  1893   0043C8                     l2054:
  1894                           
  1895                           ; BSR set to: 0
  1896                           ;./func.h: 155:     inputStr[0] = ' ';
  1897   0043C8  0E20               	movlw	32
  1898   0043CA  6E46               	movwf	_inputStr^0,c
  1899                           
  1900                           ;./func.h: 156:     inputStr[1] = ' ';
  1901   0043CC  0E20               	movlw	32
  1902   0043CE  6E47               	movwf	(_inputStr+1)^0,c
  1903   0043D0                     
  1904                           ; BSR set to: 0
  1905                           ;./func.h: 157:     LCD_Clear();
  1906   0043D0  EC3F  F025         	call	_LCD_Clear	;wreg free
  1907   0043D4                     
  1908                           ;./func.h: 158:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1909   0043D4  0E82               	movlw	130
  1910   0043D6  0100               	movlb	0	; () banked
  1911   0043D8  6F60               	movwf	??_getCode& (0+255),b
  1912   0043DA  0EDD               	movlw	221
  1913   0043DC                     u1387:
  1914   0043DC  2EE8               	decfsz	wreg,f,c
  1915   0043DE  D7FE               	bra	u1387
  1916   0043E0  2F60               	decfsz	??_getCode& (0+255),f,b
  1917   0043E2  D7FC               	bra	u1387
  1918   0043E4  D000               	nop2	
  1919   0043E6                     l150:
  1920   0043E6  0012               	return		;funcret
  1921   0043E8                     __end_of_getCode:
  1922                           	callstack 0
  1923                           
  1924 ;; *************** function ___awmod *****************
  1925 ;; Defined at:
  1926 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  1927 ;; Parameters:    Size  Location     Type
  1928 ;;  dividend        2   22[COMRAM] int 
  1929 ;;  divisor         2   24[COMRAM] int 
  1930 ;; Auto vars:     Size  Location     Type
  1931 ;;  sign            1   27[COMRAM] unsigned char 
  1932 ;;  counter         1   26[COMRAM] unsigned char 
  1933 ;; Return value:  Size  Location     Type
  1934 ;;                  2   22[COMRAM] int 
  1935 ;; Registers used:
  1936 ;;		wreg, status,2, status,0
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1942 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1943 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1945 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1946 ;;Total ram usage:        6 bytes
  1947 ;; Hardware stack levels used: 1
  1948 ;; Hardware stack levels required when called: 5
  1949 ;; This function calls:
  1950 ;;		Nothing
  1951 ;; This function is called by:
  1952 ;;		_getCode
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956                           	psect	text2
  1957   00456E                     __ptext2:
  1958                           	callstack 0
  1959   00456E                     ___awmod:
  1960                           	callstack 24
  1961   00456E  6A1C               	clrf	___awmod@sign^0,c
  1962   004570  BE18               	btfsc	(___awmod@dividend+1)^0,7,c
  1963   004572  EFBF  F022         	goto	u1070
  1964   004576  EFBD  F022         	goto	u1071
  1965   00457A                     u1071:
  1966   00457A  EFC5  F022         	goto	l1910
  1967   00457E                     u1070:
  1968   00457E  6C17               	negf	___awmod@dividend^0,c
  1969   004580  1E18               	comf	(___awmod@dividend+1)^0,f,c
  1970   004582  B0D8               	btfsc	status,0,c
  1971   004584  2A18               	incf	(___awmod@dividend+1)^0,f,c
  1972   004586  0E01               	movlw	1
  1973   004588  6E1C               	movwf	___awmod@sign^0,c
  1974   00458A                     l1910:
  1975   00458A  BE1A               	btfsc	(___awmod@divisor+1)^0,7,c
  1976   00458C  EFCC  F022         	goto	u1080
  1977   004590  EFCA  F022         	goto	u1081
  1978   004594                     u1081:
  1979   004594  EFD0  F022         	goto	l1914
  1980   004598                     u1080:
  1981   004598  6C19               	negf	___awmod@divisor^0,c
  1982   00459A  1E1A               	comf	(___awmod@divisor+1)^0,f,c
  1983   00459C  B0D8               	btfsc	status,0,c
  1984   00459E  2A1A               	incf	(___awmod@divisor+1)^0,f,c
  1985   0045A0                     l1914:
  1986   0045A0  5019               	movf	___awmod@divisor^0,w,c
  1987   0045A2  101A               	iorwf	(___awmod@divisor+1)^0,w,c
  1988   0045A4  B4D8               	btfsc	status,2,c
  1989   0045A6  EFD7  F022         	goto	u1091
  1990   0045AA  EFD9  F022         	goto	u1090
  1991   0045AE                     u1091:
  1992   0045AE  EFFD  F022         	goto	l1930
  1993   0045B2                     u1090:
  1994   0045B2  0E01               	movlw	1
  1995   0045B4  6E1B               	movwf	___awmod@counter^0,c
  1996   0045B6  EFE1  F022         	goto	l1920
  1997   0045BA                     l1918:
  1998   0045BA  90D8               	bcf	status,0,c
  1999   0045BC  3619               	rlcf	___awmod@divisor^0,f,c
  2000   0045BE  361A               	rlcf	(___awmod@divisor+1)^0,f,c
  2001   0045C0  2A1B               	incf	___awmod@counter^0,f,c
  2002   0045C2                     l1920:
  2003   0045C2  AE1A               	btfss	(___awmod@divisor+1)^0,7,c
  2004   0045C4  EFE6  F022         	goto	u1101
  2005   0045C8  EFE8  F022         	goto	u1100
  2006   0045CC                     u1101:
  2007   0045CC  EFDD  F022         	goto	l1918
  2008   0045D0                     u1100:
  2009   0045D0                     l1922:
  2010   0045D0  5019               	movf	___awmod@divisor^0,w,c
  2011   0045D2  5C17               	subwf	___awmod@dividend^0,w,c
  2012   0045D4  501A               	movf	(___awmod@divisor+1)^0,w,c
  2013   0045D6  5818               	subwfb	(___awmod@dividend+1)^0,w,c
  2014   0045D8  A0D8               	btfss	status,0,c
  2015   0045DA  EFF1  F022         	goto	u1111
  2016   0045DE  EFF3  F022         	goto	u1110
  2017   0045E2                     u1111:
  2018   0045E2  EFF7  F022         	goto	l1926
  2019   0045E6                     u1110:
  2020   0045E6  5019               	movf	___awmod@divisor^0,w,c
  2021   0045E8  5E17               	subwf	___awmod@dividend^0,f,c
  2022   0045EA  501A               	movf	(___awmod@divisor+1)^0,w,c
  2023   0045EC  5A18               	subwfb	(___awmod@dividend+1)^0,f,c
  2024   0045EE                     l1926:
  2025   0045EE  90D8               	bcf	status,0,c
  2026   0045F0  321A               	rrcf	(___awmod@divisor+1)^0,f,c
  2027   0045F2  3219               	rrcf	___awmod@divisor^0,f,c
  2028   0045F4  2E1B               	decfsz	___awmod@counter^0,f,c
  2029   0045F6  EFE8  F022         	goto	l1922
  2030   0045FA                     l1930:
  2031   0045FA  501C               	movf	___awmod@sign^0,w,c
  2032   0045FC  B4D8               	btfsc	status,2,c
  2033   0045FE  EF03  F023         	goto	u1121
  2034   004602  EF05  F023         	goto	u1120
  2035   004606                     u1121:
  2036   004606  EF09  F023         	goto	l1934
  2037   00460A                     u1120:
  2038   00460A  6C17               	negf	___awmod@dividend^0,c
  2039   00460C  1E18               	comf	(___awmod@dividend+1)^0,f,c
  2040   00460E  B0D8               	btfsc	status,0,c
  2041   004610  2A18               	incf	(___awmod@dividend+1)^0,f,c
  2042   004612                     l1934:
  2043   004612  C017  F017         	movff	___awmod@dividend,?___awmod
  2044   004616  C018  F018         	movff	___awmod@dividend+1,?___awmod+1
  2045   00461A  0012               	return		;funcret
  2046   00461C                     __end_of___awmod:
  2047                           	callstack 0
  2048                           
  2049 ;; *************** function ___awdiv *****************
  2050 ;; Defined at:
  2051 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;  dividend        2   22[COMRAM] int 
  2054 ;;  divisor         2   24[COMRAM] int 
  2055 ;; Auto vars:     Size  Location     Type
  2056 ;;  quotient        2   28[COMRAM] int 
  2057 ;;  sign            1   27[COMRAM] unsigned char 
  2058 ;;  counter         1   26[COMRAM] unsigned char 
  2059 ;; Return value:  Size  Location     Type
  2060 ;;                  2   22[COMRAM] int 
  2061 ;; Registers used:
  2062 ;;		wreg, status,2, status,0
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2068 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2069 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2071 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2072 ;;Total ram usage:        8 bytes
  2073 ;; Hardware stack levels used: 1
  2074 ;; Hardware stack levels required when called: 5
  2075 ;; This function calls:
  2076 ;;		Nothing
  2077 ;; This function is called by:
  2078 ;;		_getCode
  2079 ;; This function uses a non-reentrant model
  2080 ;;
  2081                           
  2082                           	psect	text3
  2083   0044AC                     __ptext3:
  2084                           	callstack 0
  2085   0044AC                     ___awdiv:
  2086                           	callstack 24
  2087   0044AC  6A1C               	clrf	___awdiv@sign^0,c
  2088   0044AE  BE1A               	btfsc	(___awdiv@divisor+1)^0,7,c
  2089   0044B0  EF5E  F022         	goto	u1010
  2090   0044B4  EF5C  F022         	goto	u1011
  2091   0044B8                     u1011:
  2092   0044B8  EF64  F022         	goto	l1866
  2093   0044BC                     u1010:
  2094   0044BC  6C19               	negf	___awdiv@divisor^0,c
  2095   0044BE  1E1A               	comf	(___awdiv@divisor+1)^0,f,c
  2096   0044C0  B0D8               	btfsc	status,0,c
  2097   0044C2  2A1A               	incf	(___awdiv@divisor+1)^0,f,c
  2098   0044C4  0E01               	movlw	1
  2099   0044C6  6E1C               	movwf	___awdiv@sign^0,c
  2100   0044C8                     l1866:
  2101   0044C8  BE18               	btfsc	(___awdiv@dividend+1)^0,7,c
  2102   0044CA  EF6B  F022         	goto	u1020
  2103   0044CE  EF69  F022         	goto	u1021
  2104   0044D2                     u1021:
  2105   0044D2  EF71  F022         	goto	l1872
  2106   0044D6                     u1020:
  2107   0044D6  6C17               	negf	___awdiv@dividend^0,c
  2108   0044D8  1E18               	comf	(___awdiv@dividend+1)^0,f,c
  2109   0044DA  B0D8               	btfsc	status,0,c
  2110   0044DC  2A18               	incf	(___awdiv@dividend+1)^0,f,c
  2111   0044DE  0E01               	movlw	1
  2112   0044E0  1A1C               	xorwf	___awdiv@sign^0,f,c
  2113   0044E2                     l1872:
  2114   0044E2  0E00               	movlw	0
  2115   0044E4  6E1E               	movwf	(___awdiv@quotient+1)^0,c
  2116   0044E6  0E00               	movlw	0
  2117   0044E8  6E1D               	movwf	___awdiv@quotient^0,c
  2118   0044EA  5019               	movf	___awdiv@divisor^0,w,c
  2119   0044EC  101A               	iorwf	(___awdiv@divisor+1)^0,w,c
  2120   0044EE  B4D8               	btfsc	status,2,c
  2121   0044F0  EF7C  F022         	goto	u1031
  2122   0044F4  EF7E  F022         	goto	u1030
  2123   0044F8                     u1031:
  2124   0044F8  EFA6  F022         	goto	l1894
  2125   0044FC                     u1030:
  2126   0044FC  0E01               	movlw	1
  2127   0044FE  6E1B               	movwf	___awdiv@counter^0,c
  2128   004500  EF86  F022         	goto	l1880
  2129   004504                     l1878:
  2130   004504  90D8               	bcf	status,0,c
  2131   004506  3619               	rlcf	___awdiv@divisor^0,f,c
  2132   004508  361A               	rlcf	(___awdiv@divisor+1)^0,f,c
  2133   00450A  2A1B               	incf	___awdiv@counter^0,f,c
  2134   00450C                     l1880:
  2135   00450C  AE1A               	btfss	(___awdiv@divisor+1)^0,7,c
  2136   00450E  EF8B  F022         	goto	u1041
  2137   004512  EF8D  F022         	goto	u1040
  2138   004516                     u1041:
  2139   004516  EF82  F022         	goto	l1878
  2140   00451A                     u1040:
  2141   00451A                     l1882:
  2142   00451A  90D8               	bcf	status,0,c
  2143   00451C  361D               	rlcf	___awdiv@quotient^0,f,c
  2144   00451E  361E               	rlcf	(___awdiv@quotient+1)^0,f,c
  2145   004520  5019               	movf	___awdiv@divisor^0,w,c
  2146   004522  5C17               	subwf	___awdiv@dividend^0,w,c
  2147   004524  501A               	movf	(___awdiv@divisor+1)^0,w,c
  2148   004526  5818               	subwfb	(___awdiv@dividend+1)^0,w,c
  2149   004528  A0D8               	btfss	status,0,c
  2150   00452A  EF99  F022         	goto	u1051
  2151   00452E  EF9B  F022         	goto	u1050
  2152   004532                     u1051:
  2153   004532  EFA0  F022         	goto	l1890
  2154   004536                     u1050:
  2155   004536  5019               	movf	___awdiv@divisor^0,w,c
  2156   004538  5E17               	subwf	___awdiv@dividend^0,f,c
  2157   00453A  501A               	movf	(___awdiv@divisor+1)^0,w,c
  2158   00453C  5A18               	subwfb	(___awdiv@dividend+1)^0,f,c
  2159   00453E  801D               	bsf	___awdiv@quotient^0,0,c
  2160   004540                     l1890:
  2161   004540  90D8               	bcf	status,0,c
  2162   004542  321A               	rrcf	(___awdiv@divisor+1)^0,f,c
  2163   004544  3219               	rrcf	___awdiv@divisor^0,f,c
  2164   004546  2E1B               	decfsz	___awdiv@counter^0,f,c
  2165   004548  EF8D  F022         	goto	l1882
  2166   00454C                     l1894:
  2167   00454C  501C               	movf	___awdiv@sign^0,w,c
  2168   00454E  B4D8               	btfsc	status,2,c
  2169   004550  EFAC  F022         	goto	u1061
  2170   004554  EFAE  F022         	goto	u1060
  2171   004558                     u1061:
  2172   004558  EFB2  F022         	goto	l1898
  2173   00455C                     u1060:
  2174   00455C  6C1D               	negf	___awdiv@quotient^0,c
  2175   00455E  1E1E               	comf	(___awdiv@quotient+1)^0,f,c
  2176   004560  B0D8               	btfsc	status,0,c
  2177   004562  2A1E               	incf	(___awdiv@quotient+1)^0,f,c
  2178   004564                     l1898:
  2179   004564  C01D  F017         	movff	___awdiv@quotient,?___awdiv
  2180   004568  C01E  F018         	movff	___awdiv@quotient+1,?___awdiv+1
  2181   00456C  0012               	return		;funcret
  2182   00456E                     __end_of___awdiv:
  2183                           	callstack 0
  2184                           
  2185 ;; *************** function _LCD_String_xy *****************
  2186 ;; Defined at:
  2187 ;;		line 79 in file "./LCDDrive.h"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;  row             1    wreg     unsigned char 
  2190 ;;  pos             1   31[COMRAM] unsigned char 
  2191 ;;  msg             2   32[COMRAM] PTR const unsigned char 
  2192 ;;		 -> STR_4(9), STR_3(10), STR_2(9), STR_1(6), 
  2193 ;;		 -> code(10), inputStr(3), 
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;  row             1   34[COMRAM] unsigned char 
  2196 ;;  location        1   35[COMRAM] unsigned char 
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      void 
  2199 ;; Registers used:
  2200 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2206 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2207 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2209 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2210 ;;Total ram usage:        5 bytes
  2211 ;; Hardware stack levels used: 1
  2212 ;; Hardware stack levels required when called: 8
  2213 ;; This function calls:
  2214 ;;		_LCD_Command
  2215 ;;		_LCD_String
  2216 ;; This function is called by:
  2217 ;;		_getCode
  2218 ;;		_main
  2219 ;; This function uses a non-reentrant model
  2220 ;;
  2221                           
  2222                           	psect	text4
  2223   0048F2                     __ptext4:
  2224                           	callstack 0
  2225   0048F2                     _LCD_String_xy:
  2226                           	callstack 21
  2227                           
  2228                           ;incstack = 0
  2229                           ;LCD_String_xy@row stored from wreg
  2230   0048F2  6E23               	movwf	LCD_String_xy@row^0,c
  2231   0048F4                     
  2232                           ;./LCDDrive.h: 82:     if(row<=1)
  2233   0048F4  0E02               	movlw	2
  2234   0048F6  6023               	cpfslt	LCD_String_xy@row^0,c
  2235   0048F8  EF80  F024         	goto	u1001
  2236   0048FC  EF82  F024         	goto	u1000
  2237   004900                     u1001:
  2238   004900  EF8B  F024         	goto	l1852
  2239   004904                     u1000:
  2240   004904                     
  2241                           ;./LCDDrive.h: 83:     {;./LCDDrive.h: 84:         location=(0x80) | ((pos) & 0x0f);
  2242   004904  5020               	movf	LCD_String_xy@pos^0,w,c
  2243   004906  0B0F               	andlw	15
  2244   004908  0980               	iorlw	128
  2245   00490A  6E24               	movwf	LCD_String_xy@location^0,c
  2246   00490C                     
  2247                           ;./LCDDrive.h: 85:         LCD_Command(location);
  2248   00490C  5024               	movf	LCD_String_xy@location^0,w,c
  2249   00490E  ECEC  F024         	call	_LCD_Command
  2250                           
  2251                           ;./LCDDrive.h: 86:     }
  2252   004912  EF92  F024         	goto	l1856
  2253   004916                     l1852:
  2254                           
  2255                           ;./LCDDrive.h: 88:     {;./LCDDrive.h: 89:         location=(0xC0) | ((pos) & 0x0f);
  2256   004916  5020               	movf	LCD_String_xy@pos^0,w,c
  2257   004918  0B0F               	andlw	15
  2258   00491A  09C0               	iorlw	192
  2259   00491C  6E24               	movwf	LCD_String_xy@location^0,c
  2260   00491E                     
  2261                           ;./LCDDrive.h: 90:         LCD_Command(location);
  2262   00491E  5024               	movf	LCD_String_xy@location^0,w,c
  2263   004920  ECEC  F024         	call	_LCD_Command
  2264   004924                     l1856:
  2265                           
  2266                           ;./LCDDrive.h: 92:     LCD_String(msg);
  2267   004924  C021  F01E         	movff	LCD_String_xy@msg,LCD_String@msg
  2268   004928  C022  F01F         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  2269   00492C  EC9D  F023         	call	_LCD_String	;wreg free
  2270   004930  0012               	return		;funcret
  2271   004932                     __end_of_LCD_String_xy:
  2272                           	callstack 0
  2273                           
  2274 ;; *************** function _LCD_String *****************
  2275 ;; Defined at:
  2276 ;;		line 70 in file "./LCDDrive.h"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;  msg             2   29[COMRAM] PTR const unsigned char 
  2279 ;;		 -> STR_4(9), STR_3(10), STR_2(9), STR_1(6), 
  2280 ;;		 -> code(10), inputStr(3), 
  2281 ;; Auto vars:     Size  Location     Type
  2282 ;;		None
  2283 ;; Return value:  Size  Location     Type
  2284 ;;                  1    wreg      void 
  2285 ;; Registers used:
  2286 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2287 ;; Tracked objects:
  2288 ;;		On entry : 0/0
  2289 ;;		On exit  : 0/0
  2290 ;;		Unchanged: 0/0
  2291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2292 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2295 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2296 ;;Total ram usage:        2 bytes
  2297 ;; Hardware stack levels used: 1
  2298 ;; Hardware stack levels required when called: 7
  2299 ;; This function calls:
  2300 ;;		_LCD_Char
  2301 ;; This function is called by:
  2302 ;;		_LCD_String_xy
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           
  2306                           	psect	text5
  2307   00473A                     __ptext5:
  2308                           	callstack 0
  2309   00473A                     _LCD_String:
  2310                           	callstack 21
  2311   00473A                     
  2312                           ;./LCDDrive.h: 70: void LCD_String(const char *msg);./LCDDrive.h: 71: {;./LCDDrive.h: 72
      +                          :     while((*msg)!=0)
  2313   00473A  EFB8  F023         	goto	l1840
  2314   00473E                     l1836:
  2315                           
  2316                           ;./LCDDrive.h: 73:     {;./LCDDrive.h: 74:       LCD_Char(*msg);
  2317   00473E  0060  F07B  FFF6   	movff	LCD_String@msg,tblptrl
  2318   004744  0060  F07F  FFF7   	movff	LCD_String@msg+1,tblptrh
  2319   00474A  0E00               	movlw	low (__smallconst shr (0+16))
  2320   00474C  6EF8               	movwf	tblptru,c
  2321   00474E  0E1F               	movlw	(high __ramtop+-1)
  2322   004750  64F7               	cpfsgt	tblptrh,c
  2323   004752  D003               	bra	u977
  2324   004754  0008               	tblrd		*
  2325   004756  50F5               	movf	tablat,w,c
  2326   004758  D007               	bra	u970
  2327   00475A                     u977:
  2328   00475A  006F FFDB FFE9     	movff	tblptrl,fsr0l
  2329   004760  006F FFDF FFEA     	movff	tblptrh,fsr0h
  2330   004766  50EF               	movf	indf0,w,c
  2331   004768                     u970:
  2332   004768  EC21  F025         	call	_LCD_Char
  2333   00476C                     
  2334                           ;./LCDDrive.h: 75:       msg++;
  2335   00476C  4A1E               	infsnz	LCD_String@msg^0,f,c
  2336   00476E  2A1F               	incf	(LCD_String@msg+1)^0,f,c
  2337   004770                     l1840:
  2338                           
  2339                           ;./LCDDrive.h: 72:     while((*msg)!=0)
  2340   004770  0060  F07B  FFF6   	movff	LCD_String@msg,tblptrl
  2341   004776  0060  F07F  FFF7   	movff	LCD_String@msg+1,tblptrh
  2342   00477C  0E00               	movlw	low (__smallconst shr (0+16))
  2343   00477E  6EF8               	movwf	tblptru,c
  2344   004780  0E1F               	movlw	(high __ramtop+-1)
  2345   004782  64F7               	cpfsgt	tblptrh,c
  2346   004784  D003               	bra	u987
  2347   004786  0008               	tblrd		*
  2348   004788  50F5               	movf	tablat,w,c
  2349   00478A  D007               	bra	u980
  2350   00478C                     u987:
  2351   00478C  006F FFDB FFE9     	movff	tblptrl,fsr0l
  2352   004792  006F FFDF FFEA     	movff	tblptrh,fsr0h
  2353   004798  50EF               	movf	indf0,w,c
  2354   00479A                     u980:
  2355   00479A  0900               	iorlw	0
  2356   00479C  A4D8               	btfss	status,2,c
  2357   00479E  EFD3  F023         	goto	u991
  2358   0047A2  EFD5  F023         	goto	u990
  2359   0047A6                     u991:
  2360   0047A6  EF9F  F023         	goto	l1836
  2361   0047AA                     u990:
  2362   0047AA  0012               	return		;funcret
  2363   0047AC                     __end_of_LCD_String:
  2364                           	callstack 0
  2365                           
  2366 ;; *************** function _LCD_Char *****************
  2367 ;; Defined at:
  2368 ;;		line 59 in file "./LCDDrive.h"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;  dat             1    wreg     unsigned char 
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;  dat             1   28[COMRAM] unsigned char 
  2373 ;; Return value:  Size  Location     Type
  2374 ;;                  1    wreg      void 
  2375 ;; Registers used:
  2376 ;;		wreg, status,2, status,0, cstack
  2377 ;; Tracked objects:
  2378 ;;		On entry : 0/0
  2379 ;;		On exit  : 0/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2383 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2385 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2386 ;;Total ram usage:        1 bytes
  2387 ;; Hardware stack levels used: 1
  2388 ;; Hardware stack levels required when called: 6
  2389 ;; This function calls:
  2390 ;;		_MSdelay
  2391 ;; This function is called by:
  2392 ;;		_LCD_String
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           
  2396                           	psect	text6
  2397   004A42                     __ptext6:
  2398                           	callstack 0
  2399   004A42                     _LCD_Char:
  2400                           	callstack 21
  2401                           
  2402                           ;incstack = 0
  2403                           ;LCD_Char@dat stored from wreg
  2404   004A42  6E1D               	movwf	LCD_Char@dat^0,c
  2405   004A44                     
  2406                           ;./LCDDrive.h: 59: void LCD_Char(char dat);./LCDDrive.h: 60: {;./LCDDrive.h: 61:     LAT
      +                          D= dat;
  2407   004A44  0060  F077  FFBD   	movff	LCD_Char@dat,16317	;volatile
  2408   004A4A                     
  2409                           ;./LCDDrive.h: 62:     LATC3 = 1;
  2410   004A4A  86BC               	bsf	16316,3,c	;volatile
  2411   004A4C                     
  2412                           ;./LCDDrive.h: 63:     LATC4=1;
  2413   004A4C  88BC               	bsf	16316,4,c	;volatile
  2414   004A4E                     
  2415                           ;./LCDDrive.h: 64:     __nop();
  2416   004A4E  0000               	nop	
  2417   004A50                     
  2418                           ;./LCDDrive.h: 65:     LATC4=0;
  2419   004A50  98BC               	bcf	16316,4,c	;volatile
  2420   004A52                     
  2421                           ;./LCDDrive.h: 66:     MSdelay(1);
  2422   004A52  0E00               	movlw	0
  2423   004A54  6E18               	movwf	(MSdelay@val+1)^0,c
  2424   004A56  0E01               	movlw	1
  2425   004A58  6E17               	movwf	MSdelay@val^0,c
  2426   004A5A  EC0F  F024         	call	_MSdelay	;wreg free
  2427   004A5E  0012               	return		;funcret
  2428   004A60                     __end_of_LCD_Char:
  2429                           	callstack 0
  2430                           
  2431 ;; *************** function _LCD_Clear *****************
  2432 ;; Defined at:
  2433 ;;		line 43 in file "./LCDDrive.h"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;		None
  2436 ;; Auto vars:     Size  Location     Type
  2437 ;;		None
  2438 ;; Return value:  Size  Location     Type
  2439 ;;                  1    wreg      void 
  2440 ;; Registers used:
  2441 ;;		wreg, status,2, status,0, cstack
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2451 ;;Total ram usage:        0 bytes
  2452 ;; Hardware stack levels used: 1
  2453 ;; Hardware stack levels required when called: 7
  2454 ;; This function calls:
  2455 ;;		_LCD_Command
  2456 ;; This function is called by:
  2457 ;;		_getCode
  2458 ;; This function uses a non-reentrant model
  2459 ;;
  2460                           
  2461                           	psect	text7
  2462   004A7E                     __ptext7:
  2463                           	callstack 0
  2464   004A7E                     _LCD_Clear:
  2465                           	callstack 22
  2466   004A7E                     
  2467                           ;./LCDDrive.h: 45:         LCD_Command(0x01);
  2468   004A7E  0E01               	movlw	1
  2469   004A80  ECEC  F024         	call	_LCD_Command
  2470   004A84  0012               	return		;funcret
  2471   004A86                     __end_of_LCD_Clear:
  2472                           	callstack 0
  2473                           
  2474 ;; *************** function _buzz *****************
  2475 ;; Defined at:
  2476 ;;		line 64 in file "main.c"
  2477 ;; Parameters:    Size  Location     Type
  2478 ;;		None
  2479 ;; Auto vars:     Size  Location     Type
  2480 ;;  i               2   26[COMRAM] int 
  2481 ;;  j               2   24[COMRAM] int 
  2482 ;; Return value:  Size  Location     Type
  2483 ;;                  1    wreg      void 
  2484 ;; Registers used:
  2485 ;;		wreg, status,2, status,0
  2486 ;; Tracked objects:
  2487 ;;		On entry : 0/0
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2492 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2493 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2494 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2495 ;;Total ram usage:        6 bytes
  2496 ;; Hardware stack levels used: 1
  2497 ;; Hardware stack levels required when called: 5
  2498 ;; This function calls:
  2499 ;;		Nothing
  2500 ;; This function is called by:
  2501 ;;		_main
  2502 ;; This function uses a non-reentrant model
  2503 ;;
  2504                           
  2505                           	psect	text8
  2506   00461C                     __ptext8:
  2507                           	callstack 0
  2508   00461C                     _buzz:
  2509                           	callstack 25
  2510   00461C                     
  2511                           ;main.c: 65:     for (int j = 0; j < 1; j++) {
  2512   00461C  0E00               	movlw	0
  2513   00461E  6E1A               	movwf	(buzz@j+1)^0,c
  2514   004620  0E00               	movlw	0
  2515   004622  6E19               	movwf	buzz@j^0,c
  2516   004624                     l1226:
  2517                           
  2518                           ;main.c: 66:     for (int i = 0; i < 3; i++) {
  2519   004624  0E00               	movlw	0
  2520   004626  6E1C               	movwf	(buzz@i+1)^0,c
  2521   004628  0E00               	movlw	0
  2522   00462A  6E1B               	movwf	buzz@i^0,c
  2523   00462C                     l1232:
  2524                           
  2525                           ;main.c: 67:         _delay((unsigned long)((100)*(4000000/4000.0)));
  2526   00462C  0E82               	movlw	130
  2527   00462E  6E17               	movwf	??_buzz^0,c
  2528   004630  0EDE               	movlw	222
  2529   004632                     u1397:
  2530   004632  2EE8               	decfsz	wreg,f,c
  2531   004634  D7FE               	bra	u1397
  2532   004636  2E17               	decfsz	??_buzz^0,f,c
  2533   004638  D7FC               	bra	u1397
  2534   00463A                     
  2535                           ;main.c: 68:         LATC5 = 1;
  2536   00463A  8ABC               	bsf	16316,5,c	;volatile
  2537                           
  2538                           ;main.c: 69:         _delay((unsigned long)((200)*(4000000/4000.0)));
  2539   00463C  0E02               	movlw	2
  2540   00463E  6E18               	movwf	(??_buzz+1)^0,c
  2541   004640  0E04               	movlw	4
  2542   004642  6E17               	movwf	??_buzz^0,c
  2543   004644  0EBA               	movlw	186
  2544   004646                     u1407:
  2545   004646  2EE8               	decfsz	wreg,f,c
  2546   004648  D7FE               	bra	u1407
  2547   00464A  2E17               	decfsz	??_buzz^0,f,c
  2548   00464C  D7FC               	bra	u1407
  2549   00464E  2E18               	decfsz	(??_buzz+1)^0,f,c
  2550   004650  D7FA               	bra	u1407
  2551   004652  D000               	nop2	
  2552   004654                     
  2553                           ;main.c: 70:         LATC5 = 0;
  2554   004654  9ABC               	bcf	16316,5,c	;volatile
  2555   004656                     
  2556                           ;main.c: 71:     }
  2557   004656  4A1B               	infsnz	buzz@i^0,f,c
  2558   004658  2A1C               	incf	(buzz@i+1)^0,f,c
  2559   00465A  BE1C               	btfsc	(buzz@i+1)^0,7,c
  2560   00465C  EF39  F023         	goto	u371
  2561   004660  501C               	movf	(buzz@i+1)^0,w,c
  2562   004662  E109               	bnz	u370
  2563   004664  0E03               	movlw	3
  2564   004666  5C1B               	subwf	buzz@i^0,w,c
  2565   004668  A0D8               	btfss	status,0,c
  2566   00466A  EF39  F023         	goto	u371
  2567   00466E  EF3B  F023         	goto	u370
  2568   004672                     u371:
  2569   004672  EF16  F023         	goto	l1232
  2570   004676                     u370:
  2571   004676                     
  2572                           ;main.c: 72:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  2573   004676  0E06               	movlw	6
  2574   004678  6E18               	movwf	(??_buzz+1)^0,c
  2575   00467A  0E13               	movlw	19
  2576   00467C  6E17               	movwf	??_buzz^0,c
  2577   00467E  0EAE               	movlw	174
  2578   004680                     u1417:
  2579   004680  2EE8               	decfsz	wreg,f,c
  2580   004682  D7FE               	bra	u1417
  2581   004684  2E17               	decfsz	??_buzz^0,f,c
  2582   004686  D7FC               	bra	u1417
  2583   004688  2E18               	decfsz	(??_buzz+1)^0,f,c
  2584   00468A  D7FA               	bra	u1417
  2585   00468C                     
  2586                           ;main.c: 73:     }
  2587   00468C  4A19               	infsnz	buzz@j^0,f,c
  2588   00468E  2A1A               	incf	(buzz@j+1)^0,f,c
  2589   004690  BE1A               	btfsc	(buzz@j+1)^0,7,c
  2590   004692  EF53  F023         	goto	u381
  2591   004696  501A               	movf	(buzz@j+1)^0,w,c
  2592   004698  E108               	bnz	u380
  2593   00469A  0419               	decf	buzz@j^0,w,c
  2594   00469C  A0D8               	btfss	status,0,c
  2595   00469E  EF53  F023         	goto	u381
  2596   0046A2  EF55  F023         	goto	u380
  2597   0046A6                     u381:
  2598   0046A6  EF12  F023         	goto	l1226
  2599   0046AA                     u380:
  2600   0046AA  0012               	return		;funcret
  2601   0046AC                     __end_of_buzz:
  2602                           	callstack 0
  2603                           
  2604 ;; *************** function _LCD_Init *****************
  2605 ;; Defined at:
  2606 ;;		line 32 in file "./LCDDrive.h"
  2607 ;; Parameters:    Size  Location     Type
  2608 ;;		None
  2609 ;; Auto vars:     Size  Location     Type
  2610 ;;		None
  2611 ;; Return value:  Size  Location     Type
  2612 ;;                  1    wreg      void 
  2613 ;; Registers used:
  2614 ;;		wreg, status,2, status,0, cstack
  2615 ;; Tracked objects:
  2616 ;;		On entry : 0/0
  2617 ;;		On exit  : 0/0
  2618 ;;		Unchanged: 0/0
  2619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2624 ;;Total ram usage:        0 bytes
  2625 ;; Hardware stack levels used: 1
  2626 ;; Hardware stack levels required when called: 7
  2627 ;; This function calls:
  2628 ;;		_LCD_Command
  2629 ;;		_MSdelay
  2630 ;; This function is called by:
  2631 ;;		_main
  2632 ;; This function uses a non-reentrant model
  2633 ;;
  2634                           
  2635                           	psect	text9
  2636   0049AE                     __ptext9:
  2637                           	callstack 0
  2638   0049AE                     _LCD_Init:
  2639                           	callstack 23
  2640   0049AE                     
  2641                           ;./LCDDrive.h: 34:     MSdelay(15);
  2642   0049AE  0E00               	movlw	0
  2643   0049B0  6E18               	movwf	(MSdelay@val+1)^0,c
  2644   0049B2  0E0F               	movlw	15
  2645   0049B4  6E17               	movwf	MSdelay@val^0,c
  2646   0049B6  EC0F  F024         	call	_MSdelay	;wreg free
  2647   0049BA                     
  2648                           ;./LCDDrive.h: 35:     TRISD = 0x00;
  2649   0049BA  6AC5               	clrf	197,c	;volatile
  2650   0049BC                     
  2651                           ;./LCDDrive.h: 36:     TRISC = 0x00;
  2652   0049BC  6AC4               	clrf	196,c	;volatile
  2653                           
  2654                           ;./LCDDrive.h: 37:     LCD_Command(0x01);
  2655   0049BE  0E01               	movlw	1
  2656   0049C0  ECEC  F024         	call	_LCD_Command
  2657                           
  2658                           ;./LCDDrive.h: 38:     LCD_Command(0x38);
  2659   0049C4  0E38               	movlw	56
  2660   0049C6  ECEC  F024         	call	_LCD_Command
  2661                           
  2662                           ;./LCDDrive.h: 39:     LCD_Command(0x0c);
  2663   0049CA  0E0C               	movlw	12
  2664   0049CC  ECEC  F024         	call	_LCD_Command
  2665                           
  2666                           ;./LCDDrive.h: 40:     LCD_Command(0x06);
  2667   0049D0  0E06               	movlw	6
  2668   0049D2  ECEC  F024         	call	_LCD_Command
  2669   0049D6  0012               	return		;funcret
  2670   0049D8                     __end_of_LCD_Init:
  2671                           	callstack 0
  2672                           
  2673 ;; *************** function _LCD_Command *****************
  2674 ;; Defined at:
  2675 ;;		line 48 in file "./LCDDrive.h"
  2676 ;; Parameters:    Size  Location     Type
  2677 ;;  cmd             1    wreg     unsigned char 
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;  cmd             1   28[COMRAM] unsigned char 
  2680 ;; Return value:  Size  Location     Type
  2681 ;;                  1    wreg      void 
  2682 ;; Registers used:
  2683 ;;		wreg, status,2, status,0, cstack
  2684 ;; Tracked objects:
  2685 ;;		On entry : 0/0
  2686 ;;		On exit  : 0/0
  2687 ;;		Unchanged: 0/0
  2688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2690 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2692 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2693 ;;Total ram usage:        1 bytes
  2694 ;; Hardware stack levels used: 1
  2695 ;; Hardware stack levels required when called: 6
  2696 ;; This function calls:
  2697 ;;		_MSdelay
  2698 ;; This function is called by:
  2699 ;;		_LCD_Init
  2700 ;;		_LCD_Clear
  2701 ;;		_LCD_String_xy
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705                           	psect	text10
  2706   0049D8                     __ptext10:
  2707                           	callstack 0
  2708   0049D8                     _LCD_Command:
  2709                           	callstack 22
  2710                           
  2711                           ;incstack = 0
  2712                           ;LCD_Command@cmd stored from wreg
  2713   0049D8  6E1D               	movwf	LCD_Command@cmd^0,c
  2714   0049DA                     
  2715                           ;./LCDDrive.h: 48: void LCD_Command(char cmd );./LCDDrive.h: 49: {;./LCDDrive.h: 50:    
      +                           LATD= cmd;
  2716   0049DA  0060  F077  FFBD   	movff	LCD_Command@cmd,16317	;volatile
  2717   0049E0                     
  2718                           ;./LCDDrive.h: 51:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2719   0049E0  0EC8               	movlw	200
  2720   0049E2                     u1427:
  2721   0049E2  D000               	nop2	
  2722   0049E4  2EE8               	decfsz	wreg,f,c
  2723   0049E6  D7FD               	bra	u1427
  2724   0049E8                     
  2725                           ;./LCDDrive.h: 52:     LATC3 = 0;
  2726   0049E8  96BC               	bcf	16316,3,c	;volatile
  2727   0049EA                     
  2728                           ;./LCDDrive.h: 53:     LATC4 = 1;
  2729   0049EA  88BC               	bsf	16316,4,c	;volatile
  2730   0049EC                     
  2731                           ;./LCDDrive.h: 54:     __nop();
  2732   0049EC  0000               	nop	
  2733   0049EE                     
  2734                           ;./LCDDrive.h: 55:     LATC4 = 0;
  2735   0049EE  98BC               	bcf	16316,4,c	;volatile
  2736   0049F0                     
  2737                           ;./LCDDrive.h: 56:     MSdelay(3);
  2738   0049F0  0E00               	movlw	0
  2739   0049F2  6E18               	movwf	(MSdelay@val+1)^0,c
  2740   0049F4  0E03               	movlw	3
  2741   0049F6  6E17               	movwf	MSdelay@val^0,c
  2742   0049F8  EC0F  F024         	call	_MSdelay	;wreg free
  2743   0049FC  0012               	return		;funcret
  2744   0049FE                     __end_of_LCD_Command:
  2745                           	callstack 0
  2746                           
  2747 ;; *************** function _MSdelay *****************
  2748 ;; Defined at:
  2749 ;;		line 96 in file "./LCDDrive.h"
  2750 ;; Parameters:    Size  Location     Type
  2751 ;;  val             2   22[COMRAM] unsigned int 
  2752 ;; Auto vars:     Size  Location     Type
  2753 ;;  j               2   26[COMRAM] unsigned int 
  2754 ;;  i               2   24[COMRAM] unsigned int 
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  1    wreg      void 
  2757 ;; Registers used:
  2758 ;;		wreg, status,2, status,0
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2764 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2765 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2767 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2768 ;;Total ram usage:        6 bytes
  2769 ;; Hardware stack levels used: 1
  2770 ;; Hardware stack levels required when called: 5
  2771 ;; This function calls:
  2772 ;;		Nothing
  2773 ;; This function is called by:
  2774 ;;		_LCD_Init
  2775 ;;		_LCD_Command
  2776 ;;		_LCD_Char
  2777 ;; This function uses a non-reentrant model
  2778 ;;
  2779                           
  2780                           	psect	text11
  2781   00481E                     __ptext11:
  2782                           	callstack 0
  2783   00481E                     _MSdelay:
  2784                           	callstack 21
  2785   00481E                     
  2786                           ;./LCDDrive.h: 96: void MSdelay(unsigned int val);./LCDDrive.h: 97: {;./LCDDrive.h: 98: 
      +                               unsigned int i,j;;./LCDDrive.h: 99:         for(i=0;i<val;i++)
  2787   00481E  0E00               	movlw	0
  2788   004820  6E1A               	movwf	(MSdelay@i+1)^0,c
  2789   004822  0E00               	movlw	0
  2790   004824  6E19               	movwf	MSdelay@i^0,c
  2791   004826  EF28  F024         	goto	l1806
  2792   00482A                     l1794:
  2793                           
  2794                           ;./LCDDrive.h: 100:             for(j=0;j<165;j++);
  2795   00482A  0E00               	movlw	0
  2796   00482C  6E1C               	movwf	(MSdelay@j+1)^0,c
  2797   00482E  0E00               	movlw	0
  2798   004830  6E1B               	movwf	MSdelay@j^0,c
  2799   004832                     l1800:
  2800   004832  4A1B               	infsnz	MSdelay@j^0,f,c
  2801   004834  2A1C               	incf	(MSdelay@j+1)^0,f,c
  2802   004836  501C               	movf	(MSdelay@j+1)^0,w,c
  2803   004838  E109               	bnz	u950
  2804   00483A  0EA5               	movlw	165
  2805   00483C  5C1B               	subwf	MSdelay@j^0,w,c
  2806   00483E  A0D8               	btfss	status,0,c
  2807   004840  EF24  F024         	goto	u951
  2808   004844  EF26  F024         	goto	u950
  2809   004848                     u951:
  2810   004848  EF19  F024         	goto	l1800
  2811   00484C                     u950:
  2812   00484C  4A19               	infsnz	MSdelay@i^0,f,c
  2813   00484E  2A1A               	incf	(MSdelay@i+1)^0,f,c
  2814   004850                     l1806:
  2815   004850  5017               	movf	MSdelay@val^0,w,c
  2816   004852  5C19               	subwf	MSdelay@i^0,w,c
  2817   004854  5018               	movf	(MSdelay@val+1)^0,w,c
  2818   004856  581A               	subwfb	(MSdelay@i+1)^0,w,c
  2819   004858  A0D8               	btfss	status,0,c
  2820   00485A  EF31  F024         	goto	u961
  2821   00485E  EF33  F024         	goto	u960
  2822   004862                     u961:
  2823   004862  EF15  F024         	goto	l1794
  2824   004866                     u960:
  2825   004866  0012               	return		;funcret
  2826   004868                     __end_of_MSdelay:
  2827                           	callstack 0
  2828                           
  2829 ;; *************** function _Initialize *****************
  2830 ;; Defined at:
  2831 ;;		line 6 in file "./init.h"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;		None
  2834 ;; Auto vars:     Size  Location     Type
  2835 ;;		None
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  1    wreg      void 
  2838 ;; Registers used:
  2839 ;;		wreg, status,2
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2849 ;;Total ram usage:        0 bytes
  2850 ;; Hardware stack levels used: 1
  2851 ;; Hardware stack levels required when called: 5
  2852 ;; This function calls:
  2853 ;;		Nothing
  2854 ;; This function is called by:
  2855 ;;		_main
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859                           	psect	text12
  2860   004972                     __ptext12:
  2861                           	callstack 0
  2862   004972                     _Initialize:
  2863                           	callstack 25
  2864   004972                     
  2865                           ;./init.h: 11:     INTCON0bits.GIEH = 1;
  2866   004972  8ED2               	bsf	210,7,c	;volatile
  2867                           
  2868                           ;./init.h: 13:     INTCON0bits.GIEL = 1;
  2869   004974  8CD2               	bsf	210,6,c	;volatile
  2870                           
  2871                           ;./init.h: 15:     INTCON0bits.IPEN = 1;
  2872   004976  8AD2               	bsf	210,5,c	;volatile
  2873                           
  2874                           ;./init.h: 17:     INTCON0bits.INT0EDG = 1;
  2875   004978  80D2               	bsf	210,0,c	;volatile
  2876                           
  2877                           ;./init.h: 19:     IPR1bits.INT0IP = 1;
  2878   00497A  0139               	movlb	57	; () banked
  2879   00497C  8181               	bsf	129,0,b	;volatile
  2880                           
  2881                           ;./init.h: 21:     PIE1bits.INT0IE = 1;
  2882   00497E  8191               	bsf	145,0,b	;volatile
  2883                           
  2884                           ;./init.h: 23:     PIR1bits.INT0IF = 0;
  2885   004980  91A1               	bcf	161,0,b	;volatile
  2886                           
  2887                           ;./init.h: 25:     IVTBASEU = 0;
  2888   004982  6AD7               	clrf	215,c	;volatile
  2889   004984                     
  2890                           ; BSR set to: 57
  2891                           ;./init.h: 26:     IVTBASEH = 0x40;
  2892   004984  0E40               	movlw	64
  2893   004986  6ED6               	movwf	214,c	;volatile
  2894                           
  2895                           ;./init.h: 27:     IVTBASEL = 0x08;
  2896   004988  0E08               	movlw	8
  2897   00498A  6ED5               	movwf	213,c	;volatile
  2898   00498C                     
  2899                           ; BSR set to: 57
  2900                           ;./init.h: 31:     TRISA = 0xFF;
  2901   00498C  68C2               	setf	194,c	;volatile
  2902   00498E                     
  2903                           ; BSR set to: 57
  2904                           ;./init.h: 32:     TRISD = 0x00;
  2905   00498E  6AC5               	clrf	197,c	;volatile
  2906   004990                     
  2907                           ; BSR set to: 57
  2908                           ;./init.h: 34:     TRISC = 0x00;
  2909   004990  6AC4               	clrf	196,c	;volatile
  2910   004992                     
  2911                           ; BSR set to: 57
  2912                           ;./init.h: 37:     TRISB = 0xFF;
  2913   004992  68C3               	setf	195,c	;volatile
  2914   004994                     
  2915                           ; BSR set to: 57
  2916                           ;./init.h: 38:     TRISE = 0xFF;
  2917   004994  68C6               	setf	198,c	;volatile
  2918   004996                     
  2919                           ; BSR set to: 57
  2920                           ;./init.h: 39:     ADCON0 = 0;
  2921   004996  013E               	movlb	62	; () banked
  2922   004998  6BF8               	clrf	248,b	;volatile
  2923   00499A                     
  2924                           ; BSR set to: 62
  2925                           ;./init.h: 40:     ADCON1 = 0;
  2926   00499A  6BF9               	clrf	249,b	;volatile
  2927   00499C                     
  2928                           ; BSR set to: 62
  2929                           ;./init.h: 41:     ADCON2 = 0;
  2930   00499C  6BFA               	clrf	250,b	;volatile
  2931   00499E                     
  2932                           ; BSR set to: 62
  2933                           ;./init.h: 42:     ANSELA = 0;
  2934   00499E  013A               	movlb	58	; () banked
  2935   0049A0  6B40               	clrf	64,b	;volatile
  2936   0049A2                     
  2937                           ; BSR set to: 58
  2938                           ;./init.h: 43:     ANSELB = 0;
  2939   0049A2  6B50               	clrf	80,b	;volatile
  2940   0049A4                     
  2941                           ; BSR set to: 58
  2942                           ;./init.h: 44:     ANSELC = 0;
  2943   0049A4  6B60               	clrf	96,b	;volatile
  2944   0049A6                     
  2945                           ; BSR set to: 58
  2946                           ;./init.h: 45:     ANSELD = 0;
  2947   0049A6  6B70               	clrf	112,b	;volatile
  2948   0049A8                     
  2949                           ; BSR set to: 58
  2950                           ;./init.h: 46:     ANSELE = 0;
  2951   0049A8  6B80               	clrf	128,b	;volatile
  2952   0049AA                     
  2953                           ; BSR set to: 58
  2954                           ;./init.h: 47:     WPUB = 0xFF;
  2955   0049AA  6951               	setf	81,b	;volatile
  2956   0049AC                     
  2957                           ; BSR set to: 58
  2958   0049AC  0012               	return		;funcret
  2959   0049AE                     __end_of_Initialize:
  2960                           	callstack 0
  2961                           
  2962 ;; *************** function _INT0_ISR *****************
  2963 ;; Defined at:
  2964 ;;		line 163 in file "./func.h"
  2965 ;; Parameters:    Size  Location     Type
  2966 ;;		None
  2967 ;; Auto vars:     Size  Location     Type
  2968 ;;  i               2   20[COMRAM] int 
  2969 ;; Return value:  Size  Location     Type
  2970 ;;                  1    wreg      void 
  2971 ;; Registers used:
  2972 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2973 ;; Tracked objects:
  2974 ;;		On entry : 0/0
  2975 ;;		On exit  : 0/0
  2976 ;;		Unchanged: 0/0
  2977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2979 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2980 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2981 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2982 ;;Total ram usage:        8 bytes
  2983 ;; Hardware stack levels used: 1
  2984 ;; Hardware stack levels required when called: 4
  2985 ;; This function calls:
  2986 ;;		i2_LCD_Clear
  2987 ;;		i2_LCD_String_xy
  2988 ;; This function is called by:
  2989 ;;		Interrupt level 2
  2990 ;; This function uses a non-reentrant model
  2991 ;;
  2992                           
  2993                           	psect	text13
  2994   0043E8                     __ptext13:
  2995                           	callstack 0
  2996   0043E8                     _INT0_ISR:
  2997                           	callstack 21
  2998                           
  2999                           ; BSR set to: 58
  3000                           ;incstack = 0
  3001   0043E8  006F FFD8  F011    	movff	tblptrl,??_INT0_ISR+2
  3002   0043EE  006F FFDC  F012    	movff	tblptrh,??_INT0_ISR+3
  3003   0043F4  006F FFE0  F013    	movff	tblptru,??_INT0_ISR+4
  3004   0043FA  006F FFD4  F014    	movff	tablat,??_INT0_ISR+5
  3005   004400                     
  3006                           ;./func.h: 165:     LCD_String_xy(1,0,"interrupt");
  3007   004400  0E00               	movlw	0
  3008   004402  6E0A               	movwf	i2LCD_String_xy@pos^0,c
  3009   004404  0E01               	movlw	low STR_3
  3010   004406  6E0B               	movwf	i2LCD_String_xy@msg^0,c
  3011   004408  500B               	movf	i2LCD_String_xy@msg^0,w,c
  3012   00440A  A4D8               	btfss	status,2,c
  3013   00440C  0E20               	movlw	high __smallconst
  3014   00440E  6E0C               	movwf	(i2LCD_String_xy@msg+1)^0,c
  3015   004410  0E01               	movlw	1
  3016   004412  EC99  F024         	call	i2_LCD_String_xy
  3017   004416                     
  3018                           ;./func.h: 167:     LATC7 = 1;
  3019   004416  8EBC               	bsf	16316,7,c	;volatile
  3020   004418                     
  3021                           ;./func.h: 168:     LATC5 = 0;
  3022   004418  9ABC               	bcf	16316,5,c	;volatile
  3023   00441A                     
  3024                           ;./func.h: 170:     for (int i = 0; i < 3; i++) {
  3025   00441A  0E00               	movlw	0
  3026   00441C  6E16               	movwf	(INT0_ISR@i+1)^0,c
  3027   00441E  0E00               	movlw	0
  3028   004420  6E15               	movwf	INT0_ISR@i^0,c
  3029   004422                     i2l176:
  3030                           
  3031                           ;./func.h: 171:         LATC5 = 1;
  3032   004422  8ABC               	bsf	16316,5,c	;volatile
  3033   004424                     
  3034                           ;./func.h: 172:         _delay((unsigned long)((300)*(4000000/4000.0)));
  3035   004424  0E02               	movlw	2
  3036   004426  6E10               	movwf	(??_INT0_ISR+1)^0,c
  3037   004428  0E86               	movlw	134
  3038   00442A  6E0F               	movwf	??_INT0_ISR^0,c
  3039   00442C  0E99               	movlw	153
  3040   00442E                     i2u143_47:
  3041   00442E  2EE8               	decfsz	wreg,f,c
  3042   004430  D7FE               	bra	i2u143_47
  3043   004432  2E0F               	decfsz	??_INT0_ISR^0,f,c
  3044   004434  D7FC               	bra	i2u143_47
  3045   004436  2E10               	decfsz	(??_INT0_ISR+1)^0,f,c
  3046   004438  D7FA               	bra	i2u143_47
  3047   00443A  0000               	nop	
  3048   00443C                     
  3049                           ;./func.h: 173:         LATC5 = 0;
  3050   00443C  9ABC               	bcf	16316,5,c	;volatile
  3051                           
  3052                           ;./func.h: 174:         _delay((unsigned long)((300)*(4000000/4000.0)));
  3053   00443E  0E02               	movlw	2
  3054   004440  6E10               	movwf	(??_INT0_ISR+1)^0,c
  3055   004442  0E86               	movlw	134
  3056   004444  6E0F               	movwf	??_INT0_ISR^0,c
  3057   004446  0E99               	movlw	153
  3058   004448                     i2u144_47:
  3059   004448  2EE8               	decfsz	wreg,f,c
  3060   00444A  D7FE               	bra	i2u144_47
  3061   00444C  2E0F               	decfsz	??_INT0_ISR^0,f,c
  3062   00444E  D7FC               	bra	i2u144_47
  3063   004450  2E10               	decfsz	(??_INT0_ISR+1)^0,f,c
  3064   004452  D7FA               	bra	i2u144_47
  3065   004454  0000               	nop	
  3066   004456                     
  3067                           ;./func.h: 175:     }
  3068   004456  4A15               	infsnz	INT0_ISR@i^0,f,c
  3069   004458  2A16               	incf	(INT0_ISR@i+1)^0,f,c
  3070   00445A  BE16               	btfsc	(INT0_ISR@i+1)^0,7,c
  3071   00445C  EF39  F022         	goto	i2u93_41
  3072   004460  5016               	movf	(INT0_ISR@i+1)^0,w,c
  3073   004462  E109               	bnz	i2u93_40
  3074   004464  0E03               	movlw	3
  3075   004466  5C15               	subwf	INT0_ISR@i^0,w,c
  3076   004468  A0D8               	btfss	status,0,c
  3077   00446A  EF39  F022         	goto	i2u93_41
  3078   00446E  EF3B  F022         	goto	i2u93_40
  3079   004472                     i2u93_41:
  3080   004472  EF11  F022         	goto	i2l176
  3081   004476                     i2u93_40:
  3082   004476                     
  3083                           ;./func.h: 176:     reset = 1;
  3084   004476  0E01               	movlw	1
  3085   004478  6E45               	movwf	_reset^0,c	;volatile
  3086   00447A                     
  3087                           ;./func.h: 178:     PIR1bits.INT0IF = 0;
  3088   00447A  0139               	movlb	57	; () banked
  3089   00447C  91A1               	bcf	161,0,b	;volatile
  3090   00447E                     
  3091                           ; BSR set to: 57
  3092                           ;./func.h: 179:     PIR1 = 0;
  3093   00447E  6BA1               	clrf	161,b	;volatile
  3094   004480                     
  3095                           ; BSR set to: 57
  3096                           ;./func.h: 180:     LCD_Clear();
  3097   004480  EC43  F025         	call	i2_LCD_Clear	;wreg free
  3098   004484                     
  3099                           ;./func.h: 181:     _delay((unsigned long)((100)*(4000000/4000.0)));
  3100   004484  0E82               	movlw	130
  3101   004486  6E0F               	movwf	??_INT0_ISR^0,c
  3102   004488  0EDE               	movlw	222
  3103   00448A                     i2u145_47:
  3104   00448A  2EE8               	decfsz	wreg,f,c
  3105   00448C  D7FE               	bra	i2u145_47
  3106   00448E  2E0F               	decfsz	??_INT0_ISR^0,f,c
  3107   004490  D7FC               	bra	i2u145_47
  3108   004492  0060  F053  FFF5   	movff	??_INT0_ISR+5,tablat
  3109   004498  0060  F04F  FFF8   	movff	??_INT0_ISR+4,tblptru
  3110   00449E  0060  F04B  FFF7   	movff	??_INT0_ISR+3,tblptrh
  3111   0044A4  0060  F047  FFF6   	movff	??_INT0_ISR+2,tblptrl
  3112   0044AA  0011               	retfie		f
  3113   0044AC                     __end_of_INT0_ISR:
  3114                           	callstack 0
  3115                           
  3116 ;; *************** function i2_LCD_String_xy *****************
  3117 ;; Defined at:
  3118 ;;		line 79 in file "./LCDDrive.h"
  3119 ;; Parameters:    Size  Location     Type
  3120 ;;  row             1    wreg     unsigned char 
  3121 ;;  pos             1    9[COMRAM] unsigned char 
  3122 ;;  msg             2   10[COMRAM] PTR const unsigned char 
  3123 ;;		 -> STR_4(9), STR_3(10), STR_2(9), STR_1(6), 
  3124 ;;		 -> code(10), inputStr(3), 
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;  row             1   12[COMRAM] unsigned char 
  3127 ;;  location        1   13[COMRAM] unsigned char 
  3128 ;; Return value:  Size  Location     Type
  3129 ;;                  1    wreg      void 
  3130 ;; Registers used:
  3131 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3132 ;; Tracked objects:
  3133 ;;		On entry : 0/0
  3134 ;;		On exit  : 0/0
  3135 ;;		Unchanged: 0/0
  3136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3137 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3138 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3140 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3141 ;;Total ram usage:        5 bytes
  3142 ;; Hardware stack levels used: 1
  3143 ;; Hardware stack levels required when called: 3
  3144 ;; This function calls:
  3145 ;;		i2_LCD_Command
  3146 ;;		i2_LCD_String
  3147 ;; This function is called by:
  3148 ;;		_INT0_ISR
  3149 ;; This function uses a non-reentrant model
  3150 ;;
  3151                           
  3152                           	psect	text14
  3153   004932                     __ptext14:
  3154                           	callstack 0
  3155   004932                     i2_LCD_String_xy:
  3156                           	callstack 21
  3157                           
  3158                           ;incstack = 0
  3159                           ;i2LCD_String_xy@row stored from wreg
  3160   004932  6E0D               	movwf	i2LCD_String_xy@row^0,c
  3161   004934                     
  3162                           ;./LCDDrive.h: 82:     if(row<=1)
  3163   004934  0E02               	movlw	2
  3164   004936  600D               	cpfslt	i2LCD_String_xy@row^0,c
  3165   004938  EFA0  F024         	goto	i2u92_41
  3166   00493C  EFA2  F024         	goto	i2u92_40
  3167   004940                     i2u92_41:
  3168   004940  EFAB  F024         	goto	i2l1728
  3169   004944                     i2u92_40:
  3170   004944                     
  3171                           ;./LCDDrive.h: 83:     {;./LCDDrive.h: 84:         location=(0x80) | ((pos) & 0x0f);
  3172   004944  500A               	movf	i2LCD_String_xy@pos^0,w,c
  3173   004946  0B0F               	andlw	15
  3174   004948  0980               	iorlw	128
  3175   00494A  6E0E               	movwf	i2LCD_String_xy@location^0,c
  3176   00494C                     
  3177                           ;./LCDDrive.h: 85:         LCD_Command(location);
  3178   00494C  500E               	movf	i2LCD_String_xy@location^0,w,c
  3179   00494E  ECFF  F024         	call	i2_LCD_Command
  3180                           
  3181                           ;./LCDDrive.h: 86:     }
  3182   004952  EFB2  F024         	goto	i2l1732
  3183   004956                     i2l1728:
  3184                           
  3185                           ;./LCDDrive.h: 88:     {;./LCDDrive.h: 89:         location=(0xC0) | ((pos) & 0x0f);
  3186   004956  500A               	movf	i2LCD_String_xy@pos^0,w,c
  3187   004958  0B0F               	andlw	15
  3188   00495A  09C0               	iorlw	192
  3189   00495C  6E0E               	movwf	i2LCD_String_xy@location^0,c
  3190   00495E                     
  3191                           ;./LCDDrive.h: 90:         LCD_Command(location);
  3192   00495E  500E               	movf	i2LCD_String_xy@location^0,w,c
  3193   004960  ECFF  F024         	call	i2_LCD_Command
  3194   004964                     i2l1732:
  3195                           
  3196                           ;./LCDDrive.h: 92:     LCD_String(msg);
  3197   004964  C00B  F008         	movff	i2LCD_String_xy@msg,i2LCD_String@msg
  3198   004968  C00C  F009         	movff	i2LCD_String_xy@msg+1,i2LCD_String@msg+1
  3199   00496C  ECD6  F023         	call	i2_LCD_String	;wreg free
  3200   004970  0012               	return		;funcret
  3201   004972                     __end_ofi2_LCD_String_xy:
  3202                           	callstack 0
  3203                           
  3204 ;; *************** function i2_LCD_String *****************
  3205 ;; Defined at:
  3206 ;;		line 70 in file "./LCDDrive.h"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;  msg             2    7[COMRAM] PTR const unsigned char 
  3209 ;;		 -> STR_4(9), STR_3(10), STR_2(9), STR_1(6), 
  3210 ;;		 -> code(10), inputStr(3), 
  3211 ;; Auto vars:     Size  Location     Type
  3212 ;;		None
  3213 ;; Return value:  Size  Location     Type
  3214 ;;                  1    wreg      void 
  3215 ;; Registers used:
  3216 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3217 ;; Tracked objects:
  3218 ;;		On entry : 0/0
  3219 ;;		On exit  : 0/0
  3220 ;;		Unchanged: 0/0
  3221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3222 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3225 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3226 ;;Total ram usage:        2 bytes
  3227 ;; Hardware stack levels used: 1
  3228 ;; Hardware stack levels required when called: 2
  3229 ;; This function calls:
  3230 ;;		i2_LCD_Char
  3231 ;; This function is called by:
  3232 ;;		i2_LCD_String_xy
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           	psect	text15
  3237   0047AC                     __ptext15:
  3238                           	callstack 0
  3239   0047AC                     i2_LCD_String:
  3240                           	callstack 21
  3241   0047AC                     
  3242                           ;./LCDDrive.h: 70: void LCD_String(const char *msg);./LCDDrive.h: 71: {;./LCDDrive.h: 72
      +                          :     while((*msg)!=0)
  3243   0047AC  EFF1  F023         	goto	i2l1594
  3244   0047B0                     i2l1590:
  3245                           
  3246                           ;./LCDDrive.h: 73:     {;./LCDDrive.h: 74:       LCD_Char(*msg);
  3247   0047B0  0060  F023  FFF6   	movff	i2LCD_String@msg,tblptrl
  3248   0047B6  0060  F027  FFF7   	movff	i2LCD_String@msg+1,tblptrh
  3249   0047BC  0E00               	movlw	low (__smallconst shr (0+16))
  3250   0047BE  6EF8               	movwf	tblptru,c
  3251   0047C0  0E1F               	movlw	(high __ramtop+-1)
  3252   0047C2  64F7               	cpfsgt	tblptrh,c
  3253   0047C4  D003               	bra	i2u76_47
  3254   0047C6  0008               	tblrd		*
  3255   0047C8  50F5               	movf	tablat,w,c
  3256   0047CA  D007               	bra	i2u76_40
  3257   0047CC                     i2u76_47:
  3258   0047CC  006F FFDB FFE9     	movff	tblptrl,fsr0l
  3259   0047D2  006F FFDF FFEA     	movff	tblptrh,fsr0h
  3260   0047D8  50EF               	movf	indf0,w,c
  3261   0047DA                     i2u76_40:
  3262   0047DA  EC30  F025         	call	i2_LCD_Char
  3263   0047DE                     
  3264                           ;./LCDDrive.h: 75:       msg++;
  3265   0047DE  4A08               	infsnz	i2LCD_String@msg^0,f,c
  3266   0047E0  2A09               	incf	(i2LCD_String@msg+1)^0,f,c
  3267   0047E2                     i2l1594:
  3268                           
  3269                           ;./LCDDrive.h: 72:     while((*msg)!=0)
  3270   0047E2  0060  F023  FFF6   	movff	i2LCD_String@msg,tblptrl
  3271   0047E8  0060  F027  FFF7   	movff	i2LCD_String@msg+1,tblptrh
  3272   0047EE  0E00               	movlw	low (__smallconst shr (0+16))
  3273   0047F0  6EF8               	movwf	tblptru,c
  3274   0047F2  0E1F               	movlw	(high __ramtop+-1)
  3275   0047F4  64F7               	cpfsgt	tblptrh,c
  3276   0047F6  D003               	bra	i2u77_47
  3277   0047F8  0008               	tblrd		*
  3278   0047FA  50F5               	movf	tablat,w,c
  3279   0047FC  D007               	bra	i2u77_40
  3280   0047FE                     i2u77_47:
  3281   0047FE  006F FFDB FFE9     	movff	tblptrl,fsr0l
  3282   004804  006F FFDF FFEA     	movff	tblptrh,fsr0h
  3283   00480A  50EF               	movf	indf0,w,c
  3284   00480C                     i2u77_40:
  3285   00480C  0900               	iorlw	0
  3286   00480E  A4D8               	btfss	status,2,c
  3287   004810  EF0C  F024         	goto	i2u78_41
  3288   004814  EF0E  F024         	goto	i2u78_40
  3289   004818                     i2u78_41:
  3290   004818  EFD8  F023         	goto	i2l1590
  3291   00481C                     i2u78_40:
  3292   00481C  0012               	return		;funcret
  3293   00481E                     __end_ofi2_LCD_String:
  3294                           	callstack 0
  3295                           
  3296 ;; *************** function i2_LCD_Char *****************
  3297 ;; Defined at:
  3298 ;;		line 59 in file "./LCDDrive.h"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;  dat             1    wreg     unsigned char 
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;  dat             1    6[COMRAM] unsigned char 
  3303 ;; Return value:  Size  Location     Type
  3304 ;;                  1    wreg      void 
  3305 ;; Registers used:
  3306 ;;		wreg, status,2, status,0, cstack
  3307 ;; Tracked objects:
  3308 ;;		On entry : 0/0
  3309 ;;		On exit  : 0/0
  3310 ;;		Unchanged: 0/0
  3311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3313 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3315 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3316 ;;Total ram usage:        1 bytes
  3317 ;; Hardware stack levels used: 1
  3318 ;; Hardware stack levels required when called: 1
  3319 ;; This function calls:
  3320 ;;		i2_MSdelay
  3321 ;; This function is called by:
  3322 ;;		i2_LCD_String
  3323 ;; This function uses a non-reentrant model
  3324 ;;
  3325                           
  3326                           	psect	text16
  3327   004A60                     __ptext16:
  3328                           	callstack 0
  3329   004A60                     i2_LCD_Char:
  3330                           	callstack 21
  3331                           
  3332                           ;incstack = 0
  3333                           ;i2LCD_Char@dat stored from wreg
  3334   004A60  6E07               	movwf	i2LCD_Char@dat^0,c
  3335   004A62                     
  3336                           ;./LCDDrive.h: 59: void LCD_Char(char dat);./LCDDrive.h: 60: {;./LCDDrive.h: 61:     LAT
      +                          D= dat;
  3337   004A62  0060  F01F  FFBD   	movff	i2LCD_Char@dat,16317	;volatile
  3338   004A68                     
  3339                           ;./LCDDrive.h: 62:     LATC3 = 1;
  3340   004A68  86BC               	bsf	16316,3,c	;volatile
  3341   004A6A                     
  3342                           ;./LCDDrive.h: 63:     LATC4=1;
  3343   004A6A  88BC               	bsf	16316,4,c	;volatile
  3344   004A6C                     
  3345                           ;./LCDDrive.h: 64:     __nop();
  3346   004A6C  0000               	nop	
  3347   004A6E                     
  3348                           ;./LCDDrive.h: 65:     LATC4=0;
  3349   004A6E  98BC               	bcf	16316,4,c	;volatile
  3350   004A70                     
  3351                           ;./LCDDrive.h: 66:     MSdelay(1);
  3352   004A70  0E00               	movlw	0
  3353   004A72  6E02               	movwf	(i2MSdelay@val+1)^0,c
  3354   004A74  0E01               	movlw	1
  3355   004A76  6E01               	movwf	i2MSdelay@val^0,c
  3356   004A78  EC34  F024         	call	i2_MSdelay	;wreg free
  3357   004A7C  0012               	return		;funcret
  3358   004A7E                     __end_ofi2_LCD_Char:
  3359                           	callstack 0
  3360                           
  3361 ;; *************** function i2_LCD_Clear *****************
  3362 ;; Defined at:
  3363 ;;		line 43 in file "./LCDDrive.h"
  3364 ;; Parameters:    Size  Location     Type
  3365 ;;		None
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;		None
  3368 ;; Return value:  Size  Location     Type
  3369 ;;                  1    wreg      void 
  3370 ;; Registers used:
  3371 ;;		wreg, status,2, status,0, cstack
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3381 ;;Total ram usage:        0 bytes
  3382 ;; Hardware stack levels used: 1
  3383 ;; Hardware stack levels required when called: 2
  3384 ;; This function calls:
  3385 ;;		i2_LCD_Command
  3386 ;; This function is called by:
  3387 ;;		_INT0_ISR
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           
  3391                           	psect	text17
  3392   004A86                     __ptext17:
  3393                           	callstack 0
  3394   004A86                     i2_LCD_Clear:
  3395                           	callstack 22
  3396   004A86                     
  3397                           ;./LCDDrive.h: 45:         LCD_Command(0x01);
  3398   004A86  0E01               	movlw	1
  3399   004A88  ECFF  F024         	call	i2_LCD_Command
  3400   004A8C  0012               	return		;funcret
  3401   004A8E                     __end_ofi2_LCD_Clear:
  3402                           	callstack 0
  3403                           
  3404 ;; *************** function i2_LCD_Command *****************
  3405 ;; Defined at:
  3406 ;;		line 48 in file "./LCDDrive.h"
  3407 ;; Parameters:    Size  Location     Type
  3408 ;;  cmd             1    wreg     unsigned char 
  3409 ;; Auto vars:     Size  Location     Type
  3410 ;;  cmd             1    6[COMRAM] unsigned char 
  3411 ;; Return value:  Size  Location     Type
  3412 ;;                  1    wreg      void 
  3413 ;; Registers used:
  3414 ;;		wreg, status,2, status,0, cstack
  3415 ;; Tracked objects:
  3416 ;;		On entry : 0/0
  3417 ;;		On exit  : 0/0
  3418 ;;		Unchanged: 0/0
  3419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3421 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3423 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3424 ;;Total ram usage:        1 bytes
  3425 ;; Hardware stack levels used: 1
  3426 ;; Hardware stack levels required when called: 1
  3427 ;; This function calls:
  3428 ;;		i2_MSdelay
  3429 ;; This function is called by:
  3430 ;;		i2_LCD_Clear
  3431 ;;		i2_LCD_String_xy
  3432 ;; This function uses a non-reentrant model
  3433 ;;
  3434                           
  3435                           	psect	text18
  3436   0049FE                     __ptext18:
  3437                           	callstack 0
  3438   0049FE                     i2_LCD_Command:
  3439                           	callstack 22
  3440                           
  3441                           ;incstack = 0
  3442                           ;i2LCD_Command@cmd stored from wreg
  3443   0049FE  6E07               	movwf	i2LCD_Command@cmd^0,c
  3444   004A00                     
  3445                           ;./LCDDrive.h: 48: void LCD_Command(char cmd );./LCDDrive.h: 49: {;./LCDDrive.h: 50:    
      +                           LATD= cmd;
  3446   004A00  0060  F01F  FFBD   	movff	i2LCD_Command@cmd,16317	;volatile
  3447   004A06                     
  3448                           ;./LCDDrive.h: 51:     _delay((unsigned long)((1)*(4000000/4000.0)));
  3449   004A06  0EC8               	movlw	200
  3450   004A08                     i2u146_47:
  3451   004A08  D000               	nop2	
  3452   004A0A  2EE8               	decfsz	wreg,f,c
  3453   004A0C  D7FD               	bra	i2u146_47
  3454   004A0E                     
  3455                           ;./LCDDrive.h: 52:     LATC3 = 0;
  3456   004A0E  96BC               	bcf	16316,3,c	;volatile
  3457   004A10                     
  3458                           ;./LCDDrive.h: 53:     LATC4 = 1;
  3459   004A10  88BC               	bsf	16316,4,c	;volatile
  3460   004A12                     
  3461                           ;./LCDDrive.h: 54:     __nop();
  3462   004A12  0000               	nop	
  3463   004A14                     
  3464                           ;./LCDDrive.h: 55:     LATC4 = 0;
  3465   004A14  98BC               	bcf	16316,4,c	;volatile
  3466   004A16                     
  3467                           ;./LCDDrive.h: 56:     MSdelay(3);
  3468   004A16  0E00               	movlw	0
  3469   004A18  6E02               	movwf	(i2MSdelay@val+1)^0,c
  3470   004A1A  0E03               	movlw	3
  3471   004A1C  6E01               	movwf	i2MSdelay@val^0,c
  3472   004A1E  EC34  F024         	call	i2_MSdelay	;wreg free
  3473   004A22  0012               	return		;funcret
  3474   004A24                     __end_ofi2_LCD_Command:
  3475                           	callstack 0
  3476                           
  3477 ;; *************** function i2_MSdelay *****************
  3478 ;; Defined at:
  3479 ;;		line 96 in file "./LCDDrive.h"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;  val             2    0[COMRAM] unsigned int 
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;  j               2    4[COMRAM] unsigned int 
  3484 ;;  i               2    2[COMRAM] unsigned int 
  3485 ;; Return value:  Size  Location     Type
  3486 ;;                  1    wreg      void 
  3487 ;; Registers used:
  3488 ;;		wreg, status,2, status,0
  3489 ;; Tracked objects:
  3490 ;;		On entry : 0/0
  3491 ;;		On exit  : 0/0
  3492 ;;		Unchanged: 0/0
  3493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3494 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3495 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3497 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3498 ;;Total ram usage:        6 bytes
  3499 ;; Hardware stack levels used: 1
  3500 ;; This function calls:
  3501 ;;		Nothing
  3502 ;; This function is called by:
  3503 ;;		i2_LCD_Command
  3504 ;;		i2_LCD_Char
  3505 ;; This function uses a non-reentrant model
  3506 ;;
  3507                           
  3508                           	psect	text19
  3509   004868                     __ptext19:
  3510                           	callstack 0
  3511   004868                     i2_MSdelay:
  3512                           	callstack 21
  3513   004868                     
  3514                           ;./LCDDrive.h: 96: void MSdelay(unsigned int val);./LCDDrive.h: 97: {;./LCDDrive.h: 98: 
      +                               unsigned int i,j;;./LCDDrive.h: 99:         for(i=0;i<val;i++)
  3515   004868  0E00               	movlw	0
  3516   00486A  6E04               	movwf	(i2MSdelay@i+1)^0,c
  3517   00486C  0E00               	movlw	0
  3518   00486E  6E03               	movwf	i2MSdelay@i^0,c
  3519   004870  EF4D  F024         	goto	i2l1442
  3520   004874                     i2l1430:
  3521                           
  3522                           ;./LCDDrive.h: 100:             for(j=0;j<165;j++);
  3523   004874  0E00               	movlw	0
  3524   004876  6E06               	movwf	(i2MSdelay@j+1)^0,c
  3525   004878  0E00               	movlw	0
  3526   00487A  6E05               	movwf	i2MSdelay@j^0,c
  3527   00487C                     i2l1436:
  3528   00487C  4A05               	infsnz	i2MSdelay@j^0,f,c
  3529   00487E  2A06               	incf	(i2MSdelay@j+1)^0,f,c
  3530   004880  5006               	movf	(i2MSdelay@j+1)^0,w,c
  3531   004882  E109               	bnz	i2u58_40
  3532   004884  0EA5               	movlw	165
  3533   004886  5C05               	subwf	i2MSdelay@j^0,w,c
  3534   004888  A0D8               	btfss	status,0,c
  3535   00488A  EF49  F024         	goto	i2u58_41
  3536   00488E  EF4B  F024         	goto	i2u58_40
  3537   004892                     i2u58_41:
  3538   004892  EF3E  F024         	goto	i2l1436
  3539   004896                     i2u58_40:
  3540   004896  4A03               	infsnz	i2MSdelay@i^0,f,c
  3541   004898  2A04               	incf	(i2MSdelay@i+1)^0,f,c
  3542   00489A                     i2l1442:
  3543   00489A  5001               	movf	i2MSdelay@val^0,w,c
  3544   00489C  5C03               	subwf	i2MSdelay@i^0,w,c
  3545   00489E  5002               	movf	(i2MSdelay@val+1)^0,w,c
  3546   0048A0  5804               	subwfb	(i2MSdelay@i+1)^0,w,c
  3547   0048A2  A0D8               	btfss	status,0,c
  3548   0048A4  EF56  F024         	goto	i2u59_41
  3549   0048A8  EF58  F024         	goto	i2u59_40
  3550   0048AC                     i2u59_41:
  3551   0048AC  EF3A  F024         	goto	i2l1430
  3552   0048B0                     i2u59_40:
  3553   0048B0  0012               	return		;funcret
  3554   0048B2                     __end_ofi2_MSdelay:
  3555                           	callstack 0
  3556                           
  3557                           ;
  3558                           ; H/W Interrupt Vector Table @ 0x4008
  3559                           ;
  3560                           
  3561                           	psect	ivt0x4008
  3562   004008                     __pivt0x4008:
  3563                           	callstack 0
  3564   004008                     ivt0x4008_base:
  3565                           	callstack 0
  3566                           
  3567                           ; Vector 0 : SWINT
  3568   004008  102B               	dw	ivt0x4008_undefint shr (0+2)
  3569                           
  3570                           ; Vector 1 : HLVD
  3571   00400A  102B               	dw	ivt0x4008_undefint shr (0+2)
  3572                           
  3573                           ; Vector 2 : OSF
  3574   00400C  102B               	dw	ivt0x4008_undefint shr (0+2)
  3575                           
  3576                           ; Vector 3 : CSW
  3577   00400E  102B               	dw	ivt0x4008_undefint shr (0+2)
  3578                           
  3579                           ; Vector 4 : NVM
  3580   004010  102B               	dw	ivt0x4008_undefint shr (0+2)
  3581                           
  3582                           ; Vector 5 : SCAN
  3583   004012  102B               	dw	ivt0x4008_undefint shr (0+2)
  3584                           
  3585                           ; Vector 6 : CRC
  3586   004014  102B               	dw	ivt0x4008_undefint shr (0+2)
  3587                           
  3588                           ; Vector 7 : IOC
  3589   004016  102B               	dw	ivt0x4008_undefint shr (0+2)
  3590                           
  3591                           ; Vector 8 : INT0
  3592   004018  10FA               	dw	_INT0_ISR shr (0+2)
  3593                           
  3594                           ; Vector 9 : ZCD
  3595   00401A  102B               	dw	ivt0x4008_undefint shr (0+2)
  3596                           
  3597                           ; Vector 10 : AD
  3598   00401C  102B               	dw	ivt0x4008_undefint shr (0+2)
  3599                           
  3600                           ; Vector 11 : ADT
  3601   00401E  102B               	dw	ivt0x4008_undefint shr (0+2)
  3602                           
  3603                           ; Vector 12 : CMP1
  3604   004020  102B               	dw	ivt0x4008_undefint shr (0+2)
  3605                           
  3606                           ; Vector 13 : SMT1
  3607   004022  102B               	dw	ivt0x4008_undefint shr (0+2)
  3608                           
  3609                           ; Vector 14 : SMT1PRA
  3610   004024  102B               	dw	ivt0x4008_undefint shr (0+2)
  3611                           
  3612                           ; Vector 15 : SMT1PRW
  3613   004026  102B               	dw	ivt0x4008_undefint shr (0+2)
  3614                           
  3615                           ; Vector 16 : DMA1SCNT
  3616   004028  102B               	dw	ivt0x4008_undefint shr (0+2)
  3617                           
  3618                           ; Vector 17 : DMA1DCNT
  3619   00402A  102B               	dw	ivt0x4008_undefint shr (0+2)
  3620                           
  3621                           ; Vector 18 : DMA1OR
  3622   00402C  102B               	dw	ivt0x4008_undefint shr (0+2)
  3623                           
  3624                           ; Vector 19 : DMA1A
  3625   00402E  102B               	dw	ivt0x4008_undefint shr (0+2)
  3626                           
  3627                           ; Vector 20 : SPI1RX
  3628   004030  102B               	dw	ivt0x4008_undefint shr (0+2)
  3629                           
  3630                           ; Vector 21 : SPI1TX
  3631   004032  102B               	dw	ivt0x4008_undefint shr (0+2)
  3632                           
  3633                           ; Vector 22 : SPI1
  3634   004034  102B               	dw	ivt0x4008_undefint shr (0+2)
  3635                           
  3636                           ; Vector 23 : I2C1RX
  3637   004036  102B               	dw	ivt0x4008_undefint shr (0+2)
  3638                           
  3639                           ; Vector 24 : I2C1TX
  3640   004038  102B               	dw	ivt0x4008_undefint shr (0+2)
  3641                           
  3642                           ; Vector 25 : I2C1
  3643   00403A  102B               	dw	ivt0x4008_undefint shr (0+2)
  3644                           
  3645                           ; Vector 26 : I2C1E
  3646   00403C  102B               	dw	ivt0x4008_undefint shr (0+2)
  3647                           
  3648                           ; Vector 27 : U1RX
  3649   00403E  102B               	dw	ivt0x4008_undefint shr (0+2)
  3650                           
  3651                           ; Vector 28 : U1TX
  3652   004040  102B               	dw	ivt0x4008_undefint shr (0+2)
  3653                           
  3654                           ; Vector 29 : U1E
  3655   004042  102B               	dw	ivt0x4008_undefint shr (0+2)
  3656                           
  3657                           ; Vector 30 : U1
  3658   004044  102B               	dw	ivt0x4008_undefint shr (0+2)
  3659                           
  3660                           ; Vector 31 : TMR0
  3661   004046  102B               	dw	ivt0x4008_undefint shr (0+2)
  3662                           
  3663                           ; Vector 32 : TMR1
  3664   004048  102B               	dw	ivt0x4008_undefint shr (0+2)
  3665                           
  3666                           ; Vector 33 : TMR1G
  3667   00404A  102B               	dw	ivt0x4008_undefint shr (0+2)
  3668                           
  3669                           ; Vector 34 : TMR2
  3670   00404C  102B               	dw	ivt0x4008_undefint shr (0+2)
  3671                           
  3672                           ; Vector 35 : CCP1
  3673   00404E  102B               	dw	ivt0x4008_undefint shr (0+2)
  3674                           
  3675                           ; Vector 36 : Undefined
  3676   004050  102B               	dw	ivt0x4008_undefint shr (0+2)
  3677                           
  3678                           ; Vector 37 : NCO1
  3679   004052  102B               	dw	ivt0x4008_undefint shr (0+2)
  3680                           
  3681                           ; Vector 38 : CWG1
  3682   004054  102B               	dw	ivt0x4008_undefint shr (0+2)
  3683                           
  3684                           ; Vector 39 : CLC1
  3685   004056  102B               	dw	ivt0x4008_undefint shr (0+2)
  3686                           
  3687                           ; Vector 40 : INT1
  3688   004058  102B               	dw	ivt0x4008_undefint shr (0+2)
  3689                           
  3690                           ; Vector 41 : CMP2
  3691   00405A  102B               	dw	ivt0x4008_undefint shr (0+2)
  3692                           
  3693                           ; Vector 42 : DMA2SCNT
  3694   00405C  102B               	dw	ivt0x4008_undefint shr (0+2)
  3695                           
  3696                           ; Vector 43 : DMA2DCNT
  3697   00405E  102B               	dw	ivt0x4008_undefint shr (0+2)
  3698                           
  3699                           ; Vector 44 : DMA2OR
  3700   004060  102B               	dw	ivt0x4008_undefint shr (0+2)
  3701                           
  3702                           ; Vector 45 : DMA2A
  3703   004062  102B               	dw	ivt0x4008_undefint shr (0+2)
  3704                           
  3705                           ; Vector 46 : I2C2RX
  3706   004064  102B               	dw	ivt0x4008_undefint shr (0+2)
  3707                           
  3708                           ; Vector 47 : I2C2TX
  3709   004066  102B               	dw	ivt0x4008_undefint shr (0+2)
  3710                           
  3711                           ; Vector 48 : I2C2
  3712   004068  102B               	dw	ivt0x4008_undefint shr (0+2)
  3713                           
  3714                           ; Vector 49 : I2C2E
  3715   00406A  102B               	dw	ivt0x4008_undefint shr (0+2)
  3716                           
  3717                           ; Vector 50 : U2RX
  3718   00406C  102B               	dw	ivt0x4008_undefint shr (0+2)
  3719                           
  3720                           ; Vector 51 : U2TX
  3721   00406E  102B               	dw	ivt0x4008_undefint shr (0+2)
  3722                           
  3723                           ; Vector 52 : U2E
  3724   004070  102B               	dw	ivt0x4008_undefint shr (0+2)
  3725                           
  3726                           ; Vector 53 : U2
  3727   004072  102B               	dw	ivt0x4008_undefint shr (0+2)
  3728                           
  3729                           ; Vector 54 : TMR3
  3730   004074  102B               	dw	ivt0x4008_undefint shr (0+2)
  3731                           
  3732                           ; Vector 55 : TMR3G
  3733   004076  102B               	dw	ivt0x4008_undefint shr (0+2)
  3734                           
  3735                           ; Vector 56 : TMR4
  3736   004078  102B               	dw	ivt0x4008_undefint shr (0+2)
  3737                           
  3738                           ; Vector 57 : CCP2
  3739   00407A  102B               	dw	ivt0x4008_undefint shr (0+2)
  3740                           
  3741                           ; Vector 58 : Undefined
  3742   00407C  102B               	dw	ivt0x4008_undefint shr (0+2)
  3743                           
  3744                           ; Vector 59 : CWG2
  3745   00407E  102B               	dw	ivt0x4008_undefint shr (0+2)
  3746                           
  3747                           ; Vector 60 : CLC2
  3748   004080  102B               	dw	ivt0x4008_undefint shr (0+2)
  3749                           
  3750                           ; Vector 61 : INT2
  3751   004082  102B               	dw	ivt0x4008_undefint shr (0+2)
  3752                           
  3753                           ; Vector 62 : Undefined
  3754   004084  102B               	dw	ivt0x4008_undefint shr (0+2)
  3755                           
  3756                           ; Vector 63 : Undefined
  3757   004086  102B               	dw	ivt0x4008_undefint shr (0+2)
  3758                           
  3759                           ; Vector 64 : Undefined
  3760   004088  102B               	dw	ivt0x4008_undefint shr (0+2)
  3761                           
  3762                           ; Vector 65 : Undefined
  3763   00408A  102B               	dw	ivt0x4008_undefint shr (0+2)
  3764                           
  3765                           ; Vector 66 : Undefined
  3766   00408C  102B               	dw	ivt0x4008_undefint shr (0+2)
  3767                           
  3768                           ; Vector 67 : Undefined
  3769   00408E  102B               	dw	ivt0x4008_undefint shr (0+2)
  3770                           
  3771                           ; Vector 68 : Undefined
  3772   004090  102B               	dw	ivt0x4008_undefint shr (0+2)
  3773                           
  3774                           ; Vector 69 : Undefined
  3775   004092  102B               	dw	ivt0x4008_undefint shr (0+2)
  3776                           
  3777                           ; Vector 70 : TMR5
  3778   004094  102B               	dw	ivt0x4008_undefint shr (0+2)
  3779                           
  3780                           ; Vector 71 : TMR5G
  3781   004096  102B               	dw	ivt0x4008_undefint shr (0+2)
  3782                           
  3783                           ; Vector 72 : TMR6
  3784   004098  102B               	dw	ivt0x4008_undefint shr (0+2)
  3785                           
  3786                           ; Vector 73 : CCP3
  3787   00409A  102B               	dw	ivt0x4008_undefint shr (0+2)
  3788                           
  3789                           ; Vector 74 : CWG3
  3790   00409C  102B               	dw	ivt0x4008_undefint shr (0+2)
  3791                           
  3792                           ; Vector 75 : CLC3
  3793   00409E  102B               	dw	ivt0x4008_undefint shr (0+2)
  3794                           
  3795                           ; Vector 76 : Undefined
  3796   0040A0  102B               	dw	ivt0x4008_undefint shr (0+2)
  3797                           
  3798                           ; Vector 77 : Undefined
  3799   0040A2  102B               	dw	ivt0x4008_undefint shr (0+2)
  3800                           
  3801                           ; Vector 78 : Undefined
  3802   0040A4  102B               	dw	ivt0x4008_undefint shr (0+2)
  3803                           
  3804                           ; Vector 79 : Undefined
  3805   0040A6  102B               	dw	ivt0x4008_undefint shr (0+2)
  3806                           
  3807                           ; Vector 80 : CCP4
  3808   0040A8  102B               	dw	ivt0x4008_undefint shr (0+2)
  3809                           
  3810                           ; Vector 81 : CLC4
  3811   0040AA  102B               	dw	ivt0x4008_undefint shr (0+2)
  3812   0040AC                     ivt0x4008_undefint:
  3813                           	callstack 0
  3814   0040AC  00FF               	reset	
  3815                           
  3816                           	psect	rparam
  3817   000001                     ___rparam_used  equ	1
  3818   000000                     ___param_bank   equ	0
  3819   000000                     __Lparam        equ	__Lrparam
  3820   000000                     __Hparam        equ	__Hrparam
  3821                           
  3822                           	psect	config
  3823                           
  3824                           ;Config register CONFIG1L @ 0x300000
  3825                           ;	External Oscillator Selection
  3826                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  3827                           ;	Reset Oscillator Selection
  3828                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  3829   300000                     	org	3145728
  3830   300000  F8                 	db	248
  3831                           
  3832                           ;Config register CONFIG1H @ 0x300001
  3833                           ;	Clock out Enable bit
  3834                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  3835                           ;	PRLOCKED One-Way Set Enable bit
  3836                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  3837                           ;	Clock Switch Enable bit
  3838                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  3839                           ;	Fail-Safe Clock Monitor Enable bit
  3840                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3841   300001                     	org	3145729
  3842   300001  FF                 	db	255
  3843                           
  3844                           ;Config register CONFIG2L @ 0x300002
  3845                           ;	MCLR Enable bit
  3846                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  3847                           ;	Power-up timer selection bits
  3848                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  3849                           ;	Multi-vector enable bit
  3850                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  3851                           ;	IVTLOCK bit One-way set enable bit
  3852                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  3853                           ;	Low Power BOR Enable bit
  3854                           ;	LPBOREN = OFF, ULPBOR disabled
  3855                           ;	Brown-out Reset Enable bits
  3856                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  3857   300002                     	org	3145730
  3858   300002  FF                 	db	255
  3859                           
  3860                           ;Config register CONFIG2H @ 0x300003
  3861                           ;	Brown-out Reset Voltage Selection bits
  3862                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  3863                           ;	ZCD Disable bit
  3864                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  3865                           ;	PPSLOCK bit One-Way Set Enable bit
  3866                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  3867                           ;	Stack Full/Underflow Reset Enable bit
  3868                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3869                           ;	Debugger Enable bit
  3870                           ;	DEBUG = OFF, Background debugger disabled
  3871                           ;	Extended Instruction Set Enable bit
  3872                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3873   300003                     	org	3145731
  3874   300003  FF                 	db	255
  3875                           
  3876                           ;Config register CONFIG3L @ 0x300004
  3877                           ;	WDT Period selection bits
  3878                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3879                           ;	WDT operating mode
  3880                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  3881   300004                     	org	3145732
  3882   300004  9F                 	db	159
  3883                           
  3884                           ;Config register CONFIG3H @ 0x300005
  3885                           ;	WDT Window Select bits
  3886                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3887                           ;	WDT input clock selector
  3888                           ;	WDTCCS = SC, Software Control
  3889   300005                     	org	3145733
  3890   300005  FF                 	db	255
  3891                           
  3892                           ;Config register CONFIG4L @ 0x300006
  3893                           ;	Boot Block Size selection bits
  3894                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  3895                           ;	Boot Block enable bit
  3896                           ;	BBEN = OFF, Boot block disabled
  3897                           ;	Storage Area Flash enable bit
  3898                           ;	SAFEN = OFF, SAF disabled
  3899                           ;	Application Block write protection bit
  3900                           ;	WRTAPP = OFF, Application Block not write protected
  3901   300006                     	org	3145734
  3902   300006  FF                 	db	255
  3903                           
  3904                           ;Config register CONFIG4H @ 0x300007
  3905                           ;	Boot Block Write Protection bit
  3906                           ;	WRTB = OFF, Boot Block not write-protected
  3907                           ;	Configuration Register Write Protection bit
  3908                           ;	WRTC = OFF, Configuration registers not write-protected
  3909                           ;	Data EEPROM Write Protection bit
  3910                           ;	WRTD = OFF, Data EEPROM not write-protected
  3911                           ;	SAF Write protection bit
  3912                           ;	WRTSAF = OFF, SAF not Write Protected
  3913                           ;	Low Voltage Programming Enable bit
  3914                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  3915   300007                     	org	3145735
  3916   300007  FF                 	db	255
  3917                           
  3918                           ;Config register CONFIG5L @ 0x300008
  3919                           ;	PFM and Data EEPROM Code Protection bit
  3920                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  3921   300008                     	org	3145736
  3922   300008  FF                 	db	255
  3923                           
  3924                           ;Config register CONFIG5H @ 0x300009
  3925                           ;	unspecified, using default values
  3926   300009                     	org	3145737
  3927   300009  FF                 	db	255
  3928                           tosu	equ	0x3FFF
  3929                           tosh	equ	0x3FFE
  3930                           tosl	equ	0x3FFD
  3931                           stkptr	equ	0x3FFC
  3932                           pclatu	equ	0x3FFB
  3933                           pclath	equ	0x3FFA
  3934                           pcl	equ	0x3FF9
  3935                           tblptru	equ	0x3FF8
  3936                           tblptrh	equ	0x3FF7
  3937                           tblptrl	equ	0x3FF6
  3938                           tablat	equ	0x3FF5
  3939                           prodh	equ	0x3FF4
  3940                           prodl	equ	0x3FF3
  3941                           indf0	equ	0x3FEF
  3942                           postinc0	equ	0x3FEE
  3943                           postdec0	equ	0x3FED
  3944                           preinc0	equ	0x3FEC
  3945                           plusw0	equ	0x3FEB
  3946                           fsr0h	equ	0x3FEA
  3947                           fsr0l	equ	0x3FE9
  3948                           wreg	equ	0x3FE8
  3949                           indf1	equ	0x3FE7
  3950                           postinc1	equ	0x3FE6
  3951                           postdec1	equ	0x3FE5
  3952                           preinc1	equ	0x3FE4
  3953                           plusw1	equ	0x3FE3
  3954                           fsr1h	equ	0x3FE2
  3955                           fsr1l	equ	0x3FE1
  3956                           bsr	equ	0x3FE0
  3957                           indf2	equ	0x3FDF
  3958                           postinc2	equ	0x3FDE
  3959                           postdec2	equ	0x3FDD
  3960                           preinc2	equ	0x3FDC
  3961                           plusw2	equ	0x3FDB
  3962                           fsr2h	equ	0x3FDA
  3963                           fsr2l	equ	0x3FD9
  3964                           status	equ	0x3FD8

Data Sizes:
    Strings     34
    Constant    0
    Data        30
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     38      72
    BANK0           160     12      12
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 10
		 -> code(COMRAM[10]), inputStr(COMRAM[3]), STR_1(CODE[6]), STR_2(CODE[9]), 
		 -> STR_3(CODE[10]), STR_4(CODE[9]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 10
		 -> code(COMRAM[10]), inputStr(COMRAM[3]), STR_1(CODE[6]), STR_2(CODE[9]), 
		 -> STR_3(CODE[10]), STR_4(CODE[9]), 


Critical Paths under _main in COMRAM

    _main->_getCode
    _getCode->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Clear->_LCD_Command
    _LCD_Init->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _INT0_ISR in COMRAM

    _INT0_ISR->i2_LCD_String_xy
    i2_LCD_String_xy->i2_LCD_String
    i2_LCD_String->i2_LCD_Char
    i2_LCD_Char->i2_MSdelay
    i2_LCD_Clear->i2_LCD_Command
    i2_LCD_Command->i2_MSdelay

Critical Paths under _main in BANK0

    _main->_getCode

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    3448
                                             10 BANK0      2     2      0
                         _Initialize
                           _LCD_Init
                      _LCD_String_xy
                               _buzz
                            _getCode
 ---------------------------------------------------------------------------------
 (1) _getCode                                             14    12      2    2303
                                             36 COMRAM     2     0      2
                                              0 BANK0     10    10      0
                          _LCD_Clear
                      _LCD_String_xy
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     439
                                             22 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     451
                                             22 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        5     2      3     711
                                             31 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2     260
                                             29 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             1     1      0     192
                                             28 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     192
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _buzz                                                 6     6      0      60
                                             22 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0     337
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          1     1      0     192
                                             28 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (5) _MSdelay                                              6     4      2     145
                                             22 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INT0_ISR                                             8     8      0     605
                                             14 COMRAM     8     8      0
                        i2_LCD_Clear
                    i2_LCD_String_xy
 ---------------------------------------------------------------------------------
 (7) i2_LCD_String_xy                                      5     2      3     436
                                              9 COMRAM     5     2      3
                      i2_LCD_Command
                       i2_LCD_String
 ---------------------------------------------------------------------------------
 (8) i2_LCD_String                                         2     0      2     169
                                              7 COMRAM     2     0      2
                         i2_LCD_Char
 ---------------------------------------------------------------------------------
 (9) i2_LCD_Char                                           1     1      0     123
                                              6 COMRAM     1     1      0
                          i2_MSdelay
 ---------------------------------------------------------------------------------
 (7) i2_LCD_Clear                                          0     0      0     123
                      i2_LCD_Command
 ---------------------------------------------------------------------------------
 (8) i2_LCD_Command                                        1     1      0     123
                                              6 COMRAM     1     1      0
                          i2_MSdelay
 ---------------------------------------------------------------------------------
 (10) i2_MSdelay                                           6     4      2      94
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Initialize
   _LCD_Init
     _LCD_Command
       _MSdelay
     _MSdelay
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
         _MSdelay
   _buzz
   _getCode
     _LCD_Clear
       _LCD_Command
     _LCD_String_xy
     ___awdiv
     ___awmod

 _INT0_ISR (ROOT)
   i2_LCD_Clear
     i2_LCD_Command
       i2_MSdelay
   i2_LCD_String_xy
     i2_LCD_Command
     i2_LCD_String
       i2_LCD_Char
         i2_MSdelay

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRllh      1576      0       0      0.0%
BITBIGSFRllll      385      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160     12      12      7.5%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     38      72     75.8%
BITBIGSFRh          45      0       0      0.0%
BITBIGSFRlllh       31      0       0      0.0%
BITBIGSFRlh          7      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      84      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu Apr 24 17:48:58 2025

           ?_LCD_Command 0001                       l81 4A84                       l75 49AC  
                     l84 49FC                       l93 47AA                       l78 49D6  
                     l87 4A5E                       l98 4930             ___awdiv@sign 001C  
            ?_LCD_String 001E                      l106 4866                      l150 43E6  
                    l170 43C6                      l149 4160                      l166 4356  
                    l158 423E                      l441 461A                      l194 46AA  
                    l428 456C                      u370 4676                      u371 4672  
                    u380 46AA                      u381 46A6                      u950 484C  
                    u951 4848                      u960 4866                      u961 4862  
                    u970 4768                      u980 479A                      u990 47AA  
                    u991 47A6                      u977 475A                      u987 478C  
                    _num 0027             ___awmod@sign 001C                      wreg 3FE8  
            LCD_Char@dat 001D                     l2000 424C                     l2010 428A  
                   l2002 4252                     l1220 461C                     l2020 4302  
                   l2004 4266                     l2012 42A2                     l1070 498C  
                   l2022 4304                     l2014 42B0                     l2006 426E  
                   l1080 4996                     l1072 498E                     l1240 4676  
                   l1232 462C                     l2040 4374                     l2032 4322  
                   l2016 42CA                     l2008 427A                     l1090 49A4  
                   l1082 499A                     l1074 4990                     l1066 4972  
                   l1242 468C                     l1234 463A                     l1226 4624  
                   l2050 4392                     l2034 4334                     l2018 42EC  
                   l1092 49A6                     l1084 499C                     l1076 4992  
                   l1068 4984                     l1236 4654                     l2052 43A4  
                   l2028 430E                     l2036 435C                     l2060 46AC  
                   l1094 49A8                     l1086 499E                     l1078 4994  
                   l1238 4656                     l2046 437E                     l2038 4372  
                   l2054 43C8                     l2070 46C8                     l2062 46AE  
                   l1096 49AA                     l1088 49A2                     l2056 43D0  
                   l2080 46F8                     l2072 46CC                     l2064 46AE  
                   l2058 43D4                     l2074 46CE                     l2066 46B2  
                   l2084 470C                     l2076 46E0                     l2068 46C4  
                   l2086 470C                     l2078 46F6                     l1800 4832  
                   l2088 4726                     l1802 4836                     l1810 4A4A  
                   l1804 484C                     l1820 49DA                     l1812 4A4C  
                   l1806 4850                     l1830 49EE                     l1822 49E0  
                   l1814 4A4E                     l1910 458A                     l1902 456E  
                   l1832 49F0                     l1824 49E8                     l1816 4A50  
                   l1808 4A44                     l1840 4770                     l1920 45C2  
                   l1912 4598                     l1904 4570                     l1826 49EA  
                   l1842 4A7E                     l1818 4A52                     l1834 473A  
                   l1850 490C                     l1922 45D0                     l1930 45FA  
                   l1914 45A0                     l1906 457E                     l1828 49EC  
                   l1940 49BA                     l1836 473E                     l1852 4916  
                   l1844 48F4                     l1860 44AE                     l1932 460A  
                   l1924 45E6                     l1916 45B2                     l1908 4586  
                   l1942 49BC                     l1838 476C                     l1854 491E  
                   l1846 48F4                     l1870 44DE                     l1862 44BC  
                   l1934 4612                     l1926 45EE                     l1918 45BA  
                   l1950 40C4                     l1792 481E                     l1856 4924  
                   l1848 4904                     l1880 450C                     l1872 44E2  
                   l1864 44C4                     l1928 45F4                     l1960 412A  
                   l1952 40C8                     l1944 40B2                     l1794 482A  
                   l1938 49AE                     l1890 4540                     l1882 451A  
                   l1874 44EA                     l1866 44C8                     l1858 44AC  
                   l1962 413A                     l1954 40E8                     l1946 40BC  
                   l1892 4546                     l1884 4520                     l1876 44FC  
                   l1868 44D6                     l1980 419C                     l1972 416E  
                   l1964 414C                     l1956 4108                     l1948 40C0  
                   l1886 4536                     l1878 4504                     l1894 454C  
                   l1990 420C                     l1982 41AC                     l1974 4174  
                   l1966 414C                     l1958 4118                     l1896 455C  
                   l1888 453E                     l1992 4216                     l1976 4188  
                   l1984 41C4                     l1898 4564                     l1994 421A  
                   l1986 41D2                     l1978 4190                     l1996 422A  
                   l1988 41F2                     STR_1 201D                     STR_2 2014  
                   STR_3 2001                     STR_4 200B                     u1000 4904  
                   u1001 4900                     u1010 44BC                     u1011 44B8  
                   u1020 44D6                     u1100 45D0                     u1021 44D2  
                   u1101 45CC                     u1030 44FC                     u1110 45E6  
                   u1031 44F8                     u1111 45E2                     u1040 451A  
                   u1120 460A                     u1200 42B0                     u1041 4516  
                   u1121 4606                     u1201 42AC                     u1050 4536  
                   u1210 42EC                     u1130 415C                     u1051 4532  
                   u1211 42E8                     u1131 4158                     u1060 455C  
                   u1220 431E                     u1140 416E                     u1061 4558  
                   u1221 431A                     u1141 416A                     u1070 457E  
                   u1230 4356                     u1150 4188                     u1071 457A  
                   u1231 4352                     u1151 4184                     u1080 4598  
                   u1240 438E                     u1160 41D2                     u1081 4594  
                   u1241 438A                     u1161 41CE                     u1090 45B2  
                   u1250 43C6                     u1170 423A                     u1091 45AE  
                   u1251 43C2                     u1171 4236                     u1307 4120  
                   u1180 424C                     u1260 4708                     u1181 4248  
                   u1317 4142                     u1261 4704                     u1190 4266  
                   u1407 4646                     u1191 4262                     u1327 41B8  
                   _LATD 3FBD                     u1417 4680                     u1337 41FE  
                   u1427 49E2                     u1347 4296                     u1357 42BC  
                   u1277 46BA                     u1367 432A                     u1287 46D6  
                   u1377 439A                     u1297 4718                     u1387 43DC  
                   u1397 4632                     _PIR1 39A1                     i2l81 4A8C  
                   i2l84 4A22                     i2l93 481C                     i2l87 4A7C  
                   i2l98 4970                     _WPUB 3A51              ?i2_LCD_Char 0001  
                   _code 003B                     _main 46AC                     _buzz 461C  
                   fsr0h 3FEA                     indf0 3FEF                     fsr2h 3FDA  
                   fsr0l 3FE9                     indf2 3FDF                     fsr1l 3FE1  
                   fsr2l 3FD9                     prodh 3FF4                     prodl 3FF3  
                   start 40AE          __end_of_MSdelay 4868            _LCD_String_xy 48F2  
           ___param_bank 0000         __end_of_LCD_Char 4A60         __end_of_LCD_Init 49D8  
       __end_of_INT0_ISR 44AC                    ?_main 0001                    ?_buzz 0001  
        __end_of___awdiv 456E          __end_of___awmod 461C          ___awdiv@divisor 0019  
                  _LATC2 1FDE2                    _LATC3 1FDE3                    _LATC4 1FDE4  
                  _LATC5 1FDE5                    _LATC7 1FDE7                    i2l106 48B0  
                  i2l176 4422                    i2l178 4492          ___awdiv@counter 001B  
                  _TRISA 3FC2                    _TRISB 3FC3                    _TRISC 3FC4  
                  _TRISD 3FC5                    _TRISE 3FC6          __end_of_getCode 43E8  
           ?i2_LCD_Clear 0001                    _reset 0045                    buzz@i 001B  
                  buzz@j 0019                    tablat 3FF5                    status 3FD8  
         ?_LCD_String_xy 0020          __initialization 48B2             __end_of_main 473A  
           __end_of_buzz 46AC               _Initialize 4972                   ??_main 006A  
                 ??_buzz 0017        __end_of_LCD_Clear 4A86            __activetblptr 0002  
                 _ADCON0 3EF8                   _ADCON1 3EF9                   _ADCON2 3EFA  
       ___awdiv@dividend 0017                   _ANSELA 3A40                   _ANSELB 3A50  
                 _ANSELC 3A60                   _ANSELD 3A70                   _ANSELE 3A80  
       LCD_String_xy@msg 0021         LCD_String_xy@pos 0020         LCD_String_xy@row 0023  
              ??_MSdelay 0019                   i2l1430 4874                   i2l1440 4896  
                 i2l1442 489A                   i2l1436 487C                   i2l1428 4868  
                 i2l1438 4880                   i2l1470 4A6A                   i2l1472 4A6C  
                 i2l1720 4934                   i2l1474 4A6E                   i2l1466 4A62  
                 i2l1730 495E                   i2l1722 4934                   i2l1580 4A10  
                 i2l1476 4A70                   i2l1468 4A68                   i2l1732 4964  
                 i2l1724 4944                   i2l1740 441A                   i2l1582 4A12  
                 i2l1574 4A00                   i2l1718 4A86                   i2l1590 47B0  
                 i2l1726 494C                   i2l1750 4456                   i2l1734 4400  
                 i2l1584 4A14                   i2l1576 4A06                   i2l1592 47DE  
                 i2l1728 4956                   i2l1760 4484                   i2l1752 4476  
                 i2l1736 4416                   i2l1586 4A16                   i2l1578 4A0E  
                 i2l1594 47E2                   i2l1754 447A                   i2l1746 4424  
                 i2l1738 4418                   i2l1588 47AC                   i2l1756 447E  
                 i2l1748 443C                   i2l1758 4480        __end_ofi2_MSdelay 48B2  
              ??___awdiv 001B                ??___awmod 001B         ___awdiv@quotient 001D  
        ___awmod@divisor 0019                   _sevSeg 0031            ?i2_LCD_String 0008  
              ??_getCode 0060                   isa$std 0001          ___awmod@counter 001B  
           __pdataCOMRAM 0027             __mediumconst 2000                   tblptrh 3FF7  
                 tblptrl 3FF6                   tblptru 3FF8        ??i2_LCD_String_xy 000D  
              ?_LCD_Char 0001               __accesstop 0060  __end_of__initialization 48E8  
              ?_LCD_Init 0001                ?_INT0_ISR 0001          ??_LCD_String_xy 0023  
          ___rparam_used 0001                INT0_ISR@i 0015           __pcstackCOMRAM 0001  
            ?_Initialize 0001           ??i2_LCD_String 000A             ??_LCD_String 0020  
       i2LCD_Command@cmd 0007             ??i2_LCD_Char 0007               ??_LCD_Char 001D  
             ??_LCD_Init 001E               ??_INT0_ISR 000F       __end_of_LCD_String 47AC  
                IVTBASEH 3FD6                  IVTBASEL 3FD5                  IVTBASEU 3FD7  
          i2_LCD_Command 49FE       __end_ofi2_LCD_Char 4A7E                  i2u58_40 4896  
                i2u58_41 4892                  i2u59_40 48B0                  i2u59_41 48AC  
                i2u76_40 47DA                  i2u92_40 4944                  i2u92_41 4940  
                i2u76_47 47CC                  i2u77_40 480C                  i2u93_40 4476  
                i2u93_41 4472                  i2u77_47 47FE                  i2u78_40 481C  
                i2u78_41 4818                  _MSdelay 481E            LCD_String@msg 001E  
                __Hparam 0000                  __Lparam 0000                  ___awdiv 44AC  
                ___awmod 456E             __psmallconst 2000           ?i2_LCD_Command 0001  
                __pcinit 48B2                  __ramtop 2000                  _getCode 40B2  
          ivt0x4008_base 4008                  __ptext0 46AC                  __ptext1 40B2  
                __ptext2 456E                  __ptext3 44AC                  __ptext4 48F2  
                __ptext5 473A                  __ptext6 4A42                  __ptext7 4A7E  
                __ptext8 461C                  __ptext9 49AE         ___awmod@dividend 0017  
              _LCD_Clear 4A7E     end_of_initialization 48E8     __end_ofi2_LCD_String 481E  
         LCD_Command@cmd 001D            __Lmediumconst 0000                  postdec1 3FE5  
                postinc0 3FEE                i2_MSdelay 4868          i2_LCD_String_xy 4932  
              _PORTAbits 3FCA                _PORTCbits 3FCC               ?_LCD_Clear 0001  
     i2LCD_String_xy@msg 000B       i2LCD_String_xy@pos 000A       i2LCD_String_xy@row 000D  
        ??i2_LCD_Command 0007            ??_LCD_Command 001D             ??_Initialize 0017  
             ?i2_MSdelay 0001            __pidataCOMRAM 4A24      start_initialization 48B2  
     __end_of_Initialize 49AE    __end_of_LCD_String_xy 4932  __end_ofi2_LCD_String_xy 4972  
          getCode@secret 0025      __end_of_LCD_Command 49FE              __pbssCOMRAM 0045  
          __pcstackBANK0 0060            ??i2_LCD_Clear 0008              ??_LCD_Clear 001E  
          i2LCD_Char@dat 0007                 ?_MSdelay 0017              __pivt0x4008 4008  
           i2MSdelay@val 0001                 ?___awdiv 0017                 ?___awmod 0017  
            ??i2_MSdelay 0003                 ?_getCode 0025             i2_LCD_String 47AC  
            __smallconst 2000    LCD_String_xy@location 0024                 MSdelay@i 0019  
               MSdelay@j 001B                 _LCD_Char 4A42      __end_ofi2_LCD_Clear 4A8E  
               _LCD_Init 49AE                 _INT0_ISR 43E8                 _IPR1bits 3981  
               _PIE1bits 3991                 _IVTBASEH 3FD6                 _IVTBASEL 3FD5  
               _IVTBASEU 3FD7                 i2u143_47 442E                 i2u144_47 4448  
               i2u145_47 448A                 i2u146_47 4A08                 _PIR1bits 39A1  
       ?i2_LCD_String_xy 000A        ivt0x4008_undefint 40AC              _LCD_Command 49D8  
            _INTCON0bits 3FD2                copy_data0 48C6             getCode@i_293 0064  
           getCode@i_295 0066                 __Hrparam 0000                 __Lrparam 0000  
           getCode@input 0062          i2LCD_String@msg 0008              i2_LCD_Clear 4A86  
               __ptext10 49D8                 __ptext11 481E                 __ptext12 4972  
               __ptext13 43E8                 __ptext14 4932                 __ptext15 47AC  
               __ptext16 4A60                 __ptext17 4A86                 __ptext18 49FE  
               __ptext19 4868                 _inputStr 0046               MSdelay@val 0017  
               isa$xinst 0000    __end_ofi2_LCD_Command 4A24               _LCD_String 473A  
i2LCD_String_xy@location 000E              getCode@temp 0068                 intlevel2 0000  
             i2MSdelay@i 0003               i2MSdelay@j 0005               i2_LCD_Char 4A60  
