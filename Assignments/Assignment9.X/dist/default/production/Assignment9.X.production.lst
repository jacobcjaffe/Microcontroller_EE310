

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Apr 29 15:43:11 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=3
    17                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=2
    33                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=2
    34                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=1
    35                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1,group=1
    36                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=3
    38                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,group=3
    39                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1,group=3
    40                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1,group=2
    41                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1,group=2
    42                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1,group=2
    43                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1,group=2
    44                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text45,global,reloc=4,class=CODE,space=0,delta=1
    60                           	psect	ivt0x8,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    64   000000                     
    65                           ; Generated 12/10/2023 GMT
    66                           ; 
    67                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution. Publication is not required when
    81                           ;        this file is used in an embedded application.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC18F47K42 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99   003FE0                     bsr             equ	16352
   100   003FE9                     fsr0            equ	16361
   101   003FEA                     fsr0h           equ	16362
   102   003FE9                     fsr0l           equ	16361
   103   003FE1                     fsr1            equ	16353
   104   003FE2                     fsr1h           equ	16354
   105   003FE1                     fsr1l           equ	16353
   106   003FD9                     fsr2            equ	16345
   107   003FDA                     fsr2h           equ	16346
   108   003FD9                     fsr2l           equ	16345
   109   003FEF                     indf0           equ	16367
   110   003FE7                     indf1           equ	16359
   111   003FDF                     indf2           equ	16351
   112   003FD2                     intcon          equ	16338
   113   0039E5                     nvmcon          equ	14821
   114   003FF9                     pcl             equ	16377
   115   003FFA                     pclath          equ	16378
   116   003FFB                     pclatu          equ	16379
   117   003FEB                     plusw0          equ	16363
   118   003FE3                     plusw1          equ	16355
   119   003FDB                     plusw2          equ	16347
   120   003FED                     postdec0        equ	16365
   121   003FE5                     postdec1        equ	16357
   122   003FDD                     postdec2        equ	16349
   123   003FEE                     postinc0        equ	16366
   124   003FE6                     postinc1        equ	16358
   125   003FDE                     postinc2        equ	16350
   126   003FEC                     preinc0         equ	16364
   127   003FE4                     preinc1         equ	16356
   128   003FDC                     preinc2         equ	16348
   129   003FF3                     prod            equ	16371
   130   003FF4                     prodh           equ	16372
   131   003FF3                     prodl           equ	16371
   132   003FD8                     status          equ	16344
   133   003FF5                     tablat          equ	16373
   134   003FF6                     tblptr          equ	16374
   135   003FF7                     tblptrh         equ	16375
   136   003FF6                     tblptrl         equ	16374
   137   003FF8                     tblptru         equ	16376
   138   003FFD                     tosl            equ	16381
   139   003FE8                     wreg            equ	16360
   140   003880                     STATUS_CSHAD    equ	14464	;# 
   141   003881                     WREG_CSHAD      equ	14465	;# 
   142   003882                     BSR_CSHAD       equ	14466	;# 
   143   003883                     SHADCON         equ	14467	;# 
   144   003884                     STATUS_SHAD     equ	14468	;# 
   145   003885                     WREG_SHAD       equ	14469	;# 
   146   003886                     BSR_SHAD        equ	14470	;# 
   147   003887                     PCLATH_SHAD     equ	14471	;# 
   148   003888                     PCLATU_SHAD     equ	14472	;# 
   149   003889                     FSR0SH          equ	14473	;# 
   150   003889                     FSR0L_SHAD      equ	14473	;# 
   151   00388A                     FSR0H_SHAD      equ	14474	;# 
   152   00388B                     FSR1SH          equ	14475	;# 
   153   00388B                     FSR1L_SHAD      equ	14475	;# 
   154   00388C                     FSR1H_SHAD      equ	14476	;# 
   155   00388D                     FSR2SH          equ	14477	;# 
   156   00388D                     FSR2L_SHAD      equ	14477	;# 
   157   00388E                     FSR2H_SHAD      equ	14478	;# 
   158   00388F                     PRODSH          equ	14479	;# 
   159   00388F                     PRODL_SHAD      equ	14479	;# 
   160   003890                     PRODH_SHAD      equ	14480	;# 
   161   00389D                     IVTADL          equ	14493	;# 
   162   00389E                     IVTADH          equ	14494	;# 
   163   00389F                     IVTADU          equ	14495	;# 
   164   00395B                     WDTCON0         equ	14683	;# 
   165   00395C                     WDTCON1         equ	14684	;# 
   166   00395D                     WDTPSL          equ	14685	;# 
   167   00395E                     WDTPSH          equ	14686	;# 
   168   00395F                     WDTTMR          equ	14687	;# 
   169   003960                     CRCDATA         equ	14688	;# 
   170   003960                     CRCDATL         equ	14688	;# 
   171   003961                     CRCDATH         equ	14689	;# 
   172   003962                     CRCACC          equ	14690	;# 
   173   003962                     CRCACCL         equ	14690	;# 
   174   003963                     CRCACCH         equ	14691	;# 
   175   003964                     CRCSHFT         equ	14692	;# 
   176   003964                     CRCSHIFTL       equ	14692	;# 
   177   003965                     CRCSHIFTH       equ	14693	;# 
   178   003966                     CRCXOR          equ	14694	;# 
   179   003966                     CRCXORL         equ	14694	;# 
   180   003967                     CRCXORH         equ	14695	;# 
   181   003968                     CRCCON0         equ	14696	;# 
   182   003969                     CRCCON1         equ	14697	;# 
   183   003976                     SCANLADR        equ	14710	;# 
   184   003976                     SCANLADRL       equ	14710	;# 
   185   003977                     SCANLADRH       equ	14711	;# 
   186   003978                     SCANLADRU       equ	14712	;# 
   187   003979                     SCANHADR        equ	14713	;# 
   188   003979                     SCANHADRL       equ	14713	;# 
   189   00397A                     SCANHADRH       equ	14714	;# 
   190   00397B                     SCANHADRU       equ	14715	;# 
   191   00397C                     SCANCON0        equ	14716	;# 
   192   00397D                     SCANTRIG        equ	14717	;# 
   193   003980                     IPR0            equ	14720	;# 
   194   003981                     IPR1            equ	14721	;# 
   195   003982                     IPR2            equ	14722	;# 
   196   003983                     IPR3            equ	14723	;# 
   197   003984                     IPR4            equ	14724	;# 
   198   003985                     IPR5            equ	14725	;# 
   199   003986                     IPR6            equ	14726	;# 
   200   003987                     IPR7            equ	14727	;# 
   201   003988                     IPR8            equ	14728	;# 
   202   003989                     IPR9            equ	14729	;# 
   203   00398A                     IPR10           equ	14730	;# 
   204   003990                     PIE0            equ	14736	;# 
   205   003991                     PIE1            equ	14737	;# 
   206   003992                     PIE2            equ	14738	;# 
   207   003993                     PIE3            equ	14739	;# 
   208   003994                     PIE4            equ	14740	;# 
   209   003995                     PIE5            equ	14741	;# 
   210   003996                     PIE6            equ	14742	;# 
   211   003997                     PIE7            equ	14743	;# 
   212   003998                     PIE8            equ	14744	;# 
   213   003999                     PIE9            equ	14745	;# 
   214   00399A                     PIE10           equ	14746	;# 
   215   0039A0                     PIR0            equ	14752	;# 
   216   0039A1                     PIR1            equ	14753	;# 
   217   0039A2                     PIR2            equ	14754	;# 
   218   0039A3                     PIR3            equ	14755	;# 
   219   0039A4                     PIR4            equ	14756	;# 
   220   0039A5                     PIR5            equ	14757	;# 
   221   0039A6                     PIR6            equ	14758	;# 
   222   0039A7                     PIR7            equ	14759	;# 
   223   0039A8                     PIR8            equ	14760	;# 
   224   0039A9                     PIR9            equ	14761	;# 
   225   0039AA                     PIR10           equ	14762	;# 
   226   0039C0                     PMD0            equ	14784	;# 
   227   0039C1                     PMD1            equ	14785	;# 
   228   0039C2                     PMD2            equ	14786	;# 
   229   0039C3                     PMD3            equ	14787	;# 
   230   0039C4                     PMD4            equ	14788	;# 
   231   0039C5                     PMD5            equ	14789	;# 
   232   0039C6                     PMD6            equ	14790	;# 
   233   0039C7                     PMD7            equ	14791	;# 
   234   0039D0                     BORCON          equ	14800	;# 
   235   0039D1                     VREGCON         equ	14801	;# 
   236   0039D8                     CPUDOZE         equ	14808	;# 
   237   0039D9                     OSCCON1         equ	14809	;# 
   238   0039DA                     OSCCON2         equ	14810	;# 
   239   0039DB                     OSCCON3         equ	14811	;# 
   240   0039DC                     OSCSTAT         equ	14812	;# 
   241   0039DC                     OSCSTAT1        equ	14812	;# 
   242   0039DD                     OSCEN           equ	14813	;# 
   243   0039DE                     OSCTUNE         equ	14814	;# 
   244   0039DF                     OSCFRQ          equ	14815	;# 
   245   0039E0                     NVMADRL         equ	14816	;# 
   246   0039E1                     NVMADRH         equ	14817	;# 
   247   0039E3                     NVMDAT          equ	14819	;# 
   248   0039E5                     NVMCON1         equ	14821	;# 
   249   0039E6                     NVMCON2         equ	14822	;# 
   250   0039EF                     PRLOCK          equ	14831	;# 
   251   0039F1                     ISRPR           equ	14833	;# 
   252   0039F2                     MAINPR          equ	14834	;# 
   253   0039F3                     DMA1PR          equ	14835	;# 
   254   0039F4                     DMA2PR          equ	14836	;# 
   255   0039F7                     SCANPR          equ	14839	;# 
   256   003A00                     RA0PPS          equ	14848	;# 
   257   003A01                     RA1PPS          equ	14849	;# 
   258   003A02                     RA2PPS          equ	14850	;# 
   259   003A03                     RA3PPS          equ	14851	;# 
   260   003A04                     RA4PPS          equ	14852	;# 
   261   003A05                     RA5PPS          equ	14853	;# 
   262   003A06                     RA6PPS          equ	14854	;# 
   263   003A07                     RA7PPS          equ	14855	;# 
   264   003A08                     RB0PPS          equ	14856	;# 
   265   003A09                     RB1PPS          equ	14857	;# 
   266   003A0A                     RB2PPS          equ	14858	;# 
   267   003A0B                     RB3PPS          equ	14859	;# 
   268   003A0C                     RB4PPS          equ	14860	;# 
   269   003A0D                     RB5PPS          equ	14861	;# 
   270   003A0E                     RB6PPS          equ	14862	;# 
   271   003A0F                     RB7PPS          equ	14863	;# 
   272   003A10                     RC0PPS          equ	14864	;# 
   273   003A11                     RC1PPS          equ	14865	;# 
   274   003A12                     RC2PPS          equ	14866	;# 
   275   003A13                     RC3PPS          equ	14867	;# 
   276   003A14                     RC4PPS          equ	14868	;# 
   277   003A15                     RC5PPS          equ	14869	;# 
   278   003A16                     RC6PPS          equ	14870	;# 
   279   003A17                     RC7PPS          equ	14871	;# 
   280   003A18                     RD0PPS          equ	14872	;# 
   281   003A19                     RD1PPS          equ	14873	;# 
   282   003A1A                     RD2PPS          equ	14874	;# 
   283   003A1B                     RD3PPS          equ	14875	;# 
   284   003A1C                     RD4PPS          equ	14876	;# 
   285   003A1D                     RD5PPS          equ	14877	;# 
   286   003A1E                     RD6PPS          equ	14878	;# 
   287   003A1F                     RD7PPS          equ	14879	;# 
   288   003A20                     RE0PPS          equ	14880	;# 
   289   003A21                     RE1PPS          equ	14881	;# 
   290   003A22                     RE2PPS          equ	14882	;# 
   291   003A40                     ANSELA          equ	14912	;# 
   292   003A41                     WPUA            equ	14913	;# 
   293   003A42                     ODCONA          equ	14914	;# 
   294   003A43                     SLRCONA         equ	14915	;# 
   295   003A44                     INLVLA          equ	14916	;# 
   296   003A45                     IOCAP           equ	14917	;# 
   297   003A46                     IOCAN           equ	14918	;# 
   298   003A47                     IOCAF           equ	14919	;# 
   299   003A50                     ANSELB          equ	14928	;# 
   300   003A51                     WPUB            equ	14929	;# 
   301   003A52                     ODCONB          equ	14930	;# 
   302   003A53                     SLRCONB         equ	14931	;# 
   303   003A54                     INLVLB          equ	14932	;# 
   304   003A55                     IOCBP           equ	14933	;# 
   305   003A56                     IOCBN           equ	14934	;# 
   306   003A57                     IOCBF           equ	14935	;# 
   307   003A5A                     RB1I2C          equ	14938	;# 
   308   003A5B                     RB2I2C          equ	14939	;# 
   309   003A60                     ANSELC          equ	14944	;# 
   310   003A61                     WPUC            equ	14945	;# 
   311   003A62                     ODCONC          equ	14946	;# 
   312   003A63                     SLRCONC         equ	14947	;# 
   313   003A64                     INLVLC          equ	14948	;# 
   314   003A65                     IOCCP           equ	14949	;# 
   315   003A66                     IOCCN           equ	14950	;# 
   316   003A67                     IOCCF           equ	14951	;# 
   317   003A6A                     RC3I2C          equ	14954	;# 
   318   003A6B                     RC4I2C          equ	14955	;# 
   319   003A70                     ANSELD          equ	14960	;# 
   320   003A71                     WPUD            equ	14961	;# 
   321   003A72                     ODCOND          equ	14962	;# 
   322   003A73                     SLRCOND         equ	14963	;# 
   323   003A74                     INLVLD          equ	14964	;# 
   324   003A7A                     RD0I2C          equ	14970	;# 
   325   003A7B                     RD1I2C          equ	14971	;# 
   326   003A80                     ANSELE          equ	14976	;# 
   327   003A81                     WPUE            equ	14977	;# 
   328   003A82                     ODCONE          equ	14978	;# 
   329   003A83                     SLRCONE         equ	14979	;# 
   330   003A84                     INLVLE          equ	14980	;# 
   331   003A85                     IOCEP           equ	14981	;# 
   332   003A86                     IOCEN           equ	14982	;# 
   333   003A87                     IOCEF           equ	14983	;# 
   334   003ABF                     PPSLOCK         equ	15039	;# 
   335   003AC0                     INT0PPS         equ	15040	;# 
   336   003AC1                     INT1PPS         equ	15041	;# 
   337   003AC2                     INT2PPS         equ	15042	;# 
   338   003AC3                     T0CKIPPS        equ	15043	;# 
   339   003AC4                     T1CKIPPS        equ	15044	;# 
   340   003AC5                     T1GPPS          equ	15045	;# 
   341   003AC6                     T3CKIPPS        equ	15046	;# 
   342   003AC7                     T3GPPS          equ	15047	;# 
   343   003AC8                     T5CKIPPS        equ	15048	;# 
   344   003AC9                     T5GPPS          equ	15049	;# 
   345   003ACA                     T2INPPS         equ	15050	;# 
   346   003ACB                     T4INPPS         equ	15051	;# 
   347   003ACC                     T6INPPS         equ	15052	;# 
   348   003ACD                     CCP1PPS         equ	15053	;# 
   349   003ACE                     CCP2PPS         equ	15054	;# 
   350   003ACF                     CCP3PPS         equ	15055	;# 
   351   003AD0                     CCP4PPS         equ	15056	;# 
   352   003AD1                     SMT1WINPPS      equ	15057	;# 
   353   003AD2                     SMT1SIGPPS      equ	15058	;# 
   354   003AD3                     CWG1INPPS       equ	15059	;# 
   355   003AD4                     CWG2INPPS       equ	15060	;# 
   356   003AD5                     CWG3INPPS       equ	15061	;# 
   357   003AD6                     MD1CARLPPS      equ	15062	;# 
   358   003AD7                     MD1CARHPPS      equ	15063	;# 
   359   003AD8                     MD1SRCPPS       equ	15064	;# 
   360   003AD9                     CLCIN0PPS       equ	15065	;# 
   361   003ADA                     CLCIN1PPS       equ	15066	;# 
   362   003ADB                     CLCIN2PPS       equ	15067	;# 
   363   003ADC                     CLCIN3PPS       equ	15068	;# 
   364   003ADD                     ADACTPPS        equ	15069	;# 
   365   003ADE                     SPI1SCKPPS      equ	15070	;# 
   366   003ADF                     SPI1SDIPPS      equ	15071	;# 
   367   003AE0                     SPI1SSPPS       equ	15072	;# 
   368   003AE1                     I2C1SCLPPS      equ	15073	;# 
   369   003AE2                     I2C1SDAPPS      equ	15074	;# 
   370   003AE3                     I2C2SCLPPS      equ	15075	;# 
   371   003AE4                     I2C2SDAPPS      equ	15076	;# 
   372   003AE5                     U1RXPPS         equ	15077	;# 
   373   003AE6                     U1CTSPPS        equ	15078	;# 
   374   003AE8                     U2RXPPS         equ	15080	;# 
   375   003AE9                     U2CTSPPS        equ	15081	;# 
   376   003BC9                     DMA2BUF         equ	15305	;# 
   377   003BCA                     DMA2DCNT        equ	15306	;# 
   378   003BCA                     DMA2DCNTL       equ	15306	;# 
   379   003BCB                     DMA2DCNTH       equ	15307	;# 
   380   003BCC                     DMA2DPTR        equ	15308	;# 
   381   003BCC                     DMA2DPTRL       equ	15308	;# 
   382   003BCD                     DMA2DPTRH       equ	15309	;# 
   383   003BCE                     DMA2DSZ         equ	15310	;# 
   384   003BCE                     DMA2DSZL        equ	15310	;# 
   385   003BCF                     DMA2DSZH        equ	15311	;# 
   386   003BD0                     DMA2DSA         equ	15312	;# 
   387   003BD0                     DMA2DSAL        equ	15312	;# 
   388   003BD1                     DMA2DSAH        equ	15313	;# 
   389   003BD2                     DMA2SCNT        equ	15314	;# 
   390   003BD2                     DMA2SCNTL       equ	15314	;# 
   391   003BD3                     DMA2SCNTH       equ	15315	;# 
   392   003BD4                     DMA2SPTR        equ	15316	;# 
   393   003BD4                     DMA2SPTRL       equ	15316	;# 
   394   003BD5                     DMA2SPTRH       equ	15317	;# 
   395   003BD6                     DMA2SPTRU       equ	15318	;# 
   396   003BD7                     DMA2SSZ         equ	15319	;# 
   397   003BD7                     DMA2SSZL        equ	15319	;# 
   398   003BD8                     DMA2SSZH        equ	15320	;# 
   399   003BD9                     DMA2SSA         equ	15321	;# 
   400   003BD9                     DMA2SSAL        equ	15321	;# 
   401   003BDA                     DMA2SSAH        equ	15322	;# 
   402   003BDB                     DMA2SSAU        equ	15323	;# 
   403   003BDC                     DMA2CON0        equ	15324	;# 
   404   003BDD                     DMA2CON1        equ	15325	;# 
   405   003BDE                     DMA2AIRQ        equ	15326	;# 
   406   003BDF                     DMA2SIRQ        equ	15327	;# 
   407   003BE9                     DMA1BUF         equ	15337	;# 
   408   003BEA                     DMA1DCNT        equ	15338	;# 
   409   003BEA                     DMA1DCNTL       equ	15338	;# 
   410   003BEB                     DMA1DCNTH       equ	15339	;# 
   411   003BEC                     DMA1DPTR        equ	15340	;# 
   412   003BEC                     DMA1DPTRL       equ	15340	;# 
   413   003BED                     DMA1DPTRH       equ	15341	;# 
   414   003BEE                     DMA1DSZ         equ	15342	;# 
   415   003BEE                     DMA1DSZL        equ	15342	;# 
   416   003BEF                     DMA1DSZH        equ	15343	;# 
   417   003BF0                     DMA1DSA         equ	15344	;# 
   418   003BF0                     DMA1DSAL        equ	15344	;# 
   419   003BF1                     DMA1DSAH        equ	15345	;# 
   420   003BF2                     DMA1SCNT        equ	15346	;# 
   421   003BF2                     DMA1SCNTL       equ	15346	;# 
   422   003BF3                     DMA1SCNTH       equ	15347	;# 
   423   003BF4                     DMA1SPTR        equ	15348	;# 
   424   003BF4                     DMA1SPTRL       equ	15348	;# 
   425   003BF5                     DMA1SPTRH       equ	15349	;# 
   426   003BF6                     DMA1SPTRU       equ	15350	;# 
   427   003BF7                     DMA1SSZ         equ	15351	;# 
   428   003BF7                     DMA1SSZL        equ	15351	;# 
   429   003BF8                     DMA1SSZH        equ	15352	;# 
   430   003BF9                     DMA1SSA         equ	15353	;# 
   431   003BF9                     DMA1SSAL        equ	15353	;# 
   432   003BFA                     DMA1SSAH        equ	15354	;# 
   433   003BFB                     DMA1SSAU        equ	15355	;# 
   434   003BFC                     DMA1CON0        equ	15356	;# 
   435   003BFD                     DMA1CON1        equ	15357	;# 
   436   003BFE                     DMA1AIRQ        equ	15358	;# 
   437   003BFF                     DMA1SIRQ        equ	15359	;# 
   438   003C56                     CLC4CON         equ	15446	;# 
   439   003C57                     CLC4POL         equ	15447	;# 
   440   003C58                     CLC4SEL0        equ	15448	;# 
   441   003C59                     CLC4SEL1        equ	15449	;# 
   442   003C5A                     CLC4SEL2        equ	15450	;# 
   443   003C5B                     CLC4SEL3        equ	15451	;# 
   444   003C5C                     CLC4GLS0        equ	15452	;# 
   445   003C5D                     CLC4GLS1        equ	15453	;# 
   446   003C5E                     CLC4GLS2        equ	15454	;# 
   447   003C5F                     CLC4GLS3        equ	15455	;# 
   448   003C60                     CLC3CON         equ	15456	;# 
   449   003C61                     CLC3POL         equ	15457	;# 
   450   003C62                     CLC3SEL0        equ	15458	;# 
   451   003C63                     CLC3SEL1        equ	15459	;# 
   452   003C64                     CLC3SEL2        equ	15460	;# 
   453   003C65                     CLC3SEL3        equ	15461	;# 
   454   003C66                     CLC3GLS0        equ	15462	;# 
   455   003C67                     CLC3GLS1        equ	15463	;# 
   456   003C68                     CLC3GLS2        equ	15464	;# 
   457   003C69                     CLC3GLS3        equ	15465	;# 
   458   003C6A                     CLC2CON         equ	15466	;# 
   459   003C6B                     CLC2POL         equ	15467	;# 
   460   003C6C                     CLC2SEL0        equ	15468	;# 
   461   003C6D                     CLC2SEL1        equ	15469	;# 
   462   003C6E                     CLC2SEL2        equ	15470	;# 
   463   003C6F                     CLC2SEL3        equ	15471	;# 
   464   003C70                     CLC2GLS0        equ	15472	;# 
   465   003C71                     CLC2GLS1        equ	15473	;# 
   466   003C72                     CLC2GLS2        equ	15474	;# 
   467   003C73                     CLC2GLS3        equ	15475	;# 
   468   003C74                     CLC1CON         equ	15476	;# 
   469   003C75                     CLC1POL         equ	15477	;# 
   470   003C76                     CLC1SEL0        equ	15478	;# 
   471   003C77                     CLC1SEL1        equ	15479	;# 
   472   003C78                     CLC1SEL2        equ	15480	;# 
   473   003C79                     CLC1SEL3        equ	15481	;# 
   474   003C7A                     CLC1GLS0        equ	15482	;# 
   475   003C7B                     CLC1GLS1        equ	15483	;# 
   476   003C7C                     CLC1GLS2        equ	15484	;# 
   477   003C7D                     CLC1GLS3        equ	15485	;# 
   478   003C7E                     CLCDATA0        equ	15486	;# 
   479   003CE5                     CLKRCON         equ	15589	;# 
   480   003CE6                     CLKRCLK         equ	15590	;# 
   481   003CFA                     MD1CON0         equ	15610	;# 
   482   003CFB                     MD1CON1         equ	15611	;# 
   483   003CFC                     MD1SRC          equ	15612	;# 
   484   003CFD                     MD1CARL         equ	15613	;# 
   485   003CFE                     MD1CARH         equ	15614	;# 
   486   003D10                     SPI1RXB         equ	15632	;# 
   487   003D11                     SPI1TXB         equ	15633	;# 
   488   003D12                     SPI1TCNT        equ	15634	;# 
   489   003D12                     SPI1TCNTL       equ	15634	;# 
   490   003D13                     SPI1TCNTH       equ	15635	;# 
   491   003D14                     SPI1CON0        equ	15636	;# 
   492   003D15                     SPI1CON1        equ	15637	;# 
   493   003D16                     SPI1CON2        equ	15638	;# 
   494   003D17                     SPI1STATUS      equ	15639	;# 
   495   003D18                     SPI1TWIDTH      equ	15640	;# 
   496   003D19                     SPI1BAUD        equ	15641	;# 
   497   003D1A                     SPI1INTF        equ	15642	;# 
   498   003D1B                     SPI1INTE        equ	15643	;# 
   499   003D1C                     SPI1CLK         equ	15644	;# 
   500   003D54                     I2C2RXB         equ	15700	;# 
   501   003D55                     I2C2TXB         equ	15701	;# 
   502   003D56                     I2C2CNT         equ	15702	;# 
   503   003D57                     I2C2ADB0        equ	15703	;# 
   504   003D58                     I2C2ADB1        equ	15704	;# 
   505   003D59                     I2C2ADR0        equ	15705	;# 
   506   003D5A                     I2C2ADR1        equ	15706	;# 
   507   003D5B                     I2C2ADR2        equ	15707	;# 
   508   003D5C                     I2C2ADR3        equ	15708	;# 
   509   003D5D                     I2C2CON0        equ	15709	;# 
   510   003D5E                     I2C2CON1        equ	15710	;# 
   511   003D5F                     I2C2CON2        equ	15711	;# 
   512   003D60                     I2C2ERR         equ	15712	;# 
   513   003D61                     I2C2STAT0       equ	15713	;# 
   514   003D62                     I2C2STAT1       equ	15714	;# 
   515   003D63                     I2C2PIR         equ	15715	;# 
   516   003D64                     I2C2PIE         equ	15716	;# 
   517   003D65                     I2C2CLK         equ	15717	;# 
   518   003D66                     I2C2BTO         equ	15718	;# 
   519   003D6A                     I2C1RXB         equ	15722	;# 
   520   003D6B                     I2C1TXB         equ	15723	;# 
   521   003D6C                     I2C1CNT         equ	15724	;# 
   522   003D6D                     I2C1ADB0        equ	15725	;# 
   523   003D6E                     I2C1ADB1        equ	15726	;# 
   524   003D6F                     I2C1ADR0        equ	15727	;# 
   525   003D70                     I2C1ADR1        equ	15728	;# 
   526   003D71                     I2C1ADR2        equ	15729	;# 
   527   003D72                     I2C1ADR3        equ	15730	;# 
   528   003D73                     I2C1CON0        equ	15731	;# 
   529   003D74                     I2C1CON1        equ	15732	;# 
   530   003D75                     I2C1CON2        equ	15733	;# 
   531   003D76                     I2C1ERR         equ	15734	;# 
   532   003D77                     I2C1STAT0       equ	15735	;# 
   533   003D78                     I2C1STAT1       equ	15736	;# 
   534   003D79                     I2C1PIR         equ	15737	;# 
   535   003D7A                     I2C1PIE         equ	15738	;# 
   536   003D7B                     I2C1CLK         equ	15739	;# 
   537   003D7C                     I2C1BTO         equ	15740	;# 
   538   003DD0                     U2RXB           equ	15824	;# 
   539   003DD0                     U2RXBL          equ	15824	;# 
   540   003DD2                     U2TXB           equ	15826	;# 
   541   003DD2                     U2TXBL          equ	15826	;# 
   542   003DD4                     U2P1            equ	15828	;# 
   543   003DD4                     U2P1L           equ	15828	;# 
   544   003DD6                     U2P2            equ	15830	;# 
   545   003DD6                     U2P2L           equ	15830	;# 
   546   003DD8                     U2P3            equ	15832	;# 
   547   003DD8                     U2P3L           equ	15832	;# 
   548   003DDA                     U2CON0          equ	15834	;# 
   549   003DDB                     U2CON1          equ	15835	;# 
   550   003DDC                     U2CON2          equ	15836	;# 
   551   003DDD                     U2BRG           equ	15837	;# 
   552   003DDD                     U2BRGL          equ	15837	;# 
   553   003DDE                     U2BRGH          equ	15838	;# 
   554   003DDF                     U2FIFO          equ	15839	;# 
   555   003DE0                     U2UIR           equ	15840	;# 
   556   003DE1                     U2ERRIR         equ	15841	;# 
   557   003DE2                     U2ERRIE         equ	15842	;# 
   558   003DE8                     U1RXB           equ	15848	;# 
   559   003DE8                     U1RXBL          equ	15848	;# 
   560   003DE9                     U1RXCHK         equ	15849	;# 
   561   003DEA                     U1TXB           equ	15850	;# 
   562   003DEA                     U1TXBL          equ	15850	;# 
   563   003DEB                     U1TXCHK         equ	15851	;# 
   564   003DEC                     U1P1            equ	15852	;# 
   565   003DEC                     U1P1L           equ	15852	;# 
   566   003DED                     U1P1H           equ	15853	;# 
   567   003DEE                     U1P2            equ	15854	;# 
   568   003DEE                     U1P2L           equ	15854	;# 
   569   003DEF                     U1P2H           equ	15855	;# 
   570   003DF0                     U1P3            equ	15856	;# 
   571   003DF0                     U1P3L           equ	15856	;# 
   572   003DF1                     U1P3H           equ	15857	;# 
   573   003DF2                     U1CON0          equ	15858	;# 
   574   003DF3                     U1CON1          equ	15859	;# 
   575   003DF4                     U1CON2          equ	15860	;# 
   576   003DF5                     U1BRG           equ	15861	;# 
   577   003DF5                     U1BRGL          equ	15861	;# 
   578   003DF6                     U1BRGH          equ	15862	;# 
   579   003DF7                     U1FIFO          equ	15863	;# 
   580   003DF8                     U1UIR           equ	15864	;# 
   581   003DF9                     U1ERRIR         equ	15865	;# 
   582   003DFA                     U1ERRIE         equ	15866	;# 
   583   003E9C                     DAC1CON1        equ	16028	;# 
   584   003E9E                     DAC1CON0        equ	16030	;# 
   585   003EB8                     CM2CON0         equ	16056	;# 
   586   003EB9                     CM2CON1         equ	16057	;# 
   587   003EBA                     CM2NCH          equ	16058	;# 
   588   003EBB                     CM2PCH          equ	16059	;# 
   589   003EBC                     CM1CON0         equ	16060	;# 
   590   003EBD                     CM1CON1         equ	16061	;# 
   591   003EBE                     CM1NCH          equ	16062	;# 
   592   003EBF                     CM1PCH          equ	16063	;# 
   593   003EC0                     CMOUT           equ	16064	;# 
   594   003EC1                     FVRCON          equ	16065	;# 
   595   003EC3                     ZCDCON          equ	16067	;# 
   596   003EC9                     HLVDCON0        equ	16073	;# 
   597   003ECA                     HLVDCON1        equ	16074	;# 
   598   003ED7                     ADCP            equ	16087	;# 
   599   003EDE                     ADLTH           equ	16094	;# 
   600   003EDE                     ADLTHL          equ	16094	;# 
   601   003EDF                     ADLTHH          equ	16095	;# 
   602   003EE0                     ADUTH           equ	16096	;# 
   603   003EE0                     ADUTHL          equ	16096	;# 
   604   003EE1                     ADUTHH          equ	16097	;# 
   605   003EE2                     ADERR           equ	16098	;# 
   606   003EE2                     ADERRL          equ	16098	;# 
   607   003EE3                     ADERRH          equ	16099	;# 
   608   003EE4                     ADSTPT          equ	16100	;# 
   609   003EE4                     ADSTPTL         equ	16100	;# 
   610   003EE5                     ADSTPTH         equ	16101	;# 
   611   003EE6                     ADFLTR          equ	16102	;# 
   612   003EE6                     ADFLTRL         equ	16102	;# 
   613   003EE7                     ADFLTRH         equ	16103	;# 
   614   003EE8                     ADACC           equ	16104	;# 
   615   003EE8                     ADACCL          equ	16104	;# 
   616   003EE9                     ADACCH          equ	16105	;# 
   617   003EEA                     ADACCU          equ	16106	;# 
   618   003EEB                     ADCNT           equ	16107	;# 
   619   003EEC                     ADRPT           equ	16108	;# 
   620   003EED                     ADPREV          equ	16109	;# 
   621   003EED                     ADPREVL         equ	16109	;# 
   622   003EEE                     ADPREVH         equ	16110	;# 
   623   003EEF                     ADRES           equ	16111	;# 
   624   003EEF                     ADRESL          equ	16111	;# 
   625   003EF0                     ADRESH          equ	16112	;# 
   626   003EF1                     ADPCH           equ	16113	;# 
   627   003EF3                     ADACQ           equ	16115	;# 
   628   003EF3                     ADACQL          equ	16115	;# 
   629   003EF4                     ADACQH          equ	16116	;# 
   630   003EF5                     ADCAP           equ	16117	;# 
   631   003EF6                     ADPRE           equ	16118	;# 
   632   003EF6                     ADPREL          equ	16118	;# 
   633   003EF7                     ADPREH          equ	16119	;# 
   634   003EF8                     ADCON0          equ	16120	;# 
   635   003EF9                     ADCON1          equ	16121	;# 
   636   003EFA                     ADCON2          equ	16122	;# 
   637   003EFB                     ADCON3          equ	16123	;# 
   638   003EFC                     ADSTAT          equ	16124	;# 
   639   003EFD                     ADREF           equ	16125	;# 
   640   003EFE                     ADACT           equ	16126	;# 
   641   003EFF                     ADCLK           equ	16127	;# 
   642   003F12                     SMT1TMR         equ	16146	;# 
   643   003F12                     SMT1TMRL        equ	16146	;# 
   644   003F13                     SMT1TMRH        equ	16147	;# 
   645   003F14                     SMT1TMRU        equ	16148	;# 
   646   003F15                     SMT1CPR         equ	16149	;# 
   647   003F15                     SMT1CPRL        equ	16149	;# 
   648   003F16                     SMT1CPRH        equ	16150	;# 
   649   003F17                     SMT1CPRU        equ	16151	;# 
   650   003F18                     SMT1CPW         equ	16152	;# 
   651   003F18                     SMT1CPWL        equ	16152	;# 
   652   003F19                     SMT1CPWH        equ	16153	;# 
   653   003F1A                     SMT1CPWU        equ	16154	;# 
   654   003F1B                     SMT1PR          equ	16155	;# 
   655   003F1B                     SMT1PRL         equ	16155	;# 
   656   003F1C                     SMT1PRH         equ	16156	;# 
   657   003F1D                     SMT1PRU         equ	16157	;# 
   658   003F1E                     SMT1CON0        equ	16158	;# 
   659   003F1F                     SMT1CON1        equ	16159	;# 
   660   003F20                     SMT1STAT        equ	16160	;# 
   661   003F21                     SMT1CLK         equ	16161	;# 
   662   003F22                     SMT1SIG         equ	16162	;# 
   663   003F23                     SMT1WIN         equ	16163	;# 
   664   003F38                     NCO1ACC         equ	16184	;# 
   665   003F38                     NCO1ACCL        equ	16184	;# 
   666   003F39                     NCO1ACCH        equ	16185	;# 
   667   003F3A                     NCO1ACCU        equ	16186	;# 
   668   003F3B                     NCO1INC         equ	16187	;# 
   669   003F3B                     NCO1INCL        equ	16187	;# 
   670   003F3C                     NCO1INCH        equ	16188	;# 
   671   003F3D                     NCO1INCU        equ	16189	;# 
   672   003F3E                     NCO1CON         equ	16190	;# 
   673   003F3F                     NCO1CLK         equ	16191	;# 
   674   003F40                     CWG3CLK         equ	16192	;# 
   675   003F40                     CWG3CLKCON      equ	16192	;# 
   676   003F41                     CWG3ISM         equ	16193	;# 
   677   003F41                     CWG3DAT         equ	16193	;# 
   678   003F42                     CWG3DBR         equ	16194	;# 
   679   003F43                     CWG3DBF         equ	16195	;# 
   680   003F44                     CWG3CON0        equ	16196	;# 
   681   003F45                     CWG3CON1        equ	16197	;# 
   682   003F46                     CWG3AS0         equ	16198	;# 
   683   003F47                     CWG3AS1         equ	16199	;# 
   684   003F48                     CWG3STR         equ	16200	;# 
   685   003F49                     CWG2CLK         equ	16201	;# 
   686   003F49                     CWG2CLKCON      equ	16201	;# 
   687   003F4A                     CWG2ISM         equ	16202	;# 
   688   003F4A                     CWG2DAT         equ	16202	;# 
   689   003F4B                     CWG2DBR         equ	16203	;# 
   690   003F4C                     CWG2DBF         equ	16204	;# 
   691   003F4D                     CWG2CON0        equ	16205	;# 
   692   003F4E                     CWG2CON1        equ	16206	;# 
   693   003F4F                     CWG2AS0         equ	16207	;# 
   694   003F50                     CWG2AS1         equ	16208	;# 
   695   003F51                     CWG2STR         equ	16209	;# 
   696   003F52                     CWG1CLK         equ	16210	;# 
   697   003F52                     CWG1CLKCON      equ	16210	;# 
   698   003F53                     CWG1ISM         equ	16211	;# 
   699   003F53                     CWG1DAT         equ	16211	;# 
   700   003F54                     CWG1DBR         equ	16212	;# 
   701   003F55                     CWG1DBF         equ	16213	;# 
   702   003F56                     CWG1CON0        equ	16214	;# 
   703   003F57                     CWG1CON1        equ	16215	;# 
   704   003F58                     CWG1AS0         equ	16216	;# 
   705   003F59                     CWG1AS1         equ	16217	;# 
   706   003F5A                     CWG1STR         equ	16218	;# 
   707   003F5E                     CCPTMRS0        equ	16222	;# 
   708   003F5F                     CCPTMRS1        equ	16223	;# 
   709   003F60                     PWM8DC          equ	16224	;# 
   710   003F60                     PWM8DCL         equ	16224	;# 
   711   003F61                     PWM8DCH         equ	16225	;# 
   712   003F62                     PWM8CON         equ	16226	;# 
   713   003F64                     PWM7DC          equ	16228	;# 
   714   003F64                     PWM7DCL         equ	16228	;# 
   715   003F65                     PWM7DCH         equ	16229	;# 
   716   003F66                     PWM7CON         equ	16230	;# 
   717   003F68                     PWM6DC          equ	16232	;# 
   718   003F68                     PWM6DCL         equ	16232	;# 
   719   003F69                     PWM6DCH         equ	16233	;# 
   720   003F6A                     PWM6CON         equ	16234	;# 
   721   003F6C                     PWM5DC          equ	16236	;# 
   722   003F6C                     PWM5DCL         equ	16236	;# 
   723   003F6D                     PWM5DCH         equ	16237	;# 
   724   003F6E                     PWM5CON         equ	16238	;# 
   725   003F70                     CCPR4           equ	16240	;# 
   726   003F70                     CCPR4L          equ	16240	;# 
   727   003F71                     CCPR4H          equ	16241	;# 
   728   003F72                     CCP4CON         equ	16242	;# 
   729   003F73                     CCP4CAP         equ	16243	;# 
   730   003F74                     CCPR3           equ	16244	;# 
   731   003F74                     CCPR3L          equ	16244	;# 
   732   003F75                     CCPR3H          equ	16245	;# 
   733   003F76                     CCP3CON         equ	16246	;# 
   734   003F77                     CCP3CAP         equ	16247	;# 
   735   003F78                     CCPR2           equ	16248	;# 
   736   003F78                     CCPR2L          equ	16248	;# 
   737   003F79                     CCPR2H          equ	16249	;# 
   738   003F7A                     CCP2CON         equ	16250	;# 
   739   003F7B                     CCP2CAP         equ	16251	;# 
   740   003F7C                     CCPR1           equ	16252	;# 
   741   003F7C                     CCPR1L          equ	16252	;# 
   742   003F7D                     CCPR1H          equ	16253	;# 
   743   003F7E                     CCP1CON         equ	16254	;# 
   744   003F7F                     CCP1CAP         equ	16255	;# 
   745   003F92                     T6TMR           equ	16274	;# 
   746   003F92                     TMR6            equ	16274	;# 
   747   003F93                     T6PR            equ	16275	;# 
   748   003F93                     PR6             equ	16275	;# 
   749   003F94                     T6CON           equ	16276	;# 
   750   003F95                     T6HLT           equ	16277	;# 
   751   003F96                     T6CLKCON        equ	16278	;# 
   752   003F96                     T6CLK           equ	16278	;# 
   753   003F97                     T6RST           equ	16279	;# 
   754   003F98                     TMR5            equ	16280	;# 
   755   003F98                     TMR5L           equ	16280	;# 
   756   003F99                     TMR5H           equ	16281	;# 
   757   003F9A                     T5CON           equ	16282	;# 
   758   003F9A                     TMR5CON         equ	16282	;# 
   759   003F9B                     T5GCON          equ	16283	;# 
   760   003F9B                     TMR5GCON        equ	16283	;# 
   761   003F9C                     T5GATE          equ	16284	;# 
   762   003F9C                     TMR5GATE        equ	16284	;# 
   763   003F9D                     T5CLK           equ	16285	;# 
   764   003F9D                     TMR5CLK         equ	16285	;# 
   765   003F9D                     PR5             equ	16285	;# 
   766   003F9E                     T4TMR           equ	16286	;# 
   767   003F9E                     TMR4            equ	16286	;# 
   768   003F9F                     T4PR            equ	16287	;# 
   769   003F9F                     PR4             equ	16287	;# 
   770   003FA0                     T4CON           equ	16288	;# 
   771   003FA1                     T4HLT           equ	16289	;# 
   772   003FA2                     T4CLKCON        equ	16290	;# 
   773   003FA2                     T4CLK           equ	16290	;# 
   774   003FA3                     T4RST           equ	16291	;# 
   775   003FA4                     TMR3            equ	16292	;# 
   776   003FA4                     TMR3L           equ	16292	;# 
   777   003FA5                     TMR3H           equ	16293	;# 
   778   003FA6                     T3CON           equ	16294	;# 
   779   003FA6                     TMR3CON         equ	16294	;# 
   780   003FA7                     T3GCON          equ	16295	;# 
   781   003FA7                     TMR3GCON        equ	16295	;# 
   782   003FA8                     T3GATE          equ	16296	;# 
   783   003FA8                     TMR3GATE        equ	16296	;# 
   784   003FA9                     T3CLK           equ	16297	;# 
   785   003FA9                     TMR3CLK         equ	16297	;# 
   786   003FA9                     PR3             equ	16297	;# 
   787   003FAA                     T2TMR           equ	16298	;# 
   788   003FAA                     TMR2            equ	16298	;# 
   789   003FAB                     T2PR            equ	16299	;# 
   790   003FAB                     PR2             equ	16299	;# 
   791   003FAC                     T2CON           equ	16300	;# 
   792   003FAD                     T2HLT           equ	16301	;# 
   793   003FAE                     T2CLKCON        equ	16302	;# 
   794   003FAE                     T2CLK           equ	16302	;# 
   795   003FAF                     T2RST           equ	16303	;# 
   796   003FB0                     TMR1            equ	16304	;# 
   797   003FB0                     TMR1L           equ	16304	;# 
   798   003FB1                     TMR1H           equ	16305	;# 
   799   003FB2                     T1CON           equ	16306	;# 
   800   003FB2                     TMR1CON         equ	16306	;# 
   801   003FB3                     T1GCON          equ	16307	;# 
   802   003FB3                     TMR1GCON        equ	16307	;# 
   803   003FB4                     T1GATE          equ	16308	;# 
   804   003FB4                     TMR1GATE        equ	16308	;# 
   805   003FB5                     T1CLK           equ	16309	;# 
   806   003FB5                     TMR1CLK         equ	16309	;# 
   807   003FB5                     PR1             equ	16309	;# 
   808   003FB6                     TMR0L           equ	16310	;# 
   809   003FB6                     TMR0            equ	16310	;# 
   810   003FB7                     TMR0H           equ	16311	;# 
   811   003FB7                     PR0             equ	16311	;# 
   812   003FB8                     T0CON0          equ	16312	;# 
   813   003FB9                     T0CON1          equ	16313	;# 
   814   003FBA                     LATA            equ	16314	;# 
   815   003FBB                     LATB            equ	16315	;# 
   816   003FBC                     LATC            equ	16316	;# 
   817   003FBD                     LATD            equ	16317	;# 
   818   003FBE                     LATE            equ	16318	;# 
   819   003FC2                     TRISA           equ	16322	;# 
   820   003FC3                     TRISB           equ	16323	;# 
   821   003FC4                     TRISC           equ	16324	;# 
   822   003FC5                     TRISD           equ	16325	;# 
   823   003FC6                     TRISE           equ	16326	;# 
   824   003FCA                     PORTA           equ	16330	;# 
   825   003FCB                     PORTB           equ	16331	;# 
   826   003FCC                     PORTC           equ	16332	;# 
   827   003FCD                     PORTD           equ	16333	;# 
   828   003FCE                     PORTE           equ	16334	;# 
   829   003FD2                     INTCON0         equ	16338	;# 
   830   003FD3                     INTCON1         equ	16339	;# 
   831   003FD4                     IVTLOCK         equ	16340	;# 
   832   003FD5                     IVTBASE         equ	16341	;# 
   833   003FD5                     IVTBASEL        equ	16341	;# 
   834   003FD6                     IVTBASEH        equ	16342	;# 
   835   003FD7                     IVTBASEU        equ	16343	;# 
   836   003FD8                     STATUS          equ	16344	;# 
   837   003FD9                     FSR2            equ	16345	;# 
   838   003FD9                     FSR2L           equ	16345	;# 
   839   003FDA                     FSR2H           equ	16346	;# 
   840   003FDB                     PLUSW2          equ	16347	;# 
   841   003FDC                     PREINC2         equ	16348	;# 
   842   003FDD                     POSTDEC2        equ	16349	;# 
   843   003FDE                     POSTINC2        equ	16350	;# 
   844   003FDF                     INDF2           equ	16351	;# 
   845   003FE0                     BSR             equ	16352	;# 
   846   003FE1                     FSR1            equ	16353	;# 
   847   003FE1                     FSR1L           equ	16353	;# 
   848   003FE2                     FSR1H           equ	16354	;# 
   849   003FE3                     PLUSW1          equ	16355	;# 
   850   003FE4                     PREINC1         equ	16356	;# 
   851   003FE5                     POSTDEC1        equ	16357	;# 
   852   003FE6                     POSTINC1        equ	16358	;# 
   853   003FE7                     INDF1           equ	16359	;# 
   854   003FE8                     WREG            equ	16360	;# 
   855   003FE9                     FSR0            equ	16361	;# 
   856   003FE9                     FSR0L           equ	16361	;# 
   857   003FEA                     FSR0H           equ	16362	;# 
   858   003FEB                     PLUSW0          equ	16363	;# 
   859   003FEC                     PREINC0         equ	16364	;# 
   860   003FED                     POSTDEC0        equ	16365	;# 
   861   003FEE                     POSTINC0        equ	16366	;# 
   862   003FEF                     INDF0           equ	16367	;# 
   863   003FF0                     PCON0           equ	16368	;# 
   864   003FF1                     PCON1           equ	16369	;# 
   865   003FF3                     PROD            equ	16371	;# 
   866   003FF3                     PRODL           equ	16371	;# 
   867   003FF4                     PRODH           equ	16372	;# 
   868   003FF5                     TABLAT          equ	16373	;# 
   869   003FF6                     TBLPTR          equ	16374	;# 
   870   003FF6                     TBLPTRL         equ	16374	;# 
   871   003FF7                     TBLPTRH         equ	16375	;# 
   872   003FF8                     TBLPTRU         equ	16376	;# 
   873   003FF9                     PCLAT           equ	16377	;# 
   874   003FF9                     PCL             equ	16377	;# 
   875   003FFA                     PCLATH          equ	16378	;# 
   876   003FFB                     PCLATU          equ	16379	;# 
   877   003FFC                     STKPTR          equ	16380	;# 
   878   003FFD                     TOS             equ	16381	;# 
   879   003FFD                     TOSL            equ	16381	;# 
   880   003FFE                     TOSH            equ	16382	;# 
   881   003FFF                     TOSU            equ	16383	;# 
   882                           
   883                           	psect	idataBANK0
   884   004C28                     __pidataBANK0:
   885                           	callstack 0
   886                           
   887                           ;initializer for PWM@F16999
   888   004C28  0000               	dw	0
   889   004C2A  0067               	dw	103
   890   004C2C  00CD               	dw	205
   891   004C2E  0134               	dw	308
   892   004C30  019A               	dw	410
   893   004C32  0200               	dw	512
   894   004C34  0267               	dw	615
   895   004C36  02CD               	dw	717
   896   004C38  0334               	dw	820
   897   004C3A  039A               	dw	922
   898   0039DF                     _OSCFRQ         set	14815
   899   0039DC                     _OSCSTATbits    set	14812
   900   0039A4                     _PIR4bits       set	14756
   901   003990                     _PIE0bits       set	14736
   902   003A50                     _ANSELB         set	14928
   903   003A0B                     _RB3PPS         set	14859
   904   003ABF                     _PPSLOCKbits    set	15039
   905   003ABF                     _PPSLOCK        set	15039
   906   003A61                     _WPUCbits       set	14945
   907   003A67                     _IOCCFbits      set	14951
   908   003A65                     _IOCCPbits      set	14949
   909   003A40                     _ANSELAbits     set	14912
   910   003A60                     _ANSELC         set	14944
   911   003A70                     _ANSELD         set	14960
   912   003A80                     _ANSELE         set	14976
   913   003EEF                     _ADRESL         set	16111
   914   003EF0                     _ADRESH         set	16112
   915   003EF4                     _ADACQH         set	16116
   916   003EF3                     _ADACQL         set	16115
   917   003EF7                     _ADPREH         set	16119
   918   003EF6                     _ADPREL         set	16118
   919   003EFD                     _ADREF          set	16125
   920   003EF5                     _ADCAP          set	16117
   921   003EF1                     _ADPCH          set	16113
   922   003EFF                     _ADCLK          set	16127
   923   003EF8                     _ADCON0bits     set	16120
   924   003F5E                     _CCPTMRS0bits   set	16222
   925   003FCE                     _PORTEbits      set	16334
   926   003FCB                     _PORTBbits      set	16331
   927   003FCB                     _PORTB          set	16331
   928   003FC3                     _TRISB          set	16323
   929   003F7A                     _CCP2CONbits    set	16250
   930   003F78                     _CCPR2L         set	16248
   931   003F79                     _CCPR2H         set	16249
   932   003F7A                     _CCP2CON        set	16250
   933   003FC3                     _TRISBbits      set	16323
   934   003FAB                     _PR2            set	16299
   935   003FAA                     _TMR2           set	16298
   936   003FAC                     _T2CONbits      set	16300
   937   003FAC                     _T2CON          set	16300
   938   003FAA                     _T2TMR          set	16298
   939   003FAB                     _T2PR           set	16299
   940   003FAF                     _T2RST          set	16303
   941   003FAD                     _T2HLT          set	16301
   942   003FAE                     _T2CLKCON       set	16302
   943   003FD2                     _INTCON0bits    set	16338
   944   003FC2                     _TRISAbits      set	16322
   945   003FC6                     _TRISE          set	16326
   946   003FBD                     _LATD           set	16317
   947   003FC4                     _TRISC          set	16324
   948   003FC5                     _TRISD          set	16325
   949   01FDE5                     _LATC5          set	130533
   950   01FDE4                     _LATC4          set	130532
   951   01FDE3                     _LATC3          set	130531
   952                           
   953                           	psect	smallconst
   954   002000                     __psmallconst:
   955                           	callstack 0
   956   002000  00                 	db	0
   957   002001                     
   958                           ; BSR set to: 58
   959   002001  69                 	db	105	;'i'
   960   002002  6E                 	db	110	;'n'
   961   002003  70                 	db	112	;'p'
   962   002004  75                 	db	117	;'u'
   963   002005  74                 	db	116	;'t'
   964   002006  20                 	db	32
   965   002007  76                 	db	118	;'v'
   966   002008  6F                 	db	111	;'o'
   967   002009  6C                 	db	108	;'l'
   968   00200A  74                 	db	116	;'t'
   969   00200B  61                 	db	97	;'a'
   970   00200C  67                 	db	103	;'g'
   971   00200D  65                 	db	101	;'e'
   972   00200E  3A                 	db	58	;':'
   973   00200F  00                 	db	0
   974   002010                     STR_1:
   975                           
   976                           ; BSR set to: 58
   977   002010  4A                 	db	74	;'J'
   978   002011  61                 	db	97	;'a'
   979   002012  63                 	db	99	;'c'
   980   002013  6F                 	db	111	;'o'
   981   002014  62                 	db	98	;'b'
   982   002015  00                 	db	0
   983   002016                     
   984                           ; BSR set to: 58
   985   002016  25                 	db	37
   986   002017  2E                 	db	46
   987   002018  32                 	db	50	;'2'
   988   002019  66                 	db	102	;'f'
   989   00201A  00                 	db	0
   990   00201B                     STR_7:
   991                           
   992                           ; BSR set to: 58
   993   00201B  69                 	db	105	;'i'
   994   00201C  6E                 	db	110	;'n'
   995   00201D  66                 	db	102	;'f'
   996   00201E  00                 	db	0
   997   00201F                     STR_10:
   998                           
   999                           ; BSR set to: 58
  1000   00201F  6E                 	db	110	;'n'
  1001   002020  61                 	db	97	;'a'
  1002   002021  6E                 	db	110	;'n'
  1003   002022  00                 	db	0
  1004   002023                     
  1005                           ; BSR set to: 58
  1006   002023  20                 	db	32
  1007   002024  56                 	db	86	;'V'
  1008   002025  00                 	db	0
  1009   002026                     STR_5:
  1010                           
  1011                           ; BSR set to: 58
  1012   002026  25                 	db	37
  1013   002027  64                 	db	100	;'d'
  1014   002028  00                 	db	0
  1015   00201F                     STR_11          equ	STR_10
  1016   00201F                     STR_12          equ	STR_10
  1017   00201B                     STR_8           equ	STR_7
  1018   00201B                     STR_9           equ	STR_7
  1019   002026                     STR_6           equ	STR_5
  1020   002029  00                 	db	0	; dummy byte at the end
  1021   002000                     __smallconst    set	__psmallconst
  1022   002000                     __mediumconst   set	__psmallconst
  1023   000003                     __activetblptr  equ	3
  1024                           
  1025                           ; #config settings
  1026                           
  1027                           	psect	cinit
  1028   004798                     __pcinit:
  1029                           	callstack 0
  1030   004798                     start_initialization:
  1031                           	callstack 0
  1032   004798                     __initialization:
  1033                           	callstack 0
  1034                           
  1035                           ; Initialize objects allocated to BANK0 (20 bytes)
  1036                           ; load TBLPTR registers with __pidataBANK0
  1037   004798  0E28               	movlw	low __pidataBANK0
  1038   00479A  6EF6               	movwf	tblptrl,c
  1039   00479C  0E4C               	movlw	high __pidataBANK0
  1040   00479E  6EF7               	movwf	tblptrh,c
  1041   0047A0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1042   0047A2  6EF8               	movwf	tblptru,c
  1043   0047A4  EE00  F0BB         	lfsr	0,__pdataBANK0
  1044   0047A8  EE10 F014          	lfsr	1,20
  1045   0047AC                     copy_data0:
  1046   0047AC  0009               	tblrd		*+
  1047   0047AE  006F FFD7 FFEE     	movff	tablat,postinc0
  1048   0047B4  50E5               	movf	postdec1,w,c
  1049   0047B6  50E1               	movf	fsr1l,w,c
  1050   0047B8  E1F9               	bnz	copy_data0
  1051                           
  1052                           ; Clear objects allocated to BANK1 (80 bytes)
  1053   0047BA  EE00  F100         	lfsr	0,__pbssBANK1
  1054   0047BE  0E50               	movlw	80
  1055   0047C0                     clear_0:
  1056   0047C0  6AEE               	clrf	postinc0,c
  1057   0047C2  06E8               	decf	wreg,f,c
  1058   0047C4  E1FD               	bnz	clear_0
  1059                           
  1060                           ; Clear objects allocated to BANK0 (4 bytes)
  1061   0047C6  0100               	movlb	0
  1062   0047C8  6BD2               	clrf	(__pbssBANK0+3)& (0+255),b
  1063   0047CA  6BD1               	clrf	(__pbssBANK0+2)& (0+255),b
  1064   0047CC  6BD0               	clrf	(__pbssBANK0+1)& (0+255),b
  1065   0047CE  6BCF               	clrf	__pbssBANK0& (0+255),b
  1066                           
  1067                           ; Clear objects allocated to COMRAM (9 bytes)
  1068   0047D0  EE00  F054         	lfsr	0,__pbssCOMRAM
  1069   0047D4  0E09               	movlw	9
  1070   0047D6                     clear_1:
  1071   0047D6  6AEE               	clrf	postinc0,c
  1072   0047D8  06E8               	decf	wreg,f,c
  1073   0047DA  E1FD               	bnz	clear_1
  1074                           
  1075                           ;
  1076                           ; Setup IVTBASE
  1077                           ;
  1078   003FD5                     IVTBASEL        equ	16341
  1079   003FD6                     IVTBASEH        equ	16342
  1080   003FD7                     IVTBASEU        equ	16343
  1081   0047DC  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1082   0047DE  6ED5               	movwf	213,c
  1083   0047E0  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1084   0047E2  6ED6               	movwf	214,c
  1085   0047E4  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1086   0047E6  6ED7               	movwf	215,c
  1087   0047E8                     end_of_initialization:
  1088                           	callstack 0
  1089   0047E8                     __end_of__initialization:
  1090                           	callstack 0
  1091   0047E8  0100               	movlb	0
  1092   0047EA  EFA4  F025         	goto	_main	;jump to C main() function
  1093                           
  1094                           	psect	bssCOMRAM
  1095   000054                     __pbssCOMRAM:
  1096                           	callstack 0
  1097   000054                     floorf@F521:
  1098                           	callstack 0
  1099   000054                     	ds	4
  1100   000058                     ___fpclassifyf@F465:
  1101                           	callstack 0
  1102   000058                     	ds	4
  1103   00005C                     _flags:
  1104                           	callstack 0
  1105   00005C                     	ds	1
  1106                           
  1107                           	psect	bssBANK0
  1108   0000CF                     __pbssBANK0:
  1109                           	callstack 0
  1110   0000CF                     _width:
  1111                           	callstack 0
  1112   0000CF                     	ds	2
  1113   0000D1                     _prec:
  1114                           	callstack 0
  1115   0000D1                     	ds	2
  1116                           
  1117                           	psect	dataBANK0
  1118   0000BB                     __pdataBANK0:
  1119                           	callstack 0
  1120   0000BB                     PWM@F16999:
  1121                           	callstack 0
  1122   0000BB                     	ds	20
  1123                           
  1124                           	psect	bssBANK1
  1125   000100                     __pbssBANK1:
  1126                           	callstack 0
  1127   000100                     _dbuf:
  1128                           	callstack 0
  1129   000100                     	ds	80
  1130                           
  1131                           	psect	cstackBANK0
  1132   000060                     __pcstackBANK0:
  1133                           	callstack 0
  1134   000060                     efgtoa@ne:
  1135                           	callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x0
  1138   000060                     	ds	2
  1139   000062                     efgtoa@p:
  1140                           	callstack 0
  1141                           
  1142                           ; 2 bytes @ 0x2
  1143   000062                     	ds	2
  1144   000064                     efgtoa@t:
  1145                           	callstack 0
  1146                           
  1147                           ; 2 bytes @ 0x4
  1148   000064                     	ds	2
  1149   000066                     _efgtoa$1333:
  1150                           	callstack 0
  1151                           
  1152                           ; 2 bytes @ 0x6
  1153   000066                     	ds	2
  1154   000068                     efgtoa@pp:
  1155                           	callstack 0
  1156                           
  1157                           ; 1 bytes @ 0x8
  1158   000068                     	ds	1
  1159   000069                     efgtoa@mode:
  1160                           	callstack 0
  1161                           
  1162                           ; 1 bytes @ 0x9
  1163   000069                     	ds	1
  1164   00006A                     efgtoa@nmode:
  1165                           	callstack 0
  1166                           
  1167                           ; 1 bytes @ 0xA
  1168   00006A                     	ds	1
  1169   00006B                     efgtoa@d:
  1170                           	callstack 0
  1171                           
  1172                           ; 2 bytes @ 0xB
  1173   00006B                     	ds	2
  1174   00006D                     efgtoa@m:
  1175                           	callstack 0
  1176                           
  1177                           ; 2 bytes @ 0xD
  1178   00006D                     	ds	2
  1179   00006F                     efgtoa@e:
  1180                           	callstack 0
  1181                           
  1182                           ; 2 bytes @ 0xF
  1183   00006F                     	ds	2
  1184   000071                     efgtoa@w:
  1185                           	callstack 0
  1186                           
  1187                           ; 2 bytes @ 0x11
  1188   000071                     	ds	2
  1189   000073                     efgtoa@ou:
  1190                           	callstack 0
  1191                           
  1192                           ; 4 bytes @ 0x13
  1193   000073                     	ds	4
  1194   000077                     efgtoa@i:
  1195                           	callstack 0
  1196                           
  1197                           ; 2 bytes @ 0x17
  1198   000077                     	ds	2
  1199   000079                     efgtoa@h:
  1200                           	callstack 0
  1201                           
  1202                           ; 4 bytes @ 0x19
  1203   000079                     	ds	4
  1204   00007D                     efgtoa@l:
  1205                           	callstack 0
  1206                           
  1207                           ; 4 bytes @ 0x1D
  1208   00007D                     	ds	4
  1209   000081                     efgtoa@sign:
  1210                           	callstack 0
  1211                           
  1212                           ; 1 bytes @ 0x21
  1213   000081                     	ds	1
  1214   000082                     efgtoa@n:
  1215                           	callstack 0
  1216                           
  1217                           ; 2 bytes @ 0x22
  1218   000082                     	ds	2
  1219   000084                     efgtoa@g:
  1220                           	callstack 0
  1221                           
  1222                           ; 4 bytes @ 0x24
  1223   000084                     	ds	4
  1224   000088                     efgtoa@u:
  1225                           	callstack 0
  1226                           
  1227                           ; 4 bytes @ 0x28
  1228   000088                     	ds	4
  1229   00008C                     ?_sprintf:
  1230                           	callstack 0
  1231   00008C                     sprintf@s:
  1232                           	callstack 0
  1233                           
  1234                           ; 1 bytes @ 0x2C
  1235   00008C                     	ds	1
  1236   00008D                     sprintf@fmt:
  1237                           	callstack 0
  1238                           
  1239                           ; 1 bytes @ 0x2D
  1240   00008D                     	ds	5
  1241   000092                     PWM@percent:
  1242                           	callstack 0
  1243                           
  1244                           ; 15 bytes @ 0x32
  1245   000092                     	ds	15
  1246   0000A1                     PWM@dcVal:
  1247                           	callstack 0
  1248                           
  1249                           ; 20 bytes @ 0x41
  1250   0000A1                     	ds	20
  1251   0000B5                     PWM@pwmStatus:
  1252                           	callstack 0
  1253                           
  1254                           ; 2 bytes @ 0x55
  1255   0000B5                     	ds	2
  1256   0000B7                     PWM@checkdutyCycle:
  1257                           	callstack 0
  1258                           
  1259                           ; 2 bytes @ 0x57
  1260   0000B7                     	ds	2
  1261   0000B9                     PWM@index:
  1262                           	callstack 0
  1263                           
  1264                           ; 2 bytes @ 0x59
  1265   0000B9                     	ds	2
  1266                           
  1267                           	psect	cstackCOMRAM
  1268   000001                     __pcstackCOMRAM:
  1269                           	callstack 0
  1270   000001                     ISR@i:
  1271                           	callstack 0
  1272   000001                     
  1273                           ; 1 bytes @ 0x0
  1274   000001                     	ds	2
  1275   000003                     ?___fpclassifyf:
  1276                           	callstack 0
  1277   000003                     ?___awdiv:
  1278                           	callstack 0
  1279   000003                     ?___awmod:
  1280                           	callstack 0
  1281   000003                     ?_read_prec_or_width:
  1282                           	callstack 0
  1283   000003                     ?___fladd:
  1284                           	callstack 0
  1285   000003                     ?___fldiv:
  1286                           	callstack 0
  1287   000003                     ?___flmul:
  1288                           	callstack 0
  1289   000003                     ?_labs:
  1290                           	callstack 0
  1291   000003                     ?___lmul:
  1292                           	callstack 0
  1293   000003                     ?___flneg:
  1294                           	callstack 0
  1295   000003                     ?___fltol:
  1296                           	callstack 0
  1297   000003                     read_prec_or_width@fmt:
  1298                           	callstack 0
  1299   000003                     MSdelay@val:
  1300                           	callstack 0
  1301   000003                     PWM2_LoadDutyValue@dutyValue:
  1302                           	callstack 0
  1303   000003                     ___awdiv@dividend:
  1304                           	callstack 0
  1305   000003                     ___awmod@dividend:
  1306                           	callstack 0
  1307   000003                     memcpy@d1:
  1308                           	callstack 0
  1309   000003                     fputc@c:
  1310                           	callstack 0
  1311   000003                     strcpy@dest:
  1312                           	callstack 0
  1313   000003                     ___lmul@multiplier:
  1314                           	callstack 0
  1315   000003                     ___fleq@ff1:
  1316                           	callstack 0
  1317   000003                     ___flneg@f1:
  1318                           	callstack 0
  1319   000003                     ___fltol@f1:
  1320                           	callstack 0
  1321   000003                     ___fladd@b:
  1322                           	callstack 0
  1323   000003                     ___fldiv@b:
  1324                           	callstack 0
  1325   000003                     ___flmul@b:
  1326                           	callstack 0
  1327   000003                     ___fpclassifyf@x:
  1328                           	callstack 0
  1329   000003                     labs@a:
  1330                           	callstack 0
  1331   000003                     
  1332                           ; 1 bytes @ 0x2
  1333   000003                     	ds	1
  1334   000004                     read_prec_or_width@ap:
  1335                           	callstack 0
  1336                           
  1337                           ; 1 bytes @ 0x3
  1338   000004                     	ds	1
  1339   000005                     fputc@fp:
  1340                           	callstack 0
  1341   000005                     strcpy@src:
  1342                           	callstack 0
  1343   000005                     MSdelay@i:
  1344                           	callstack 0
  1345   000005                     ___awdiv@divisor:
  1346                           	callstack 0
  1347   000005                     ___awmod@divisor:
  1348                           	callstack 0
  1349   000005                     memcpy@s1:
  1350                           	callstack 0
  1351   000005                     ??_read_prec_or_width:
  1352                           
  1353                           ; 1 bytes @ 0x4
  1354   000005                     	ds	1
  1355   000006                     ??_fputc:
  1356   000006                     ??_strcpy:
  1357                           
  1358                           ; 1 bytes @ 0x5
  1359   000006                     	ds	1
  1360   000007                     ___awdiv@counter:
  1361                           	callstack 0
  1362   000007                     ___awmod@counter:
  1363                           	callstack 0
  1364   000007                     read_prec_or_width@c:
  1365                           	callstack 0
  1366   000007                     MSdelay@j:
  1367                           	callstack 0
  1368   000007                     memcpy@n:
  1369                           	callstack 0
  1370   000007                     strcpy@d:
  1371                           	callstack 0
  1372   000007                     ___lmul@multiplicand:
  1373                           	callstack 0
  1374   000007                     ___fleq@ff2:
  1375                           	callstack 0
  1376   000007                     ___fladd@a:
  1377                           	callstack 0
  1378   000007                     ___fldiv@a:
  1379                           	callstack 0
  1380   000007                     ___flmul@a:
  1381                           	callstack 0
  1382   000007                     ??___fpclassifyf:
  1383   000007                     ??_labs:
  1384   000007                     ??___fltol:
  1385                           
  1386                           ; 1 bytes @ 0x6
  1387   000007                     	ds	1
  1388   000008                     ___awdiv@sign:
  1389                           	callstack 0
  1390   000008                     ___awmod@sign:
  1391                           	callstack 0
  1392   000008                     read_prec_or_width@n:
  1393                           	callstack 0
  1394                           
  1395                           ; 2 bytes @ 0x7
  1396   000008                     	ds	1
  1397   000009                     ?_abs:
  1398                           	callstack 0
  1399   000009                     LCD_Command@cmd:
  1400                           	callstack 0
  1401   000009                     LCD_Char@dat:
  1402                           	callstack 0
  1403   000009                     ___awdiv@quotient:
  1404                           	callstack 0
  1405   000009                     abs@a:
  1406                           	callstack 0
  1407   000009                     memcpy@d:
  1408                           	callstack 0
  1409   000009                     
  1410                           ; 1 bytes @ 0x8
  1411   000009                     	ds	1
  1412   00000A                     LCD_String@msg:
  1413                           	callstack 0
  1414   00000A                     
  1415                           ; 1 bytes @ 0x9
  1416   00000A                     	ds	1
  1417   00000B                     ___fltol@sign1:
  1418                           	callstack 0
  1419   00000B                     ___fpclassifyf@e:
  1420                           	callstack 0
  1421   00000B                     memcpy@s:
  1422                           	callstack 0
  1423   00000B                     fputs@s:
  1424                           	callstack 0
  1425   00000B                     ___lmul@product:
  1426                           	callstack 0
  1427   00000B                     ??___fladd:
  1428   00000B                     ??___fldiv:
  1429   00000B                     ??___flmul:
  1430   00000B                     ??_abs:
  1431   00000B                     ??___fleq:
  1432                           
  1433                           ; 1 bytes @ 0xA
  1434   00000B                     	ds	1
  1435   00000C                     LCD_String_xy@pos:
  1436                           	callstack 0
  1437   00000C                     ___fltol@exp1:
  1438                           	callstack 0
  1439   00000C                     
  1440                           ; 1 bytes @ 0xB
  1441   00000C                     	ds	1
  1442   00000D                     memcpy@tmp:
  1443                           	callstack 0
  1444   00000D                     fputs@fp:
  1445                           	callstack 0
  1446   00000D                     LCD_String_xy@msg:
  1447                           	callstack 0
  1448   00000D                     ___fpclassifyf@u:
  1449                           	callstack 0
  1450                           
  1451                           ; 4 bytes @ 0xC
  1452   00000D                     	ds	1
  1453   00000E                     fputs@c:
  1454                           	callstack 0
  1455   00000E                     
  1456                           ; 1 bytes @ 0xD
  1457   00000E                     	ds	1
  1458   00000F                     ?___lldiv:
  1459                           	callstack 0
  1460   00000F                     LCD_String_xy@row:
  1461                           	callstack 0
  1462   00000F                     ___fladd@signs:
  1463                           	callstack 0
  1464   00000F                     ___flmul@sign:
  1465                           	callstack 0
  1466   00000F                     fputs@i:
  1467                           	callstack 0
  1468   00000F                     ___lldiv@dividend:
  1469                           	callstack 0
  1470   00000F                     ___fldiv@rem:
  1471                           	callstack 0
  1472   00000F                     
  1473                           ; 1 bytes @ 0xE
  1474   00000F                     	ds	1
  1475   000010                     LCD_String_xy@location:
  1476                           	callstack 0
  1477   000010                     ___fladd@aexp:
  1478                           	callstack 0
  1479   000010                     ___flmul@grs:
  1480                           	callstack 0
  1481                           
  1482                           ; 4 bytes @ 0xF
  1483   000010                     	ds	1
  1484   000011                     ___fladd@bexp:
  1485                           	callstack 0
  1486   000011                     pad@fp:
  1487                           	callstack 0
  1488                           
  1489                           ; 1 bytes @ 0x10
  1490   000011                     	ds	1
  1491   000012                     ___fladd@grs:
  1492                           	callstack 0
  1493   000012                     pad@buf:
  1494                           	callstack 0
  1495                           
  1496                           ; 2 bytes @ 0x11
  1497   000012                     	ds	1
  1498   000013                     ___fldiv@sign:
  1499                           	callstack 0
  1500   000013                     ___lldiv@divisor:
  1501                           	callstack 0
  1502                           
  1503                           ; 4 bytes @ 0x12
  1504   000013                     	ds	1
  1505   000014                     ___flmul@aexp:
  1506                           	callstack 0
  1507   000014                     ___fldiv@new_exp:
  1508                           	callstack 0
  1509   000014                     pad@p:
  1510                           	callstack 0
  1511                           
  1512                           ; 2 bytes @ 0x13
  1513   000014                     	ds	1
  1514   000015                     ___flmul@bexp:
  1515                           	callstack 0
  1516                           
  1517                           ; 1 bytes @ 0x14
  1518   000015                     	ds	1
  1519   000016                     ___fldiv@grs:
  1520                           	callstack 0
  1521   000016                     ___flmul@prod:
  1522                           	callstack 0
  1523   000016                     ??_pad:
  1524                           
  1525                           ; 1 bytes @ 0x15
  1526   000016                     	ds	1
  1527   000017                     pad@i:
  1528                           	callstack 0
  1529   000017                     ___lldiv@quotient:
  1530                           	callstack 0
  1531   000017                     
  1532                           ; 1 bytes @ 0x16
  1533   000017                     	ds	2
  1534   000019                     dtoa@fp:
  1535                           	callstack 0
  1536                           
  1537                           ; 1 bytes @ 0x18
  1538   000019                     	ds	1
  1539   00001A                     ___fldiv@bexp:
  1540                           	callstack 0
  1541   00001A                     ___flmul@temp:
  1542                           	callstack 0
  1543   00001A                     dtoa@d:
  1544                           	callstack 0
  1545                           
  1546                           ; 2 bytes @ 0x19
  1547   00001A                     	ds	1
  1548   00001B                     ___lldiv@counter:
  1549                           	callstack 0
  1550   00001B                     ___fldiv@aexp:
  1551                           	callstack 0
  1552                           
  1553                           ; 1 bytes @ 0x1A
  1554   00001B                     	ds	1
  1555   00001C                     ?___flsub:
  1556                           	callstack 0
  1557   00001C                     ?_floorf:
  1558                           	callstack 0
  1559   00001C                     _dtoa$1302:
  1560                           	callstack 0
  1561   00001C                     ___flge@ff1:
  1562                           	callstack 0
  1563   00001C                     ___flsub@b:
  1564                           	callstack 0
  1565   00001C                     floorf@x:
  1566                           	callstack 0
  1567   00001C                     
  1568                           ; 1 bytes @ 0x1B
  1569   00001C                     	ds	2
  1570   00001E                     dtoa@w:
  1571                           	callstack 0
  1572                           
  1573                           ; 2 bytes @ 0x1D
  1574   00001E                     	ds	2
  1575   000020                     dtoa@p:
  1576                           	callstack 0
  1577   000020                     ___flge@ff2:
  1578                           	callstack 0
  1579   000020                     ___flsub@a:
  1580                           	callstack 0
  1581   000020                     ??_floorf:
  1582                           
  1583                           ; 1 bytes @ 0x1F
  1584   000020                     	ds	2
  1585   000022                     dtoa@s:
  1586                           	callstack 0
  1587                           
  1588                           ; 1 bytes @ 0x21
  1589   000022                     	ds	1
  1590   000023                     dtoa@i:
  1591                           	callstack 0
  1592                           
  1593                           ; 2 bytes @ 0x22
  1594   000023                     	ds	1
  1595   000024                     ??___flge:
  1596                           
  1597                           ; 1 bytes @ 0x23
  1598   000024                     	ds	2
  1599   000026                     floorf@m:
  1600                           	callstack 0
  1601                           
  1602                           ; 4 bytes @ 0x25
  1603   000026                     	ds	4
  1604   00002A                     floorf@e:
  1605                           	callstack 0
  1606                           
  1607                           ; 2 bytes @ 0x29
  1608   00002A                     	ds	2
  1609   00002C                     floorf@u:
  1610                           	callstack 0
  1611                           
  1612                           ; 4 bytes @ 0x2B
  1613   00002C                     	ds	4
  1614   000030                     efgtoa@fp:
  1615                           	callstack 0
  1616                           
  1617                           ; 1 bytes @ 0x2F
  1618   000030                     	ds	1
  1619   000031                     efgtoa@f:
  1620                           	callstack 0
  1621                           
  1622                           ; 4 bytes @ 0x30
  1623   000031                     	ds	4
  1624   000035                     efgtoa@c:
  1625                           	callstack 0
  1626                           
  1627                           ; 1 bytes @ 0x34
  1628   000035                     	ds	1
  1629   000036                     ??_efgtoa:
  1630                           
  1631                           ; 1 bytes @ 0x35
  1632   000036                     	ds	2
  1633   000038                     vfpfcnvrt@fp:
  1634                           	callstack 0
  1635                           
  1636                           ; 1 bytes @ 0x37
  1637   000038                     	ds	1
  1638   000039                     vfpfcnvrt@fmt:
  1639                           	callstack 0
  1640                           
  1641                           ; 1 bytes @ 0x38
  1642   000039                     	ds	1
  1643   00003A                     vfpfcnvrt@ap:
  1644                           	callstack 0
  1645                           
  1646                           ; 1 bytes @ 0x39
  1647   00003A                     	ds	1
  1648   00003B                     ??_vfpfcnvrt:
  1649                           
  1650                           ; 1 bytes @ 0x3A
  1651   00003B                     	ds	1
  1652   00003C                     vfpfcnvrt@convarg:
  1653                           	callstack 0
  1654                           
  1655                           ; 4 bytes @ 0x3B
  1656   00003C                     	ds	4
  1657   000040                     vfpfcnvrt@c:
  1658                           	callstack 0
  1659                           
  1660                           ; 1 bytes @ 0x3F
  1661   000040                     	ds	1
  1662   000041                     vfpfcnvrt@cp:
  1663                           	callstack 0
  1664                           
  1665                           ; 1 bytes @ 0x40
  1666   000041                     	ds	1
  1667   000042                     ?_vfprintf:
  1668                           	callstack 0
  1669   000042                     vfprintf@fp:
  1670                           	callstack 0
  1671                           
  1672                           ; 1 bytes @ 0x41
  1673   000042                     	ds	1
  1674   000043                     vfprintf@fmt:
  1675                           	callstack 0
  1676                           
  1677                           ; 1 bytes @ 0x42
  1678   000043                     	ds	1
  1679   000044                     vfprintf@ap:
  1680                           	callstack 0
  1681                           
  1682                           ; 1 bytes @ 0x43
  1683   000044                     	ds	1
  1684   000045                     vfprintf@cfmt:
  1685                           	callstack 0
  1686   000045                     
  1687                           ; 1 bytes @ 0x44
  1688   000045                     	ds	1
  1689   000046                     sprintf@ap:
  1690                           	callstack 0
  1691   000046                     
  1692                           ; 1 bytes @ 0x45
  1693   000046                     	ds	1
  1694   000047                     sprintf@f:
  1695                           	callstack 0
  1696                           
  1697                           ; 11 bytes @ 0x46
  1698   000047                     	ds	11
  1699   000052                     ??_PWM:
  1700                           
  1701                           ; 1 bytes @ 0x51
  1702   000052                     	ds	2
  1703   000054                     
  1704                           ; 1 bytes @ 0x53
  1705 ;;
  1706 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1707 ;;
  1708 ;; *************** function _main *****************
  1709 ;; Defined at:
  1710 ;;		line 41 in file "main.c"
  1711 ;; Parameters:    Size  Location     Type
  1712 ;;		None
  1713 ;; Auto vars:     Size  Location     Type
  1714 ;;		None
  1715 ;; Return value:  Size  Location     Type
  1716 ;;                  1    wreg      void 
  1717 ;; Registers used:
  1718 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1719 ;; Tracked objects:
  1720 ;;		On entry : 0/0
  1721 ;;		On exit  : 0/0
  1722 ;;		Unchanged: 0/0
  1723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1728 ;;Total ram usage:        0 bytes
  1729 ;; Hardware stack levels required when called: 10
  1730 ;; This function calls:
  1731 ;;		_Initialize
  1732 ;;		_LCD_Clear
  1733 ;;		_LCD_Init
  1734 ;;		_LCD_String_xy
  1735 ;;		_PWM
  1736 ;; This function is called by:
  1737 ;;		Startup code after reset
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           	psect	text0
  1742   004B48                     __ptext0:
  1743                           	callstack 0
  1744   004B48                     _main:
  1745                           	callstack 21
  1746   004B48                     
  1747                           ;main.c: 42:     Initialize();
  1748   004B48  ECB6  F024         	call	_Initialize	;wreg free
  1749   004B4C                     
  1750                           ;main.c: 43:     LCD_Init();
  1751   004B4C  ECB9  F025         	call	_LCD_Init	;wreg free
  1752   004B50                     
  1753                           ;main.c: 44:     LCD_String_xy(1, 0, "Jacob");
  1754   004B50  0E00               	movlw	0
  1755   004B52  6E0C               	movwf	LCD_String_xy@pos^0,c
  1756   004B54  0E10               	movlw	low STR_1
  1757   004B56  6E0D               	movwf	LCD_String_xy@msg^0,c
  1758   004B58  500D               	movf	LCD_String_xy@msg^0,w,c
  1759   004B5A  A4D8               	btfss	status,2,c
  1760   004B5C  0E20               	movlw	high __smallconst
  1761   004B5E  6E0E               	movwf	(LCD_String_xy@msg+1)^0,c
  1762   004B60  0E01               	movlw	1
  1763   004B62  EC1B  F025         	call	_LCD_String_xy
  1764   004B66                     
  1765                           ;main.c: 47:     LCD_Clear();
  1766   004B66  EC28  F026         	call	_LCD_Clear	;wreg free
  1767   004B6A                     
  1768                           ;main.c: 52:     PWM();
  1769   004B6A  ECA5  F01D         	call	_PWM	;wreg free
  1770   004B6E  EF57  F000         	goto	start
  1771   004B72                     __end_of_main:
  1772                           	callstack 0
  1773                           
  1774 ;; *************** function _PWM *****************
  1775 ;; Defined at:
  1776 ;;		line 75 in file "main.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;		None
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;  dcVal          20   65[BANK0 ] int [10]
  1781 ;;  percent        15   50[BANK0 ] unsigned char [15]
  1782 ;;  index           2   89[BANK0 ] int 
  1783 ;;  checkdutyCyc    2   87[BANK0 ] unsigned int 
  1784 ;;  pwmStatus       2   85[BANK0 ] unsigned int 
  1785 ;;  preScale        2    0        unsigned int 
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  1    wreg      void 
  1788 ;; Registers used:
  1789 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1796 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1797 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1798 ;;      Totals:         2      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1799 ;;Total ram usage:       43 bytes
  1800 ;; Hardware stack levels used: 1
  1801 ;; Hardware stack levels required when called: 9
  1802 ;; This function calls:
  1803 ;;		_LCD_Clear
  1804 ;;		_LCD_String_xy
  1805 ;;		_PWM2_Initialize
  1806 ;;		_PWM2_LoadDutyValue
  1807 ;;		_PWM2_OutputStatusGet
  1808 ;;		_PWM_Output_D8_Enable
  1809 ;;		_TMR2_Initialize
  1810 ;;		_TMR2_StartTimer
  1811 ;;		___lldiv
  1812 ;;		___lmul
  1813 ;;		_sprintf
  1814 ;; This function is called by:
  1815 ;;		_main
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819                           	psect	text1
  1820   003B4A                     __ptext1:
  1821                           	callstack 0
  1822   003B4A                     _PWM:
  1823                           	callstack 21
  1824   003B4A                     
  1825                           ;main.c: 76:     unsigned int checkdutyCycle, pwmStatus, preScale;;main.c: 77:     int d
      +                          cVal[10] = {0, 103, 205, 308, 410, 512, 615, 717, 820, 922};
  1826   003B4A  EE20  F0BB         	lfsr	2,PWM@F16999
  1827   003B4E  EE10  F0A1         	lfsr	1,PWM@dcVal
  1828   003B52  0E13               	movlw	19
  1829   003B54                     u4101:
  1830   003B54  006F FF6F FFE3     	movff	plusw2,plusw1
  1831   003B5A  06E8               	decf	wreg,f,c
  1832   003B5C  E2FB               	bc	u4101
  1833   003B5E                     
  1834                           ;main.c: 78:     int index = 0;
  1835   003B5E  0E00               	movlw	0
  1836   003B60  0100               	movlb	0	; () banked
  1837   003B62  6FBA               	movwf	(PWM@index+1)& (0+255),b
  1838   003B64  0E00               	movlw	0
  1839   003B66  6FB9               	movwf	PWM@index& (0+255),b
  1840   003B68                     
  1841                           ; BSR set to: 0
  1842                           ;main.c: 79:     char percent[15];;main.c: 80:     OSCSTATbits.HFOR =1;
  1843   003B68  0139               	movlb	57	; () banked
  1844   003B6A  8DDC               	bsf	220,6,b	;volatile
  1845   003B6C                     
  1846                           ; BSR set to: 57
  1847                           ;main.c: 81:     OSCFRQ=0x02;
  1848   003B6C  0E02               	movlw	2
  1849   003B6E  6FDF               	movwf	223,b	;volatile
  1850   003B70                     
  1851                           ; BSR set to: 57
  1852                           ;main.c: 83:     ANSELB = 0b00000000;
  1853   003B70  013A               	movlb	58	; () banked
  1854   003B72  6B50               	clrf	80,b	;volatile
  1855   003B74                     
  1856                           ; BSR set to: 58
  1857                           ;main.c: 84:     TRISB= 0b00000000;
  1858   003B74  6AC3               	clrf	195,c	;volatile
  1859   003B76                     
  1860                           ; BSR set to: 58
  1861                           ;main.c: 85:     PORTB= 0b00000000;
  1862   003B76  6ACB               	clrf	203,c	;volatile
  1863   003B78                     
  1864                           ; BSR set to: 58
  1865                           ;main.c: 86:     TMR2_Initialize();
  1866   003B78  ECFE  F025         	call	_TMR2_Initialize	;wreg free
  1867   003B7C                     
  1868                           ;main.c: 87:     TMR2_StartTimer();
  1869   003B7C  EC2C  F026         	call	_TMR2_StartTimer	;wreg free
  1870   003B80                     
  1871                           ;main.c: 89:     PWM_Output_D8_Enable();
  1872   003B80  ECF0  F025         	call	_PWM_Output_D8_Enable	;wreg free
  1873   003B84                     
  1874                           ;main.c: 90:     PWM2_Initialize();
  1875   003B84  EC09  F026         	call	_PWM2_Initialize	;wreg free
  1876   003B88                     
  1877                           ;main.c: 91:     PWM2_LoadDutyValue( dcVal[index] );
  1878   003B88  C0A1  F003         	movff	PWM@dcVal,PWM2_LoadDutyValue@dutyValue
  1879   003B8C  C0A2  F004         	movff	PWM@dcVal+1,PWM2_LoadDutyValue@dutyValue+1
  1880   003B90  EC8C  F025         	call	_PWM2_LoadDutyValue	;wreg free
  1881   003B94                     
  1882                           ;main.c: 96:     checkdutyCycle =(uint16_t)((100UL*dcVal[index])/(4*(T2PR+1)));
  1883   003B94  C0A1  F003         	movff	PWM@dcVal,___lmul@multiplier
  1884   003B98  C0A2  F004         	movff	PWM@dcVal+1,___lmul@multiplier+1
  1885   003B9C  0E00               	movlw	0
  1886   003B9E  BE04               	btfsc	(___lmul@multiplier+1)^0,7,c
  1887   003BA0  0EFF               	movlw	-1
  1888   003BA2  6E05               	movwf	(___lmul@multiplier+2)^0,c
  1889   003BA4  6E06               	movwf	(___lmul@multiplier+3)^0,c
  1890   003BA6  0E64               	movlw	100
  1891   003BA8  6E07               	movwf	___lmul@multiplicand^0,c
  1892   003BAA  0E00               	movlw	0
  1893   003BAC  6E08               	movwf	(___lmul@multiplicand+1)^0,c
  1894   003BAE  0E00               	movlw	0
  1895   003BB0  6E09               	movwf	(___lmul@multiplicand+2)^0,c
  1896   003BB2  0E00               	movlw	0
  1897   003BB4  6E0A               	movwf	(___lmul@multiplicand+3)^0,c
  1898   003BB6  EC37  F023         	call	___lmul	;wreg free
  1899   003BBA  C003  F00F         	movff	?___lmul,___lldiv@dividend
  1900   003BBE  C004  F010         	movff	?___lmul+1,___lldiv@dividend+1
  1901   003BC2  C005  F011         	movff	?___lmul+2,___lldiv@dividend+2
  1902   003BC6  C006  F012         	movff	?___lmul+3,___lldiv@dividend+3
  1903   003BCA  50AB               	movf	171,w,c	;volatile
  1904   003BCC  6E52               	movwf	??_PWM^0,c
  1905   003BCE  6A53               	clrf	(??_PWM+1)^0,c
  1906   003BD0  90D8               	bcf	status,0,c
  1907   003BD2  3652               	rlcf	??_PWM^0,f,c
  1908   003BD4  3653               	rlcf	(??_PWM+1)^0,f,c
  1909   003BD6  90D8               	bcf	status,0,c
  1910   003BD8  3652               	rlcf	??_PWM^0,f,c
  1911   003BDA  3653               	rlcf	(??_PWM+1)^0,f,c
  1912   003BDC  0E04               	movlw	4
  1913   003BDE  2652               	addwf	??_PWM^0,f,c
  1914   003BE0  0E00               	movlw	0
  1915   003BE2  2253               	addwfc	(??_PWM+1)^0,f,c
  1916   003BE4  C052  F013         	movff	??_PWM,___lldiv@divisor
  1917   003BE8  C053  F014         	movff	??_PWM+1,___lldiv@divisor+1
  1918   003BEC  0E00               	movlw	0
  1919   003BEE  BE14               	btfsc	(___lldiv@divisor+1)^0,7,c
  1920   003BF0  0EFF               	movlw	-1
  1921   003BF2  6E15               	movwf	(___lldiv@divisor+2)^0,c
  1922   003BF4  6E16               	movwf	(___lldiv@divisor+3)^0,c
  1923   003BF6  ECAC  F022         	call	___lldiv	;wreg free
  1924   003BFA  C00F  F0B7         	movff	?___lldiv,PWM@checkdutyCycle
  1925   003BFE  C010  F0B8         	movff	?___lldiv+1,PWM@checkdutyCycle+1
  1926   003C02  50AC               	movf	172,w,c	;volatile
  1927   003C04                     
  1928                           ;main.c: 100:     LCD_Clear();
  1929   003C04  EC28  F026         	call	_LCD_Clear	;wreg free
  1930   003C08                     
  1931                           ;main.c: 101:     sprintf(percent, "%d", checkdutyCycle);
  1932   003C08  0E92               	movlw	low PWM@percent
  1933   003C0A  0100               	movlb	0	; () banked
  1934   003C0C  6F8C               	movwf	sprintf@s& (0+255),b
  1935   003C0E  0E26               	movlw	low STR_5
  1936   003C10  6F8D               	movwf	sprintf@fmt& (0+255),b
  1937   003C12  C0B7  F08E         	movff	PWM@checkdutyCycle,?_sprintf+2
  1938   003C16  C0B8  F08F         	movff	PWM@checkdutyCycle+1,?_sprintf+3
  1939   003C1A  EC57  F025         	call	_sprintf	;wreg free
  1940   003C1E                     
  1941                           ;main.c: 102:     LCD_String_xy(2, 0, percent);
  1942   003C1E  0E00               	movlw	0
  1943   003C20  6E0C               	movwf	LCD_String_xy@pos^0,c
  1944   003C22  0E92               	movlw	low PWM@percent
  1945   003C24  6E0D               	movwf	LCD_String_xy@msg^0,c
  1946   003C26  6A0E               	clrf	(LCD_String_xy@msg+1)^0,c
  1947   003C28  0E02               	movlw	2
  1948   003C2A  EC1B  F025         	call	_LCD_String_xy
  1949   003C2E                     l3884:
  1950                           
  1951                           ;main.c: 105:         pwmStatus = PWM2_OutputStatusGet();
  1952   003C2E  EC1E  F026         	call	_PWM2_OutputStatusGet	;wreg free
  1953   003C32  6E52               	movwf	??_PWM^0,c
  1954   003C34  5052               	movf	??_PWM^0,w,c
  1955   003C36  0100               	movlb	0	; () banked
  1956   003C38  6FB5               	movwf	PWM@pwmStatus& (0+255),b
  1957   003C3A  6BB6               	clrf	(PWM@pwmStatus+1)& (0+255),b
  1958   003C3C                     
  1959                           ; BSR set to: 0
  1960                           ;main.c: 106:         PORTBbits.RB2 = pwmStatus;
  1961   003C3C  B1B5               	btfsc	PWM@pwmStatus& (0+255),0,b
  1962   003C3E  D002               	bra	u4115
  1963   003C40  94CB               	bcf	203,2,c	;volatile
  1964   003C42  D001               	bra	u4116
  1965   003C44                     u4115:
  1966   003C44  84CB               	bsf	203,2,c	;volatile
  1967   003C46                     u4116:
  1968   003C46                     
  1969                           ;main.c: 114:         if (PORTEbits.RE1 == 1) {
  1970   003C46  A2CE               	btfss	206,1,c	;volatile
  1971   003C48  EF28  F01E         	goto	u4121
  1972   003C4C  EF2A  F01E         	goto	u4120
  1973   003C50                     u4121:
  1974   003C50  EF17  F01E         	goto	l3884
  1975   003C54                     u4120:
  1976   003C54                     
  1977                           ;main.c: 115:             index++;
  1978   003C54  0100               	movlb	0	; () banked
  1979   003C56  4BB9               	infsnz	PWM@index& (0+255),f,b
  1980   003C58  2BBA               	incf	(PWM@index+1)& (0+255),f,b
  1981   003C5A                     
  1982                           ; BSR set to: 0
  1983                           ;main.c: 117:             if (index == 10) { index = 0; }
  1984   003C5A  0E0A               	movlw	10
  1985   003C5C  19B9               	xorwf	PWM@index& (0+255),w,b
  1986   003C5E  11BA               	iorwf	(PWM@index+1)& (0+255),w,b
  1987   003C60  A4D8               	btfss	status,2,c
  1988   003C62  EF35  F01E         	goto	u4131
  1989   003C66  EF37  F01E         	goto	u4130
  1990   003C6A                     u4131:
  1991   003C6A  EF3B  F01E         	goto	l3896
  1992   003C6E                     u4130:
  1993   003C6E                     
  1994                           ; BSR set to: 0
  1995   003C6E  0E00               	movlw	0
  1996   003C70  6FBA               	movwf	(PWM@index+1)& (0+255),b
  1997   003C72  0E00               	movlw	0
  1998   003C74  6FB9               	movwf	PWM@index& (0+255),b
  1999   003C76                     l3896:
  2000                           
  2001                           ; BSR set to: 0
  2002                           ;main.c: 118:             checkdutyCycle =(uint16_t)((100UL*dcVal[index])/(4*(T2PR+1)));
  2003   003C76  51B9               	movf	PWM@index& (0+255),w,b
  2004   003C78  0D02               	mullw	2
  2005   003C7A  50F3               	movf	243,w,c
  2006   003C7C  0FA1               	addlw	low PWM@dcVal
  2007   003C7E  6ED9               	movwf	fsr2l,c
  2008   003C80  6ADA               	clrf	fsr2h,c
  2009   003C82  006F FF78  F003    	movff	postinc2,___lmul@multiplier
  2010   003C88  006F FF74  F004    	movff	postdec2,___lmul@multiplier+1
  2011   003C8E  0E00               	movlw	0
  2012   003C90  BE04               	btfsc	(___lmul@multiplier+1)^0,7,c
  2013   003C92  0EFF               	movlw	-1
  2014   003C94  6E05               	movwf	(___lmul@multiplier+2)^0,c
  2015   003C96  6E06               	movwf	(___lmul@multiplier+3)^0,c
  2016   003C98  0E64               	movlw	100
  2017   003C9A  6E07               	movwf	___lmul@multiplicand^0,c
  2018   003C9C  0E00               	movlw	0
  2019   003C9E  6E08               	movwf	(___lmul@multiplicand+1)^0,c
  2020   003CA0  0E00               	movlw	0
  2021   003CA2  6E09               	movwf	(___lmul@multiplicand+2)^0,c
  2022   003CA4  0E00               	movlw	0
  2023   003CA6  6E0A               	movwf	(___lmul@multiplicand+3)^0,c
  2024   003CA8  EC37  F023         	call	___lmul	;wreg free
  2025   003CAC  C003  F00F         	movff	?___lmul,___lldiv@dividend
  2026   003CB0  C004  F010         	movff	?___lmul+1,___lldiv@dividend+1
  2027   003CB4  C005  F011         	movff	?___lmul+2,___lldiv@dividend+2
  2028   003CB8  C006  F012         	movff	?___lmul+3,___lldiv@dividend+3
  2029   003CBC  50AB               	movf	171,w,c	;volatile
  2030   003CBE  6E52               	movwf	??_PWM^0,c
  2031   003CC0  6A53               	clrf	(??_PWM+1)^0,c
  2032   003CC2  90D8               	bcf	status,0,c
  2033   003CC4  3652               	rlcf	??_PWM^0,f,c
  2034   003CC6  3653               	rlcf	(??_PWM+1)^0,f,c
  2035   003CC8  90D8               	bcf	status,0,c
  2036   003CCA  3652               	rlcf	??_PWM^0,f,c
  2037   003CCC  3653               	rlcf	(??_PWM+1)^0,f,c
  2038   003CCE  0E04               	movlw	4
  2039   003CD0  2652               	addwf	??_PWM^0,f,c
  2040   003CD2  0E00               	movlw	0
  2041   003CD4  2253               	addwfc	(??_PWM+1)^0,f,c
  2042   003CD6  C052  F013         	movff	??_PWM,___lldiv@divisor
  2043   003CDA  C053  F014         	movff	??_PWM+1,___lldiv@divisor+1
  2044   003CDE  0E00               	movlw	0
  2045   003CE0  BE14               	btfsc	(___lldiv@divisor+1)^0,7,c
  2046   003CE2  0EFF               	movlw	-1
  2047   003CE4  6E15               	movwf	(___lldiv@divisor+2)^0,c
  2048   003CE6  6E16               	movwf	(___lldiv@divisor+3)^0,c
  2049   003CE8  ECAC  F022         	call	___lldiv	;wreg free
  2050   003CEC  C00F  F0B7         	movff	?___lldiv,PWM@checkdutyCycle
  2051   003CF0  C010  F0B8         	movff	?___lldiv+1,PWM@checkdutyCycle+1
  2052   003CF4                     
  2053                           ;main.c: 121:             PWM2_LoadDutyValue( dcVal[index] );
  2054   003CF4  0100               	movlb	0	; () banked
  2055   003CF6  51B9               	movf	PWM@index& (0+255),w,b
  2056   003CF8  0D02               	mullw	2
  2057   003CFA  50F3               	movf	243,w,c
  2058   003CFC  0FA1               	addlw	low PWM@dcVal
  2059   003CFE  6ED9               	movwf	fsr2l,c
  2060   003D00  6ADA               	clrf	fsr2h,c
  2061   003D02  006F FF78  F003    	movff	postinc2,PWM2_LoadDutyValue@dutyValue
  2062   003D08  006F FF74  F004    	movff	postdec2,PWM2_LoadDutyValue@dutyValue+1
  2063   003D0E  EC8C  F025         	call	_PWM2_LoadDutyValue	;wreg free
  2064   003D12                     
  2065                           ;main.c: 124:             LCD_Clear();
  2066   003D12  EC28  F026         	call	_LCD_Clear	;wreg free
  2067   003D16                     
  2068                           ;main.c: 125:             sprintf(percent, "%d", checkdutyCycle);
  2069   003D16  0E92               	movlw	low PWM@percent
  2070   003D18  0100               	movlb	0	; () banked
  2071   003D1A  6F8C               	movwf	sprintf@s& (0+255),b
  2072   003D1C  0E26               	movlw	low STR_5
  2073   003D1E  6F8D               	movwf	sprintf@fmt& (0+255),b
  2074   003D20  C0B7  F08E         	movff	PWM@checkdutyCycle,?_sprintf+2
  2075   003D24  C0B8  F08F         	movff	PWM@checkdutyCycle+1,?_sprintf+3
  2076   003D28  EC57  F025         	call	_sprintf	;wreg free
  2077   003D2C                     
  2078                           ;main.c: 126:             LCD_String_xy(2, 0, percent);
  2079   003D2C  0E00               	movlw	0
  2080   003D2E  6E0C               	movwf	LCD_String_xy@pos^0,c
  2081   003D30  0E92               	movlw	low PWM@percent
  2082   003D32  6E0D               	movwf	LCD_String_xy@msg^0,c
  2083   003D34  6A0E               	clrf	(LCD_String_xy@msg+1)^0,c
  2084   003D36  0E02               	movlw	2
  2085   003D38  EC1B  F025         	call	_LCD_String_xy
  2086   003D3C                     
  2087                           ;main.c: 127:             _delay((unsigned long)((1000)*(4000000/4000.0)));
  2088   003D3C  0E06               	movlw	6
  2089   003D3E  6E53               	movwf	(??_PWM+1)^0,c
  2090   003D40  0E13               	movlw	19
  2091   003D42  6E52               	movwf	??_PWM^0,c
  2092   003D44  0EAE               	movlw	174
  2093   003D46                     u4157:
  2094   003D46  2EE8               	decfsz	wreg,f,c
  2095   003D48  D7FE               	bra	u4157
  2096   003D4A  2E52               	decfsz	??_PWM^0,f,c
  2097   003D4C  D7FC               	bra	u4157
  2098   003D4E  2E53               	decfsz	(??_PWM+1)^0,f,c
  2099   003D50  D7FA               	bra	u4157
  2100   003D52  EF17  F01E         	goto	l3884
  2101   003D56  0012               	return		;funcret
  2102   003D58                     __end_of_PWM:
  2103                           	callstack 0
  2104                           
  2105 ;; *************** function _sprintf *****************
  2106 ;; Defined at:
  2107 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  2108 ;; Parameters:    Size  Location     Type
  2109 ;;  s               1   44[BANK0 ] PTR unsigned char 
  2110 ;;		 -> PWM@percent(15), readADC@buffer(12), 
  2111 ;;  fmt             1   45[BANK0 ] PTR const unsigned char 
  2112 ;;		 -> STR_6(3), STR_5(3), STR_3(5), 
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;  f              11   70[COMRAM] struct _IO_FILE
  2115 ;;  ret             2    0        int 
  2116 ;;  ap              1   69[COMRAM] PTR void [1]
  2117 ;;		 -> ?_sprintf(2), 
  2118 ;; Return value:  Size  Location     Type
  2119 ;;                  2   44[BANK0 ] int 
  2120 ;; Registers used:
  2121 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2122 ;; Tracked objects:
  2123 ;;		On entry : 0/0
  2124 ;;		On exit  : 0/0
  2125 ;;		Unchanged: 0/0
  2126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2127 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2128 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2130 ;;      Totals:        12       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2131 ;;Total ram usage:       18 bytes
  2132 ;; Hardware stack levels used: 1
  2133 ;; Hardware stack levels required when called: 8
  2134 ;; This function calls:
  2135 ;;		_vfprintf
  2136 ;; This function is called by:
  2137 ;;		_PWM
  2138 ;;		_readADC
  2139 ;; This function uses a non-reentrant model
  2140 ;;
  2141                           
  2142                           	psect	text2
  2143   004AAE                     __ptext2:
  2144                           	callstack 0
  2145   004AAE                     _sprintf:
  2146                           	callstack 21
  2147   004AAE  0E8E               	movlw	low (?_sprintf+2)
  2148   004AB0  6E46               	movwf	sprintf@ap^0,c
  2149   004AB2  C08C  F047         	movff	sprintf@s,sprintf@f
  2150   004AB6  0E00               	movlw	0
  2151   004AB8  6E4A               	movwf	(sprintf@f+3)^0,c
  2152   004ABA  0E00               	movlw	0
  2153   004ABC  6E49               	movwf	(sprintf@f+2)^0,c
  2154   004ABE  0E00               	movlw	0
  2155   004AC0  6E51               	movwf	(sprintf@f+10)^0,c
  2156   004AC2  0E00               	movlw	0
  2157   004AC4  6E50               	movwf	(sprintf@f+9)^0,c
  2158   004AC6  0E47               	movlw	low sprintf@f
  2159   004AC8  6E42               	movwf	vfprintf@fp^0,c
  2160   004ACA  C08D  F043         	movff	sprintf@fmt,vfprintf@fmt
  2161   004ACE  0E46               	movlw	low sprintf@ap
  2162   004AD0  6E44               	movwf	vfprintf@ap^0,c
  2163   004AD2  ECD9  F024         	call	_vfprintf	;wreg free
  2164   004AD6  0100               	movlb	0	; () banked
  2165   004AD8  518C               	movf	sprintf@s& (0+255),w,b
  2166   004ADA  2449               	addwf	(sprintf@f+2)^0,w,c
  2167   004ADC  6ED9               	movwf	fsr2l,c
  2168   004ADE  6ADA               	clrf	fsr2h,c
  2169   004AE0  6ADF               	clrf	indf2,c
  2170   004AE2                     
  2171                           ; BSR set to: 0
  2172   004AE2  0012               	return		;funcret
  2173   004AE4                     __end_of_sprintf:
  2174                           	callstack 0
  2175                           
  2176 ;; *************** function _vfprintf *****************
  2177 ;; Defined at:
  2178 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;  fp              1   65[COMRAM] PTR struct _IO_FILE
  2181 ;;		 -> sprintf@f(11), 
  2182 ;;  fmt             1   66[COMRAM] PTR const unsigned char 
  2183 ;;		 -> STR_6(3), STR_5(3), STR_3(5), 
  2184 ;;  ap              1   67[COMRAM] PTR PTR void 
  2185 ;;		 -> sprintf@ap(1), 
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;  cfmt            1   68[COMRAM] PTR unsigned char 
  2188 ;;		 -> STR_6(3), STR_5(3), STR_3(5), 
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  2   65[COMRAM] int 
  2191 ;; Registers used:
  2192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2198 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2199 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2201 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2202 ;;Total ram usage:        4 bytes
  2203 ;; Hardware stack levels used: 1
  2204 ;; Hardware stack levels required when called: 7
  2205 ;; This function calls:
  2206 ;;		_vfpfcnvrt
  2207 ;; This function is called by:
  2208 ;;		_sprintf
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           	psect	text3
  2213   0049B2                     __ptext3:
  2214                           	callstack 0
  2215   0049B2                     _vfprintf:
  2216                           	callstack 21
  2217   0049B2                     
  2218                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2219   0049B2  C043  F045         	movff	vfprintf@fmt,vfprintf@cfmt
  2220                           
  2221                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2222   0049B6  EFE5  F024         	goto	l3736
  2223   0049BA                     l3734:
  2224                           
  2225                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2226   0049BA  C042  F038         	movff	vfprintf@fp,vfpfcnvrt@fp
  2227   0049BE  0E45               	movlw	low vfprintf@cfmt
  2228   0049C0  6E39               	movwf	vfpfcnvrt@fmt^0,c
  2229   0049C2  C044  F03A         	movff	vfprintf@ap,vfpfcnvrt@ap
  2230   0049C6  EC50  F01B         	call	_vfpfcnvrt	;wreg free
  2231   0049CA                     l3736:
  2232                           
  2233                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2234   0049CA  0060  F117  FFF6   	movff	vfprintf@cfmt,tblptrl
  2235   0049D0                     	if	1	;There is more than 1 active tblptr byte
  2236   0049D0  0E20               	movlw	high __smallconst
  2237   0049D2  6EF7               	movwf	tblptrh,c
  2238   0049D4                     	endif
  2239   0049D4                     	if	0	;tblptru may be non-zero
  2240   0049D4                     	endif
  2241   0049D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2242   0049D4  0E00               	movlw	low (__smallconst shr (0+16))
  2243   0049D6  6EF8               	movwf	tblptru,c
  2244   0049D8                     	endif
  2245   0049D8  0008               	tblrd		*
  2246   0049DA  50F5               	movf	tablat,w,c
  2247   0049DC  0900               	iorlw	0
  2248   0049DE  A4D8               	btfss	status,2,c
  2249   0049E0  EFF4  F024         	goto	u4001
  2250   0049E4  EFF6  F024         	goto	u4000
  2251   0049E8                     u4001:
  2252   0049E8  EFDD  F024         	goto	l3734
  2253   0049EC                     u4000:
  2254   0049EC                     
  2255                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2256   0049EC  0E00               	movlw	0
  2257   0049EE  6E43               	movwf	(?_vfprintf+1)^0,c
  2258   0049F0  0E00               	movlw	0
  2259   0049F2  6E42               	movwf	?_vfprintf^0,c
  2260   0049F4  0012               	return		;funcret
  2261   0049F6                     __end_of_vfprintf:
  2262                           	callstack 0
  2263                           
  2264 ;; *************** function _vfpfcnvrt *****************
  2265 ;; Defined at:
  2266 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;  fp              1   55[COMRAM] PTR struct _IO_FILE
  2269 ;;		 -> sprintf@f(11), 
  2270 ;;  fmt             1   56[COMRAM] PTR PTR unsigned char 
  2271 ;;		 -> vfprintf@cfmt(1), 
  2272 ;;  ap              1   57[COMRAM] PTR PTR void 
  2273 ;;		 -> sprintf@ap(1), 
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;  convarg         4   59[COMRAM] struct .
  2276 ;;  cp              1   64[COMRAM] PTR unsigned char 
  2277 ;;		 -> STR_6(3), STR_5(3), STR_3(5), 
  2278 ;;  c               1   63[COMRAM] unsigned char 
  2279 ;;  done            1    0        _Bool 
  2280 ;; Return value:  Size  Location     Type
  2281 ;;                  1    wreg      void 
  2282 ;; Registers used:
  2283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2289 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2290 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2291 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2292 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2293 ;;Total ram usage:       10 bytes
  2294 ;; Hardware stack levels used: 1
  2295 ;; Hardware stack levels required when called: 6
  2296 ;; This function calls:
  2297 ;;		_dtoa
  2298 ;;		_efgtoa
  2299 ;;		_fputc
  2300 ;;		_read_prec_or_width
  2301 ;; This function is called by:
  2302 ;;		_vfprintf
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           
  2306                           	psect	text4
  2307   0036A0                     __ptext4:
  2308                           	callstack 0
  2309   0036A0                     _vfpfcnvrt:
  2310                           	callstack 21
  2311   0036A0                     
  2312                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2313   0036A0  5039               	movf	vfpfcnvrt@fmt^0,w,c
  2314   0036A2  6ED9               	movwf	fsr2l,c
  2315   0036A4  6ADA               	clrf	fsr2h,c
  2316   0036A6  006F FF7F FFF6     	movff	indf2,tblptrl
  2317   0036AC                     	if	1	;There is more than 1 active tblptr byte
  2318   0036AC  0E20               	movlw	high __smallconst
  2319   0036AE  6EF7               	movwf	tblptrh,c
  2320   0036B0                     	endif
  2321   0036B0                     	if	0	;tblptru may be non-zero
  2322   0036B0                     	endif
  2323   0036B0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2324   0036B0  0E00               	movlw	low (__smallconst shr (0+16))
  2325   0036B2  6EF8               	movwf	tblptru,c
  2326   0036B4                     	endif
  2327   0036B4  0008               	tblrd		*
  2328   0036B6  50F5               	movf	tablat,w,c
  2329   0036B8  0A25               	xorlw	37
  2330   0036BA  A4D8               	btfss	status,2,c
  2331   0036BC  EF62  F01B         	goto	u3921
  2332   0036C0  EF64  F01B         	goto	u3920
  2333   0036C4                     u3921:
  2334   0036C4  EF87  F01C         	goto	l3702
  2335   0036C8                     u3920:
  2336   0036C8                     
  2337                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2338   0036C8  5039               	movf	vfpfcnvrt@fmt^0,w,c
  2339   0036CA  6ED9               	movwf	fsr2l,c
  2340   0036CC  6ADA               	clrf	fsr2h,c
  2341   0036CE  2ADF               	incf	indf2,f,c
  2342   0036D0                     
  2343                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2344   0036D0  0E00               	movlw	0
  2345   0036D2  0100               	movlb	0	; () banked
  2346   0036D4  6FD0               	movwf	(_width+1)& (0+255),b
  2347   0036D6  0E00               	movlw	0
  2348   0036D8  6FCF               	movwf	_width& (0+255),b
  2349   0036DA  C0CF  F05C         	movff	_width,_flags
  2350   0036DE                     
  2351                           ; BSR set to: 0
  2352                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2353   0036DE  69D1               	setf	_prec& (0+255),b
  2354   0036E0  69D2               	setf	(_prec+1)& (0+255),b
  2355   0036E2                     
  2356                           ; BSR set to: 0
  2357                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  2358   0036E2  5039               	movf	vfpfcnvrt@fmt^0,w,c
  2359   0036E4  6ED9               	movwf	fsr2l,c
  2360   0036E6  6ADA               	clrf	fsr2h,c
  2361   0036E8  006F FF7F FFF6     	movff	indf2,tblptrl
  2362   0036EE                     	if	1	;There is more than 1 active tblptr byte
  2363   0036EE  0E20               	movlw	high __smallconst
  2364   0036F0  6EF7               	movwf	tblptrh,c
  2365   0036F2                     	endif
  2366   0036F2                     	if	0	;tblptru may be non-zero
  2367   0036F2                     	endif
  2368   0036F2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2369   0036F2  0E00               	movlw	low (__smallconst shr (0+16))
  2370   0036F4  6EF8               	movwf	tblptru,c
  2371   0036F6                     	endif
  2372   0036F6  0008               	tblrd		*
  2373   0036F8  50F5               	movf	tablat,w,c
  2374   0036FA  0A2E               	xorlw	46
  2375   0036FC  A4D8               	btfss	status,2,c
  2376   0036FE  EF83  F01B         	goto	u3931
  2377   003702  EF85  F01B         	goto	u3930
  2378   003706                     u3931:
  2379   003706  EF93  F01B         	goto	l3652
  2380   00370A                     u3930:
  2381   00370A                     
  2382                           ; BSR set to: 0
  2383                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  2384   00370A  5039               	movf	vfpfcnvrt@fmt^0,w,c
  2385   00370C  6ED9               	movwf	fsr2l,c
  2386   00370E  6ADA               	clrf	fsr2h,c
  2387   003710  2ADF               	incf	indf2,f,c
  2388   003712                     
  2389                           ; BSR set to: 0
  2390                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  2391   003712  C039  F003         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2392   003716  C03A  F004         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2393   00371A  EC4E  F021         	call	_read_prec_or_width	;wreg free
  2394   00371E  C003  F0D1         	movff	?_read_prec_or_width,_prec
  2395   003722  C004  F0D2         	movff	?_read_prec_or_width+1,_prec+1
  2396   003726                     l3652:
  2397                           
  2398                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2399   003726  5039               	movf	vfpfcnvrt@fmt^0,w,c
  2400   003728  6ED9               	movwf	fsr2l,c
  2401   00372A  6ADA               	clrf	fsr2h,c
  2402   00372C  50DF               	movf	indf2,w,c
  2403   00372E  6E41               	movwf	vfpfcnvrt@cp^0,c
  2404   003730                     
  2405                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2406   003730  0060  F107  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2407   003736                     	if	1	;There is more than 1 active tblptr byte
  2408   003736  0E20               	movlw	high __smallconst
  2409   003738  6EF7               	movwf	tblptrh,c
  2410   00373A                     	endif
  2411   00373A                     	if	0	;tblptru may be non-zero
  2412   00373A                     	endif
  2413   00373A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2414   00373A  0E00               	movlw	low (__smallconst shr (0+16))
  2415   00373C  6EF8               	movwf	tblptru,c
  2416   00373E                     	endif
  2417   00373E  0008               	tblrd		*
  2418   003740  50F5               	movf	tablat,w,c
  2419   003742  0A64               	xorlw	100
  2420   003744  B4D8               	btfsc	status,2,c
  2421   003746  EFA7  F01B         	goto	u3941
  2422   00374A  EFA9  F01B         	goto	u3940
  2423   00374E                     u3941:
  2424   00374E  EFBA  F01B         	goto	l3658
  2425   003752                     u3940:
  2426   003752  0060  F107  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2427   003758                     	if	1	;There is more than 1 active tblptr byte
  2428   003758  0E20               	movlw	high __smallconst
  2429   00375A  6EF7               	movwf	tblptrh,c
  2430   00375C                     	endif
  2431   00375C                     	if	0	;tblptru may be non-zero
  2432   00375C                     	endif
  2433   00375C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2434   00375C  0E00               	movlw	low (__smallconst shr (0+16))
  2435   00375E  6EF8               	movwf	tblptru,c
  2436   003760                     	endif
  2437   003760  0008               	tblrd		*
  2438   003762  50F5               	movf	tablat,w,c
  2439   003764  0A69               	xorlw	105
  2440   003766  A4D8               	btfss	status,2,c
  2441   003768  EFB8  F01B         	goto	u3951
  2442   00376C  EFBA  F01B         	goto	u3950
  2443   003770                     u3951:
  2444   003770  EFD7  F01B         	goto	l3666
  2445   003774                     u3950:
  2446   003774                     l3658:
  2447                           
  2448                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2449   003774  503A               	movf	vfpfcnvrt@ap^0,w,c
  2450   003776  6ED9               	movwf	fsr2l,c
  2451   003778  6ADA               	clrf	fsr2h,c
  2452   00377A  0E02               	movlw	2
  2453   00377C  26DF               	addwf	indf2,f,c
  2454   00377E  5CDF               	subwf	indf2,w,c
  2455   003780  6ED9               	movwf	fsr2l,c
  2456   003782  6ADA               	clrf	fsr2h,c
  2457   003784  006F FF78  F03C    	movff	postinc2,vfpfcnvrt@convarg
  2458   00378A  006F FF78  F03D    	movff	postinc2,vfpfcnvrt@convarg+1
  2459   003790                     
  2460                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2461   003790  5039               	movf	vfpfcnvrt@fmt^0,w,c
  2462   003792  6ED9               	movwf	fsr2l,c
  2463   003794  6ADA               	clrf	fsr2h,c
  2464   003796  2841               	incf	vfpfcnvrt@cp^0,w,c
  2465   003798  6EDF               	movwf	indf2,c
  2466   00379A                     
  2467                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2468   00379A  C038  F019         	movff	vfpfcnvrt@fp,dtoa@fp
  2469   00379E  C03C  F01A         	movff	vfpfcnvrt@convarg,dtoa@d
  2470   0037A2  C03D  F01B         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2471   0037A6  ECAC  F01E         	call	_dtoa	;wreg free
  2472   0037AA  EF9B  F01C         	goto	l1038
  2473   0037AE                     l3666:
  2474                           
  2475                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  2476   0037AE  5039               	movf	vfpfcnvrt@fmt^0,w,c
  2477   0037B0  6ED9               	movwf	fsr2l,c
  2478   0037B2  6ADA               	clrf	fsr2h,c
  2479   0037B4  50DF               	movf	indf2,w,c
  2480   0037B6  6E41               	movwf	vfpfcnvrt@cp^0,c
  2481   0037B8                     
  2482                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  2483   0037B8  0060  F107  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2484   0037BE                     	if	1	;There is more than 1 active tblptr byte
  2485   0037BE  0E20               	movlw	high __smallconst
  2486   0037C0  6EF7               	movwf	tblptrh,c
  2487   0037C2                     	endif
  2488   0037C2                     	if	0	;tblptru may be non-zero
  2489   0037C2                     	endif
  2490   0037C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2491   0037C2  0E00               	movlw	low (__smallconst shr (0+16))
  2492   0037C4  6EF8               	movwf	tblptru,c
  2493   0037C6                     	endif
  2494   0037C6  0008               	tblrd		*
  2495   0037C8  006F FFD4  F040    	movff	tablat,vfpfcnvrt@c
  2496                           
  2497                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  2498   0037CE  EFF3  F01B         	goto	l3676
  2499   0037D2                     l3670:
  2500                           
  2501                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  2502   0037D2  2A41               	incf	vfpfcnvrt@cp^0,f,c
  2503                           
  2504                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1696:     break;
  2505   0037D4  EF02  F01C         	goto	l3678
  2506   0037D8                     l3672:
  2507                           
  2508                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  2509   0037D8  0E6C               	movlw	108
  2510   0037DA  6E40               	movwf	vfpfcnvrt@c^0,c
  2511                           
  2512                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1722:     break;
  2513   0037DC  EF02  F01C         	goto	l3678
  2514   0037E0                     l1044:
  2515                           
  2516                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  2517   0037E0  6A40               	clrf	vfpfcnvrt@c^0,c
  2518                           
  2519                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1725:     break;
  2520   0037E2  EF02  F01C         	goto	l3678
  2521   0037E6                     l3676:
  2522   0037E6  5040               	movf	vfpfcnvrt@c^0,w,c
  2523                           
  2524                           ; Switch size 1, requested type "simple"
  2525                           ; Number of cases is 3, Range of values is 76 to 108
  2526                           ; switch strategies available:
  2527                           ; Name         Instructions Cycles
  2528                           ; simple_byte           10     6 (average)
  2529                           ;	Chosen strategy is simple_byte
  2530   0037E8  0A4C               	xorlw	76	; case 76
  2531   0037EA  B4D8               	btfsc	status,2,c
  2532   0037EC  EFE9  F01B         	goto	l3670
  2533   0037F0  0A2A               	xorlw	42	; case 102
  2534   0037F2  B4D8               	btfsc	status,2,c
  2535   0037F4  EFEC  F01B         	goto	l3672
  2536   0037F8  0A0A               	xorlw	10	; case 108
  2537   0037FA  B4D8               	btfsc	status,2,c
  2538   0037FC  EFE9  F01B         	goto	l3670
  2539   003800  EFF0  F01B         	goto	l1044
  2540   003804                     l3678:
  2541   003804  0060  F107  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2542   00380A                     	if	1	;There is more than 1 active tblptr byte
  2543   00380A  0E20               	movlw	high __smallconst
  2544   00380C  6EF7               	movwf	tblptrh,c
  2545   00380E                     	endif
  2546   00380E                     	if	0	;tblptru may be non-zero
  2547   00380E                     	endif
  2548   00380E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2549   00380E  0E00               	movlw	low (__smallconst shr (0+16))
  2550   003810  6EF8               	movwf	tblptru,c
  2551   003812                     	endif
  2552   003812  0008               	tblrd		*
  2553   003814  50F5               	movf	tablat,w,c
  2554   003816  0A66               	xorlw	102
  2555   003818  A4D8               	btfss	status,2,c
  2556   00381A  EF11  F01C         	goto	u3961
  2557   00381E  EF13  F01C         	goto	u3960
  2558   003822                     u3961:
  2559   003822  EF81  F01C         	goto	l3698
  2560   003826                     u3960:
  2561   003826  EF47  F01C         	goto	l3686
  2562   00382A                     l3680:
  2563                           
  2564                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2565   00382A  503A               	movf	vfpfcnvrt@ap^0,w,c
  2566   00382C  6ED9               	movwf	fsr2l,c
  2567   00382E  6ADA               	clrf	fsr2h,c
  2568   003830  006F FF7C  F03B    	movff	indf2,??_vfpfcnvrt
  2569   003836  0E04               	movlw	4
  2570   003838  26DF               	addwf	indf2,f,c
  2571   00383A  503B               	movf	??_vfpfcnvrt^0,w,c
  2572   00383C  6ED9               	movwf	fsr2l,c
  2573   00383E  6ADA               	clrf	fsr2h,c
  2574   003840  006F FF78  F03C    	movff	postinc2,vfpfcnvrt@convarg
  2575   003846  006F FF78  F03D    	movff	postinc2,vfpfcnvrt@convarg+1
  2576   00384C  006F FF78  F03E    	movff	postinc2,vfpfcnvrt@convarg+2
  2577   003852  006F FF78  F03F    	movff	postinc2,vfpfcnvrt@convarg+3
  2578                           
  2579                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1757:      break;
  2580   003858  EF52  F01C         	goto	l3688
  2581   00385C                     l3682:
  2582                           
  2583                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2584   00385C  503A               	movf	vfpfcnvrt@ap^0,w,c
  2585   00385E  6ED9               	movwf	fsr2l,c
  2586   003860  6ADA               	clrf	fsr2h,c
  2587   003862  006F FF7C  F03B    	movff	indf2,??_vfpfcnvrt
  2588   003868  0E04               	movlw	4
  2589   00386A  26DF               	addwf	indf2,f,c
  2590   00386C  503B               	movf	??_vfpfcnvrt^0,w,c
  2591   00386E  6ED9               	movwf	fsr2l,c
  2592   003870  6ADA               	clrf	fsr2h,c
  2593   003872  006F FF78  F03C    	movff	postinc2,vfpfcnvrt@convarg
  2594   003878  006F FF78  F03D    	movff	postinc2,vfpfcnvrt@convarg+1
  2595   00387E  006F FF78  F03E    	movff	postinc2,vfpfcnvrt@convarg+2
  2596   003884  006F FF78  F03F    	movff	postinc2,vfpfcnvrt@convarg+3
  2597                           
  2598                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1760:      break;
  2599   00388A  EF52  F01C         	goto	l3688
  2600   00388E                     l3686:
  2601   00388E  5040               	movf	vfpfcnvrt@c^0,w,c
  2602                           
  2603                           ; Switch size 1, requested type "simple"
  2604                           ; Number of cases is 2, Range of values is 76 to 108
  2605                           ; switch strategies available:
  2606                           ; Name         Instructions Cycles
  2607                           ; simple_byte            7     4 (average)
  2608                           ;	Chosen strategy is simple_byte
  2609   003890  0A4C               	xorlw	76	; case 76
  2610   003892  B4D8               	btfsc	status,2,c
  2611   003894  EF2E  F01C         	goto	l3682
  2612   003898  0A20               	xorlw	32	; case 108
  2613   00389A  B4D8               	btfsc	status,2,c
  2614   00389C  EF15  F01C         	goto	l3680
  2615   0038A0  EF52  F01C         	goto	l3688
  2616   0038A4                     l3688:
  2617                           
  2618                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  2619   0038A4  5039               	movf	vfpfcnvrt@fmt^0,w,c
  2620   0038A6  6ED9               	movwf	fsr2l,c
  2621   0038A8  6ADA               	clrf	fsr2h,c
  2622   0038AA  2841               	incf	vfpfcnvrt@cp^0,w,c
  2623   0038AC  6EDF               	movwf	indf2,c
  2624                           
  2625                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  2626   0038AE  EF72  F01C         	goto	l3696
  2627   0038B2                     l3690:
  2628                           
  2629                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2630   0038B2  C038  F030         	movff	vfpfcnvrt@fp,efgtoa@fp
  2631   0038B6  C03C  F031         	movff	vfpfcnvrt@convarg,efgtoa@f
  2632   0038BA  C03D  F032         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2633   0038BE  C03E  F033         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2634   0038C2  C03F  F034         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2635   0038C6  0060  F107  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2636   0038CC                     	if	1	;There is more than 1 active tblptr byte
  2637   0038CC  0E20               	movlw	high __smallconst
  2638   0038CE  6EF7               	movwf	tblptrh,c
  2639   0038D0                     	endif
  2640   0038D0                     	if	0	;tblptru may be non-zero
  2641   0038D0                     	endif
  2642   0038D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2643   0038D0  0E00               	movlw	low (__smallconst shr (0+16))
  2644   0038D2  6EF8               	movwf	tblptru,c
  2645   0038D4                     	endif
  2646   0038D4  0008               	tblrd		*
  2647   0038D6  006F FFD4  F035    	movff	tablat,efgtoa@c
  2648   0038DC  EC15  F010         	call	_efgtoa	;wreg free
  2649   0038E0  EF9B  F01C         	goto	l1038
  2650   0038E4                     l3696:
  2651   0038E4  0060  F107  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2652   0038EA                     	if	1	;There is more than 1 active tblptr byte
  2653   0038EA  0E20               	movlw	high __smallconst
  2654   0038EC  6EF7               	movwf	tblptrh,c
  2655   0038EE                     	endif
  2656   0038EE                     	if	0	;tblptru may be non-zero
  2657   0038EE                     	endif
  2658   0038EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2659   0038EE  0E00               	movlw	low (__smallconst shr (0+16))
  2660   0038F0  6EF8               	movwf	tblptru,c
  2661   0038F2                     	endif
  2662   0038F2  0008               	tblrd		*
  2663   0038F4  50F5               	movf	tablat,w,c
  2664                           
  2665                           ; Switch size 1, requested type "simple"
  2666                           ; Number of cases is 1, Range of values is 102 to 102
  2667                           ; switch strategies available:
  2668                           ; Name         Instructions Cycles
  2669                           ; simple_byte            4     3 (average)
  2670                           ;	Chosen strategy is simple_byte
  2671   0038F6  0A66               	xorlw	102	; case 102
  2672   0038F8  B4D8               	btfsc	status,2,c
  2673   0038FA  EF59  F01C         	goto	l3690
  2674   0038FE  EF81  F01C         	goto	l3698
  2675   003902                     l3698:
  2676                           
  2677                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2678   003902  5039               	movf	vfpfcnvrt@fmt^0,w,c
  2679   003904  6ED9               	movwf	fsr2l,c
  2680   003906  6ADA               	clrf	fsr2h,c
  2681   003908  2ADF               	incf	indf2,f,c
  2682   00390A  EF9B  F01C         	goto	l1038
  2683   00390E                     l3702:
  2684                           
  2685                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2686   00390E  5039               	movf	vfpfcnvrt@fmt^0,w,c
  2687   003910  6ED9               	movwf	fsr2l,c
  2688   003912  6ADA               	clrf	fsr2h,c
  2689   003914  006F FF7F FFF6     	movff	indf2,tblptrl
  2690   00391A                     	if	1	;There is more than 1 active tblptr byte
  2691   00391A  0E20               	movlw	high __smallconst
  2692   00391C  6EF7               	movwf	tblptrh,c
  2693   00391E                     	endif
  2694   00391E                     	if	0	;tblptru may be non-zero
  2695   00391E                     	endif
  2696   00391E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2697   00391E  0E00               	movlw	low (__smallconst shr (0+16))
  2698   003920  6EF8               	movwf	tblptru,c
  2699   003922                     	endif
  2700   003922  0008               	tblrd		*
  2701   003924  50F5               	movf	tablat,w,c
  2702   003926  6E03               	movwf	fputc@c^0,c
  2703   003928  6A04               	clrf	(fputc@c+1)^0,c
  2704   00392A  C038  F005         	movff	vfpfcnvrt@fp,fputc@fp
  2705   00392E  EC01  F022         	call	_fputc	;wreg free
  2706   003932  EF81  F01C         	goto	l3698
  2707   003936                     l1038:
  2708   003936  0012               	return		;funcret
  2709   003938                     __end_of_vfpfcnvrt:
  2710                           	callstack 0
  2711                           
  2712 ;; *************** function _read_prec_or_width *****************
  2713 ;; Defined at:
  2714 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2715 ;; Parameters:    Size  Location     Type
  2716 ;;  fmt             1    2[COMRAM] PTR PTR const unsigned c
  2717 ;;		 -> vfprintf@cfmt(1), 
  2718 ;;  ap              1    3[COMRAM] PTR PTR void [1]
  2719 ;;		 -> sprintf@ap(1), 
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;  c               1    6[COMRAM] unsigned char 
  2722 ;;  n               2    7[COMRAM] int 
  2723 ;; Return value:  Size  Location     Type
  2724 ;;                  2    2[COMRAM] int 
  2725 ;; Registers used:
  2726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2727 ;; Tracked objects:
  2728 ;;		On entry : 0/0
  2729 ;;		On exit  : 0/0
  2730 ;;		Unchanged: 0/0
  2731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2732 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2733 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2734 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2735 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2736 ;;Total ram usage:        7 bytes
  2737 ;; Hardware stack levels used: 1
  2738 ;; Hardware stack levels required when called: 1
  2739 ;; This function calls:
  2740 ;;		Nothing
  2741 ;; This function is called by:
  2742 ;;		_vfpfcnvrt
  2743 ;; This function uses a non-reentrant model
  2744 ;;
  2745                           
  2746                           	psect	text5
  2747   00429C                     __ptext5:
  2748                           	callstack 0
  2749   00429C                     _read_prec_or_width:
  2750                           	callstack 25
  2751   00429C                     
  2752                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2753   00429C  0E00               	movlw	0
  2754   00429E  6E09               	movwf	(read_prec_or_width@n+1)^0,c
  2755   0042A0  0E00               	movlw	0
  2756   0042A2  6E08               	movwf	read_prec_or_width@n^0,c
  2757   0042A4                     
  2758                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2759   0042A4  5003               	movf	read_prec_or_width@fmt^0,w,c
  2760   0042A6  6ED9               	movwf	fsr2l,c
  2761   0042A8  6ADA               	clrf	fsr2h,c
  2762   0042AA  006F FF7F FFF6     	movff	indf2,tblptrl
  2763   0042B0                     	if	1	;There is more than 1 active tblptr byte
  2764   0042B0  0E20               	movlw	high __smallconst
  2765   0042B2  6EF7               	movwf	tblptrh,c
  2766   0042B4                     	endif
  2767   0042B4                     	if	0	;tblptru may be non-zero
  2768   0042B4                     	endif
  2769   0042B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2770   0042B4  0E00               	movlw	low (__smallconst shr (0+16))
  2771   0042B6  6EF8               	movwf	tblptru,c
  2772   0042B8                     	endif
  2773   0042B8  0008               	tblrd		*
  2774   0042BA  50F5               	movf	tablat,w,c
  2775   0042BC  0A2A               	xorlw	42
  2776   0042BE  A4D8               	btfss	status,2,c
  2777   0042C0  EF64  F021         	goto	u3901
  2778   0042C4  EF66  F021         	goto	u3900
  2779   0042C8                     u3901:
  2780   0042C8  EF8F  F021         	goto	l3624
  2781   0042CC                     u3900:
  2782   0042CC                     
  2783                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2784   0042CC  5003               	movf	read_prec_or_width@fmt^0,w,c
  2785   0042CE  6ED9               	movwf	fsr2l,c
  2786   0042D0  6ADA               	clrf	fsr2h,c
  2787   0042D2  2ADF               	incf	indf2,f,c
  2788   0042D4                     
  2789                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2790   0042D4  5004               	movf	read_prec_or_width@ap^0,w,c
  2791   0042D6  6ED9               	movwf	fsr2l,c
  2792   0042D8  6ADA               	clrf	fsr2h,c
  2793   0042DA  0E02               	movlw	2
  2794   0042DC  26DF               	addwf	indf2,f,c
  2795   0042DE  5CDF               	subwf	indf2,w,c
  2796   0042E0  6ED9               	movwf	fsr2l,c
  2797   0042E2  6ADA               	clrf	fsr2h,c
  2798   0042E4  006F FF78  F008    	movff	postinc2,read_prec_or_width@n
  2799   0042EA  006F FF78  F009    	movff	postinc2,read_prec_or_width@n+1
  2800                           
  2801                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2802   0042F0  EFA5  F021         	goto	l1026
  2803   0042F4                     l3620:
  2804                           
  2805                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2806   0042F4  0E0A               	movlw	10
  2807   0042F6  0208               	mulwf	read_prec_or_width@n^0,c
  2808   0042F8  006F FFCC  F005    	movff	prodl,??_read_prec_or_width
  2809   0042FE  006F FFD0  F006    	movff	prodh,??_read_prec_or_width+1
  2810   004304  0209               	mulwf	(read_prec_or_width@n+1)^0,c
  2811   004306  50F3               	movf	prodl,w,c
  2812   004308  2606               	addwf	(??_read_prec_or_width+1)^0,f,c
  2813   00430A  5007               	movf	read_prec_or_width@c^0,w,c
  2814   00430C  2405               	addwf	??_read_prec_or_width^0,w,c
  2815   00430E  6E08               	movwf	read_prec_or_width@n^0,c
  2816   004310  0E00               	movlw	0
  2817   004312  2006               	addwfc	(??_read_prec_or_width+1)^0,w,c
  2818   004314  6E09               	movwf	(read_prec_or_width@n+1)^0,c
  2819   004316                     
  2820                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2821   004316  5003               	movf	read_prec_or_width@fmt^0,w,c
  2822   004318  6ED9               	movwf	fsr2l,c
  2823   00431A  6ADA               	clrf	fsr2h,c
  2824   00431C  2ADF               	incf	indf2,f,c
  2825   00431E                     l3624:
  2826                           
  2827                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2828   00431E  5003               	movf	read_prec_or_width@fmt^0,w,c
  2829   004320  6ED9               	movwf	fsr2l,c
  2830   004322  6ADA               	clrf	fsr2h,c
  2831   004324  006F FF7F FFF6     	movff	indf2,tblptrl
  2832   00432A                     	if	1	;There is more than 1 active tblptr byte
  2833   00432A  0E20               	movlw	high __smallconst
  2834   00432C  6EF7               	movwf	tblptrh,c
  2835   00432E                     	endif
  2836   00432E                     	if	0	;tblptru may be non-zero
  2837   00432E                     	endif
  2838   00432E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2839   00432E  0E00               	movlw	low (__smallconst shr (0+16))
  2840   004330  6EF8               	movwf	tblptru,c
  2841   004332                     	endif
  2842   004332  0008               	tblrd		*
  2843   004334  50F5               	movf	tablat,w,c
  2844   004336  0FD0               	addlw	208
  2845   004338  6E07               	movwf	read_prec_or_width@c^0,c
  2846   00433A  0E09               	movlw	9
  2847   00433C  6407               	cpfsgt	read_prec_or_width@c^0,c
  2848   00433E  EFA3  F021         	goto	u3911
  2849   004342  EFA5  F021         	goto	u3910
  2850   004346                     u3911:
  2851   004346  EF7A  F021         	goto	l3620
  2852   00434A                     u3910:
  2853   00434A                     l1026:
  2854                           
  2855                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2856   00434A  C008  F003         	movff	read_prec_or_width@n,?_read_prec_or_width
  2857   00434E  C009  F004         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2858   004352  0012               	return		;funcret
  2859   004354                     __end_of_read_prec_or_width:
  2860                           	callstack 0
  2861                           
  2862 ;; *************** function _efgtoa *****************
  2863 ;; Defined at:
  2864 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;  fp              1   47[COMRAM] PTR struct _IO_FILE
  2867 ;;		 -> sprintf@f(11), 
  2868 ;;  f               4   48[COMRAM] PTR struct _IO_FILE
  2869 ;;  c               1   52[COMRAM] unsigned char 
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;  u               4   40[BANK0 ] struct flui
  2872 ;;  g               4   36[BANK0 ] struct flui
  2873 ;;  l               4   29[BANK0 ] struct flui
  2874 ;;  h               4   25[BANK0 ] struct flui
  2875 ;;  ou              4   19[BANK0 ] struct flui
  2876 ;;  n               2   34[BANK0 ] int 
  2877 ;;  i               2   23[BANK0 ] int 
  2878 ;;  w               2   17[BANK0 ] int 
  2879 ;;  e               2   15[BANK0 ] int 
  2880 ;;  m               2   13[BANK0 ] int 
  2881 ;;  d               2   11[BANK0 ] int 
  2882 ;;  t               2    4[BANK0 ] int 
  2883 ;;  p               2    2[BANK0 ] int 
  2884 ;;  ne              2    0[BANK0 ] int 
  2885 ;;  sign            1   33[BANK0 ] unsigned char 
  2886 ;;  nmode           1   10[BANK0 ] unsigned char 
  2887 ;;  mode            1    9[BANK0 ] unsigned char 
  2888 ;;  pp              1    8[BANK0 ] unsigned char 
  2889 ;;  esign           1    0        unsigned char 
  2890 ;; Return value:  Size  Location     Type
  2891 ;;                  1    wreg      void 
  2892 ;; Registers used:
  2893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2894 ;; Tracked objects:
  2895 ;;		On entry : 0/0
  2896 ;;		On exit  : 0/0
  2897 ;;		Unchanged: 0/0
  2898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2899 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2900 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2901 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2902 ;;      Totals:         8      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2903 ;;Total ram usage:       52 bytes
  2904 ;; Hardware stack levels used: 1
  2905 ;; Hardware stack levels required when called: 5
  2906 ;; This function calls:
  2907 ;;		___fladd
  2908 ;;		___fldiv
  2909 ;;		___fleq
  2910 ;;		___flge
  2911 ;;		___flmul
  2912 ;;		___flneg
  2913 ;;		___flsub
  2914 ;;		___fltol
  2915 ;;		___fpclassifyf
  2916 ;;		_floorf
  2917 ;;		_labs
  2918 ;;		_memcpy
  2919 ;;		_pad
  2920 ;;		_strcpy
  2921 ;; This function is called by:
  2922 ;;		_vfpfcnvrt
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           	psect	text6
  2927   00202A                     __ptext6:
  2928                           	callstack 0
  2929   00202A                     _efgtoa:
  2930                           	callstack 21
  2931   00202A                     
  2932                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v3.00\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v3
      +                          .00\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  2933   00202A  0100               	movlb	0	; () banked
  2934   00202C  6B81               	clrf	efgtoa@sign& (0+255),b
  2935                           
  2936                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  2937   00202E  C031  F084         	movff	efgtoa@f,efgtoa@g
  2938   002032  C032  F085         	movff	efgtoa@f+1,efgtoa@g+1
  2939   002036  C033  F086         	movff	efgtoa@f+2,efgtoa@g+2
  2940   00203A  C034  F087         	movff	efgtoa@f+3,efgtoa@g+3
  2941   00203E                     
  2942                           ; BSR set to: 0
  2943                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  2944   00203E  BF87               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2945   002040  EF26  F010         	goto	u3580
  2946   002044  EF24  F010         	goto	u3581
  2947   002048                     u3581:
  2948   002048  EF3A  F010         	goto	l3400
  2949   00204C                     u3580:
  2950   00204C                     
  2951                           ; BSR set to: 0
  2952                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  2953   00204C  0E01               	movlw	1
  2954   00204E  6F81               	movwf	efgtoa@sign& (0+255),b
  2955   002050                     
  2956                           ; BSR set to: 0
  2957                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  2958   002050  C084  F003         	movff	efgtoa@g,___flneg@f1
  2959   002054  C085  F004         	movff	efgtoa@g+1,___flneg@f1+1
  2960   002058  C086  F005         	movff	efgtoa@g+2,___flneg@f1+2
  2961   00205C  C087  F006         	movff	efgtoa@g+3,___flneg@f1+3
  2962   002060  EC3B  F025         	call	___flneg	;wreg free
  2963   002064  C003  F084         	movff	?___flneg,efgtoa@g
  2964   002068  C004  F085         	movff	?___flneg+1,efgtoa@g+1
  2965   00206C  C005  F086         	movff	?___flneg+2,efgtoa@g+2
  2966   002070  C006  F087         	movff	?___flneg+3,efgtoa@g+3
  2967   002074                     l3400:
  2968                           
  2969                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  2970   002074  0E00               	movlw	0
  2971   002076  0100               	movlb	0	; () banked
  2972   002078  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  2973   00207A  0E00               	movlw	0
  2974   00207C  6F82               	movwf	efgtoa@n& (0+255),b
  2975   00207E                     
  2976                           ; BSR set to: 0
  2977                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  2978   00207E  C0CF  F071         	movff	_width,efgtoa@w
  2979   002082  C0D0  F072         	movff	_width+1,efgtoa@w+1
  2980   002086                     
  2981                           ; BSR set to: 0
  2982                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 605:     if (sign
  2983   002086  5181               	movf	efgtoa@sign& (0+255),w,b
  2984   002088  B4D8               	btfsc	status,2,c
  2985   00208A  EF49  F010         	goto	u3591
  2986   00208E  EF4B  F010         	goto	u3590
  2987   002092                     u3591:
  2988   002092  EF5F  F010         	goto	l3414
  2989   002096                     u3590:
  2990   002096                     
  2991                           ; BSR set to: 0
  2992                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  2993   002096  5181               	movf	efgtoa@sign& (0+255),w,b
  2994   002098  A4D8               	btfss	status,2,c
  2995   00209A  EF51  F010         	goto	u3601
  2996   00209E  EF53  F010         	goto	u3600
  2997   0020A2                     u3601:
  2998   0020A2  EF59  F010         	goto	l3410
  2999   0020A6                     u3600:
  3000   0020A6                     
  3001                           ; BSR set to: 0
  3002   0020A6  0E00               	movlw	0
  3003   0020A8  6F67               	movwf	(_efgtoa$1333+1)& (0+255),b
  3004   0020AA  0E2B               	movlw	43
  3005   0020AC  6F66               	movwf	_efgtoa$1333& (0+255),b
  3006   0020AE  EF5D  F010         	goto	l3412
  3007   0020B2                     l3410:
  3008                           
  3009                           ; BSR set to: 0
  3010   0020B2  0E00               	movlw	0
  3011   0020B4  6F67               	movwf	(_efgtoa$1333+1)& (0+255),b
  3012   0020B6  0E2D               	movlw	45
  3013   0020B8  6F66               	movwf	_efgtoa$1333& (0+255),b
  3014   0020BA                     l3412:
  3015                           
  3016                           ; BSR set to: 0
  3017   0020BA  C066  F081         	movff	_efgtoa$1333,efgtoa@sign
  3018   0020BE                     l3414:
  3019                           
  3020                           ; BSR set to: 0
  3021                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3022   0020BE  C084  F003         	movff	efgtoa@g,___fpclassifyf@x
  3023   0020C2  C085  F004         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3024   0020C6  C086  F005         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3025   0020CA  C087  F006         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3026   0020CE  EC6E  F020         	call	___fpclassifyf	;wreg free
  3027   0020D2  0403               	decf	?___fpclassifyf^0,w,c
  3028   0020D4  1004               	iorwf	(?___fpclassifyf+1)^0,w,c
  3029   0020D6  A4D8               	btfss	status,2,c
  3030   0020D8  EF70  F010         	goto	u3611
  3031   0020DC  EF72  F010         	goto	u3610
  3032   0020E0                     u3611:
  3033   0020E0  EFA1  F010         	goto	l3432
  3034   0020E4                     u3610:
  3035   0020E4                     
  3036                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  3037   0020E4  0100               	movlb	0	; () banked
  3038   0020E6  5181               	movf	efgtoa@sign& (0+255),w,b
  3039   0020E8  B4D8               	btfsc	status,2,c
  3040   0020EA  EF79  F010         	goto	u3621
  3041   0020EE  EF7B  F010         	goto	u3620
  3042   0020F2                     u3621:
  3043   0020F2  EF84  F010         	goto	l3424
  3044   0020F6                     u3620:
  3045   0020F6                     
  3046                           ; BSR set to: 0
  3047                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  3048   0020F6  C081  F100         	movff	efgtoa@sign,_dbuf
  3049   0020FA                     
  3050                           ; BSR set to: 0
  3051                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 622:    w--;
  3052   0020FA  0771               	decf	efgtoa@w& (0+255),f,b
  3053   0020FC  A0D8               	btfss	status,0,c
  3054   0020FE  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3055   002100                     
  3056                           ; BSR set to: 0
  3057                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  3058   002100  0E00               	movlw	0
  3059   002102  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  3060   002104  0E01               	movlw	1
  3061   002106  6F82               	movwf	efgtoa@n& (0+255),b
  3062   002108                     l3424:
  3063                           
  3064                           ; BSR set to: 0
  3065                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  3066   002108  0E00               	movlw	low _dbuf
  3067   00210A  2582               	addwf	efgtoa@n& (0+255),w,b
  3068   00210C  6E03               	movwf	strcpy@dest^0,c
  3069   00210E  0E01               	movlw	high _dbuf
  3070   002110  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3071   002112  6E04               	movwf	(strcpy@dest+1)^0,c
  3072   002114  0E1B               	movlw	low STR_7
  3073   002116  6E05               	movwf	strcpy@src^0,c
  3074   002118  EC70  F024         	call	_strcpy	;wreg free
  3075   00211C                     l3426:
  3076                           
  3077                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3078   00211C  0100               	movlb	0	; () banked
  3079   00211E  0EFD               	movlw	253
  3080   002120  2771               	addwf	efgtoa@w& (0+255),f,b
  3081   002122  0EFF               	movlw	255
  3082   002124  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3083   002126                     
  3084                           ; BSR set to: 0
  3085                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3086   002126  C030  F011         	movff	efgtoa@fp,pad@fp
  3087   00212A  0E00               	movlw	low _dbuf
  3088   00212C  6E12               	movwf	pad@buf^0,c
  3089   00212E  0E01               	movlw	high _dbuf
  3090   002130  6E13               	movwf	(pad@buf+1)^0,c
  3091   002132  C071  F014         	movff	efgtoa@w,pad@p
  3092   002136  C072  F015         	movff	efgtoa@w+1,pad@p+1
  3093   00213A  EC6C  F023         	call	_pad	;wreg free
  3094   00213E  EF07  F015         	goto	l981
  3095   002142                     l3432:
  3096                           
  3097                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3098   002142  C084  F003         	movff	efgtoa@g,___fpclassifyf@x
  3099   002146  C085  F004         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3100   00214A  C086  F005         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3101   00214E  C087  F006         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3102   002152  EC6E  F020         	call	___fpclassifyf	;wreg free
  3103   002156  5003               	movf	?___fpclassifyf^0,w,c
  3104   002158  1004               	iorwf	(?___fpclassifyf+1)^0,w,c
  3105   00215A  A4D8               	btfss	status,2,c
  3106   00215C  EFB2  F010         	goto	u3631
  3107   002160  EFB4  F010         	goto	u3630
  3108   002164                     u3631:
  3109   002164  EFD2  F010         	goto	l3450
  3110   002168                     u3630:
  3111   002168                     
  3112                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  3113   002168  0100               	movlb	0	; () banked
  3114   00216A  5181               	movf	efgtoa@sign& (0+255),w,b
  3115   00216C  B4D8               	btfsc	status,2,c
  3116   00216E  EFBB  F010         	goto	u3641
  3117   002172  EFBD  F010         	goto	u3640
  3118   002176                     u3641:
  3119   002176  EFC6  F010         	goto	l3442
  3120   00217A                     u3640:
  3121   00217A                     
  3122                           ; BSR set to: 0
  3123                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  3124   00217A  C081  F100         	movff	efgtoa@sign,_dbuf
  3125   00217E                     
  3126                           ; BSR set to: 0
  3127                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 640:    w--;
  3128   00217E  0771               	decf	efgtoa@w& (0+255),f,b
  3129   002180  A0D8               	btfss	status,0,c
  3130   002182  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3131   002184                     
  3132                           ; BSR set to: 0
  3133                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  3134   002184  0E00               	movlw	0
  3135   002186  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  3136   002188  0E01               	movlw	1
  3137   00218A  6F82               	movwf	efgtoa@n& (0+255),b
  3138   00218C                     l3442:
  3139                           
  3140                           ; BSR set to: 0
  3141                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  3142   00218C  0E00               	movlw	low _dbuf
  3143   00218E  2582               	addwf	efgtoa@n& (0+255),w,b
  3144   002190  6E03               	movwf	strcpy@dest^0,c
  3145   002192  0E01               	movlw	high _dbuf
  3146   002194  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3147   002196  6E04               	movwf	(strcpy@dest+1)^0,c
  3148   002198  0E1F               	movlw	low STR_10
  3149   00219A  6E05               	movwf	strcpy@src^0,c
  3150   00219C  EC70  F024         	call	_strcpy	;wreg free
  3151   0021A0  EF8E  F010         	goto	l3426
  3152   0021A4                     l3450:
  3153                           
  3154                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  3155   0021A4  0E00               	movlw	0
  3156   0021A6  0100               	movlb	0	; () banked
  3157   0021A8  6F88               	movwf	efgtoa@u& (0+255),b
  3158   0021AA  0E00               	movlw	0
  3159   0021AC  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  3160   0021AE  0E80               	movlw	128
  3161   0021B0  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  3162   0021B2  0E3F               	movlw	63
  3163   0021B4  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  3164                           
  3165                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  3166   0021B6  0E00               	movlw	0
  3167   0021B8  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  3168   0021BA  0E00               	movlw	0
  3169   0021BC  6F6F               	movwf	efgtoa@e& (0+255),b
  3170   0021BE                     
  3171                           ; BSR set to: 0
  3172                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  3173   0021BE  C084  F003         	movff	efgtoa@g,___fleq@ff1
  3174   0021C2  C085  F004         	movff	efgtoa@g+1,___fleq@ff1+1
  3175   0021C6  C086  F005         	movff	efgtoa@g+2,___fleq@ff1+2
  3176   0021CA  C087  F006         	movff	efgtoa@g+3,___fleq@ff1+3
  3177   0021CE  0E00               	movlw	0
  3178   0021D0  6E07               	movwf	___fleq@ff2^0,c
  3179   0021D2  0E00               	movlw	0
  3180   0021D4  6E08               	movwf	(___fleq@ff2+1)^0,c
  3181   0021D6  0E00               	movlw	0
  3182   0021D8  6E09               	movwf	(___fleq@ff2+2)^0,c
  3183   0021DA  0E00               	movlw	0
  3184   0021DC  6E0A               	movwf	(___fleq@ff2+3)^0,c
  3185   0021DE  EC57  F022         	call	___fleq	;wreg free
  3186   0021E2  B0D8               	btfsc	status,0,c
  3187   0021E4  EFF6  F010         	goto	u3651
  3188   0021E8  EFF8  F010         	goto	u3650
  3189   0021EC                     u3651:
  3190   0021EC  EFD7  F011         	goto	l984
  3191   0021F0                     u3650:
  3192   0021F0  EF05  F011         	goto	l3458
  3193   0021F4                     l986:
  3194                           
  3195                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  3196   0021F4  C073  F088         	movff	efgtoa@ou,efgtoa@u
  3197   0021F8  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  3198   0021FC  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  3199   002200  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  3200   002204                     
  3201                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 662:    ++e;
  3202   002204  0100               	movlb	0	; () banked
  3203   002206  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  3204   002208  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  3205   00220A                     l3458:
  3206                           
  3207                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3208   00220A  C088  F003         	movff	efgtoa@u,___flmul@b
  3209   00220E  C089  F004         	movff	efgtoa@u+1,___flmul@b+1
  3210   002212  C08A  F005         	movff	efgtoa@u+2,___flmul@b+2
  3211   002216  C08B  F006         	movff	efgtoa@u+3,___flmul@b+3
  3212   00221A  0E00               	movlw	0
  3213   00221C  6E07               	movwf	___flmul@a^0,c
  3214   00221E  0E00               	movlw	0
  3215   002220  6E08               	movwf	(___flmul@a+1)^0,c
  3216   002222  0E20               	movlw	32
  3217   002224  6E09               	movwf	(___flmul@a+2)^0,c
  3218   002226  0E41               	movlw	65
  3219   002228  6E0A               	movwf	(___flmul@a+3)^0,c
  3220   00222A  EC63  F017         	call	___flmul	;wreg free
  3221   00222E  C003  F073         	movff	?___flmul,efgtoa@ou
  3222   002232  C004  F074         	movff	?___flmul+1,efgtoa@ou+1
  3223   002236  C005  F075         	movff	?___flmul+2,efgtoa@ou+2
  3224   00223A  C006  F076         	movff	?___flmul+3,efgtoa@ou+3
  3225   00223E  0100               	movlb	0	; () banked
  3226   002240  5173               	movf	efgtoa@ou& (0+255),w,b
  3227   002242  5D84               	subwf	efgtoa@g& (0+255),w,b
  3228   002244  6E03               	movwf	labs@a^0,c
  3229   002246  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  3230   002248  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3231   00224A  6E04               	movwf	(labs@a+1)^0,c
  3232   00224C  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  3233   00224E  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3234   002250  6E05               	movwf	(labs@a+2)^0,c
  3235   002252  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  3236   002254  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3237   002256  6E06               	movwf	(labs@a+3)^0,c
  3238   002258  ECF7  F023         	call	_labs	;wreg free
  3239   00225C  BE06               	btfsc	(?_labs+3)^0,7,c
  3240   00225E  EF3C  F011         	goto	u3661
  3241   002262  5006               	movf	(?_labs+3)^0,w,c
  3242   002264  1005               	iorwf	(?_labs+2)^0,w,c
  3243   002266  1004               	iorwf	(?_labs+1)^0,w,c
  3244   002268  E109               	bnz	u3660
  3245   00226A  0E02               	movlw	2
  3246   00226C  5C03               	subwf	?_labs^0,w,c
  3247   00226E  A0D8               	btfss	status,0,c
  3248   002270  EF3C  F011         	goto	u3661
  3249   002274  EF3E  F011         	goto	u3660
  3250   002278                     u3661:
  3251   002278  EFFA  F010         	goto	l986
  3252   00227C                     u3660:
  3253   00227C  C073  F01C         	movff	efgtoa@ou,___flge@ff1
  3254   002280  C074  F01D         	movff	efgtoa@ou+1,___flge@ff1+1
  3255   002284  C075  F01E         	movff	efgtoa@ou+2,___flge@ff1+2
  3256   002288  C076  F01F         	movff	efgtoa@ou+3,___flge@ff1+3
  3257   00228C  C084  F020         	movff	efgtoa@g,___flge@ff2
  3258   002290  C085  F021         	movff	efgtoa@g+1,___flge@ff2+1
  3259   002294  C086  F022         	movff	efgtoa@g+2,___flge@ff2+2
  3260   002298  C087  F023         	movff	efgtoa@g+3,___flge@ff2+3
  3261   00229C  ECEC  F01F         	call	___flge	;wreg free
  3262   0022A0  A0D8               	btfss	status,0,c
  3263   0022A2  EF55  F011         	goto	u3671
  3264   0022A6  EF57  F011         	goto	u3670
  3265   0022AA                     u3671:
  3266   0022AA  EFFA  F010         	goto	l986
  3267   0022AE                     u3670:
  3268   0022AE                     
  3269                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3270   0022AE  0100               	movlb	0	; () banked
  3271   0022B0  5188               	movf	efgtoa@u& (0+255),w,b
  3272   0022B2  5D84               	subwf	efgtoa@g& (0+255),w,b
  3273   0022B4  6E03               	movwf	labs@a^0,c
  3274   0022B6  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  3275   0022B8  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3276   0022BA  6E04               	movwf	(labs@a+1)^0,c
  3277   0022BC  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  3278   0022BE  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3279   0022C0  6E05               	movwf	(labs@a+2)^0,c
  3280   0022C2  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  3281   0022C4  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3282   0022C6  6E06               	movwf	(labs@a+3)^0,c
  3283   0022C8  ECF7  F023         	call	_labs	;wreg free
  3284   0022CC  BE06               	btfsc	(?_labs+3)^0,7,c
  3285   0022CE  EF76  F011         	goto	u3680
  3286   0022D2  5006               	movf	(?_labs+3)^0,w,c
  3287   0022D4  1005               	iorwf	(?_labs+2)^0,w,c
  3288   0022D6  1004               	iorwf	(?_labs+1)^0,w,c
  3289   0022D8  E107               	bnz	u3681
  3290   0022DA  0E02               	movlw	2
  3291   0022DC  5C03               	subwf	?_labs^0,w,c
  3292   0022DE  B0D8               	btfsc	status,0,c
  3293   0022E0  EF74  F011         	goto	u3681
  3294   0022E4  EF76  F011         	goto	u3680
  3295   0022E8                     u3681:
  3296   0022E8  EFBE  F011         	goto	l3476
  3297   0022EC                     u3680:
  3298   0022EC                     l3466:
  3299                           
  3300                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 665:    g = u;
  3301   0022EC  C088  F084         	movff	efgtoa@u,efgtoa@g
  3302   0022F0  C089  F085         	movff	efgtoa@u+1,efgtoa@g+1
  3303   0022F4  C08A  F086         	movff	efgtoa@u+2,efgtoa@g+2
  3304   0022F8  C08B  F087         	movff	efgtoa@u+3,efgtoa@g+3
  3305                           
  3306                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 666:   }
  3307   0022FC  EFD7  F011         	goto	l984
  3308   002300                     l3468:
  3309                           
  3310                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  3311   002300  C088  F003         	movff	efgtoa@u,___fldiv@b
  3312   002304  C089  F004         	movff	efgtoa@u+1,___fldiv@b+1
  3313   002308  C08A  F005         	movff	efgtoa@u+2,___fldiv@b+2
  3314   00230C  C08B  F006         	movff	efgtoa@u+3,___fldiv@b+3
  3315   002310  0E00               	movlw	0
  3316   002312  6E07               	movwf	___fldiv@a^0,c
  3317   002314  0E00               	movlw	0
  3318   002316  6E08               	movwf	(___fldiv@a+1)^0,c
  3319   002318  0E20               	movlw	32
  3320   00231A  6E09               	movwf	(___fldiv@a+2)^0,c
  3321   00231C  0E41               	movlw	65
  3322   00231E  6E0A               	movwf	(___fldiv@a+3)^0,c
  3323   002320  EC88  F019         	call	___fldiv	;wreg free
  3324   002324  C003  F088         	movff	?___fldiv,efgtoa@u
  3325   002328  C004  F089         	movff	?___fldiv+1,efgtoa@u+1
  3326   00232C  C005  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3327   002330  C006  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3328   002334                     
  3329                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 670:     --e;
  3330   002334  0100               	movlb	0	; () banked
  3331   002336  076F               	decf	efgtoa@e& (0+255),f,b
  3332   002338  A0D8               	btfss	status,0,c
  3333   00233A  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  3334   00233C                     
  3335                           ; BSR set to: 0
  3336                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3337   00233C  5188               	movf	efgtoa@u& (0+255),w,b
  3338   00233E  5D84               	subwf	efgtoa@g& (0+255),w,b
  3339   002340  6E03               	movwf	labs@a^0,c
  3340   002342  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  3341   002344  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3342   002346  6E04               	movwf	(labs@a+1)^0,c
  3343   002348  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  3344   00234A  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3345   00234C  6E05               	movwf	(labs@a+2)^0,c
  3346   00234E  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  3347   002350  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3348   002352  6E06               	movwf	(labs@a+3)^0,c
  3349   002354  ECF7  F023         	call	_labs	;wreg free
  3350   002358  BE06               	btfsc	(?_labs+3)^0,7,c
  3351   00235A  EFBC  F011         	goto	u3690
  3352   00235E  5006               	movf	(?_labs+3)^0,w,c
  3353   002360  1005               	iorwf	(?_labs+2)^0,w,c
  3354   002362  1004               	iorwf	(?_labs+1)^0,w,c
  3355   002364  E107               	bnz	u3691
  3356   002366  0E02               	movlw	2
  3357   002368  5C03               	subwf	?_labs^0,w,c
  3358   00236A  B0D8               	btfsc	status,0,c
  3359   00236C  EFBA  F011         	goto	u3691
  3360   002370  EFBC  F011         	goto	u3690
  3361   002374                     u3691:
  3362   002374  EFBE  F011         	goto	l3476
  3363   002378                     u3690:
  3364   002378  EF76  F011         	goto	l3466
  3365   00237C                     l3476:
  3366                           
  3367                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  3368   00237C  C084  F01C         	movff	efgtoa@g,___flge@ff1
  3369   002380  C085  F01D         	movff	efgtoa@g+1,___flge@ff1+1
  3370   002384  C086  F01E         	movff	efgtoa@g+2,___flge@ff1+2
  3371   002388  C087  F01F         	movff	efgtoa@g+3,___flge@ff1+3
  3372   00238C  C088  F020         	movff	efgtoa@u,___flge@ff2
  3373   002390  C089  F021         	movff	efgtoa@u+1,___flge@ff2+1
  3374   002394  C08A  F022         	movff	efgtoa@u+2,___flge@ff2+2
  3375   002398  C08B  F023         	movff	efgtoa@u+3,___flge@ff2+3
  3376   00239C  ECEC  F01F         	call	___flge	;wreg free
  3377   0023A0  A0D8               	btfss	status,0,c
  3378   0023A2  EFD5  F011         	goto	u3701
  3379   0023A6  EFD7  F011         	goto	u3700
  3380   0023AA                     u3701:
  3381   0023AA  EF80  F011         	goto	l3468
  3382   0023AE                     u3700:
  3383   0023AE                     l984:
  3384                           
  3385                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  3386   0023AE  C035  F069         	movff	efgtoa@c,efgtoa@mode
  3387                           
  3388                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  3389   0023B2  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  3390   0023B6                     
  3391                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  3392   0023B6  0100               	movlb	0	; () banked
  3393   0023B8  BFD2               	btfsc	(_prec+1)& (0+255),7,b
  3394   0023BA  EFE1  F011         	goto	u3711
  3395   0023BE  EFE3  F011         	goto	u3710
  3396   0023C2                     u3711:
  3397   0023C2  EFE9  F011         	goto	l3482
  3398   0023C6                     u3710:
  3399   0023C6                     
  3400                           ; BSR set to: 0
  3401   0023C6  C0D1  F062         	movff	_prec,efgtoa@p
  3402   0023CA  C0D2  F063         	movff	_prec+1,efgtoa@p+1
  3403   0023CE  EFED  F011         	goto	l3484
  3404   0023D2                     l3482:
  3405                           
  3406                           ; BSR set to: 0
  3407   0023D2  0E00               	movlw	0
  3408   0023D4  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  3409   0023D6  0E06               	movlw	6
  3410   0023D8  6F62               	movwf	efgtoa@p& (0+255),b
  3411   0023DA                     l3484:
  3412                           
  3413                           ; BSR set to: 0
  3414                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 711:     m = p;
  3415   0023DA  C062  F06D         	movff	efgtoa@p,efgtoa@m
  3416   0023DE  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  3417   0023E2                     
  3418                           ; BSR set to: 0
  3419                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 716:         ++m;
  3420   0023E2  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  3421   0023E4  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  3422   0023E6                     
  3423                           ; BSR set to: 0
  3424                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  3425   0023E6  0E66               	movlw	102
  3426   0023E8  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  3427   0023EA  A4D8               	btfss	status,2,c
  3428   0023EC  EFFA  F011         	goto	u3721
  3429   0023F0  EFFC  F011         	goto	u3720
  3430   0023F4                     u3721:
  3431   0023F4  EF1C  F012         	goto	l3498
  3432   0023F8                     u3720:
  3433   0023F8                     
  3434                           ; BSR set to: 0
  3435                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  3436   0023F8  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3437   0023FA  EF03  F012         	goto	u3730
  3438   0023FE  EF01  F012         	goto	u3731
  3439   002402                     u3731:
  3440   002402  EF0F  F012         	goto	l3494
  3441   002406                     u3730:
  3442   002406                     
  3443                           ; BSR set to: 0
  3444                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  3445   002406  0E00               	movlw	0
  3446   002408  6F88               	movwf	efgtoa@u& (0+255),b
  3447   00240A  0E00               	movlw	0
  3448   00240C  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  3449   00240E  0E80               	movlw	128
  3450   002410  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  3451   002412  0E3F               	movlw	63
  3452   002414  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  3453                           
  3454                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  3455   002416  0E00               	movlw	0
  3456   002418  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  3457   00241A  0E00               	movlw	0
  3458   00241C  6F6F               	movwf	efgtoa@e& (0+255),b
  3459   00241E                     l3494:
  3460                           
  3461                           ; BSR set to: 0
  3462                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  3463   00241E  0E67               	movlw	103
  3464   002420  1969               	xorwf	efgtoa@mode& (0+255),w,b
  3465   002422  B4D8               	btfsc	status,2,c
  3466   002424  EF16  F012         	goto	u3741
  3467   002428  EF18  F012         	goto	u3740
  3468   00242C                     u3741:
  3469   00242C  EF1C  F012         	goto	l3498
  3470   002430                     u3740:
  3471   002430                     
  3472                           ; BSR set to: 0
  3473                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  3474   002430  516F               	movf	efgtoa@e& (0+255),w,b
  3475   002432  276D               	addwf	efgtoa@m& (0+255),f,b
  3476   002434  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  3477   002436  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3478   002438                     l3498:
  3479                           
  3480                           ; BSR set to: 0
  3481                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  3482   002438  0E00               	movlw	0
  3483   00243A  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  3484   00243C  0E00               	movlw	0
  3485   00243E  6F77               	movwf	efgtoa@i& (0+255),b
  3486   002440                     
  3487                           ; BSR set to: 0
  3488                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  3489   002440  C084  F079         	movff	efgtoa@g,efgtoa@h
  3490   002444  C085  F07A         	movff	efgtoa@g+1,efgtoa@h+1
  3491   002448  C086  F07B         	movff	efgtoa@g+2,efgtoa@h+2
  3492   00244C  C087  F07C         	movff	efgtoa@g+3,efgtoa@h+3
  3493   002450                     
  3494                           ; BSR set to: 0
  3495                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  3496   002450  C088  F073         	movff	efgtoa@u,efgtoa@ou
  3497   002454  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  3498   002458  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  3499   00245C  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  3500                           
  3501                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3502   002460  EFAD  F012         	goto	l3512
  3503   002464                     l3504:
  3504                           
  3505                           ; BSR set to: 0
  3506                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  3507   002464  C079  F003         	movff	efgtoa@h,___fldiv@b
  3508   002468  C07A  F004         	movff	efgtoa@h+1,___fldiv@b+1
  3509   00246C  C07B  F005         	movff	efgtoa@h+2,___fldiv@b+2
  3510   002470  C07C  F006         	movff	efgtoa@h+3,___fldiv@b+3
  3511   002474  C088  F007         	movff	efgtoa@u,___fldiv@a
  3512   002478  C089  F008         	movff	efgtoa@u+1,___fldiv@a+1
  3513   00247C  C08A  F009         	movff	efgtoa@u+2,___fldiv@a+2
  3514   002480  C08B  F00A         	movff	efgtoa@u+3,___fldiv@a+3
  3515   002484  EC88  F019         	call	___fldiv	;wreg free
  3516   002488  C003  F01C         	movff	?___fldiv,floorf@x
  3517   00248C  C004  F01D         	movff	?___fldiv+1,floorf@x+1
  3518   002490  C005  F01E         	movff	?___fldiv+2,floorf@x+2
  3519   002494  C006  F01F         	movff	?___fldiv+3,floorf@x+3
  3520   002498  EC9C  F01C         	call	_floorf	;wreg free
  3521   00249C  C01C  F07D         	movff	?_floorf,efgtoa@l
  3522   0024A0  C01D  F07E         	movff	?_floorf+1,efgtoa@l+1
  3523   0024A4  C01E  F07F         	movff	?_floorf+2,efgtoa@l+2
  3524   0024A8  C01F  F080         	movff	?_floorf+3,efgtoa@l+3
  3525                           
  3526                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  3527   0024AC  C07D  F003         	movff	efgtoa@l,___fltol@f1
  3528   0024B0  C07E  F004         	movff	efgtoa@l+1,___fltol@f1+1
  3529   0024B4  C07F  F005         	movff	efgtoa@l+2,___fltol@f1+2
  3530   0024B8  C080  F006         	movff	efgtoa@l+3,___fltol@f1+3
  3531   0024BC  EC69  F01F         	call	___fltol	;wreg free
  3532   0024C0  C003  F06B         	movff	?___fltol,efgtoa@d
  3533   0024C4  C004  F06C         	movff	?___fltol+1,efgtoa@d+1
  3534   0024C8                     
  3535                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  3536   0024C8  C079  F01C         	movff	efgtoa@h,___flsub@b
  3537   0024CC  C07A  F01D         	movff	efgtoa@h+1,___flsub@b+1
  3538   0024D0  C07B  F01E         	movff	efgtoa@h+2,___flsub@b+2
  3539   0024D4  C07C  F01F         	movff	efgtoa@h+3,___flsub@b+3
  3540   0024D8  C07D  F007         	movff	efgtoa@l,___flmul@a
  3541   0024DC  C07E  F008         	movff	efgtoa@l+1,___flmul@a+1
  3542   0024E0  C07F  F009         	movff	efgtoa@l+2,___flmul@a+2
  3543   0024E4  C080  F00A         	movff	efgtoa@l+3,___flmul@a+3
  3544   0024E8  C088  F003         	movff	efgtoa@u,___flmul@b
  3545   0024EC  C089  F004         	movff	efgtoa@u+1,___flmul@b+1
  3546   0024F0  C08A  F005         	movff	efgtoa@u+2,___flmul@b+2
  3547   0024F4  C08B  F006         	movff	efgtoa@u+3,___flmul@b+3
  3548   0024F8  EC63  F017         	call	___flmul	;wreg free
  3549   0024FC  C003  F020         	movff	?___flmul,___flsub@a
  3550   002500  C004  F021         	movff	?___flmul+1,___flsub@a+1
  3551   002504  C005  F022         	movff	?___flmul+2,___flsub@a+2
  3552   002508  C006  F023         	movff	?___flmul+3,___flsub@a+3
  3553   00250C  EC93  F024         	call	___flsub	;wreg free
  3554   002510  C01C  F079         	movff	?___flsub,efgtoa@h
  3555   002514  C01D  F07A         	movff	?___flsub+1,efgtoa@h+1
  3556   002518  C01E  F07B         	movff	?___flsub+2,efgtoa@h+2
  3557   00251C  C01F  F07C         	movff	?___flsub+3,efgtoa@h+3
  3558   002520                     
  3559                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  3560   002520  C088  F003         	movff	efgtoa@u,___fldiv@b
  3561   002524  C089  F004         	movff	efgtoa@u+1,___fldiv@b+1
  3562   002528  C08A  F005         	movff	efgtoa@u+2,___fldiv@b+2
  3563   00252C  C08B  F006         	movff	efgtoa@u+3,___fldiv@b+3
  3564   002530  0E00               	movlw	0
  3565   002532  6E07               	movwf	___fldiv@a^0,c
  3566   002534  0E00               	movlw	0
  3567   002536  6E08               	movwf	(___fldiv@a+1)^0,c
  3568   002538  0E20               	movlw	32
  3569   00253A  6E09               	movwf	(___fldiv@a+2)^0,c
  3570   00253C  0E41               	movlw	65
  3571   00253E  6E0A               	movwf	(___fldiv@a+3)^0,c
  3572   002540  EC88  F019         	call	___fldiv	;wreg free
  3573   002544  C003  F088         	movff	?___fldiv,efgtoa@u
  3574   002548  C004  F089         	movff	?___fldiv+1,efgtoa@u+1
  3575   00254C  C005  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3576   002550  C006  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3577   002554                     
  3578                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 741:         ++i;
  3579   002554  0100               	movlb	0	; () banked
  3580   002556  4B77               	infsnz	efgtoa@i& (0+255),f,b
  3581   002558  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  3582   00255A                     l3512:
  3583                           
  3584                           ; BSR set to: 0
  3585                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3586   00255A  516D               	movf	efgtoa@m& (0+255),w,b
  3587   00255C  5D77               	subwf	efgtoa@i& (0+255),w,b
  3588   00255E  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3589   002560  0A80               	xorlw	128
  3590   002562  6E36               	movwf	??_efgtoa^0,c
  3591   002564  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  3592   002566  0A80               	xorlw	128
  3593   002568  5836               	subwfb	??_efgtoa^0,w,c
  3594   00256A  A0D8               	btfss	status,0,c
  3595   00256C  EFBA  F012         	goto	u3751
  3596   002570  EFBC  F012         	goto	u3750
  3597   002574                     u3751:
  3598   002574  EF32  F012         	goto	l3504
  3599   002578                     u3750:
  3600   002578                     
  3601                           ; BSR set to: 0
  3602                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  3603   002578  C088  F003         	movff	efgtoa@u,___flmul@b
  3604   00257C  C089  F004         	movff	efgtoa@u+1,___flmul@b+1
  3605   002580  C08A  F005         	movff	efgtoa@u+2,___flmul@b+2
  3606   002584  C08B  F006         	movff	efgtoa@u+3,___flmul@b+3
  3607   002588  0E00               	movlw	0
  3608   00258A  6E07               	movwf	___flmul@a^0,c
  3609   00258C  0E00               	movlw	0
  3610   00258E  6E08               	movwf	(___flmul@a+1)^0,c
  3611   002590  0EA0               	movlw	160
  3612   002592  6E09               	movwf	(___flmul@a+2)^0,c
  3613   002594  0E40               	movlw	64
  3614   002596  6E0A               	movwf	(___flmul@a+3)^0,c
  3615   002598  EC63  F017         	call	___flmul	;wreg free
  3616   00259C  C003  F07D         	movff	?___flmul,efgtoa@l
  3617   0025A0  C004  F07E         	movff	?___flmul+1,efgtoa@l+1
  3618   0025A4  C005  F07F         	movff	?___flmul+2,efgtoa@l+2
  3619   0025A8  C006  F080         	movff	?___flmul+3,efgtoa@l+3
  3620   0025AC                     
  3621                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  3622   0025AC  C079  F01C         	movff	efgtoa@h,___flge@ff1
  3623   0025B0  C07A  F01D         	movff	efgtoa@h+1,___flge@ff1+1
  3624   0025B4  C07B  F01E         	movff	efgtoa@h+2,___flge@ff1+2
  3625   0025B8  C07C  F01F         	movff	efgtoa@h+3,___flge@ff1+3
  3626   0025BC  C07D  F020         	movff	efgtoa@l,___flge@ff2
  3627   0025C0  C07E  F021         	movff	efgtoa@l+1,___flge@ff2+1
  3628   0025C4  C07F  F022         	movff	efgtoa@l+2,___flge@ff2+2
  3629   0025C8  C080  F023         	movff	efgtoa@l+3,___flge@ff2+3
  3630   0025CC  ECEC  F01F         	call	___flge	;wreg free
  3631   0025D0  B0D8               	btfsc	status,0,c
  3632   0025D2  EFED  F012         	goto	u3761
  3633   0025D6  EFEF  F012         	goto	u3760
  3634   0025DA                     u3761:
  3635   0025DA  EFFA  F012         	goto	l3520
  3636   0025DE                     u3760:
  3637   0025DE                     
  3638                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  3639   0025DE  0E00               	movlw	0
  3640   0025E0  0100               	movlb	0	; () banked
  3641   0025E2  6F7D               	movwf	efgtoa@l& (0+255),b
  3642   0025E4  0E00               	movlw	0
  3643   0025E6  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  3644   0025E8  0E00               	movlw	0
  3645   0025EA  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  3646   0025EC  0E00               	movlw	0
  3647   0025EE  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  3648                           
  3649                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 748:     } else {
  3650   0025F0  EF23  F013         	goto	l3526
  3651   0025F4                     l3520:
  3652                           
  3653                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  3654   0025F4  C079  F003         	movff	efgtoa@h,___fleq@ff1
  3655   0025F8  C07A  F004         	movff	efgtoa@h+1,___fleq@ff1+1
  3656   0025FC  C07B  F005         	movff	efgtoa@h+2,___fleq@ff1+2
  3657   002600  C07C  F006         	movff	efgtoa@h+3,___fleq@ff1+3
  3658   002604  C07D  F007         	movff	efgtoa@l,___fleq@ff2
  3659   002608  C07E  F008         	movff	efgtoa@l+1,___fleq@ff2+1
  3660   00260C  C07F  F009         	movff	efgtoa@l+2,___fleq@ff2+2
  3661   002610  C080  F00A         	movff	efgtoa@l+3,___fleq@ff2+3
  3662   002614  EC57  F022         	call	___fleq	;wreg free
  3663   002618  A0D8               	btfss	status,0,c
  3664   00261A  EF11  F013         	goto	u3771
  3665   00261E  EF13  F013         	goto	u3770
  3666   002622                     u3771:
  3667   002622  EF23  F013         	goto	l3526
  3668   002626                     u3770:
  3669   002626  0100               	movlb	0	; () banked
  3670   002628  B16B               	btfsc	efgtoa@d& (0+255),0,b
  3671   00262A  EF19  F013         	goto	u3781
  3672   00262E  EF1B  F013         	goto	u3780
  3673   002632                     u3781:
  3674   002632  EF23  F013         	goto	l3526
  3675   002636                     u3780:
  3676   002636                     
  3677                           ; BSR set to: 0
  3678                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  3679   002636  0E00               	movlw	0
  3680   002638  6F7D               	movwf	efgtoa@l& (0+255),b
  3681   00263A  0E00               	movlw	0
  3682   00263C  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  3683   00263E  0E00               	movlw	0
  3684   002640  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  3685   002642  0E00               	movlw	0
  3686   002644  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  3687   002646                     l3526:
  3688                           
  3689                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  3690   002646  C084  F003         	movff	efgtoa@g,___fladd@b
  3691   00264A  C085  F004         	movff	efgtoa@g+1,___fladd@b+1
  3692   00264E  C086  F005         	movff	efgtoa@g+2,___fladd@b+2
  3693   002652  C087  F006         	movff	efgtoa@g+3,___fladd@b+3
  3694   002656  C07D  F007         	movff	efgtoa@l,___fladd@a
  3695   00265A  C07E  F008         	movff	efgtoa@l+1,___fladd@a+1
  3696   00265E  C07F  F009         	movff	efgtoa@l+2,___fladd@a+2
  3697   002662  C080  F00A         	movff	efgtoa@l+3,___fladd@a+3
  3698   002666  EC08  F015         	call	___fladd	;wreg free
  3699   00266A  C003  F079         	movff	?___fladd,efgtoa@h
  3700   00266E  C004  F07A         	movff	?___fladd+1,efgtoa@h+1
  3701   002672  C005  F07B         	movff	?___fladd+2,efgtoa@h+2
  3702   002676  C006  F07C         	movff	?___fladd+3,efgtoa@h+3
  3703   00267A                     
  3704                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  3705   00267A  C079  F01C         	movff	efgtoa@h,___flge@ff1
  3706   00267E  C07A  F01D         	movff	efgtoa@h+1,___flge@ff1+1
  3707   002682  C07B  F01E         	movff	efgtoa@h+2,___flge@ff1+2
  3708   002686  C07C  F01F         	movff	efgtoa@h+3,___flge@ff1+3
  3709   00268A  0E00               	movlw	0
  3710   00268C  6E07               	movwf	___flmul@a^0,c
  3711   00268E  0E00               	movlw	0
  3712   002690  6E08               	movwf	(___flmul@a+1)^0,c
  3713   002692  0E20               	movlw	32
  3714   002694  6E09               	movwf	(___flmul@a+2)^0,c
  3715   002696  0E41               	movlw	65
  3716   002698  6E0A               	movwf	(___flmul@a+3)^0,c
  3717   00269A  C073  F003         	movff	efgtoa@ou,___flmul@b
  3718   00269E  C074  F004         	movff	efgtoa@ou+1,___flmul@b+1
  3719   0026A2  C075  F005         	movff	efgtoa@ou+2,___flmul@b+2
  3720   0026A6  C076  F006         	movff	efgtoa@ou+3,___flmul@b+3
  3721   0026AA  EC63  F017         	call	___flmul	;wreg free
  3722   0026AE  C003  F020         	movff	?___flmul,___flge@ff2
  3723   0026B2  C004  F021         	movff	?___flmul+1,___flge@ff2+1
  3724   0026B6  C005  F022         	movff	?___flmul+2,___flge@ff2+2
  3725   0026BA  C006  F023         	movff	?___flmul+3,___flge@ff2+3
  3726   0026BE  ECEC  F01F         	call	___flge	;wreg free
  3727   0026C2  A0D8               	btfss	status,0,c
  3728   0026C4  EF66  F013         	goto	u3791
  3729   0026C8  EF68  F013         	goto	u3790
  3730   0026CC                     u3791:
  3731   0026CC  EF91  F013         	goto	l3538
  3732   0026D0                     u3790:
  3733   0026D0                     
  3734                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 759:   e++;
  3735   0026D0  0100               	movlb	0	; () banked
  3736   0026D2  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  3737   0026D4  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  3738   0026D6                     
  3739                           ; BSR set to: 0
  3740                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  3741   0026D6  C073  F003         	movff	efgtoa@ou,___flmul@b
  3742   0026DA  C074  F004         	movff	efgtoa@ou+1,___flmul@b+1
  3743   0026DE  C075  F005         	movff	efgtoa@ou+2,___flmul@b+2
  3744   0026E2  C076  F006         	movff	efgtoa@ou+3,___flmul@b+3
  3745   0026E6  0E00               	movlw	0
  3746   0026E8  6E07               	movwf	___flmul@a^0,c
  3747   0026EA  0E00               	movlw	0
  3748   0026EC  6E08               	movwf	(___flmul@a+1)^0,c
  3749   0026EE  0E20               	movlw	32
  3750   0026F0  6E09               	movwf	(___flmul@a+2)^0,c
  3751   0026F2  0E41               	movlw	65
  3752   0026F4  6E0A               	movwf	(___flmul@a+3)^0,c
  3753   0026F6  EC63  F017         	call	___flmul	;wreg free
  3754   0026FA  C003  F073         	movff	?___flmul,efgtoa@ou
  3755   0026FE  C004  F074         	movff	?___flmul+1,efgtoa@ou+1
  3756   002702  C005  F075         	movff	?___flmul+2,efgtoa@ou+2
  3757   002706  C006  F076         	movff	?___flmul+3,efgtoa@ou+3
  3758   00270A                     
  3759                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  3760   00270A  0E66               	movlw	102
  3761   00270C  0100               	movlb	0	; () banked
  3762   00270E  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  3763   002710  A4D8               	btfss	status,2,c
  3764   002712  EF8D  F013         	goto	u3801
  3765   002716  EF8F  F013         	goto	u3800
  3766   00271A                     u3801:
  3767   00271A  EF91  F013         	goto	l3538
  3768   00271E                     u3800:
  3769   00271E                     
  3770                           ; BSR set to: 0
  3771                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 764:    m++;
  3772   00271E  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  3773   002720  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  3774   002722                     l3538:
  3775                           
  3776                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  3777   002722  C073  F088         	movff	efgtoa@ou,efgtoa@u
  3778   002726  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  3779   00272A  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  3780   00272E  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  3781   002732                     
  3782                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  3783   002732  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  3784   002736  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  3785   00273A                     
  3786                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  3787   00273A  0100               	movlb	0	; () banked
  3788   00273C  6B68               	clrf	efgtoa@pp& (0+255),b
  3789   00273E                     
  3790                           ; BSR set to: 0
  3791                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  3792   00273E  0E00               	movlw	0
  3793   002740  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  3794   002742  0E00               	movlw	0
  3795   002744  6F64               	movwf	efgtoa@t& (0+255),b
  3796   002746                     
  3797                           ; BSR set to: 0
  3798                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  3799   002746  0E00               	movlw	0
  3800   002748  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  3801   00274A  0E00               	movlw	0
  3802   00274C  6F77               	movwf	efgtoa@i& (0+255),b
  3803                           
  3804                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3805   00274E  EF8E  F014         	goto	l3588
  3806   002752                     l3548:
  3807                           
  3808                           ; BSR set to: 0
  3809                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  3810   002752  C079  F003         	movff	efgtoa@h,___fldiv@b
  3811   002756  C07A  F004         	movff	efgtoa@h+1,___fldiv@b+1
  3812   00275A  C07B  F005         	movff	efgtoa@h+2,___fldiv@b+2
  3813   00275E  C07C  F006         	movff	efgtoa@h+3,___fldiv@b+3
  3814   002762  C088  F007         	movff	efgtoa@u,___fldiv@a
  3815   002766  C089  F008         	movff	efgtoa@u+1,___fldiv@a+1
  3816   00276A  C08A  F009         	movff	efgtoa@u+2,___fldiv@a+2
  3817   00276E  C08B  F00A         	movff	efgtoa@u+3,___fldiv@a+3
  3818   002772  EC88  F019         	call	___fldiv	;wreg free
  3819   002776  C003  F01C         	movff	?___fldiv,floorf@x
  3820   00277A  C004  F01D         	movff	?___fldiv+1,floorf@x+1
  3821   00277E  C005  F01E         	movff	?___fldiv+2,floorf@x+2
  3822   002782  C006  F01F         	movff	?___fldiv+3,floorf@x+3
  3823   002786  EC9C  F01C         	call	_floorf	;wreg free
  3824   00278A  C01C  F07D         	movff	?_floorf,efgtoa@l
  3825   00278E  C01D  F07E         	movff	?_floorf+1,efgtoa@l+1
  3826   002792  C01E  F07F         	movff	?_floorf+2,efgtoa@l+2
  3827   002796  C01F  F080         	movff	?_floorf+3,efgtoa@l+3
  3828                           
  3829                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3830   00279A  C07D  F003         	movff	efgtoa@l,___fltol@f1
  3831   00279E  C07E  F004         	movff	efgtoa@l+1,___fltol@f1+1
  3832   0027A2  C07F  F005         	movff	efgtoa@l+2,___fltol@f1+2
  3833   0027A6  C080  F006         	movff	efgtoa@l+3,___fltol@f1+3
  3834   0027AA  EC69  F01F         	call	___fltol	;wreg free
  3835   0027AE  BE04               	btfsc	(?___fltol+1)^0,7,c
  3836   0027B0  EFE5  F013         	goto	u3810
  3837   0027B4  5004               	movf	(?___fltol+1)^0,w,c
  3838   0027B6  E107               	bnz	u3811
  3839   0027B8  0E0A               	movlw	10
  3840   0027BA  5C03               	subwf	?___fltol^0,w,c
  3841   0027BC  B0D8               	btfsc	status,0,c
  3842   0027BE  EFE3  F013         	goto	u3811
  3843   0027C2  EFE5  F013         	goto	u3810
  3844   0027C6                     u3811:
  3845   0027C6  EFF5  F013         	goto	l3552
  3846   0027CA                     u3810:
  3847   0027CA  C07D  F003         	movff	efgtoa@l,___fltol@f1
  3848   0027CE  C07E  F004         	movff	efgtoa@l+1,___fltol@f1+1
  3849   0027D2  C07F  F005         	movff	efgtoa@l+2,___fltol@f1+2
  3850   0027D6  C080  F006         	movff	efgtoa@l+3,___fltol@f1+3
  3851   0027DA  EC69  F01F         	call	___fltol	;wreg free
  3852   0027DE  C003  F06B         	movff	?___fltol,efgtoa@d
  3853   0027E2  C004  F06C         	movff	?___fltol+1,efgtoa@d+1
  3854   0027E6  EFFA  F013         	goto	l1014
  3855   0027EA                     l3552:
  3856   0027EA  0E00               	movlw	0
  3857   0027EC  0100               	movlb	0	; () banked
  3858   0027EE  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  3859   0027F0  0E09               	movlw	9
  3860   0027F2  6F6B               	movwf	efgtoa@d& (0+255),b
  3861   0027F4                     l1014:
  3862                           
  3863                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  3864   0027F4  0100               	movlb	0	; () banked
  3865   0027F6  5168               	movf	efgtoa@pp& (0+255),w,b
  3866   0027F8  A4D8               	btfss	status,2,c
  3867   0027FA  EF01  F014         	goto	u3821
  3868   0027FE  EF03  F014         	goto	u3820
  3869   002802                     u3821:
  3870   002802  EF2B  F014         	goto	l3572
  3871   002806                     u3820:
  3872   002806                     
  3873                           ; BSR set to: 0
  3874   002806  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3875   002808  EF0A  F014         	goto	u3830
  3876   00280C  EF08  F014         	goto	u3831
  3877   002810                     u3831:
  3878   002810  EF2B  F014         	goto	l3572
  3879   002814                     u3830:
  3880   002814                     
  3881                           ; BSR set to: 0
  3882                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  3883   002814  0E00               	movlw	low _dbuf
  3884   002816  2582               	addwf	efgtoa@n& (0+255),w,b
  3885   002818  6ED9               	movwf	fsr2l,c
  3886   00281A  0E01               	movlw	high _dbuf
  3887   00281C  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3888   00281E  6EDA               	movwf	fsr2h,c
  3889   002820  0E2E               	movlw	46
  3890   002822  6EDF               	movwf	indf2,c
  3891   002824                     
  3892                           ; BSR set to: 0
  3893   002824  4B82               	infsnz	efgtoa@n& (0+255),f,b
  3894   002826  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  3895   002828                     
  3896                           ; BSR set to: 0
  3897                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  3898   002828  0771               	decf	efgtoa@w& (0+255),f,b
  3899   00282A  A0D8               	btfss	status,0,c
  3900   00282C  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3901   00282E                     
  3902                           ; BSR set to: 0
  3903                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  3904   00282E  0E01               	movlw	1
  3905   002830  6F68               	movwf	efgtoa@pp& (0+255),b
  3906   002832  EF2B  F014         	goto	l3572
  3907   002836                     l3564:
  3908                           
  3909                           ; BSR set to: 0
  3910                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  3911   002836  0E00               	movlw	low _dbuf
  3912   002838  2582               	addwf	efgtoa@n& (0+255),w,b
  3913   00283A  6ED9               	movwf	fsr2l,c
  3914   00283C  0E01               	movlw	high _dbuf
  3915   00283E  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3916   002840  6EDA               	movwf	fsr2h,c
  3917   002842  0E30               	movlw	48
  3918   002844  6EDF               	movwf	indf2,c
  3919   002846                     
  3920                           ; BSR set to: 0
  3921   002846  4B82               	infsnz	efgtoa@n& (0+255),f,b
  3922   002848  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  3923   00284A                     
  3924                           ; BSR set to: 0
  3925                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  3926   00284A  0771               	decf	efgtoa@w& (0+255),f,b
  3927   00284C  A0D8               	btfss	status,0,c
  3928   00284E  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3929   002850                     
  3930                           ; BSR set to: 0
  3931                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  3932   002850  0764               	decf	efgtoa@t& (0+255),f,b
  3933   002852  A0D8               	btfss	status,0,c
  3934   002854  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  3935   002856                     l3572:
  3936                           
  3937                           ; BSR set to: 0
  3938                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  3939   002856  5164               	movf	efgtoa@t& (0+255),w,b
  3940   002858  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3941   00285A  A4D8               	btfss	status,2,c
  3942   00285C  EF32  F014         	goto	u3841
  3943   002860  EF34  F014         	goto	u3840
  3944   002864                     u3841:
  3945   002864  EF1B  F014         	goto	l3564
  3946   002868                     u3840:
  3947   002868                     
  3948                           ; BSR set to: 0
  3949                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3950   002868  0E00               	movlw	low _dbuf
  3951   00286A  2582               	addwf	efgtoa@n& (0+255),w,b
  3952   00286C  6ED9               	movwf	fsr2l,c
  3953   00286E  0E01               	movlw	high _dbuf
  3954   002870  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3955   002872  6EDA               	movwf	fsr2h,c
  3956   002874  516B               	movf	efgtoa@d& (0+255),w,b
  3957   002876  0F30               	addlw	48
  3958   002878  6EDF               	movwf	indf2,c
  3959   00287A                     
  3960                           ; BSR set to: 0
  3961   00287A  4B82               	infsnz	efgtoa@n& (0+255),f,b
  3962   00287C  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  3963   00287E                     
  3964                           ; BSR set to: 0
  3965                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  3966   00287E  0771               	decf	efgtoa@w& (0+255),f,b
  3967   002880  A0D8               	btfss	status,0,c
  3968   002882  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3969   002884                     
  3970                           ; BSR set to: 0
  3971                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  3972   002884  C079  F01C         	movff	efgtoa@h,___flsub@b
  3973   002888  C07A  F01D         	movff	efgtoa@h+1,___flsub@b+1
  3974   00288C  C07B  F01E         	movff	efgtoa@h+2,___flsub@b+2
  3975   002890  C07C  F01F         	movff	efgtoa@h+3,___flsub@b+3
  3976   002894  C07D  F007         	movff	efgtoa@l,___flmul@a
  3977   002898  C07E  F008         	movff	efgtoa@l+1,___flmul@a+1
  3978   00289C  C07F  F009         	movff	efgtoa@l+2,___flmul@a+2
  3979   0028A0  C080  F00A         	movff	efgtoa@l+3,___flmul@a+3
  3980   0028A4  C088  F003         	movff	efgtoa@u,___flmul@b
  3981   0028A8  C089  F004         	movff	efgtoa@u+1,___flmul@b+1
  3982   0028AC  C08A  F005         	movff	efgtoa@u+2,___flmul@b+2
  3983   0028B0  C08B  F006         	movff	efgtoa@u+3,___flmul@b+3
  3984   0028B4  EC63  F017         	call	___flmul	;wreg free
  3985   0028B8  C003  F020         	movff	?___flmul,___flsub@a
  3986   0028BC  C004  F021         	movff	?___flmul+1,___flsub@a+1
  3987   0028C0  C005  F022         	movff	?___flmul+2,___flsub@a+2
  3988   0028C4  C006  F023         	movff	?___flmul+3,___flsub@a+3
  3989   0028C8  EC93  F024         	call	___flsub	;wreg free
  3990   0028CC  C01C  F079         	movff	?___flsub,efgtoa@h
  3991   0028D0  C01D  F07A         	movff	?___flsub+1,efgtoa@h+1
  3992   0028D4  C01E  F07B         	movff	?___flsub+2,efgtoa@h+2
  3993   0028D8  C01F  F07C         	movff	?___flsub+3,efgtoa@h+3
  3994   0028DC                     
  3995                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  3996   0028DC  C088  F003         	movff	efgtoa@u,___fldiv@b
  3997   0028E0  C089  F004         	movff	efgtoa@u+1,___fldiv@b+1
  3998   0028E4  C08A  F005         	movff	efgtoa@u+2,___fldiv@b+2
  3999   0028E8  C08B  F006         	movff	efgtoa@u+3,___fldiv@b+3
  4000   0028EC  0E00               	movlw	0
  4001   0028EE  6E07               	movwf	___fldiv@a^0,c
  4002   0028F0  0E00               	movlw	0
  4003   0028F2  6E08               	movwf	(___fldiv@a+1)^0,c
  4004   0028F4  0E20               	movlw	32
  4005   0028F6  6E09               	movwf	(___fldiv@a+2)^0,c
  4006   0028F8  0E41               	movlw	65
  4007   0028FA  6E0A               	movwf	(___fldiv@a+3)^0,c
  4008   0028FC  EC88  F019         	call	___fldiv	;wreg free
  4009   002900  C003  F088         	movff	?___fldiv,efgtoa@u
  4010   002904  C004  F089         	movff	?___fldiv+1,efgtoa@u+1
  4011   002908  C005  F08A         	movff	?___fldiv+2,efgtoa@u+2
  4012   00290C  C006  F08B         	movff	?___fldiv+3,efgtoa@u+3
  4013   002910                     
  4014                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  4015   002910  0100               	movlb	0	; () banked
  4016   002912  0760               	decf	efgtoa@ne& (0+255),f,b
  4017   002914  A0D8               	btfss	status,0,c
  4018   002916  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  4019   002918                     
  4020                           ; BSR set to: 0
  4021                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 809:         ++i;
  4022   002918  4B77               	infsnz	efgtoa@i& (0+255),f,b
  4023   00291A  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  4024   00291C                     l3588:
  4025                           
  4026                           ; BSR set to: 0
  4027                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4028   00291C  516D               	movf	efgtoa@m& (0+255),w,b
  4029   00291E  5D77               	subwf	efgtoa@i& (0+255),w,b
  4030   002920  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  4031   002922  0A80               	xorlw	128
  4032   002924  6E36               	movwf	??_efgtoa^0,c
  4033   002926  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  4034   002928  0A80               	xorlw	128
  4035   00292A  5836               	subwfb	??_efgtoa^0,w,c
  4036   00292C  B0D8               	btfsc	status,0,c
  4037   00292E  EF9B  F014         	goto	u3851
  4038   002932  EF9D  F014         	goto	u3850
  4039   002936                     u3851:
  4040   002936  EFAB  F014         	goto	l3592
  4041   00293A                     u3850:
  4042   00293A                     
  4043                           ; BSR set to: 0
  4044   00293A  BF83               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4045   00293C  EFA9  F014         	goto	u3861
  4046   002940  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  4047   002942  E109               	bnz	u3860
  4048   002944  0E4B               	movlw	75
  4049   002946  5D82               	subwf	efgtoa@n& (0+255),w,b
  4050   002948  A0D8               	btfss	status,0,c
  4051   00294A  EFA9  F014         	goto	u3861
  4052   00294E  EFAB  F014         	goto	u3860
  4053   002952                     u3861:
  4054   002952  EFA9  F013         	goto	l3548
  4055   002956                     u3860:
  4056   002956                     l3592:
  4057                           
  4058                           ; BSR set to: 0
  4059                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  4060   002956  0E00               	movlw	0
  4061   002958  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  4062   00295A  0E4F               	movlw	79
  4063   00295C  6F77               	movwf	efgtoa@i& (0+255),b
  4064   00295E                     
  4065                           ; BSR set to: 0
  4066                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  4067   00295E  0E00               	movlw	low _dbuf
  4068   002960  2577               	addwf	efgtoa@i& (0+255),w,b
  4069   002962  6ED9               	movwf	fsr2l,c
  4070   002964  0E01               	movlw	high _dbuf
  4071   002966  2178               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4072   002968  6EDA               	movwf	fsr2h,c
  4073   00296A  6ADF               	clrf	indf2,c
  4074   00296C                     
  4075                           ; BSR set to: 0
  4076                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4077   00296C  0E00               	movlw	low _dbuf
  4078   00296E  6E36               	movwf	??_efgtoa^0,c
  4079   002970  0E01               	movlw	high _dbuf
  4080   002972  6E37               	movwf	(??_efgtoa+1)^0,c
  4081   002974  5182               	movf	efgtoa@n& (0+255),w,b
  4082   002976  5E36               	subwf	??_efgtoa^0,f,c
  4083   002978  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  4084   00297A  5A37               	subwfb	(??_efgtoa+1)^0,f,c
  4085   00297C  5177               	movf	efgtoa@i& (0+255),w,b
  4086   00297E  2436               	addwf	??_efgtoa^0,w,c
  4087   002980  6E03               	movwf	memcpy@d1^0,c
  4088   002982  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  4089   002984  2037               	addwfc	(??_efgtoa+1)^0,w,c
  4090   002986  6E04               	movwf	(memcpy@d1+1)^0,c
  4091   002988  0E00               	movlw	low _dbuf
  4092   00298A  6E05               	movwf	memcpy@s1^0,c
  4093   00298C  0E01               	movlw	high _dbuf
  4094   00298E  6E06               	movwf	(memcpy@s1+1)^0,c
  4095   002990  C082  F007         	movff	efgtoa@n,memcpy@n
  4096   002994  C083  F008         	movff	efgtoa@n+1,memcpy@n+1
  4097   002998  EC9F  F023         	call	_memcpy	;wreg free
  4098   00299C                     
  4099                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  4100   00299C  0100               	movlb	0	; () banked
  4101   00299E  5182               	movf	efgtoa@n& (0+255),w,b
  4102   0029A0  5D77               	subwf	efgtoa@i& (0+255),w,b
  4103   0029A2  6F82               	movwf	efgtoa@n& (0+255),b
  4104   0029A4  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  4105   0029A6  5978               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4106   0029A8  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  4107   0029AA                     
  4108                           ; BSR set to: 0
  4109                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  4110   0029AA  5181               	movf	efgtoa@sign& (0+255),w,b
  4111   0029AC  A4D8               	btfss	status,2,c
  4112   0029AE  EFDB  F014         	goto	u3871
  4113   0029B2  EFDE  F014         	goto	u3870
  4114   0029B6                     u3871:
  4115   0029B6  0E01               	movlw	1
  4116   0029B8  EFDF  F014         	goto	u3880
  4117   0029BC                     u3870:
  4118   0029BC  0E00               	movlw	0
  4119   0029BE                     u3880:
  4120   0029BE  6F77               	movwf	efgtoa@i& (0+255),b
  4121   0029C0  6B78               	clrf	(efgtoa@i+1)& (0+255),b
  4122   0029C2                     
  4123                           ; BSR set to: 0
  4124                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  4125   0029C2  5181               	movf	efgtoa@sign& (0+255),w,b
  4126   0029C4  B4D8               	btfsc	status,2,c
  4127   0029C6  EFE7  F014         	goto	u3891
  4128   0029CA  EFE9  F014         	goto	u3890
  4129   0029CE                     u3891:
  4130   0029CE  EFF5  F014         	goto	l3606
  4131   0029D2                     u3890:
  4132   0029D2                     
  4133                           ; BSR set to: 0
  4134                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  4135   0029D2  0782               	decf	efgtoa@n& (0+255),f,b
  4136   0029D4  A0D8               	btfss	status,0,c
  4137   0029D6  0783               	decf	(efgtoa@n+1)& (0+255),f,b
  4138   0029D8  0E00               	movlw	low _dbuf
  4139   0029DA  2582               	addwf	efgtoa@n& (0+255),w,b
  4140   0029DC  6ED9               	movwf	fsr2l,c
  4141   0029DE  0E01               	movlw	high _dbuf
  4142   0029E0  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4143   0029E2  6EDA               	movwf	fsr2h,c
  4144   0029E4  0060  F207  FFDF   	movff	efgtoa@sign,indf2
  4145   0029EA                     l3606:
  4146                           
  4147                           ; BSR set to: 0
  4148                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  4149   0029EA  5177               	movf	efgtoa@i& (0+255),w,b
  4150   0029EC  5F71               	subwf	efgtoa@w& (0+255),f,b
  4151   0029EE  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  4152   0029F0  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4153   0029F2                     
  4154                           ; BSR set to: 0
  4155                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4156   0029F2  C030  F011         	movff	efgtoa@fp,pad@fp
  4157   0029F6  0E00               	movlw	low _dbuf
  4158   0029F8  2582               	addwf	efgtoa@n& (0+255),w,b
  4159   0029FA  6E12               	movwf	pad@buf^0,c
  4160   0029FC  0E01               	movlw	high _dbuf
  4161   0029FE  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4162   002A00  6E13               	movwf	(pad@buf+1)^0,c
  4163   002A02  C071  F014         	movff	efgtoa@w,pad@p
  4164   002A06  C072  F015         	movff	efgtoa@w+1,pad@p+1
  4165   002A0A  EC6C  F023         	call	_pad	;wreg free
  4166   002A0E                     l981:
  4167   002A0E  0012               	return		;funcret
  4168   002A10                     __end_of_efgtoa:
  4169                           	callstack 0
  4170                           
  4171 ;; *************** function _strcpy *****************
  4172 ;; Defined at:
  4173 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcpy.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;  dest            2    2[COMRAM] PTR unsigned char 
  4176 ;;		 -> dbuf(80), 
  4177 ;;  src             1    4[COMRAM] PTR const unsigned char 
  4178 ;;		 -> STR_10(4), STR_7(4), 
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;  d               2    6[COMRAM] PTR unsigned char 
  4181 ;;		 -> dbuf(80), 
  4182 ;; Return value:  Size  Location     Type
  4183 ;;                  2    2[COMRAM] PTR unsigned char 
  4184 ;; Registers used:
  4185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4186 ;; Tracked objects:
  4187 ;;		On entry : 0/0
  4188 ;;		On exit  : 0/0
  4189 ;;		Unchanged: 0/0
  4190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4191 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4192 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4193 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4194 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4195 ;;Total ram usage:        6 bytes
  4196 ;; Hardware stack levels used: 1
  4197 ;; Hardware stack levels required when called: 1
  4198 ;; This function calls:
  4199 ;;		Nothing
  4200 ;; This function is called by:
  4201 ;;		_efgtoa
  4202 ;; This function uses a non-reentrant model
  4203 ;;
  4204                           
  4205                           	psect	text7
  4206   0048E0                     __ptext7:
  4207                           	callstack 0
  4208   0048E0                     _strcpy:
  4209                           	callstack 24
  4210   0048E0  C003  F007         	movff	strcpy@dest,strcpy@d
  4211   0048E4  C004  F008         	movff	strcpy@dest+1,strcpy@d+1
  4212   0048E8                     l3282:
  4213   0048E8  2A05               	incf	strcpy@src^0,f,c
  4214   0048EA  0405               	decf	strcpy@src^0,w,c
  4215   0048EC  6E06               	movwf	??_strcpy^0,c
  4216   0048EE  0060  F01B  FFF6   	movff	??_strcpy,tblptrl
  4217   0048F4                     	if	1	;There is more than 1 active tblptr byte
  4218   0048F4  0E20               	movlw	high __smallconst
  4219   0048F6  6EF7               	movwf	tblptrh,c
  4220   0048F8                     	endif
  4221   0048F8                     	if	0	;tblptru may be non-zero
  4222   0048F8                     	endif
  4223   0048F8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4224   0048F8  0E00               	movlw	low (__smallconst shr (0+16))
  4225   0048FA  6EF8               	movwf	tblptru,c
  4226   0048FC                     	endif
  4227   0048FC  0060  F01F  FFD9   	movff	strcpy@d,fsr2l
  4228   004902  0060  F023  FFDA   	movff	strcpy@d+1,fsr2h
  4229   004908  4A07               	infsnz	strcpy@d^0,f,c
  4230   00490A  2A08               	incf	(strcpy@d+1)^0,f,c
  4231   00490C  0008               	tblrd		*
  4232   00490E  006F FFD7 FFDF     	movff	tablat,indf2
  4233   004914  50DF               	movf	indf2,w,c
  4234   004916  A4D8               	btfss	status,2,c
  4235   004918  EF90  F024         	goto	u3341
  4236   00491C  EF92  F024         	goto	u3340
  4237   004920                     u3341:
  4238   004920  EF74  F024         	goto	l3282
  4239   004924                     u3340:
  4240   004924  0012               	return		;funcret
  4241   004926                     __end_of_strcpy:
  4242                           	callstack 0
  4243                           
  4244 ;; *************** function _memcpy *****************
  4245 ;; Defined at:
  4246 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
  4247 ;; Parameters:    Size  Location     Type
  4248 ;;  d1              2    2[COMRAM] PTR void 
  4249 ;;		 -> dbuf(80), 
  4250 ;;  s1              2    4[COMRAM] PTR const void 
  4251 ;;		 -> dbuf(80), 
  4252 ;;  n               2    6[COMRAM] unsigned int 
  4253 ;; Auto vars:     Size  Location     Type
  4254 ;;  s               2   10[COMRAM] PTR const unsigned char 
  4255 ;;		 -> dbuf(80), 
  4256 ;;  d               2    8[COMRAM] PTR unsigned char 
  4257 ;;		 -> dbuf(80), 
  4258 ;;  tmp             1   12[COMRAM] unsigned char 
  4259 ;; Return value:  Size  Location     Type
  4260 ;;                  2    2[COMRAM] PTR void 
  4261 ;; Registers used:
  4262 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4263 ;; Tracked objects:
  4264 ;;		On entry : 0/0
  4265 ;;		On exit  : 0/0
  4266 ;;		Unchanged: 0/0
  4267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4268 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4269 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4271 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4272 ;;Total ram usage:       11 bytes
  4273 ;; Hardware stack levels used: 1
  4274 ;; Hardware stack levels required when called: 1
  4275 ;; This function calls:
  4276 ;;		Nothing
  4277 ;; This function is called by:
  4278 ;;		_efgtoa
  4279 ;; This function uses a non-reentrant model
  4280 ;;
  4281                           
  4282                           	psect	text8
  4283   00473E                     __ptext8:
  4284                           	callstack 0
  4285   00473E                     _memcpy:
  4286                           	callstack 24
  4287   00473E  C005  F00B         	movff	memcpy@s1,memcpy@s
  4288   004742  C006  F00C         	movff	memcpy@s1+1,memcpy@s+1
  4289   004746  C003  F009         	movff	memcpy@d1,memcpy@d
  4290   00474A  C004  F00A         	movff	memcpy@d1+1,memcpy@d+1
  4291   00474E  EFBE  F023         	goto	l3330
  4292   004752                     l3322:
  4293   004752  0060  F02F  FFD9   	movff	memcpy@s,fsr2l
  4294   004758  0060  F033  FFDA   	movff	memcpy@s+1,fsr2h
  4295   00475E  50DF               	movf	indf2,w,c
  4296   004760  6E0D               	movwf	memcpy@tmp^0,c
  4297   004762  4A0B               	infsnz	memcpy@s^0,f,c
  4298   004764  2A0C               	incf	(memcpy@s+1)^0,f,c
  4299   004766  0060  F027  FFD9   	movff	memcpy@d,fsr2l
  4300   00476C  0060  F02B  FFDA   	movff	memcpy@d+1,fsr2h
  4301   004772  0060  F037  FFDF   	movff	memcpy@tmp,indf2
  4302   004778  4A09               	infsnz	memcpy@d^0,f,c
  4303   00477A  2A0A               	incf	(memcpy@d+1)^0,f,c
  4304   00477C                     l3330:
  4305   00477C  0607               	decf	memcpy@n^0,f,c
  4306   00477E  A0D8               	btfss	status,0,c
  4307   004780  0608               	decf	(memcpy@n+1)^0,f,c
  4308   004782  2807               	incf	memcpy@n^0,w,c
  4309   004784  E106               	bnz	u3461
  4310   004786  2808               	incf	(memcpy@n+1)^0,w,c
  4311   004788  A4D8               	btfss	status,2,c
  4312   00478A  EFC9  F023         	goto	u3461
  4313   00478E  EFCB  F023         	goto	u3460
  4314   004792                     u3461:
  4315   004792  EFA9  F023         	goto	l3322
  4316   004796                     u3460:
  4317   004796  0012               	return		;funcret
  4318   004798                     __end_of_memcpy:
  4319                           	callstack 0
  4320                           
  4321 ;; *************** function _labs *****************
  4322 ;; Defined at:
  4323 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\labs.c"
  4324 ;; Parameters:    Size  Location     Type
  4325 ;;  a               4    2[COMRAM] long 
  4326 ;; Auto vars:     Size  Location     Type
  4327 ;;		None
  4328 ;; Return value:  Size  Location     Type
  4329 ;;                  4    2[COMRAM] long 
  4330 ;; Registers used:
  4331 ;;		wreg, status,2, status,0
  4332 ;; Tracked objects:
  4333 ;;		On entry : 0/0
  4334 ;;		On exit  : 0/0
  4335 ;;		Unchanged: 0/0
  4336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4337 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4339 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4340 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4341 ;;Total ram usage:        8 bytes
  4342 ;; Hardware stack levels used: 1
  4343 ;; Hardware stack levels required when called: 1
  4344 ;; This function calls:
  4345 ;;		Nothing
  4346 ;; This function is called by:
  4347 ;;		_efgtoa
  4348 ;; This function uses a non-reentrant model
  4349 ;;
  4350                           
  4351                           	psect	text9
  4352   0047EE                     __ptext9:
  4353                           	callstack 0
  4354   0047EE                     _labs:
  4355                           	callstack 24
  4356   0047EE  BE06               	btfsc	(labs@a+3)^0,7,c
  4357   0047F0  EFFC  F023         	goto	u3351
  4358   0047F4  EFFE  F023         	goto	u3350
  4359   0047F8                     u3351:
  4360   0047F8  EF08  F024         	goto	l3288
  4361   0047FC                     u3350:
  4362   0047FC  C003  F003         	movff	labs@a,?_labs
  4363   004800  C004  F004         	movff	labs@a+1,?_labs+1
  4364   004804  C005  F005         	movff	labs@a+2,?_labs+2
  4365   004808  C006  F006         	movff	labs@a+3,?_labs+3
  4366   00480C  EF21  F024         	goto	l1098
  4367   004810                     l3288:
  4368   004810  C003  F007         	movff	labs@a,??_labs
  4369   004814  C004  F008         	movff	labs@a+1,??_labs+1
  4370   004818  C005  F009         	movff	labs@a+2,??_labs+2
  4371   00481C  C006  F00A         	movff	labs@a+3,??_labs+3
  4372   004820  1E07               	comf	??_labs^0,f,c
  4373   004822  1E08               	comf	(??_labs+1)^0,f,c
  4374   004824  1E09               	comf	(??_labs+2)^0,f,c
  4375   004826  1E0A               	comf	(??_labs+3)^0,f,c
  4376   004828  2A07               	incf	??_labs^0,f,c
  4377   00482A  0E00               	movlw	0
  4378   00482C  2208               	addwfc	(??_labs+1)^0,f,c
  4379   00482E  2209               	addwfc	(??_labs+2)^0,f,c
  4380   004830  220A               	addwfc	(??_labs+3)^0,f,c
  4381   004832  C007  F003         	movff	??_labs,?_labs
  4382   004836  C008  F004         	movff	??_labs+1,?_labs+1
  4383   00483A  C009  F005         	movff	??_labs+2,?_labs+2
  4384   00483E  C00A  F006         	movff	??_labs+3,?_labs+3
  4385   004842                     l1098:
  4386   004842  0012               	return		;funcret
  4387   004844                     __end_of_labs:
  4388                           	callstack 0
  4389                           
  4390 ;; *************** function _floorf *****************
  4391 ;; Defined at:
  4392 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\floorf.c"
  4393 ;; Parameters:    Size  Location     Type
  4394 ;;  x               4   27[COMRAM] float 
  4395 ;; Auto vars:     Size  Location     Type
  4396 ;;  u               4   43[COMRAM] struct .
  4397 ;;  m               4   37[COMRAM] unsigned long 
  4398 ;;  e               2   41[COMRAM] int 
  4399 ;; Return value:  Size  Location     Type
  4400 ;;                  4   27[COMRAM] float 
  4401 ;; Registers used:
  4402 ;;		wreg, status,2, status,0
  4403 ;; Tracked objects:
  4404 ;;		On entry : 0/0
  4405 ;;		On exit  : 0/0
  4406 ;;		Unchanged: 0/0
  4407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4408 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4409 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4410 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4411 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4412 ;;Total ram usage:       20 bytes
  4413 ;; Hardware stack levels used: 1
  4414 ;; Hardware stack levels required when called: 1
  4415 ;; This function calls:
  4416 ;;		Nothing
  4417 ;; This function is called by:
  4418 ;;		_efgtoa
  4419 ;; This function uses a non-reentrant model
  4420 ;;
  4421                           
  4422                           	psect	text10
  4423   003938                     __ptext10:
  4424                           	callstack 0
  4425   003938                     _floorf:
  4426                           	callstack 24
  4427   003938  C054  F02C         	movff	floorf@F521,floorf@u
  4428   00393C  C055  F02D         	movff	floorf@F521+1,floorf@u+1
  4429   003940  C056  F02E         	movff	floorf@F521+2,floorf@u+2
  4430   003944  C057  F02F         	movff	floorf@F521+3,floorf@u+3
  4431   003948  C01C  F02C         	movff	floorf@x,floorf@u
  4432   00394C  C01D  F02D         	movff	floorf@x+1,floorf@u+1
  4433   003950  C01E  F02E         	movff	floorf@x+2,floorf@u+2
  4434   003954  C01F  F02F         	movff	floorf@x+3,floorf@u+3
  4435   003958  0E81               	movlw	129
  4436   00395A  6E20               	movwf	??_floorf^0,c
  4437   00395C  0EFF               	movlw	255
  4438   00395E  6E21               	movwf	(??_floorf+1)^0,c
  4439   003960  C02C  F022         	movff	floorf@u,??_floorf+2
  4440   003964  C02D  F023         	movff	floorf@u+1,??_floorf+3
  4441   003968  C02E  F024         	movff	floorf@u+2,??_floorf+4
  4442   00396C  C02F  F025         	movff	floorf@u+3,??_floorf+5
  4443   003970  0E18               	movlw	24
  4444   003972  EFC0  F01C         	goto	u3360
  4445   003976                     u3365:
  4446   003976  90D8               	bcf	status,0,c
  4447   003978  3225               	rrcf	(??_floorf+5)^0,f,c
  4448   00397A  3224               	rrcf	(??_floorf+4)^0,f,c
  4449   00397C  3223               	rrcf	(??_floorf+3)^0,f,c
  4450   00397E  3222               	rrcf	(??_floorf+2)^0,f,c
  4451   003980                     u3360:
  4452   003980  2EE8               	decfsz	wreg,f,c
  4453   003982  EFBB  F01C         	goto	u3365
  4454   003986  5022               	movf	(??_floorf+2)^0,w,c
  4455   003988  2420               	addwf	??_floorf^0,w,c
  4456   00398A  6E2A               	movwf	floorf@e^0,c
  4457   00398C  0E00               	movlw	0
  4458   00398E  2021               	addwfc	(??_floorf+1)^0,w,c
  4459   003990  6E2B               	movwf	(floorf@e+1)^0,c
  4460   003992  BE2B               	btfsc	(floorf@e+1)^0,7,c
  4461   003994  EFD5  F01C         	goto	u3371
  4462   003998  502B               	movf	(floorf@e+1)^0,w,c
  4463   00399A  E109               	bnz	u3370
  4464   00399C  0E17               	movlw	23
  4465   00399E  5C2A               	subwf	floorf@e^0,w,c
  4466   0039A0  A0D8               	btfss	status,0,c
  4467   0039A2  EFD5  F01C         	goto	u3371
  4468   0039A6  EFD7  F01C         	goto	u3370
  4469   0039AA                     u3371:
  4470   0039AA  EFE1  F01C         	goto	l3298
  4471   0039AE                     u3370:
  4472   0039AE                     l3296:
  4473   0039AE  C01C  F01C         	movff	floorf@x,?_floorf
  4474   0039B2  C01D  F01D         	movff	floorf@x+1,?_floorf+1
  4475   0039B6  C01E  F01E         	movff	floorf@x+2,?_floorf+2
  4476   0039BA  C01F  F01F         	movff	floorf@x+3,?_floorf+3
  4477   0039BE  EFA4  F01D         	goto	l1084
  4478   0039C2                     l3298:
  4479   0039C2  BE2B               	btfsc	(floorf@e+1)^0,7,c
  4480   0039C4  EFE6  F01C         	goto	u3381
  4481   0039C8  EFE8  F01C         	goto	u3380
  4482   0039CC                     u3381:
  4483   0039CC  EF58  F01D         	goto	l3308
  4484   0039D0                     u3380:
  4485   0039D0  C02A  F020         	movff	floorf@e,??_floorf
  4486   0039D4  0EFF               	movlw	255
  4487   0039D6  6E21               	movwf	(??_floorf+1)^0,c
  4488   0039D8  0EFF               	movlw	255
  4489   0039DA  6E22               	movwf	(??_floorf+2)^0,c
  4490   0039DC  0E7F               	movlw	127
  4491   0039DE  6E23               	movwf	(??_floorf+3)^0,c
  4492   0039E0  0E00               	movlw	0
  4493   0039E2  6E24               	movwf	(??_floorf+4)^0,c
  4494   0039E4                     u3395:
  4495   0039E4  6620               	tstfsz	??_floorf^0,c
  4496   0039E6  EFF7  F01C         	goto	u3396
  4497   0039EA  EFFF  F01C         	goto	u3397
  4498   0039EE                     u3396:
  4499   0039EE  3424               	rlcf	(??_floorf+4)^0,w,c
  4500   0039F0  3224               	rrcf	(??_floorf+4)^0,f,c
  4501   0039F2  3223               	rrcf	(??_floorf+3)^0,f,c
  4502   0039F4  3222               	rrcf	(??_floorf+2)^0,f,c
  4503   0039F6  3221               	rrcf	(??_floorf+1)^0,f,c
  4504   0039F8  2E20               	decfsz	??_floorf^0,f,c
  4505   0039FA  EFF2  F01C         	goto	u3395
  4506   0039FE                     u3397:
  4507   0039FE  C021  F026         	movff	??_floorf+1,floorf@m
  4508   003A02  C022  F027         	movff	??_floorf+2,floorf@m+1
  4509   003A06  C023  F028         	movff	??_floorf+3,floorf@m+2
  4510   003A0A  C024  F029         	movff	??_floorf+4,floorf@m+3
  4511   003A0E  5026               	movf	floorf@m^0,w,c
  4512   003A10  142C               	andwf	floorf@u^0,w,c
  4513   003A12  6E20               	movwf	??_floorf^0,c
  4514   003A14  5027               	movf	(floorf@m+1)^0,w,c
  4515   003A16  142D               	andwf	(floorf@u+1)^0,w,c
  4516   003A18  6E21               	movwf	(??_floorf+1)^0,c
  4517   003A1A  5028               	movf	(floorf@m+2)^0,w,c
  4518   003A1C  142E               	andwf	(floorf@u+2)^0,w,c
  4519   003A1E  6E22               	movwf	(??_floorf+2)^0,c
  4520   003A20  5029               	movf	(floorf@m+3)^0,w,c
  4521   003A22  142F               	andwf	(floorf@u+3)^0,w,c
  4522   003A24  6E23               	movwf	(??_floorf+3)^0,c
  4523   003A26  5020               	movf	??_floorf^0,w,c
  4524   003A28  1021               	iorwf	(??_floorf+1)^0,w,c
  4525   003A2A  1022               	iorwf	(??_floorf+2)^0,w,c
  4526   003A2C  1023               	iorwf	(??_floorf+3)^0,w,c
  4527   003A2E  A4D8               	btfss	status,2,c
  4528   003A30  EF1C  F01D         	goto	u3401
  4529   003A34  EF1E  F01D         	goto	u3400
  4530   003A38                     u3401:
  4531   003A38  EF20  F01D         	goto	l3304
  4532   003A3C                     u3400:
  4533   003A3C  EFD7  F01C         	goto	l3296
  4534   003A40                     l3304:
  4535   003A40  C02C  F020         	movff	floorf@u,??_floorf
  4536   003A44  C02D  F021         	movff	floorf@u+1,??_floorf+1
  4537   003A48  C02E  F022         	movff	floorf@u+2,??_floorf+2
  4538   003A4C  C02F  F023         	movff	floorf@u+3,??_floorf+3
  4539   003A50  0E20               	movlw	32
  4540   003A52  EF30  F01D         	goto	u3410
  4541   003A56                     u3415:
  4542   003A56  90D8               	bcf	status,0,c
  4543   003A58  3223               	rrcf	(??_floorf+3)^0,f,c
  4544   003A5A  3222               	rrcf	(??_floorf+2)^0,f,c
  4545   003A5C  3221               	rrcf	(??_floorf+1)^0,f,c
  4546   003A5E  3220               	rrcf	??_floorf^0,f,c
  4547   003A60                     u3410:
  4548   003A60  2EE8               	decfsz	wreg,f,c
  4549   003A62  EF2B  F01D         	goto	u3415
  4550   003A66  5020               	movf	??_floorf^0,w,c
  4551   003A68  1021               	iorwf	(??_floorf+1)^0,w,c
  4552   003A6A  1022               	iorwf	(??_floorf+2)^0,w,c
  4553   003A6C  1023               	iorwf	(??_floorf+3)^0,w,c
  4554   003A6E  B4D8               	btfsc	status,2,c
  4555   003A70  EF3C  F01D         	goto	u3421
  4556   003A74  EF3E  F01D         	goto	u3420
  4557   003A78                     u3421:
  4558   003A78  EF46  F01D         	goto	l1087
  4559   003A7C                     u3420:
  4560   003A7C  5026               	movf	floorf@m^0,w,c
  4561   003A7E  262C               	addwf	floorf@u^0,f,c
  4562   003A80  5027               	movf	(floorf@m+1)^0,w,c
  4563   003A82  222D               	addwfc	(floorf@u+1)^0,f,c
  4564   003A84  5028               	movf	(floorf@m+2)^0,w,c
  4565   003A86  222E               	addwfc	(floorf@u+2)^0,f,c
  4566   003A88  5029               	movf	(floorf@m+3)^0,w,c
  4567   003A8A  222F               	addwfc	(floorf@u+3)^0,f,c
  4568   003A8C                     l1087:
  4569   003A8C  1C26               	comf	floorf@m^0,w,c
  4570   003A8E  6E20               	movwf	??_floorf^0,c
  4571   003A90  1C27               	comf	(floorf@m+1)^0,w,c
  4572   003A92  6E21               	movwf	(??_floorf+1)^0,c
  4573   003A94  1C28               	comf	(floorf@m+2)^0,w,c
  4574   003A96  6E22               	movwf	(??_floorf+2)^0,c
  4575   003A98  1C29               	comf	(floorf@m+3)^0,w,c
  4576   003A9A  6E23               	movwf	(??_floorf+3)^0,c
  4577   003A9C  5020               	movf	??_floorf^0,w,c
  4578   003A9E  162C               	andwf	floorf@u^0,f,c
  4579   003AA0  5021               	movf	(??_floorf+1)^0,w,c
  4580   003AA2  162D               	andwf	(floorf@u+1)^0,f,c
  4581   003AA4  5022               	movf	(??_floorf+2)^0,w,c
  4582   003AA6  162E               	andwf	(floorf@u+2)^0,f,c
  4583   003AA8  5023               	movf	(??_floorf+3)^0,w,c
  4584   003AAA  162F               	andwf	(floorf@u+3)^0,f,c
  4585   003AAC  EF9C  F01D         	goto	l3316
  4586   003AB0                     l3308:
  4587   003AB0  C02C  F020         	movff	floorf@u,??_floorf
  4588   003AB4  C02D  F021         	movff	floorf@u+1,??_floorf+1
  4589   003AB8  C02E  F022         	movff	floorf@u+2,??_floorf+2
  4590   003ABC  C02F  F023         	movff	floorf@u+3,??_floorf+3
  4591   003AC0  0E20               	movlw	32
  4592   003AC2  EF68  F01D         	goto	u3430
  4593   003AC6                     u3435:
  4594   003AC6  90D8               	bcf	status,0,c
  4595   003AC8  3223               	rrcf	(??_floorf+3)^0,f,c
  4596   003ACA  3222               	rrcf	(??_floorf+2)^0,f,c
  4597   003ACC  3221               	rrcf	(??_floorf+1)^0,f,c
  4598   003ACE  3220               	rrcf	??_floorf^0,f,c
  4599   003AD0                     u3430:
  4600   003AD0  2EE8               	decfsz	wreg,f,c
  4601   003AD2  EF63  F01D         	goto	u3435
  4602   003AD6  5020               	movf	??_floorf^0,w,c
  4603   003AD8  1021               	iorwf	(??_floorf+1)^0,w,c
  4604   003ADA  1022               	iorwf	(??_floorf+2)^0,w,c
  4605   003ADC  1023               	iorwf	(??_floorf+3)^0,w,c
  4606   003ADE  A4D8               	btfss	status,2,c
  4607   003AE0  EF74  F01D         	goto	u3441
  4608   003AE4  EF76  F01D         	goto	u3440
  4609   003AE8                     u3441:
  4610   003AE8  EF80  F01D         	goto	l3312
  4611   003AEC                     u3440:
  4612   003AEC  0E00               	movlw	0
  4613   003AEE  6E2C               	movwf	floorf@u^0,c
  4614   003AF0  0E00               	movlw	0
  4615   003AF2  6E2D               	movwf	(floorf@u+1)^0,c
  4616   003AF4  0E00               	movlw	0
  4617   003AF6  6E2E               	movwf	(floorf@u+2)^0,c
  4618   003AF8  0E00               	movlw	0
  4619   003AFA  6E2F               	movwf	(floorf@u+3)^0,c
  4620   003AFC  EF9C  F01D         	goto	l3316
  4621   003B00                     l3312:
  4622   003B00  90D8               	bcf	status,0,c
  4623   003B02  342C               	rlcf	floorf@u^0,w,c
  4624   003B04  6E20               	movwf	??_floorf^0,c
  4625   003B06  342D               	rlcf	(floorf@u+1)^0,w,c
  4626   003B08  6E21               	movwf	(??_floorf+1)^0,c
  4627   003B0A  342E               	rlcf	(floorf@u+2)^0,w,c
  4628   003B0C  6E22               	movwf	(??_floorf+2)^0,c
  4629   003B0E  342F               	rlcf	(floorf@u+3)^0,w,c
  4630   003B10  6E23               	movwf	(??_floorf+3)^0,c
  4631   003B12  5020               	movf	??_floorf^0,w,c
  4632   003B14  1021               	iorwf	(??_floorf+1)^0,w,c
  4633   003B16  1022               	iorwf	(??_floorf+2)^0,w,c
  4634   003B18  1023               	iorwf	(??_floorf+3)^0,w,c
  4635   003B1A  B4D8               	btfsc	status,2,c
  4636   003B1C  EF92  F01D         	goto	u3451
  4637   003B20  EF94  F01D         	goto	u3450
  4638   003B24                     u3451:
  4639   003B24  EF9C  F01D         	goto	l3316
  4640   003B28                     u3450:
  4641   003B28  0E00               	movlw	0
  4642   003B2A  6E2C               	movwf	floorf@u^0,c
  4643   003B2C  0E00               	movlw	0
  4644   003B2E  6E2D               	movwf	(floorf@u+1)^0,c
  4645   003B30  0E80               	movlw	128
  4646   003B32  6E2E               	movwf	(floorf@u+2)^0,c
  4647   003B34  0EBF               	movlw	191
  4648   003B36  6E2F               	movwf	(floorf@u+3)^0,c
  4649   003B38                     l3316:
  4650   003B38  C02C  F01C         	movff	floorf@u,?_floorf
  4651   003B3C  C02D  F01D         	movff	floorf@u+1,?_floorf+1
  4652   003B40  C02E  F01E         	movff	floorf@u+2,?_floorf+2
  4653   003B44  C02F  F01F         	movff	floorf@u+3,?_floorf+3
  4654   003B48                     l1084:
  4655   003B48  0012               	return		;funcret
  4656   003B4A                     __end_of_floorf:
  4657                           	callstack 0
  4658                           
  4659 ;; *************** function ___fpclassifyf *****************
  4660 ;; Defined at:
  4661 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__fpclassifyf.c"
  4662 ;; Parameters:    Size  Location     Type
  4663 ;;  x               4    2[COMRAM] float 
  4664 ;; Auto vars:     Size  Location     Type
  4665 ;;  u               4   12[COMRAM] struct .
  4666 ;;  e               2   10[COMRAM] int 
  4667 ;; Return value:  Size  Location     Type
  4668 ;;                  2    2[COMRAM] int 
  4669 ;; Registers used:
  4670 ;;		wreg, status,2, status,0
  4671 ;; Tracked objects:
  4672 ;;		On entry : 0/0
  4673 ;;		On exit  : 0/0
  4674 ;;		Unchanged: 0/0
  4675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4676 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4677 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4678 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4679 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4680 ;;Total ram usage:       14 bytes
  4681 ;; Hardware stack levels used: 1
  4682 ;; Hardware stack levels required when called: 1
  4683 ;; This function calls:
  4684 ;;		Nothing
  4685 ;; This function is called by:
  4686 ;;		_efgtoa
  4687 ;; This function uses a non-reentrant model
  4688 ;;
  4689                           
  4690                           	psect	text11
  4691   0040DC                     __ptext11:
  4692                           	callstack 0
  4693   0040DC                     ___fpclassifyf:
  4694                           	callstack 24
  4695   0040DC  C058  F00D         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4696   0040E0  C059  F00E         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4697   0040E4  C05A  F00F         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4698   0040E8  C05B  F010         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4699   0040EC  C003  F00D         	movff	___fpclassifyf@x,___fpclassifyf@u
  4700   0040F0  C004  F00E         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4701   0040F4  C005  F00F         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4702   0040F8  C006  F010         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4703   0040FC  C00D  F007         	movff	___fpclassifyf@u,??___fpclassifyf
  4704   004100  C00E  F008         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4705   004104  C00F  F009         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4706   004108  C010  F00A         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4707   00410C  0E18               	movlw	24
  4708   00410E  EF8E  F020         	goto	u3270
  4709   004112                     u3275:
  4710   004112  90D8               	bcf	status,0,c
  4711   004114  320A               	rrcf	(??___fpclassifyf+3)^0,f,c
  4712   004116  3209               	rrcf	(??___fpclassifyf+2)^0,f,c
  4713   004118  3208               	rrcf	(??___fpclassifyf+1)^0,f,c
  4714   00411A  3207               	rrcf	??___fpclassifyf^0,f,c
  4715   00411C                     u3270:
  4716   00411C  2EE8               	decfsz	wreg,f,c
  4717   00411E  EF89  F020         	goto	u3275
  4718   004122  5007               	movf	??___fpclassifyf^0,w,c
  4719   004124  6E0B               	movwf	___fpclassifyf@e^0,c
  4720   004126  6A0C               	clrf	(___fpclassifyf@e+1)^0,c
  4721   004128  500B               	movf	___fpclassifyf@e^0,w,c
  4722   00412A  100C               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4723   00412C  A4D8               	btfss	status,2,c
  4724   00412E  EF9B  F020         	goto	u3281
  4725   004132  EF9D  F020         	goto	u3280
  4726   004136                     u3281:
  4727   004136  EFBD  F020         	goto	l3270
  4728   00413A                     u3280:
  4729   00413A  90D8               	bcf	status,0,c
  4730   00413C  340D               	rlcf	___fpclassifyf@u^0,w,c
  4731   00413E  6E07               	movwf	??___fpclassifyf^0,c
  4732   004140  340E               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4733   004142  6E08               	movwf	(??___fpclassifyf+1)^0,c
  4734   004144  340F               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4735   004146  6E09               	movwf	(??___fpclassifyf+2)^0,c
  4736   004148  3410               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4737   00414A  6E0A               	movwf	(??___fpclassifyf+3)^0,c
  4738   00414C  5007               	movf	??___fpclassifyf^0,w,c
  4739   00414E  1008               	iorwf	(??___fpclassifyf+1)^0,w,c
  4740   004150  1009               	iorwf	(??___fpclassifyf+2)^0,w,c
  4741   004152  100A               	iorwf	(??___fpclassifyf+3)^0,w,c
  4742   004154  A4D8               	btfss	status,2,c
  4743   004156  EFAF  F020         	goto	u3291
  4744   00415A  EFB1  F020         	goto	u3290
  4745   00415E                     u3291:
  4746   00415E  EFB7  F020         	goto	l3266
  4747   004162                     u3290:
  4748   004162  0E00               	movlw	0
  4749   004164  6E04               	movwf	(?___fpclassifyf+1)^0,c
  4750   004166  0E02               	movlw	2
  4751   004168  6E03               	movwf	?___fpclassifyf^0,c
  4752   00416A  EFEC  F020         	goto	l1070
  4753   00416E                     l3266:
  4754   00416E  0E00               	movlw	0
  4755   004170  6E04               	movwf	(?___fpclassifyf+1)^0,c
  4756   004172  0E03               	movlw	3
  4757   004174  6E03               	movwf	?___fpclassifyf^0,c
  4758   004176  EFEC  F020         	goto	l1070
  4759   00417A                     l3270:
  4760   00417A  280B               	incf	___fpclassifyf@e^0,w,c
  4761   00417C  100C               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4762   00417E  A4D8               	btfss	status,2,c
  4763   004180  EFC4  F020         	goto	u3301
  4764   004184  EFC6  F020         	goto	u3300
  4765   004188                     u3301:
  4766   004188  EFE8  F020         	goto	l3276
  4767   00418C                     u3300:
  4768   00418C  C00D  F007         	movff	___fpclassifyf@u,??___fpclassifyf
  4769   004190  C00E  F008         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4770   004194  C00F  F009         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4771   004198  C010  F00A         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4772   00419C  0E09               	movlw	9
  4773   00419E                     u3315:
  4774   00419E  90D8               	bcf	status,0,c
  4775   0041A0  3607               	rlcf	??___fpclassifyf^0,f,c
  4776   0041A2  3608               	rlcf	(??___fpclassifyf+1)^0,f,c
  4777   0041A4  3609               	rlcf	(??___fpclassifyf+2)^0,f,c
  4778   0041A6  360A               	rlcf	(??___fpclassifyf+3)^0,f,c
  4779   0041A8  2EE8               	decfsz	wreg,f,c
  4780   0041AA  EFCF  F020         	goto	u3315
  4781   0041AE  5007               	movf	??___fpclassifyf^0,w,c
  4782   0041B0  1008               	iorwf	(??___fpclassifyf+1)^0,w,c
  4783   0041B2  1009               	iorwf	(??___fpclassifyf+2)^0,w,c
  4784   0041B4  100A               	iorwf	(??___fpclassifyf+3)^0,w,c
  4785   0041B6  B4D8               	btfsc	status,2,c
  4786   0041B8  EFE0  F020         	goto	u3321
  4787   0041BC  EFE3  F020         	goto	u3320
  4788   0041C0                     u3321:
  4789   0041C0  0E01               	movlw	1
  4790   0041C2  EFE4  F020         	goto	u3330
  4791   0041C6                     u3320:
  4792   0041C6  0E00               	movlw	0
  4793   0041C8                     u3330:
  4794   0041C8  6E03               	movwf	?___fpclassifyf^0,c
  4795   0041CA  6A04               	clrf	(?___fpclassifyf+1)^0,c
  4796   0041CC  EFEC  F020         	goto	l1070
  4797   0041D0                     l3276:
  4798   0041D0  0E00               	movlw	0
  4799   0041D2  6E04               	movwf	(?___fpclassifyf+1)^0,c
  4800   0041D4  0E04               	movlw	4
  4801   0041D6  6E03               	movwf	?___fpclassifyf^0,c
  4802   0041D8                     l1070:
  4803   0041D8  0012               	return		;funcret
  4804   0041DA                     __end_of___fpclassifyf:
  4805                           	callstack 0
  4806                           
  4807 ;; *************** function ___fltol *****************
  4808 ;; Defined at:
  4809 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
  4810 ;; Parameters:    Size  Location     Type
  4811 ;;  f1              4    2[COMRAM] int 
  4812 ;; Auto vars:     Size  Location     Type
  4813 ;;  exp1            1   11[COMRAM] unsigned char 
  4814 ;;  sign1           1   10[COMRAM] unsigned char 
  4815 ;; Return value:  Size  Location     Type
  4816 ;;                  4    2[COMRAM] long 
  4817 ;; Registers used:
  4818 ;;		wreg, status,2, status,0
  4819 ;; Tracked objects:
  4820 ;;		On entry : 0/0
  4821 ;;		On exit  : 0/0
  4822 ;;		Unchanged: 0/0
  4823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4824 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4825 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4826 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4827 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4828 ;;Total ram usage:       10 bytes
  4829 ;; Hardware stack levels used: 1
  4830 ;; Hardware stack levels required when called: 1
  4831 ;; This function calls:
  4832 ;;		Nothing
  4833 ;; This function is called by:
  4834 ;;		_efgtoa
  4835 ;; This function uses a non-reentrant model
  4836 ;;
  4837                           
  4838                           	psect	text12
  4839   003ED2                     __ptext12:
  4840                           	callstack 0
  4841   003ED2                     ___fltol:
  4842                           	callstack 24
  4843   003ED2  3405               	rlcf	(___fltol@f1+2)^0,w,c
  4844   003ED4  3406               	rlcf	(___fltol@f1+3)^0,w,c
  4845   003ED6  6E0C               	movwf	___fltol@exp1^0,c
  4846   003ED8  500C               	movf	___fltol@exp1^0,w,c
  4847   003EDA  A4D8               	btfss	status,2,c
  4848   003EDC  EF72  F01F         	goto	u3171
  4849   003EE0  EF74  F01F         	goto	u3170
  4850   003EE4                     u3171:
  4851   003EE4  EF7E  F01F         	goto	l3204
  4852   003EE8                     u3170:
  4853   003EE8                     l3200:
  4854   003EE8  0E00               	movlw	0
  4855   003EEA  6E03               	movwf	?___fltol^0,c
  4856   003EEC  0E00               	movlw	0
  4857   003EEE  6E04               	movwf	(?___fltol+1)^0,c
  4858   003EF0  0E00               	movlw	0
  4859   003EF2  6E05               	movwf	(?___fltol+2)^0,c
  4860   003EF4  0E00               	movlw	0
  4861   003EF6  6E06               	movwf	(?___fltol+3)^0,c
  4862   003EF8  EFEB  F01F         	goto	l538
  4863   003EFC                     l3204:
  4864   003EFC  C003  F007         	movff	___fltol@f1,??___fltol
  4865   003F00  C004  F008         	movff	___fltol@f1+1,??___fltol+1
  4866   003F04  C005  F009         	movff	___fltol@f1+2,??___fltol+2
  4867   003F08  C006  F00A         	movff	___fltol@f1+3,??___fltol+3
  4868   003F0C  0E20               	movlw	32
  4869   003F0E  EF8E  F01F         	goto	u3180
  4870   003F12                     u3185:
  4871   003F12  90D8               	bcf	status,0,c
  4872   003F14  320A               	rrcf	(??___fltol+3)^0,f,c
  4873   003F16  3209               	rrcf	(??___fltol+2)^0,f,c
  4874   003F18  3208               	rrcf	(??___fltol+1)^0,f,c
  4875   003F1A  3207               	rrcf	??___fltol^0,f,c
  4876   003F1C                     u3180:
  4877   003F1C  2EE8               	decfsz	wreg,f,c
  4878   003F1E  EF89  F01F         	goto	u3185
  4879   003F22  5007               	movf	??___fltol^0,w,c
  4880   003F24  6E0B               	movwf	___fltol@sign1^0,c
  4881   003F26  8E05               	bsf	(___fltol@f1+2)^0,7,c
  4882   003F28  0EFF               	movlw	255
  4883   003F2A  1603               	andwf	___fltol@f1^0,f,c
  4884   003F2C  0EFF               	movlw	255
  4885   003F2E  1604               	andwf	(___fltol@f1+1)^0,f,c
  4886   003F30  0EFF               	movlw	255
  4887   003F32  1605               	andwf	(___fltol@f1+2)^0,f,c
  4888   003F34  0E00               	movlw	0
  4889   003F36  1606               	andwf	(___fltol@f1+3)^0,f,c
  4890   003F38  0E96               	movlw	150
  4891   003F3A  5E0C               	subwf	___fltol@exp1^0,f,c
  4892   003F3C  BE0C               	btfsc	___fltol@exp1^0,7,c
  4893   003F3E  EFA5  F01F         	goto	u3190
  4894   003F42  EFA3  F01F         	goto	u3191
  4895   003F46                     u3191:
  4896   003F46  EFBB  F01F         	goto	l3224
  4897   003F4A                     u3190:
  4898   003F4A  500C               	movf	___fltol@exp1^0,w,c
  4899   003F4C  0A80               	xorlw	128
  4900   003F4E  0F97               	addlw	151
  4901   003F50  B0D8               	btfsc	status,0,c
  4902   003F52  EFAD  F01F         	goto	u3201
  4903   003F56  EFAF  F01F         	goto	u3200
  4904   003F5A                     u3201:
  4905   003F5A  EFB1  F01F         	goto	l3220
  4906   003F5E                     u3200:
  4907   003F5E  EF74  F01F         	goto	l3200
  4908   003F62                     l3220:
  4909   003F62  90D8               	bcf	status,0,c
  4910   003F64  3206               	rrcf	(___fltol@f1+3)^0,f,c
  4911   003F66  3205               	rrcf	(___fltol@f1+2)^0,f,c
  4912   003F68  3204               	rrcf	(___fltol@f1+1)^0,f,c
  4913   003F6A  3203               	rrcf	___fltol@f1^0,f,c
  4914   003F6C  3E0C               	incfsz	___fltol@exp1^0,f,c
  4915   003F6E  EFB1  F01F         	goto	l3220
  4916   003F72  EFD3  F01F         	goto	l3234
  4917   003F76                     l3224:
  4918   003F76  0E1F               	movlw	31
  4919   003F78  640C               	cpfsgt	___fltol@exp1^0,c
  4920   003F7A  EFC1  F01F         	goto	u3211
  4921   003F7E  EFC3  F01F         	goto	u3210
  4922   003F82                     u3211:
  4923   003F82  EFCB  F01F         	goto	l3232
  4924   003F86                     u3210:
  4925   003F86  EF74  F01F         	goto	l3200
  4926   003F8A                     l3230:
  4927   003F8A  90D8               	bcf	status,0,c
  4928   003F8C  3603               	rlcf	___fltol@f1^0,f,c
  4929   003F8E  3604               	rlcf	(___fltol@f1+1)^0,f,c
  4930   003F90  3605               	rlcf	(___fltol@f1+2)^0,f,c
  4931   003F92  3606               	rlcf	(___fltol@f1+3)^0,f,c
  4932   003F94  060C               	decf	___fltol@exp1^0,f,c
  4933   003F96                     l3232:
  4934   003F96  500C               	movf	___fltol@exp1^0,w,c
  4935   003F98  A4D8               	btfss	status,2,c
  4936   003F9A  EFD1  F01F         	goto	u3221
  4937   003F9E  EFD3  F01F         	goto	u3220
  4938   003FA2                     u3221:
  4939   003FA2  EFC5  F01F         	goto	l3230
  4940   003FA6                     u3220:
  4941   003FA6                     l3234:
  4942   003FA6  500B               	movf	___fltol@sign1^0,w,c
  4943   003FA8  B4D8               	btfsc	status,2,c
  4944   003FAA  EFD9  F01F         	goto	u3231
  4945   003FAE  EFDB  F01F         	goto	u3230
  4946   003FB2                     u3231:
  4947   003FB2  EFE3  F01F         	goto	l3238
  4948   003FB6                     u3230:
  4949   003FB6  1E06               	comf	(___fltol@f1+3)^0,f,c
  4950   003FB8  1E05               	comf	(___fltol@f1+2)^0,f,c
  4951   003FBA  1E04               	comf	(___fltol@f1+1)^0,f,c
  4952   003FBC  6C03               	negf	___fltol@f1^0,c
  4953   003FBE  0E00               	movlw	0
  4954   003FC0  2204               	addwfc	(___fltol@f1+1)^0,f,c
  4955   003FC2  2205               	addwfc	(___fltol@f1+2)^0,f,c
  4956   003FC4  2206               	addwfc	(___fltol@f1+3)^0,f,c
  4957   003FC6                     l3238:
  4958   003FC6  C003  F003         	movff	___fltol@f1,?___fltol
  4959   003FCA  C004  F004         	movff	___fltol@f1+1,?___fltol+1
  4960   003FCE  C005  F005         	movff	___fltol@f1+2,?___fltol+2
  4961   003FD2  C006  F006         	movff	___fltol@f1+3,?___fltol+3
  4962   003FD6                     l538:
  4963   003FD6  0012               	return		;funcret
  4964   003FD8                     __end_of___fltol:
  4965                           	callstack 0
  4966                           
  4967 ;; *************** function ___flsub *****************
  4968 ;; Defined at:
  4969 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  4970 ;; Parameters:    Size  Location     Type
  4971 ;;  b               4   27[COMRAM] long 
  4972 ;;  a               4   31[COMRAM] long 
  4973 ;; Auto vars:     Size  Location     Type
  4974 ;;		None
  4975 ;; Return value:  Size  Location     Type
  4976 ;;                  4   27[COMRAM] long 
  4977 ;; Registers used:
  4978 ;;		wreg, status,2, status,0, cstack
  4979 ;; Tracked objects:
  4980 ;;		On entry : 0/0
  4981 ;;		On exit  : 0/0
  4982 ;;		Unchanged: 0/0
  4983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4984 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4987 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4988 ;;Total ram usage:        8 bytes
  4989 ;; Hardware stack levels used: 1
  4990 ;; Hardware stack levels required when called: 2
  4991 ;; This function calls:
  4992 ;;		___fladd
  4993 ;; This function is called by:
  4994 ;;		_efgtoa
  4995 ;; This function uses a non-reentrant model
  4996 ;;
  4997                           
  4998                           	psect	text13
  4999   004926                     __ptext13:
  5000                           	callstack 0
  5001   004926                     ___flsub:
  5002                           	callstack 23
  5003   004926  0E00               	movlw	0
  5004   004928  1A20               	xorwf	___flsub@a^0,f,c
  5005   00492A  0E00               	movlw	0
  5006   00492C  1A21               	xorwf	(___flsub@a+1)^0,f,c
  5007   00492E  0E00               	movlw	0
  5008   004930  1A22               	xorwf	(___flsub@a+2)^0,f,c
  5009   004932  0E80               	movlw	128
  5010   004934  1A23               	xorwf	(___flsub@a+3)^0,f,c
  5011   004936  C01C  F003         	movff	___flsub@b,___fladd@b
  5012   00493A  C01D  F004         	movff	___flsub@b+1,___fladd@b+1
  5013   00493E  C01E  F005         	movff	___flsub@b+2,___fladd@b+2
  5014   004942  C01F  F006         	movff	___flsub@b+3,___fladd@b+3
  5015   004946  C020  F007         	movff	___flsub@a,___fladd@a
  5016   00494A  C021  F008         	movff	___flsub@a+1,___fladd@a+1
  5017   00494E  C022  F009         	movff	___flsub@a+2,___fladd@a+2
  5018   004952  C023  F00A         	movff	___flsub@a+3,___fladd@a+3
  5019   004956  EC08  F015         	call	___fladd	;wreg free
  5020   00495A  C003  F01C         	movff	?___fladd,?___flsub
  5021   00495E  C004  F01D         	movff	?___fladd+1,?___flsub+1
  5022   004962  C005  F01E         	movff	?___fladd+2,?___flsub+2
  5023   004966  C006  F01F         	movff	?___fladd+3,?___flsub+3
  5024   00496A  0012               	return		;funcret
  5025   00496C                     __end_of___flsub:
  5026                           	callstack 0
  5027                           
  5028 ;; *************** function ___fladd *****************
  5029 ;; Defined at:
  5030 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;  b               4    2[COMRAM] long 
  5033 ;;  a               4    6[COMRAM] long 
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;  grs             1   17[COMRAM] unsigned char 
  5036 ;;  bexp            1   16[COMRAM] unsigned char 
  5037 ;;  aexp            1   15[COMRAM] unsigned char 
  5038 ;;  signs           1   14[COMRAM] unsigned char 
  5039 ;; Return value:  Size  Location     Type
  5040 ;;                  4    2[COMRAM] unsigned char 
  5041 ;; Registers used:
  5042 ;;		wreg, status,2, status,0
  5043 ;; Tracked objects:
  5044 ;;		On entry : 0/0
  5045 ;;		On exit  : 0/0
  5046 ;;		Unchanged: 0/0
  5047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5048 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5049 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5050 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5051 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5052 ;;Total ram usage:       16 bytes
  5053 ;; Hardware stack levels used: 1
  5054 ;; Hardware stack levels required when called: 1
  5055 ;; This function calls:
  5056 ;;		Nothing
  5057 ;; This function is called by:
  5058 ;;		___flsub
  5059 ;;		_efgtoa
  5060 ;; This function uses a non-reentrant model
  5061 ;;
  5062                           
  5063                           	psect	text14
  5064   002A10                     __ptext14:
  5065                           	callstack 0
  5066   002A10                     ___fladd:
  5067                           	callstack 23
  5068   002A10  5006               	movf	(___fladd@b+3)^0,w,c
  5069   002A12  0B80               	andlw	128
  5070   002A14  6E0F               	movwf	___fladd@signs^0,c
  5071   002A16  5006               	movf	(___fladd@b+3)^0,w,c
  5072   002A18  2406               	addwf	(___fladd@b+3)^0,w,c
  5073   002A1A  6E11               	movwf	___fladd@bexp^0,c
  5074   002A1C  AE05               	btfss	(___fladd@b+2)^0,7,c
  5075   002A1E  EF13  F015         	goto	u2141
  5076   002A22  EF15  F015         	goto	u2140
  5077   002A26                     u2141:
  5078   002A26  EF16  F015         	goto	l2606
  5079   002A2A                     u2140:
  5080   002A2A  8011               	bsf	___fladd@bexp^0,0,c
  5081   002A2C                     l2606:
  5082   002A2C  5011               	movf	___fladd@bexp^0,w,c
  5083   002A2E  B4D8               	btfsc	status,2,c
  5084   002A30  EF1C  F015         	goto	u2151
  5085   002A34  EF1E  F015         	goto	u2150
  5086   002A38                     u2151:
  5087   002A38  EF32  F015         	goto	l2616
  5088   002A3C                     u2150:
  5089   002A3C  2811               	incf	___fladd@bexp^0,w,c
  5090   002A3E  A4D8               	btfss	status,2,c
  5091   002A40  EF24  F015         	goto	u2161
  5092   002A44  EF26  F015         	goto	u2160
  5093   002A48                     u2161:
  5094   002A48  EF2E  F015         	goto	l2612
  5095   002A4C                     u2160:
  5096   002A4C  0E00               	movlw	0
  5097   002A4E  6E03               	movwf	___fladd@b^0,c
  5098   002A50  0E00               	movlw	0
  5099   002A52  6E04               	movwf	(___fladd@b+1)^0,c
  5100   002A54  0E00               	movlw	0
  5101   002A56  6E05               	movwf	(___fladd@b+2)^0,c
  5102   002A58  0E00               	movlw	0
  5103   002A5A  6E06               	movwf	(___fladd@b+3)^0,c
  5104   002A5C                     l2612:
  5105   002A5C  8E05               	bsf	(___fladd@b+2)^0,7,c
  5106   002A5E  6A06               	clrf	(___fladd@b+3)^0,c
  5107   002A60  EF3A  F015         	goto	l2618
  5108   002A64                     l2616:
  5109   002A64  0E00               	movlw	0
  5110   002A66  6E03               	movwf	___fladd@b^0,c
  5111   002A68  0E00               	movlw	0
  5112   002A6A  6E04               	movwf	(___fladd@b+1)^0,c
  5113   002A6C  0E00               	movlw	0
  5114   002A6E  6E05               	movwf	(___fladd@b+2)^0,c
  5115   002A70  0E00               	movlw	0
  5116   002A72  6E06               	movwf	(___fladd@b+3)^0,c
  5117   002A74                     l2618:
  5118   002A74  500A               	movf	(___fladd@a+3)^0,w,c
  5119   002A76  0B80               	andlw	128
  5120   002A78  6E10               	movwf	___fladd@aexp^0,c
  5121   002A7A  500F               	movf	___fladd@signs^0,w,c
  5122   002A7C  1810               	xorwf	___fladd@aexp^0,w,c
  5123   002A7E  B4D8               	btfsc	status,2,c
  5124   002A80  EF44  F015         	goto	u2171
  5125   002A84  EF46  F015         	goto	u2170
  5126   002A88                     u2171:
  5127   002A88  EF47  F015         	goto	l2624
  5128   002A8C                     u2170:
  5129   002A8C  8C0F               	bsf	___fladd@signs^0,6,c
  5130   002A8E                     l2624:
  5131   002A8E  500A               	movf	(___fladd@a+3)^0,w,c
  5132   002A90  240A               	addwf	(___fladd@a+3)^0,w,c
  5133   002A92  6E10               	movwf	___fladd@aexp^0,c
  5134   002A94  AE09               	btfss	(___fladd@a+2)^0,7,c
  5135   002A96  EF4F  F015         	goto	u2181
  5136   002A9A  EF51  F015         	goto	u2180
  5137   002A9E                     u2181:
  5138   002A9E  EF52  F015         	goto	l2630
  5139   002AA2                     u2180:
  5140   002AA2  8010               	bsf	___fladd@aexp^0,0,c
  5141   002AA4                     l2630:
  5142   002AA4  5010               	movf	___fladd@aexp^0,w,c
  5143   002AA6  B4D8               	btfsc	status,2,c
  5144   002AA8  EF58  F015         	goto	u2191
  5145   002AAC  EF5A  F015         	goto	u2190
  5146   002AB0                     u2191:
  5147   002AB0  EF6E  F015         	goto	l2640
  5148   002AB4                     u2190:
  5149   002AB4  2810               	incf	___fladd@aexp^0,w,c
  5150   002AB6  A4D8               	btfss	status,2,c
  5151   002AB8  EF60  F015         	goto	u2201
  5152   002ABC  EF62  F015         	goto	u2200
  5153   002AC0                     u2201:
  5154   002AC0  EF6A  F015         	goto	l2636
  5155   002AC4                     u2200:
  5156   002AC4  0E00               	movlw	0
  5157   002AC6  6E07               	movwf	___fladd@a^0,c
  5158   002AC8  0E00               	movlw	0
  5159   002ACA  6E08               	movwf	(___fladd@a+1)^0,c
  5160   002ACC  0E00               	movlw	0
  5161   002ACE  6E09               	movwf	(___fladd@a+2)^0,c
  5162   002AD0  0E00               	movlw	0
  5163   002AD2  6E0A               	movwf	(___fladd@a+3)^0,c
  5164   002AD4                     l2636:
  5165   002AD4  8E09               	bsf	(___fladd@a+2)^0,7,c
  5166   002AD6  6A0A               	clrf	(___fladd@a+3)^0,c
  5167   002AD8  EF76  F015         	goto	l2642
  5168   002ADC                     l2640:
  5169   002ADC  0E00               	movlw	0
  5170   002ADE  6E07               	movwf	___fladd@a^0,c
  5171   002AE0  0E00               	movlw	0
  5172   002AE2  6E08               	movwf	(___fladd@a+1)^0,c
  5173   002AE4  0E00               	movlw	0
  5174   002AE6  6E09               	movwf	(___fladd@a+2)^0,c
  5175   002AE8  0E00               	movlw	0
  5176   002AEA  6E0A               	movwf	(___fladd@a+3)^0,c
  5177   002AEC                     l2642:
  5178   002AEC  5011               	movf	___fladd@bexp^0,w,c
  5179   002AEE  5C10               	subwf	___fladd@aexp^0,w,c
  5180   002AF0  B0D8               	btfsc	status,0,c
  5181   002AF2  EF7D  F015         	goto	u2211
  5182   002AF6  EF7F  F015         	goto	u2210
  5183   002AFA                     u2211:
  5184   002AFA  EFA6  F015         	goto	l2678
  5185   002AFE                     u2210:
  5186   002AFE  AC0F               	btfss	___fladd@signs^0,6,c
  5187   002B00  EF84  F015         	goto	u2221
  5188   002B04  EF86  F015         	goto	u2220
  5189   002B08                     u2221:
  5190   002B08  EF88  F015         	goto	l2648
  5191   002B0C                     u2220:
  5192   002B0C  0E80               	movlw	128
  5193   002B0E  1A0F               	xorwf	___fladd@signs^0,f,c
  5194   002B10                     l2648:
  5195   002B10  C011  F012         	movff	___fladd@bexp,___fladd@grs
  5196   002B14  C010  F011         	movff	___fladd@aexp,___fladd@bexp
  5197   002B18  C012  F010         	movff	___fladd@grs,___fladd@aexp
  5198   002B1C  C003  F012         	movff	___fladd@b,___fladd@grs
  5199   002B20  C007  F003         	movff	___fladd@a,___fladd@b
  5200   002B24  C012  F007         	movff	___fladd@grs,___fladd@a
  5201   002B28  C004  F012         	movff	___fladd@b+1,___fladd@grs
  5202   002B2C  C008  F004         	movff	___fladd@a+1,___fladd@b+1
  5203   002B30  C012  F008         	movff	___fladd@grs,___fladd@a+1
  5204   002B34  C005  F012         	movff	___fladd@b+2,___fladd@grs
  5205   002B38  C009  F005         	movff	___fladd@a+2,___fladd@b+2
  5206   002B3C  C012  F009         	movff	___fladd@grs,___fladd@a+2
  5207   002B40  C006  F012         	movff	___fladd@b+3,___fladd@grs
  5208   002B44  C00A  F006         	movff	___fladd@a+3,___fladd@b+3
  5209   002B48  C012  F00A         	movff	___fladd@grs,___fladd@a+3
  5210   002B4C                     l2678:
  5211   002B4C  6A12               	clrf	___fladd@grs^0,c
  5212   002B4E  5011               	movf	___fladd@bexp^0,w,c
  5213   002B50  C010  F00B         	movff	___fladd@aexp,??___fladd
  5214   002B54  6A0C               	clrf	(??___fladd+1)^0,c
  5215   002B56  5E0B               	subwf	??___fladd^0,f,c
  5216   002B58  0E00               	movlw	0
  5217   002B5A  5A0C               	subwfb	(??___fladd+1)^0,f,c
  5218   002B5C  BE0C               	btfsc	(??___fladd+1)^0,7,c
  5219   002B5E  EFBA  F015         	goto	u2231
  5220   002B62  500C               	movf	(??___fladd+1)^0,w,c
  5221   002B64  E109               	bnz	u2230
  5222   002B66  0E1A               	movlw	26
  5223   002B68  5C0B               	subwf	??___fladd^0,w,c
  5224   002B6A  A0D8               	btfss	status,0,c
  5225   002B6C  EFBA  F015         	goto	u2231
  5226   002B70  EFBC  F015         	goto	u2230
  5227   002B74                     u2231:
  5228   002B74  EFF3  F015         	goto	l770
  5229   002B78                     u2230:
  5230   002B78  5003               	movf	___fladd@b^0,w,c
  5231   002B7A  1004               	iorwf	(___fladd@b+1)^0,w,c
  5232   002B7C  1005               	iorwf	(___fladd@b+2)^0,w,c
  5233   002B7E  1006               	iorwf	(___fladd@b+3)^0,w,c
  5234   002B80  A4D8               	btfss	status,2,c
  5235   002B82  EFC5  F015         	goto	u2241
  5236   002B86  EFC8  F015         	goto	u2240
  5237   002B8A                     u2241:
  5238   002B8A  0E01               	movlw	1
  5239   002B8C  EFC9  F015         	goto	u2250
  5240   002B90                     u2240:
  5241   002B90  0E00               	movlw	0
  5242   002B92                     u2250:
  5243   002B92  6E12               	movwf	___fladd@grs^0,c
  5244   002B94  0E00               	movlw	0
  5245   002B96  6E03               	movwf	___fladd@b^0,c
  5246   002B98  0E00               	movlw	0
  5247   002B9A  6E04               	movwf	(___fladd@b+1)^0,c
  5248   002B9C  0E00               	movlw	0
  5249   002B9E  6E05               	movwf	(___fladd@b+2)^0,c
  5250   002BA0  0E00               	movlw	0
  5251   002BA2  6E06               	movwf	(___fladd@b+3)^0,c
  5252   002BA4  C010  F011         	movff	___fladd@aexp,___fladd@bexp
  5253   002BA8  EFFC  F015         	goto	l769
  5254   002BAC                     l771:
  5255   002BAC  A012               	btfss	___fladd@grs^0,0,c
  5256   002BAE  EFDB  F015         	goto	u2261
  5257   002BB2  EFDD  F015         	goto	u2260
  5258   002BB6                     u2261:
  5259   002BB6  EFE3  F015         	goto	l2688
  5260   002BBA                     u2260:
  5261   002BBA  90D8               	bcf	status,0,c
  5262   002BBC  3012               	rrcf	___fladd@grs^0,w,c
  5263   002BBE  0901               	iorlw	1
  5264   002BC0  6E12               	movwf	___fladd@grs^0,c
  5265   002BC2  EFE5  F015         	goto	l2690
  5266   002BC6                     l2688:
  5267   002BC6  90D8               	bcf	status,0,c
  5268   002BC8  3212               	rrcf	___fladd@grs^0,f,c
  5269   002BCA                     l2690:
  5270   002BCA  A003               	btfss	___fladd@b^0,0,c
  5271   002BCC  EFEA  F015         	goto	u2271
  5272   002BD0  EFEC  F015         	goto	u2270
  5273   002BD4                     u2271:
  5274   002BD4  EFED  F015         	goto	l2694
  5275   002BD8                     u2270:
  5276   002BD8  8E12               	bsf	___fladd@grs^0,7,c
  5277   002BDA                     l2694:
  5278   002BDA  3406               	rlcf	(___fladd@b+3)^0,w,c
  5279   002BDC  3206               	rrcf	(___fladd@b+3)^0,f,c
  5280   002BDE  3205               	rrcf	(___fladd@b+2)^0,f,c
  5281   002BE0  3204               	rrcf	(___fladd@b+1)^0,f,c
  5282   002BE2  3203               	rrcf	___fladd@b^0,f,c
  5283   002BE4  2A11               	incf	___fladd@bexp^0,f,c
  5284   002BE6                     l770:
  5285   002BE6  5010               	movf	___fladd@aexp^0,w,c
  5286   002BE8  5C11               	subwf	___fladd@bexp^0,w,c
  5287   002BEA  A0D8               	btfss	status,0,c
  5288   002BEC  EFFA  F015         	goto	u2281
  5289   002BF0  EFFC  F015         	goto	u2280
  5290   002BF4                     u2281:
  5291   002BF4  EFD6  F015         	goto	l771
  5292   002BF8                     u2280:
  5293   002BF8                     l769:
  5294   002BF8  BC0F               	btfsc	___fladd@signs^0,6,c
  5295   002BFA  EF01  F016         	goto	u2291
  5296   002BFE  EF03  F016         	goto	u2290
  5297   002C02                     u2291:
  5298   002C02  EF43  F016         	goto	l2722
  5299   002C06                     u2290:
  5300   002C06  5011               	movf	___fladd@bexp^0,w,c
  5301   002C08  A4D8               	btfss	status,2,c
  5302   002C0A  EF09  F016         	goto	u2301
  5303   002C0E  EF0B  F016         	goto	u2300
  5304   002C12                     u2301:
  5305   002C12  EF15  F016         	goto	l2704
  5306   002C16                     u2300:
  5307   002C16  0E00               	movlw	0
  5308   002C18  6E03               	movwf	?___fladd^0,c
  5309   002C1A  0E00               	movlw	0
  5310   002C1C  6E04               	movwf	(?___fladd+1)^0,c
  5311   002C1E  0E00               	movlw	0
  5312   002C20  6E05               	movwf	(?___fladd+2)^0,c
  5313   002C22  0E00               	movlw	0
  5314   002C24  6E06               	movwf	(?___fladd+3)^0,c
  5315   002C26  EF62  F017         	goto	l778
  5316   002C2A                     l2704:
  5317   002C2A  5007               	movf	___fladd@a^0,w,c
  5318   002C2C  2603               	addwf	___fladd@b^0,f,c
  5319   002C2E  5008               	movf	(___fladd@a+1)^0,w,c
  5320   002C30  2204               	addwfc	(___fladd@b+1)^0,f,c
  5321   002C32  5009               	movf	(___fladd@a+2)^0,w,c
  5322   002C34  2205               	addwfc	(___fladd@b+2)^0,f,c
  5323   002C36  500A               	movf	(___fladd@a+3)^0,w,c
  5324   002C38  2206               	addwfc	(___fladd@b+3)^0,f,c
  5325   002C3A  A006               	btfss	(___fladd@b+3)^0,0,c
  5326   002C3C  EF22  F016         	goto	u2311
  5327   002C40  EF24  F016         	goto	u2310
  5328   002C44                     u2311:
  5329   002C44  EFD0  F016         	goto	l783
  5330   002C48                     u2310:
  5331   002C48  A012               	btfss	___fladd@grs^0,0,c
  5332   002C4A  EF29  F016         	goto	u2321
  5333   002C4E  EF2B  F016         	goto	u2320
  5334   002C52                     u2321:
  5335   002C52  EF31  F016         	goto	l2712
  5336   002C56                     u2320:
  5337   002C56  90D8               	bcf	status,0,c
  5338   002C58  3012               	rrcf	___fladd@grs^0,w,c
  5339   002C5A  0901               	iorlw	1
  5340   002C5C  6E12               	movwf	___fladd@grs^0,c
  5341   002C5E  EF33  F016         	goto	l2714
  5342   002C62                     l2712:
  5343   002C62  90D8               	bcf	status,0,c
  5344   002C64  3212               	rrcf	___fladd@grs^0,f,c
  5345   002C66                     l2714:
  5346   002C66  A003               	btfss	___fladd@b^0,0,c
  5347   002C68  EF38  F016         	goto	u2331
  5348   002C6C  EF3A  F016         	goto	u2330
  5349   002C70                     u2331:
  5350   002C70  EF3B  F016         	goto	l2718
  5351   002C74                     u2330:
  5352   002C74  8E12               	bsf	___fladd@grs^0,7,c
  5353   002C76                     l2718:
  5354   002C76  3406               	rlcf	(___fladd@b+3)^0,w,c
  5355   002C78  3206               	rrcf	(___fladd@b+3)^0,f,c
  5356   002C7A  3205               	rrcf	(___fladd@b+2)^0,f,c
  5357   002C7C  3204               	rrcf	(___fladd@b+1)^0,f,c
  5358   002C7E  3203               	rrcf	___fladd@b^0,f,c
  5359   002C80  2A11               	incf	___fladd@bexp^0,f,c
  5360   002C82  EFD0  F016         	goto	l783
  5361   002C86                     l2722:
  5362   002C86  5007               	movf	___fladd@a^0,w,c
  5363   002C88  5C03               	subwf	___fladd@b^0,w,c
  5364   002C8A  5008               	movf	(___fladd@a+1)^0,w,c
  5365   002C8C  5804               	subwfb	(___fladd@b+1)^0,w,c
  5366   002C8E  5009               	movf	(___fladd@a+2)^0,w,c
  5367   002C90  5805               	subwfb	(___fladd@b+2)^0,w,c
  5368   002C92  5006               	movf	(___fladd@b+3)^0,w,c
  5369   002C94  0A80               	xorlw	128
  5370   002C96  6E0B               	movwf	??___fladd^0,c
  5371   002C98  500A               	movf	(___fladd@a+3)^0,w,c
  5372   002C9A  0A80               	xorlw	128
  5373   002C9C  580B               	subwfb	??___fladd^0,w,c
  5374   002C9E  B0D8               	btfsc	status,0,c
  5375   002CA0  EF54  F016         	goto	u2341
  5376   002CA4  EF56  F016         	goto	u2340
  5377   002CA8                     u2341:
  5378   002CA8  EF81  F016         	goto	l2732
  5379   002CAC                     u2340:
  5380   002CAC  5003               	movf	___fladd@b^0,w,c
  5381   002CAE  5C07               	subwf	___fladd@a^0,w,c
  5382   002CB0  6E0B               	movwf	??___fladd^0,c
  5383   002CB2  5004               	movf	(___fladd@b+1)^0,w,c
  5384   002CB4  5808               	subwfb	(___fladd@a+1)^0,w,c
  5385   002CB6  6E0C               	movwf	(??___fladd+1)^0,c
  5386   002CB8  5005               	movf	(___fladd@b+2)^0,w,c
  5387   002CBA  5809               	subwfb	(___fladd@a+2)^0,w,c
  5388   002CBC  6E0D               	movwf	(??___fladd+2)^0,c
  5389   002CBE  5006               	movf	(___fladd@b+3)^0,w,c
  5390   002CC0  580A               	subwfb	(___fladd@a+3)^0,w,c
  5391   002CC2  6E0E               	movwf	(??___fladd+3)^0,c
  5392   002CC4  0EFF               	movlw	255
  5393   002CC6  240B               	addwf	??___fladd^0,w,c
  5394   002CC8  6E03               	movwf	___fladd@b^0,c
  5395   002CCA  0EFF               	movlw	255
  5396   002CCC  200C               	addwfc	(??___fladd+1)^0,w,c
  5397   002CCE  6E04               	movwf	(___fladd@b+1)^0,c
  5398   002CD0  0EFF               	movlw	255
  5399   002CD2  200D               	addwfc	(??___fladd+2)^0,w,c
  5400   002CD4  6E05               	movwf	(___fladd@b+2)^0,c
  5401   002CD6  0EFF               	movlw	255
  5402   002CD8  200E               	addwfc	(??___fladd+3)^0,w,c
  5403   002CDA  6E06               	movwf	(___fladd@b+3)^0,c
  5404   002CDC  0E80               	movlw	128
  5405   002CDE  1A0F               	xorwf	___fladd@signs^0,f,c
  5406   002CE0  6C12               	negf	___fladd@grs^0,c
  5407   002CE2  5012               	movf	___fladd@grs^0,w,c
  5408   002CE4  A4D8               	btfss	status,2,c
  5409   002CE6  EF77  F016         	goto	u2351
  5410   002CEA  EF79  F016         	goto	u2350
  5411   002CEE                     u2351:
  5412   002CEE  EF89  F016         	goto	l786
  5413   002CF2                     u2350:
  5414   002CF2  0E01               	movlw	1
  5415   002CF4  2603               	addwf	___fladd@b^0,f,c
  5416   002CF6  0E00               	movlw	0
  5417   002CF8  2204               	addwfc	(___fladd@b+1)^0,f,c
  5418   002CFA  2205               	addwfc	(___fladd@b+2)^0,f,c
  5419   002CFC  2206               	addwfc	(___fladd@b+3)^0,f,c
  5420   002CFE  EF89  F016         	goto	l786
  5421   002D02                     l2732:
  5422   002D02  5007               	movf	___fladd@a^0,w,c
  5423   002D04  5E03               	subwf	___fladd@b^0,f,c
  5424   002D06  5008               	movf	(___fladd@a+1)^0,w,c
  5425   002D08  5A04               	subwfb	(___fladd@b+1)^0,f,c
  5426   002D0A  5009               	movf	(___fladd@a+2)^0,w,c
  5427   002D0C  5A05               	subwfb	(___fladd@b+2)^0,f,c
  5428   002D0E  500A               	movf	(___fladd@a+3)^0,w,c
  5429   002D10  5A06               	subwfb	(___fladd@b+3)^0,f,c
  5430   002D12                     l786:
  5431   002D12  5003               	movf	___fladd@b^0,w,c
  5432   002D14  1004               	iorwf	(___fladd@b+1)^0,w,c
  5433   002D16  1005               	iorwf	(___fladd@b+2)^0,w,c
  5434   002D18  1006               	iorwf	(___fladd@b+3)^0,w,c
  5435   002D1A  A4D8               	btfss	status,2,c
  5436   002D1C  EF92  F016         	goto	u2361
  5437   002D20  EF94  F016         	goto	u2360
  5438   002D24                     u2361:
  5439   002D24  EFC9  F016         	goto	l2756
  5440   002D28                     u2360:
  5441   002D28  5012               	movf	___fladd@grs^0,w,c
  5442   002D2A  A4D8               	btfss	status,2,c
  5443   002D2C  EF9A  F016         	goto	u2371
  5444   002D30  EF9C  F016         	goto	u2370
  5445   002D34                     u2371:
  5446   002D34  EFC9  F016         	goto	l2756
  5447   002D38                     u2370:
  5448   002D38  0E00               	movlw	0
  5449   002D3A  6E03               	movwf	?___fladd^0,c
  5450   002D3C  0E00               	movlw	0
  5451   002D3E  6E04               	movwf	(?___fladd+1)^0,c
  5452   002D40  0E00               	movlw	0
  5453   002D42  6E05               	movwf	(?___fladd+2)^0,c
  5454   002D44  0E00               	movlw	0
  5455   002D46  6E06               	movwf	(?___fladd+3)^0,c
  5456   002D48  EF62  F017         	goto	l778
  5457   002D4C                     l2740:
  5458   002D4C  90D8               	bcf	status,0,c
  5459   002D4E  3603               	rlcf	___fladd@b^0,f,c
  5460   002D50  3604               	rlcf	(___fladd@b+1)^0,f,c
  5461   002D52  3605               	rlcf	(___fladd@b+2)^0,f,c
  5462   002D54  3606               	rlcf	(___fladd@b+3)^0,f,c
  5463   002D56  AE12               	btfss	___fladd@grs^0,7,c
  5464   002D58  EFB0  F016         	goto	u2381
  5465   002D5C  EFB2  F016         	goto	u2380
  5466   002D60                     u2381:
  5467   002D60  EFB3  F016         	goto	l2746
  5468   002D64                     u2380:
  5469   002D64  8003               	bsf	___fladd@b^0,0,c
  5470   002D66                     l2746:
  5471   002D66  A012               	btfss	___fladd@grs^0,0,c
  5472   002D68  EFB8  F016         	goto	u2391
  5473   002D6C  EFBA  F016         	goto	u2390
  5474   002D70                     u2391:
  5475   002D70  EFBE  F016         	goto	l2750
  5476   002D74                     u2390:
  5477   002D74  80D8               	bsf	status,0,c
  5478   002D76  3612               	rlcf	___fladd@grs^0,f,c
  5479   002D78  EFC0  F016         	goto	l2752
  5480   002D7C                     l2750:
  5481   002D7C  90D8               	bcf	status,0,c
  5482   002D7E  3612               	rlcf	___fladd@grs^0,f,c
  5483   002D80                     l2752:
  5484   002D80  5011               	movf	___fladd@bexp^0,w,c
  5485   002D82  B4D8               	btfsc	status,2,c
  5486   002D84  EFC6  F016         	goto	u2401
  5487   002D88  EFC8  F016         	goto	u2400
  5488   002D8C                     u2401:
  5489   002D8C  EFC9  F016         	goto	l2756
  5490   002D90                     u2400:
  5491   002D90  0611               	decf	___fladd@bexp^0,f,c
  5492   002D92                     l2756:
  5493   002D92  AE05               	btfss	(___fladd@b+2)^0,7,c
  5494   002D94  EFCE  F016         	goto	u2411
  5495   002D98  EFD0  F016         	goto	u2410
  5496   002D9C                     u2411:
  5497   002D9C  EFA6  F016         	goto	l2740
  5498   002DA0                     u2410:
  5499   002DA0                     l783:
  5500   002DA0  6A10               	clrf	___fladd@aexp^0,c
  5501   002DA2  AE12               	btfss	___fladd@grs^0,7,c
  5502   002DA4  EFD6  F016         	goto	u2421
  5503   002DA8  EFD8  F016         	goto	u2420
  5504   002DAC                     u2421:
  5505   002DAC  EFF0  F016         	goto	l795
  5506   002DB0                     u2420:
  5507   002DB0  C012  F00B         	movff	___fladd@grs,??___fladd
  5508   002DB4  0E7F               	movlw	127
  5509   002DB6  160B               	andwf	??___fladd^0,f,c
  5510   002DB8  B4D8               	btfsc	status,2,c
  5511   002DBA  EFE1  F016         	goto	u2431
  5512   002DBE  EFE3  F016         	goto	u2430
  5513   002DC2                     u2431:
  5514   002DC2  EFE7  F016         	goto	l796
  5515   002DC6                     u2430:
  5516   002DC6                     l2760:
  5517   002DC6  0E01               	movlw	1
  5518   002DC8  6E10               	movwf	___fladd@aexp^0,c
  5519   002DCA  EFF0  F016         	goto	l795
  5520   002DCE                     l796:
  5521   002DCE  A003               	btfss	___fladd@b^0,0,c
  5522   002DD0  EFEC  F016         	goto	u2441
  5523   002DD4  EFEE  F016         	goto	u2440
  5524   002DD8                     u2441:
  5525   002DD8  EFF0  F016         	goto	l795
  5526   002DDC                     u2440:
  5527   002DDC  EFE3  F016         	goto	l2760
  5528   002DE0                     l795:
  5529   002DE0  5010               	movf	___fladd@aexp^0,w,c
  5530   002DE2  B4D8               	btfsc	status,2,c
  5531   002DE4  EFF6  F016         	goto	u2451
  5532   002DE8  EFF8  F016         	goto	u2450
  5533   002DEC                     u2451:
  5534   002DEC  EF23  F017         	goto	l2772
  5535   002DF0                     u2450:
  5536   002DF0  0E01               	movlw	1
  5537   002DF2  2603               	addwf	___fladd@b^0,f,c
  5538   002DF4  0E00               	movlw	0
  5539   002DF6  2204               	addwfc	(___fladd@b+1)^0,f,c
  5540   002DF8  2205               	addwfc	(___fladd@b+2)^0,f,c
  5541   002DFA  2206               	addwfc	(___fladd@b+3)^0,f,c
  5542   002DFC  A006               	btfss	(___fladd@b+3)^0,0,c
  5543   002DFE  EF03  F017         	goto	u2461
  5544   002E02  EF05  F017         	goto	u2460
  5545   002E06                     u2461:
  5546   002E06  EF23  F017         	goto	l2772
  5547   002E0A                     u2460:
  5548   002E0A  C003  F00B         	movff	___fladd@b,??___fladd
  5549   002E0E  C004  F00C         	movff	___fladd@b+1,??___fladd+1
  5550   002E12  C005  F00D         	movff	___fladd@b+2,??___fladd+2
  5551   002E16  C006  F00E         	movff	___fladd@b+3,??___fladd+3
  5552   002E1A  340E               	rlcf	(??___fladd+3)^0,w,c
  5553   002E1C  320E               	rrcf	(??___fladd+3)^0,f,c
  5554   002E1E  320D               	rrcf	(??___fladd+2)^0,f,c
  5555   002E20  320C               	rrcf	(??___fladd+1)^0,f,c
  5556   002E22  320B               	rrcf	??___fladd^0,f,c
  5557   002E24  C00B  F003         	movff	??___fladd,___fladd@b
  5558   002E28  C00C  F004         	movff	??___fladd+1,___fladd@b+1
  5559   002E2C  C00D  F005         	movff	??___fladd+2,___fladd@b+2
  5560   002E30  C00E  F006         	movff	??___fladd+3,___fladd@b+3
  5561   002E34  2811               	incf	___fladd@bexp^0,w,c
  5562   002E36  B4D8               	btfsc	status,2,c
  5563   002E38  EF20  F017         	goto	u2471
  5564   002E3C  EF22  F017         	goto	u2470
  5565   002E40                     u2471:
  5566   002E40  EF23  F017         	goto	l2772
  5567   002E44                     u2470:
  5568   002E44  2A11               	incf	___fladd@bexp^0,f,c
  5569   002E46                     l2772:
  5570   002E46  2811               	incf	___fladd@bexp^0,w,c
  5571   002E48  B4D8               	btfsc	status,2,c
  5572   002E4A  EF29  F017         	goto	u2481
  5573   002E4E  EF2B  F017         	goto	u2480
  5574   002E52                     u2481:
  5575   002E52  EF33  F017         	goto	l2776
  5576   002E56                     u2480:
  5577   002E56  5011               	movf	___fladd@bexp^0,w,c
  5578   002E58  A4D8               	btfss	status,2,c
  5579   002E5A  EF31  F017         	goto	u2491
  5580   002E5E  EF33  F017         	goto	u2490
  5581   002E62                     u2491:
  5582   002E62  EF44  F017         	goto	l802
  5583   002E66                     u2490:
  5584   002E66                     l2776:
  5585   002E66  0E00               	movlw	0
  5586   002E68  6E03               	movwf	___fladd@b^0,c
  5587   002E6A  0E00               	movlw	0
  5588   002E6C  6E04               	movwf	(___fladd@b+1)^0,c
  5589   002E6E  0E00               	movlw	0
  5590   002E70  6E05               	movwf	(___fladd@b+2)^0,c
  5591   002E72  0E00               	movlw	0
  5592   002E74  6E06               	movwf	(___fladd@b+3)^0,c
  5593   002E76  5011               	movf	___fladd@bexp^0,w,c
  5594   002E78  A4D8               	btfss	status,2,c
  5595   002E7A  EF41  F017         	goto	u2501
  5596   002E7E  EF43  F017         	goto	u2500
  5597   002E82                     u2501:
  5598   002E82  EF44  F017         	goto	l802
  5599   002E86                     u2500:
  5600   002E86  6A0F               	clrf	___fladd@signs^0,c
  5601   002E88                     l802:
  5602   002E88  A011               	btfss	___fladd@bexp^0,0,c
  5603   002E8A  EF49  F017         	goto	u2511
  5604   002E8E  EF4B  F017         	goto	u2510
  5605   002E92                     u2511:
  5606   002E92  EF4E  F017         	goto	l2782
  5607   002E96                     u2510:
  5608   002E96  8E05               	bsf	(___fladd@b+2)^0,7,c
  5609   002E98  EF4F  F017         	goto	l2784
  5610   002E9C                     l2782:
  5611   002E9C  9E05               	bcf	(___fladd@b+2)^0,7,c
  5612   002E9E                     l2784:
  5613   002E9E  90D8               	bcf	status,0,c
  5614   002EA0  3011               	rrcf	___fladd@bexp^0,w,c
  5615   002EA2  6E06               	movwf	(___fladd@b+3)^0,c
  5616   002EA4  AE0F               	btfss	___fladd@signs^0,7,c
  5617   002EA6  EF57  F017         	goto	u2521
  5618   002EAA  EF59  F017         	goto	u2520
  5619   002EAE                     u2521:
  5620   002EAE  EF5A  F017         	goto	l2790
  5621   002EB2                     u2520:
  5622   002EB2  8E06               	bsf	(___fladd@b+3)^0,7,c
  5623   002EB4                     l2790:
  5624   002EB4  C003  F003         	movff	___fladd@b,?___fladd
  5625   002EB8  C004  F004         	movff	___fladd@b+1,?___fladd+1
  5626   002EBC  C005  F005         	movff	___fladd@b+2,?___fladd+2
  5627   002EC0  C006  F006         	movff	___fladd@b+3,?___fladd+3
  5628   002EC4                     l778:
  5629   002EC4  0012               	return		;funcret
  5630   002EC6                     __end_of___fladd:
  5631                           	callstack 0
  5632                           
  5633 ;; *************** function ___flneg *****************
  5634 ;; Defined at:
  5635 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flneg.c"
  5636 ;; Parameters:    Size  Location     Type
  5637 ;;  f1              4    2[COMRAM] unsigned char 
  5638 ;; Auto vars:     Size  Location     Type
  5639 ;;		None
  5640 ;; Return value:  Size  Location     Type
  5641 ;;                  4    2[COMRAM] unsigned char 
  5642 ;; Registers used:
  5643 ;;		wreg, status,2, status,0
  5644 ;; Tracked objects:
  5645 ;;		On entry : 0/0
  5646 ;;		On exit  : 0/0
  5647 ;;		Unchanged: 0/0
  5648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5649 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5652 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5653 ;;Total ram usage:        4 bytes
  5654 ;; Hardware stack levels used: 1
  5655 ;; Hardware stack levels required when called: 1
  5656 ;; This function calls:
  5657 ;;		Nothing
  5658 ;; This function is called by:
  5659 ;;		_efgtoa
  5660 ;; This function uses a non-reentrant model
  5661 ;;
  5662                           
  5663                           	psect	text15
  5664   004A76                     __ptext15:
  5665                           	callstack 0
  5666   004A76                     ___flneg:
  5667                           	callstack 24
  5668   004A76  5003               	movf	___flneg@f1^0,w,c
  5669   004A78  1004               	iorwf	(___flneg@f1+1)^0,w,c
  5670   004A7A  1005               	iorwf	(___flneg@f1+2)^0,w,c
  5671   004A7C  1006               	iorwf	(___flneg@f1+3)^0,w,c
  5672   004A7E  B4D8               	btfsc	status,2,c
  5673   004A80  EF44  F025         	goto	u3161
  5674   004A84  EF46  F025         	goto	u3160
  5675   004A88                     u3161:
  5676   004A88  EF4E  F025         	goto	l3194
  5677   004A8C                     u3160:
  5678   004A8C  0E00               	movlw	0
  5679   004A8E  1A03               	xorwf	___flneg@f1^0,f,c
  5680   004A90  0E00               	movlw	0
  5681   004A92  1A04               	xorwf	(___flneg@f1+1)^0,f,c
  5682   004A94  0E00               	movlw	0
  5683   004A96  1A05               	xorwf	(___flneg@f1+2)^0,f,c
  5684   004A98  0E80               	movlw	128
  5685   004A9A  1A06               	xorwf	(___flneg@f1+3)^0,f,c
  5686   004A9C                     l3194:
  5687   004A9C  C003  F003         	movff	___flneg@f1,?___flneg
  5688   004AA0  C004  F004         	movff	___flneg@f1+1,?___flneg+1
  5689   004AA4  C005  F005         	movff	___flneg@f1+2,?___flneg+2
  5690   004AA8  C006  F006         	movff	___flneg@f1+3,?___flneg+3
  5691   004AAC  0012               	return		;funcret
  5692   004AAE                     __end_of___flneg:
  5693                           	callstack 0
  5694                           
  5695 ;; *************** function ___flmul *****************
  5696 ;; Defined at:
  5697 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
  5698 ;; Parameters:    Size  Location     Type
  5699 ;;  b               4    2[COMRAM] unsigned char 
  5700 ;;  a               4    6[COMRAM] unsigned char 
  5701 ;; Auto vars:     Size  Location     Type
  5702 ;;  prod            4   21[COMRAM] struct .
  5703 ;;  grs             4   15[COMRAM] unsigned long 
  5704 ;;  temp            2   25[COMRAM] struct .
  5705 ;;  bexp            1   20[COMRAM] unsigned char 
  5706 ;;  aexp            1   19[COMRAM] unsigned char 
  5707 ;;  sign            1   14[COMRAM] unsigned char 
  5708 ;; Return value:  Size  Location     Type
  5709 ;;                  4    2[COMRAM] unsigned char 
  5710 ;; Registers used:
  5711 ;;		wreg, status,2, status,0, prodl, prodh
  5712 ;; Tracked objects:
  5713 ;;		On entry : 0/0
  5714 ;;		On exit  : 0/0
  5715 ;;		Unchanged: 0/0
  5716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5717 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5718 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5719 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5720 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5721 ;;Total ram usage:       25 bytes
  5722 ;; Hardware stack levels used: 1
  5723 ;; Hardware stack levels required when called: 1
  5724 ;; This function calls:
  5725 ;;		Nothing
  5726 ;; This function is called by:
  5727 ;;		_efgtoa
  5728 ;;		_readADC
  5729 ;; This function uses a non-reentrant model
  5730 ;;
  5731                           
  5732                           	psect	text16
  5733   002EC6                     __ptext16:
  5734                           	callstack 0
  5735   002EC6                     ___flmul:
  5736                           	callstack 24
  5737   002EC6  5006               	movf	(___flmul@b+3)^0,w,c
  5738   002EC8  0B80               	andlw	128
  5739   002ECA  6E0F               	movwf	___flmul@sign^0,c
  5740   002ECC  5006               	movf	(___flmul@b+3)^0,w,c
  5741   002ECE  2406               	addwf	(___flmul@b+3)^0,w,c
  5742   002ED0  6E15               	movwf	___flmul@bexp^0,c
  5743   002ED2  AE05               	btfss	(___flmul@b+2)^0,7,c
  5744   002ED4  EF6E  F017         	goto	u2771
  5745   002ED8  EF70  F017         	goto	u2770
  5746   002EDC                     u2771:
  5747   002EDC  EF71  F017         	goto	l2944
  5748   002EE0                     u2770:
  5749   002EE0  8015               	bsf	___flmul@bexp^0,0,c
  5750   002EE2                     l2944:
  5751   002EE2  5015               	movf	___flmul@bexp^0,w,c
  5752   002EE4  B4D8               	btfsc	status,2,c
  5753   002EE6  EF77  F017         	goto	u2781
  5754   002EEA  EF79  F017         	goto	u2780
  5755   002EEE                     u2781:
  5756   002EEE  EF8C  F017         	goto	l2952
  5757   002EF2                     u2780:
  5758   002EF2  2815               	incf	___flmul@bexp^0,w,c
  5759   002EF4  A4D8               	btfss	status,2,c
  5760   002EF6  EF7F  F017         	goto	u2791
  5761   002EFA  EF81  F017         	goto	u2790
  5762   002EFE                     u2791:
  5763   002EFE  EF89  F017         	goto	l2950
  5764   002F02                     u2790:
  5765   002F02  0E00               	movlw	0
  5766   002F04  6E03               	movwf	___flmul@b^0,c
  5767   002F06  0E00               	movlw	0
  5768   002F08  6E04               	movwf	(___flmul@b+1)^0,c
  5769   002F0A  0E00               	movlw	0
  5770   002F0C  6E05               	movwf	(___flmul@b+2)^0,c
  5771   002F0E  0E00               	movlw	0
  5772   002F10  6E06               	movwf	(___flmul@b+3)^0,c
  5773   002F12                     l2950:
  5774   002F12  8E05               	bsf	(___flmul@b+2)^0,7,c
  5775   002F14  EF94  F017         	goto	l2954
  5776   002F18                     l2952:
  5777   002F18  0E00               	movlw	0
  5778   002F1A  6E03               	movwf	___flmul@b^0,c
  5779   002F1C  0E00               	movlw	0
  5780   002F1E  6E04               	movwf	(___flmul@b+1)^0,c
  5781   002F20  0E00               	movlw	0
  5782   002F22  6E05               	movwf	(___flmul@b+2)^0,c
  5783   002F24  0E00               	movlw	0
  5784   002F26  6E06               	movwf	(___flmul@b+3)^0,c
  5785   002F28                     l2954:
  5786   002F28  500A               	movf	(___flmul@a+3)^0,w,c
  5787   002F2A  0B80               	andlw	128
  5788   002F2C  1A0F               	xorwf	___flmul@sign^0,f,c
  5789   002F2E  500A               	movf	(___flmul@a+3)^0,w,c
  5790   002F30  240A               	addwf	(___flmul@a+3)^0,w,c
  5791   002F32  6E14               	movwf	___flmul@aexp^0,c
  5792   002F34  AE09               	btfss	(___flmul@a+2)^0,7,c
  5793   002F36  EF9F  F017         	goto	u2801
  5794   002F3A  EFA1  F017         	goto	u2800
  5795   002F3E                     u2801:
  5796   002F3E  EFA2  F017         	goto	l2962
  5797   002F42                     u2800:
  5798   002F42  8014               	bsf	___flmul@aexp^0,0,c
  5799   002F44                     l2962:
  5800   002F44  5014               	movf	___flmul@aexp^0,w,c
  5801   002F46  B4D8               	btfsc	status,2,c
  5802   002F48  EFA8  F017         	goto	u2811
  5803   002F4C  EFAA  F017         	goto	u2810
  5804   002F50                     u2811:
  5805   002F50  EFBD  F017         	goto	l2970
  5806   002F54                     u2810:
  5807   002F54  2814               	incf	___flmul@aexp^0,w,c
  5808   002F56  A4D8               	btfss	status,2,c
  5809   002F58  EFB0  F017         	goto	u2821
  5810   002F5C  EFB2  F017         	goto	u2820
  5811   002F60                     u2821:
  5812   002F60  EFBA  F017         	goto	l2968
  5813   002F64                     u2820:
  5814   002F64  0E00               	movlw	0
  5815   002F66  6E07               	movwf	___flmul@a^0,c
  5816   002F68  0E00               	movlw	0
  5817   002F6A  6E08               	movwf	(___flmul@a+1)^0,c
  5818   002F6C  0E00               	movlw	0
  5819   002F6E  6E09               	movwf	(___flmul@a+2)^0,c
  5820   002F70  0E00               	movlw	0
  5821   002F72  6E0A               	movwf	(___flmul@a+3)^0,c
  5822   002F74                     l2968:
  5823   002F74  8E09               	bsf	(___flmul@a+2)^0,7,c
  5824   002F76  EFC5  F017         	goto	l855
  5825   002F7A                     l2970:
  5826   002F7A  0E00               	movlw	0
  5827   002F7C  6E07               	movwf	___flmul@a^0,c
  5828   002F7E  0E00               	movlw	0
  5829   002F80  6E08               	movwf	(___flmul@a+1)^0,c
  5830   002F82  0E00               	movlw	0
  5831   002F84  6E09               	movwf	(___flmul@a+2)^0,c
  5832   002F86  0E00               	movlw	0
  5833   002F88  6E0A               	movwf	(___flmul@a+3)^0,c
  5834   002F8A                     l855:
  5835   002F8A  5014               	movf	___flmul@aexp^0,w,c
  5836   002F8C  B4D8               	btfsc	status,2,c
  5837   002F8E  EFCB  F017         	goto	u2831
  5838   002F92  EFCD  F017         	goto	u2830
  5839   002F96                     u2831:
  5840   002F96  EFD5  F017         	goto	l2974
  5841   002F9A                     u2830:
  5842   002F9A  5015               	movf	___flmul@bexp^0,w,c
  5843   002F9C  A4D8               	btfss	status,2,c
  5844   002F9E  EFD3  F017         	goto	u2841
  5845   002FA2  EFD5  F017         	goto	u2840
  5846   002FA6                     u2841:
  5847   002FA6  EFDF  F017         	goto	l2978
  5848   002FAA                     u2840:
  5849   002FAA                     l2974:
  5850   002FAA  0E00               	movlw	0
  5851   002FAC  6E03               	movwf	?___flmul^0,c
  5852   002FAE  0E00               	movlw	0
  5853   002FB0  6E04               	movwf	(?___flmul+1)^0,c
  5854   002FB2  0E00               	movlw	0
  5855   002FB4  6E05               	movwf	(?___flmul+2)^0,c
  5856   002FB6  0E00               	movlw	0
  5857   002FB8  6E06               	movwf	(?___flmul+3)^0,c
  5858   002FBA  EF87  F019         	goto	l859
  5859   002FBE                     l2978:
  5860   002FBE  5009               	movf	(___flmul@a+2)^0,w,c
  5861   002FC0  0203               	mulwf	___flmul@b^0,c
  5862   002FC2  006F FFCC  F01A    	movff	prodl,___flmul@temp
  5863   002FC8  006F FFD0  F01B    	movff	prodh,___flmul@temp+1
  5864   002FCE  501A               	movf	___flmul@temp^0,w,c
  5865   002FD0  6E10               	movwf	___flmul@grs^0,c
  5866   002FD2  6A11               	clrf	(___flmul@grs+1)^0,c
  5867   002FD4  6A12               	clrf	(___flmul@grs+2)^0,c
  5868   002FD6  6A13               	clrf	(___flmul@grs+3)^0,c
  5869   002FD8  501B               	movf	(___flmul@temp+1)^0,w,c
  5870   002FDA  6E16               	movwf	___flmul@prod^0,c
  5871   002FDC  6A17               	clrf	(___flmul@prod+1)^0,c
  5872   002FDE  6A18               	clrf	(___flmul@prod+2)^0,c
  5873   002FE0  6A19               	clrf	(___flmul@prod+3)^0,c
  5874   002FE2  5008               	movf	(___flmul@a+1)^0,w,c
  5875   002FE4  0204               	mulwf	(___flmul@b+1)^0,c
  5876   002FE6  006F FFCC  F01A    	movff	prodl,___flmul@temp
  5877   002FEC  006F FFD0  F01B    	movff	prodh,___flmul@temp+1
  5878   002FF2  501A               	movf	___flmul@temp^0,w,c
  5879   002FF4  2610               	addwf	___flmul@grs^0,f,c
  5880   002FF6  0E00               	movlw	0
  5881   002FF8  2211               	addwfc	(___flmul@grs+1)^0,f,c
  5882   002FFA  2212               	addwfc	(___flmul@grs+2)^0,f,c
  5883   002FFC  2213               	addwfc	(___flmul@grs+3)^0,f,c
  5884   002FFE  501B               	movf	(___flmul@temp+1)^0,w,c
  5885   003000  2616               	addwf	___flmul@prod^0,f,c
  5886   003002  0E00               	movlw	0
  5887   003004  2217               	addwfc	(___flmul@prod+1)^0,f,c
  5888   003006  2218               	addwfc	(___flmul@prod+2)^0,f,c
  5889   003008  2219               	addwfc	(___flmul@prod+3)^0,f,c
  5890   00300A  5007               	movf	___flmul@a^0,w,c
  5891   00300C  0205               	mulwf	(___flmul@b+2)^0,c
  5892   00300E  006F FFCC  F01A    	movff	prodl,___flmul@temp
  5893   003014  006F FFD0  F01B    	movff	prodh,___flmul@temp+1
  5894   00301A  501A               	movf	___flmul@temp^0,w,c
  5895   00301C  2610               	addwf	___flmul@grs^0,f,c
  5896   00301E  0E00               	movlw	0
  5897   003020  2211               	addwfc	(___flmul@grs+1)^0,f,c
  5898   003022  2212               	addwfc	(___flmul@grs+2)^0,f,c
  5899   003024  2213               	addwfc	(___flmul@grs+3)^0,f,c
  5900   003026  501B               	movf	(___flmul@temp+1)^0,w,c
  5901   003028  2616               	addwf	___flmul@prod^0,f,c
  5902   00302A  0E00               	movlw	0
  5903   00302C  2217               	addwfc	(___flmul@prod+1)^0,f,c
  5904   00302E  2218               	addwfc	(___flmul@prod+2)^0,f,c
  5905   003030  2219               	addwfc	(___flmul@prod+3)^0,f,c
  5906   003032  C012  F013         	movff	___flmul@grs+2,___flmul@grs+3
  5907   003036  C011  F012         	movff	___flmul@grs+1,___flmul@grs+2
  5908   00303A  C010  F011         	movff	___flmul@grs,___flmul@grs+1
  5909   00303E  6A10               	clrf	___flmul@grs^0,c
  5910   003040  5007               	movf	___flmul@a^0,w,c
  5911   003042  0204               	mulwf	(___flmul@b+1)^0,c
  5912   003044  006F FFCC  F01A    	movff	prodl,___flmul@temp
  5913   00304A  006F FFD0  F01B    	movff	prodh,___flmul@temp+1
  5914   003050  501A               	movf	___flmul@temp^0,w,c
  5915   003052  2610               	addwf	___flmul@grs^0,f,c
  5916   003054  501B               	movf	(___flmul@temp+1)^0,w,c
  5917   003056  2211               	addwfc	(___flmul@grs+1)^0,f,c
  5918   003058  0E00               	movlw	0
  5919   00305A  2212               	addwfc	(___flmul@grs+2)^0,f,c
  5920   00305C  0E00               	movlw	0
  5921   00305E  2213               	addwfc	(___flmul@grs+3)^0,f,c
  5922   003060  5008               	movf	(___flmul@a+1)^0,w,c
  5923   003062  0203               	mulwf	___flmul@b^0,c
  5924   003064  006F FFCC  F01A    	movff	prodl,___flmul@temp
  5925   00306A  006F FFD0  F01B    	movff	prodh,___flmul@temp+1
  5926   003070  501A               	movf	___flmul@temp^0,w,c
  5927   003072  2610               	addwf	___flmul@grs^0,f,c
  5928   003074  501B               	movf	(___flmul@temp+1)^0,w,c
  5929   003076  2211               	addwfc	(___flmul@grs+1)^0,f,c
  5930   003078  0E00               	movlw	0
  5931   00307A  2212               	addwfc	(___flmul@grs+2)^0,f,c
  5932   00307C  0E00               	movlw	0
  5933   00307E  2213               	addwfc	(___flmul@grs+3)^0,f,c
  5934   003080  C012  F013         	movff	___flmul@grs+2,___flmul@grs+3
  5935   003084  C011  F012         	movff	___flmul@grs+1,___flmul@grs+2
  5936   003088  C010  F011         	movff	___flmul@grs,___flmul@grs+1
  5937   00308C  6A10               	clrf	___flmul@grs^0,c
  5938   00308E  5007               	movf	___flmul@a^0,w,c
  5939   003090  0203               	mulwf	___flmul@b^0,c
  5940   003092  006F FFCC  F01A    	movff	prodl,___flmul@temp
  5941   003098  006F FFD0  F01B    	movff	prodh,___flmul@temp+1
  5942   00309E  501A               	movf	___flmul@temp^0,w,c
  5943   0030A0  2610               	addwf	___flmul@grs^0,f,c
  5944   0030A2  501B               	movf	(___flmul@temp+1)^0,w,c
  5945   0030A4  2211               	addwfc	(___flmul@grs+1)^0,f,c
  5946   0030A6  0E00               	movlw	0
  5947   0030A8  2212               	addwfc	(___flmul@grs+2)^0,f,c
  5948   0030AA  0E00               	movlw	0
  5949   0030AC  2213               	addwfc	(___flmul@grs+3)^0,f,c
  5950   0030AE  5009               	movf	(___flmul@a+2)^0,w,c
  5951   0030B0  0204               	mulwf	(___flmul@b+1)^0,c
  5952   0030B2  006F FFCC  F01A    	movff	prodl,___flmul@temp
  5953   0030B8  006F FFD0  F01B    	movff	prodh,___flmul@temp+1
  5954   0030BE  501A               	movf	___flmul@temp^0,w,c
  5955   0030C0  2616               	addwf	___flmul@prod^0,f,c
  5956   0030C2  501B               	movf	(___flmul@temp+1)^0,w,c
  5957   0030C4  2217               	addwfc	(___flmul@prod+1)^0,f,c
  5958   0030C6  0E00               	movlw	0
  5959   0030C8  2218               	addwfc	(___flmul@prod+2)^0,f,c
  5960   0030CA  0E00               	movlw	0
  5961   0030CC  2219               	addwfc	(___flmul@prod+3)^0,f,c
  5962   0030CE  5008               	movf	(___flmul@a+1)^0,w,c
  5963   0030D0  0205               	mulwf	(___flmul@b+2)^0,c
  5964   0030D2  006F FFCC  F01A    	movff	prodl,___flmul@temp
  5965   0030D8  006F FFD0  F01B    	movff	prodh,___flmul@temp+1
  5966   0030DE  501A               	movf	___flmul@temp^0,w,c
  5967   0030E0  2616               	addwf	___flmul@prod^0,f,c
  5968   0030E2  501B               	movf	(___flmul@temp+1)^0,w,c
  5969   0030E4  2217               	addwfc	(___flmul@prod+1)^0,f,c
  5970   0030E6  0E00               	movlw	0
  5971   0030E8  2218               	addwfc	(___flmul@prod+2)^0,f,c
  5972   0030EA  0E00               	movlw	0
  5973   0030EC  2219               	addwfc	(___flmul@prod+3)^0,f,c
  5974   0030EE  5009               	movf	(___flmul@a+2)^0,w,c
  5975   0030F0  0205               	mulwf	(___flmul@b+2)^0,c
  5976   0030F2  006F FFCC  F01A    	movff	prodl,___flmul@temp
  5977   0030F8  006F FFD0  F01B    	movff	prodh,___flmul@temp+1
  5978   0030FE  501A               	movf	___flmul@temp^0,w,c
  5979   003100  6E0B               	movwf	??___flmul^0,c
  5980   003102  501B               	movf	(___flmul@temp+1)^0,w,c
  5981   003104  6E0C               	movwf	(??___flmul+1)^0,c
  5982   003106  6A0D               	clrf	(??___flmul+2)^0,c
  5983   003108  6A0E               	clrf	(??___flmul+3)^0,c
  5984   00310A  C00D  F00E         	movff	??___flmul+2,??___flmul+3
  5985   00310E  C00C  F00D         	movff	??___flmul+1,??___flmul+2
  5986   003112  C00B  F00C         	movff	??___flmul,??___flmul+1
  5987   003116  6A0B               	clrf	??___flmul^0,c
  5988   003118  500B               	movf	??___flmul^0,w,c
  5989   00311A  2616               	addwf	___flmul@prod^0,f,c
  5990   00311C  500C               	movf	(??___flmul+1)^0,w,c
  5991   00311E  2217               	addwfc	(___flmul@prod+1)^0,f,c
  5992   003120  500D               	movf	(??___flmul+2)^0,w,c
  5993   003122  2218               	addwfc	(___flmul@prod+2)^0,f,c
  5994   003124  500E               	movf	(??___flmul+3)^0,w,c
  5995   003126  2219               	addwfc	(___flmul@prod+3)^0,f,c
  5996   003128  C010  F00B         	movff	___flmul@grs,??___flmul
  5997   00312C  C011  F00C         	movff	___flmul@grs+1,??___flmul+1
  5998   003130  C012  F00D         	movff	___flmul@grs+2,??___flmul+2
  5999   003134  C013  F00E         	movff	___flmul@grs+3,??___flmul+3
  6000   003138  0E19               	movlw	25
  6001   00313A  EFA4  F018         	goto	u2850
  6002   00313E                     u2855:
  6003   00313E  90D8               	bcf	status,0,c
  6004   003140  320E               	rrcf	(??___flmul+3)^0,f,c
  6005   003142  320D               	rrcf	(??___flmul+2)^0,f,c
  6006   003144  320C               	rrcf	(??___flmul+1)^0,f,c
  6007   003146  320B               	rrcf	??___flmul^0,f,c
  6008   003148                     u2850:
  6009   003148  2EE8               	decfsz	wreg,f,c
  6010   00314A  EF9F  F018         	goto	u2855
  6011   00314E  500B               	movf	??___flmul^0,w,c
  6012   003150  2616               	addwf	___flmul@prod^0,f,c
  6013   003152  500C               	movf	(??___flmul+1)^0,w,c
  6014   003154  2217               	addwfc	(___flmul@prod+1)^0,f,c
  6015   003156  500D               	movf	(??___flmul+2)^0,w,c
  6016   003158  2218               	addwfc	(___flmul@prod+2)^0,f,c
  6017   00315A  500E               	movf	(??___flmul+3)^0,w,c
  6018   00315C  2219               	addwfc	(___flmul@prod+3)^0,f,c
  6019   00315E  C012  F013         	movff	___flmul@grs+2,___flmul@grs+3
  6020   003162  C011  F012         	movff	___flmul@grs+1,___flmul@grs+2
  6021   003166  C010  F011         	movff	___flmul@grs,___flmul@grs+1
  6022   00316A  6A10               	clrf	___flmul@grs^0,c
  6023   00316C  5014               	movf	___flmul@aexp^0,w,c
  6024   00316E  C015  F00B         	movff	___flmul@bexp,??___flmul
  6025   003172  6A0C               	clrf	(??___flmul+1)^0,c
  6026   003174  260B               	addwf	??___flmul^0,f,c
  6027   003176  0E00               	movlw	0
  6028   003178  220C               	addwfc	(??___flmul+1)^0,f,c
  6029   00317A  0E82               	movlw	130
  6030   00317C  240B               	addwf	??___flmul^0,w,c
  6031   00317E  6E1A               	movwf	___flmul@temp^0,c
  6032   003180  0EFF               	movlw	255
  6033   003182  200C               	addwfc	(??___flmul+1)^0,w,c
  6034   003184  6E1B               	movwf	(___flmul@temp+1)^0,c
  6035   003186  EFDA  F018         	goto	l3026
  6036   00318A                     l3020:
  6037   00318A  90D8               	bcf	status,0,c
  6038   00318C  3616               	rlcf	___flmul@prod^0,f,c
  6039   00318E  3617               	rlcf	(___flmul@prod+1)^0,f,c
  6040   003190  3618               	rlcf	(___flmul@prod+2)^0,f,c
  6041   003192  3619               	rlcf	(___flmul@prod+3)^0,f,c
  6042   003194  AE13               	btfss	(___flmul@grs+3)^0,7,c
  6043   003196  EFCF  F018         	goto	u2861
  6044   00319A  EFD1  F018         	goto	u2860
  6045   00319E                     u2861:
  6046   00319E  EFD2  F018         	goto	l862
  6047   0031A2                     u2860:
  6048   0031A2  8016               	bsf	___flmul@prod^0,0,c
  6049   0031A4                     l862:
  6050   0031A4  90D8               	bcf	status,0,c
  6051   0031A6  3610               	rlcf	___flmul@grs^0,f,c
  6052   0031A8  3611               	rlcf	(___flmul@grs+1)^0,f,c
  6053   0031AA  3612               	rlcf	(___flmul@grs+2)^0,f,c
  6054   0031AC  3613               	rlcf	(___flmul@grs+3)^0,f,c
  6055   0031AE  061A               	decf	___flmul@temp^0,f,c
  6056   0031B0  A0D8               	btfss	status,0,c
  6057   0031B2  061B               	decf	(___flmul@temp+1)^0,f,c
  6058   0031B4                     l3026:
  6059   0031B4  AE18               	btfss	(___flmul@prod+2)^0,7,c
  6060   0031B6  EFDF  F018         	goto	u2871
  6061   0031BA  EFE1  F018         	goto	u2870
  6062   0031BE                     u2871:
  6063   0031BE  EFC5  F018         	goto	l3020
  6064   0031C2                     u2870:
  6065   0031C2  6A14               	clrf	___flmul@aexp^0,c
  6066   0031C4  AE13               	btfss	(___flmul@grs+3)^0,7,c
  6067   0031C6  EFE7  F018         	goto	u2881
  6068   0031CA  EFE9  F018         	goto	u2880
  6069   0031CE                     u2881:
  6070   0031CE  EF0D  F019         	goto	l864
  6071   0031D2                     u2880:
  6072   0031D2  0EFF               	movlw	255
  6073   0031D4  1410               	andwf	___flmul@grs^0,w,c
  6074   0031D6  6E0B               	movwf	??___flmul^0,c
  6075   0031D8  0EFF               	movlw	255
  6076   0031DA  1411               	andwf	(___flmul@grs+1)^0,w,c
  6077   0031DC  6E0C               	movwf	(??___flmul+1)^0,c
  6078   0031DE  0EFF               	movlw	255
  6079   0031E0  1412               	andwf	(___flmul@grs+2)^0,w,c
  6080   0031E2  6E0D               	movwf	(??___flmul+2)^0,c
  6081   0031E4  0E7F               	movlw	127
  6082   0031E6  1413               	andwf	(___flmul@grs+3)^0,w,c
  6083   0031E8  6E0E               	movwf	(??___flmul+3)^0,c
  6084   0031EA  500B               	movf	??___flmul^0,w,c
  6085   0031EC  100C               	iorwf	(??___flmul+1)^0,w,c
  6086   0031EE  100D               	iorwf	(??___flmul+2)^0,w,c
  6087   0031F0  100E               	iorwf	(??___flmul+3)^0,w,c
  6088   0031F2  B4D8               	btfsc	status,2,c
  6089   0031F4  EFFE  F018         	goto	u2891
  6090   0031F8  EF00  F019         	goto	u2890
  6091   0031FC                     u2891:
  6092   0031FC  EF04  F019         	goto	l865
  6093   003200                     u2890:
  6094   003200                     l3030:
  6095   003200  0E01               	movlw	1
  6096   003202  6E14               	movwf	___flmul@aexp^0,c
  6097   003204  EF0D  F019         	goto	l864
  6098   003208                     l865:
  6099   003208  A016               	btfss	___flmul@prod^0,0,c
  6100   00320A  EF09  F019         	goto	u2901
  6101   00320E  EF0B  F019         	goto	u2900
  6102   003212                     u2901:
  6103   003212  EF0D  F019         	goto	l864
  6104   003216                     u2900:
  6105   003216  EF00  F019         	goto	l3030
  6106   00321A                     l864:
  6107   00321A  5014               	movf	___flmul@aexp^0,w,c
  6108   00321C  B4D8               	btfsc	status,2,c
  6109   00321E  EF13  F019         	goto	u2911
  6110   003222  EF15  F019         	goto	u2910
  6111   003226                     u2911:
  6112   003226  EF39  F019         	goto	l3042
  6113   00322A                     u2910:
  6114   00322A  0E01               	movlw	1
  6115   00322C  2616               	addwf	___flmul@prod^0,f,c
  6116   00322E  0E00               	movlw	0
  6117   003230  2217               	addwfc	(___flmul@prod+1)^0,f,c
  6118   003232  2218               	addwfc	(___flmul@prod+2)^0,f,c
  6119   003234  2219               	addwfc	(___flmul@prod+3)^0,f,c
  6120   003236  A019               	btfss	(___flmul@prod+3)^0,0,c
  6121   003238  EF20  F019         	goto	u2921
  6122   00323C  EF22  F019         	goto	u2920
  6123   003240                     u2921:
  6124   003240  EF39  F019         	goto	l3042
  6125   003244                     u2920:
  6126   003244  C016  F00B         	movff	___flmul@prod,??___flmul
  6127   003248  C017  F00C         	movff	___flmul@prod+1,??___flmul+1
  6128   00324C  C018  F00D         	movff	___flmul@prod+2,??___flmul+2
  6129   003250  C019  F00E         	movff	___flmul@prod+3,??___flmul+3
  6130   003254  340E               	rlcf	(??___flmul+3)^0,w,c
  6131   003256  320E               	rrcf	(??___flmul+3)^0,f,c
  6132   003258  320D               	rrcf	(??___flmul+2)^0,f,c
  6133   00325A  320C               	rrcf	(??___flmul+1)^0,f,c
  6134   00325C  320B               	rrcf	??___flmul^0,f,c
  6135   00325E  C00B  F016         	movff	??___flmul,___flmul@prod
  6136   003262  C00C  F017         	movff	??___flmul+1,___flmul@prod+1
  6137   003266  C00D  F018         	movff	??___flmul+2,___flmul@prod+2
  6138   00326A  C00E  F019         	movff	??___flmul+3,___flmul@prod+3
  6139   00326E  4A1A               	infsnz	___flmul@temp^0,f,c
  6140   003270  2A1B               	incf	(___flmul@temp+1)^0,f,c
  6141   003272                     l3042:
  6142   003272  BE1B               	btfsc	(___flmul@temp+1)^0,7,c
  6143   003274  EF44  F019         	goto	u2931
  6144   003278  501B               	movf	(___flmul@temp+1)^0,w,c
  6145   00327A  E108               	bnz	u2930
  6146   00327C  281A               	incf	___flmul@temp^0,w,c
  6147   00327E  A0D8               	btfss	status,0,c
  6148   003280  EF44  F019         	goto	u2931
  6149   003284  EF46  F019         	goto	u2930
  6150   003288                     u2931:
  6151   003288  EF50  F019         	goto	l3046
  6152   00328C                     u2930:
  6153   00328C  0E00               	movlw	0
  6154   00328E  6E16               	movwf	___flmul@prod^0,c
  6155   003290  0E00               	movlw	0
  6156   003292  6E17               	movwf	(___flmul@prod+1)^0,c
  6157   003294  0E80               	movlw	128
  6158   003296  6E18               	movwf	(___flmul@prod+2)^0,c
  6159   003298  0E7F               	movlw	127
  6160   00329A  6E19               	movwf	(___flmul@prod+3)^0,c
  6161   00329C  EF7D  F019         	goto	l3060
  6162   0032A0                     l3046:
  6163   0032A0  BE1B               	btfsc	(___flmul@temp+1)^0,7,c
  6164   0032A2  EF5D  F019         	goto	u2940
  6165   0032A6  501B               	movf	(___flmul@temp+1)^0,w,c
  6166   0032A8  E106               	bnz	u2941
  6167   0032AA  041A               	decf	___flmul@temp^0,w,c
  6168   0032AC  B0D8               	btfsc	status,0,c
  6169   0032AE  EF5B  F019         	goto	u2941
  6170   0032B2  EF5D  F019         	goto	u2940
  6171   0032B6                     u2941:
  6172   0032B6  EF68  F019         	goto	l872
  6173   0032BA                     u2940:
  6174   0032BA  0E00               	movlw	0
  6175   0032BC  6E16               	movwf	___flmul@prod^0,c
  6176   0032BE  0E00               	movlw	0
  6177   0032C0  6E17               	movwf	(___flmul@prod+1)^0,c
  6178   0032C2  0E00               	movlw	0
  6179   0032C4  6E18               	movwf	(___flmul@prod+2)^0,c
  6180   0032C6  0E00               	movlw	0
  6181   0032C8  6E19               	movwf	(___flmul@prod+3)^0,c
  6182   0032CA  6A0F               	clrf	___flmul@sign^0,c
  6183   0032CC  EF7D  F019         	goto	l3060
  6184   0032D0                     l872:
  6185   0032D0  C01A  F015         	movff	___flmul@temp,___flmul@bexp
  6186   0032D4  0EFF               	movlw	255
  6187   0032D6  1616               	andwf	___flmul@prod^0,f,c
  6188   0032D8  0EFF               	movlw	255
  6189   0032DA  1617               	andwf	(___flmul@prod+1)^0,f,c
  6190   0032DC  0E7F               	movlw	127
  6191   0032DE  1618               	andwf	(___flmul@prod+2)^0,f,c
  6192   0032E0  0E00               	movlw	0
  6193   0032E2  1619               	andwf	(___flmul@prod+3)^0,f,c
  6194   0032E4  A015               	btfss	___flmul@bexp^0,0,c
  6195   0032E6  EF77  F019         	goto	u2951
  6196   0032EA  EF79  F019         	goto	u2950
  6197   0032EE                     u2951:
  6198   0032EE  EF7A  F019         	goto	l3058
  6199   0032F2                     u2950:
  6200   0032F2  8E18               	bsf	(___flmul@prod+2)^0,7,c
  6201   0032F4                     l3058:
  6202   0032F4  90D8               	bcf	status,0,c
  6203   0032F6  3015               	rrcf	___flmul@bexp^0,w,c
  6204   0032F8  6E19               	movwf	(___flmul@prod+3)^0,c
  6205   0032FA                     l3060:
  6206   0032FA  500F               	movf	___flmul@sign^0,w,c
  6207   0032FC  1219               	iorwf	(___flmul@prod+3)^0,f,c
  6208   0032FE  C016  F003         	movff	___flmul@prod,?___flmul
  6209   003302  C017  F004         	movff	___flmul@prod+1,?___flmul+1
  6210   003306  C018  F005         	movff	___flmul@prod+2,?___flmul+2
  6211   00330A  C019  F006         	movff	___flmul@prod+3,?___flmul+3
  6212   00330E                     l859:
  6213   00330E  0012               	return		;funcret
  6214   003310                     __end_of___flmul:
  6215                           	callstack 0
  6216                           
  6217 ;; *************** function ___flge *****************
  6218 ;; Defined at:
  6219 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flge.c"
  6220 ;; Parameters:    Size  Location     Type
  6221 ;;  ff1             4   27[COMRAM] unsigned char 
  6222 ;;  ff2             4   31[COMRAM] unsigned char 
  6223 ;; Auto vars:     Size  Location     Type
  6224 ;;		None
  6225 ;; Return value:  Size  Location     Type
  6226 ;;		None               void
  6227 ;; Registers used:
  6228 ;;		wreg, status,2, status,0
  6229 ;; Tracked objects:
  6230 ;;		On entry : 0/0
  6231 ;;		On exit  : 0/0
  6232 ;;		Unchanged: 0/0
  6233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6234 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6236 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6237 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6238 ;;Total ram usage:       12 bytes
  6239 ;; Hardware stack levels used: 1
  6240 ;; Hardware stack levels required when called: 1
  6241 ;; This function calls:
  6242 ;;		Nothing
  6243 ;; This function is called by:
  6244 ;;		_efgtoa
  6245 ;; This function uses a non-reentrant model
  6246 ;;
  6247                           
  6248                           	psect	text17
  6249   003FD8                     __ptext17:
  6250                           	callstack 0
  6251   003FD8                     ___flge:
  6252                           	callstack 24
  6253   003FD8  0E00               	movlw	0
  6254   003FDA  141C               	andwf	___flge@ff1^0,w,c
  6255   003FDC  6E24               	movwf	??___flge^0,c
  6256   003FDE  0E00               	movlw	0
  6257   003FE0  141D               	andwf	(___flge@ff1+1)^0,w,c
  6258   003FE2  6E25               	movwf	(??___flge+1)^0,c
  6259   003FE4  0E80               	movlw	128
  6260   003FE6  141E               	andwf	(___flge@ff1+2)^0,w,c
  6261   003FE8  6E26               	movwf	(??___flge+2)^0,c
  6262   003FEA  0E7F               	movlw	127
  6263   003FEC  141F               	andwf	(___flge@ff1+3)^0,w,c
  6264   003FEE  6E27               	movwf	(??___flge+3)^0,c
  6265   003FF0  5024               	movf	??___flge^0,w,c
  6266   003FF2  1025               	iorwf	(??___flge+1)^0,w,c
  6267   003FF4  1026               	iorwf	(??___flge+2)^0,w,c
  6268   003FF6  1027               	iorwf	(??___flge+3)^0,w,c
  6269   003FF8  A4D8               	btfss	status,2,c
  6270   003FFA  EF01  F020         	goto	u3111
  6271   003FFE  EF03  F020         	goto	u3110
  6272   004002                     u3111:
  6273   004002  EF0B  F020         	goto	l3172
  6274   004006                     u3110:
  6275   004006  0E00               	movlw	0
  6276   004008  6E1C               	movwf	___flge@ff1^0,c
  6277   00400A  0E00               	movlw	0
  6278   00400C  6E1D               	movwf	(___flge@ff1+1)^0,c
  6279   00400E  0E00               	movlw	0
  6280   004010  6E1E               	movwf	(___flge@ff1+2)^0,c
  6281   004012  0E00               	movlw	0
  6282   004014  6E1F               	movwf	(___flge@ff1+3)^0,c
  6283   004016                     l3172:
  6284   004016  0E00               	movlw	0
  6285   004018  1420               	andwf	___flge@ff2^0,w,c
  6286   00401A  6E24               	movwf	??___flge^0,c
  6287   00401C  0E00               	movlw	0
  6288   00401E  1421               	andwf	(___flge@ff2+1)^0,w,c
  6289   004020  6E25               	movwf	(??___flge+1)^0,c
  6290   004022  0E80               	movlw	128
  6291   004024  1422               	andwf	(___flge@ff2+2)^0,w,c
  6292   004026  6E26               	movwf	(??___flge+2)^0,c
  6293   004028  0E7F               	movlw	127
  6294   00402A  1423               	andwf	(___flge@ff2+3)^0,w,c
  6295   00402C  6E27               	movwf	(??___flge+3)^0,c
  6296   00402E  5024               	movf	??___flge^0,w,c
  6297   004030  1025               	iorwf	(??___flge+1)^0,w,c
  6298   004032  1026               	iorwf	(??___flge+2)^0,w,c
  6299   004034  1027               	iorwf	(??___flge+3)^0,w,c
  6300   004036  A4D8               	btfss	status,2,c
  6301   004038  EF20  F020         	goto	u3121
  6302   00403C  EF22  F020         	goto	u3120
  6303   004040                     u3121:
  6304   004040  EF2A  F020         	goto	l3176
  6305   004044                     u3120:
  6306   004044  0E00               	movlw	0
  6307   004046  6E20               	movwf	___flge@ff2^0,c
  6308   004048  0E00               	movlw	0
  6309   00404A  6E21               	movwf	(___flge@ff2+1)^0,c
  6310   00404C  0E00               	movlw	0
  6311   00404E  6E22               	movwf	(___flge@ff2+2)^0,c
  6312   004050  0E00               	movlw	0
  6313   004052  6E23               	movwf	(___flge@ff2+3)^0,c
  6314   004054                     l3176:
  6315   004054  AE1F               	btfss	(___flge@ff1+3)^0,7,c
  6316   004056  EF2F  F020         	goto	u3131
  6317   00405A  EF31  F020         	goto	u3130
  6318   00405E                     u3131:
  6319   00405E  EF3A  F020         	goto	l3180
  6320   004062                     u3130:
  6321   004062  6C1C               	negf	___flge@ff1^0,c
  6322   004064  1E1D               	comf	(___flge@ff1+1)^0,f,c
  6323   004066  B0D8               	btfsc	status,0,c
  6324   004068  2A1D               	incf	(___flge@ff1+1)^0,f,c
  6325   00406A  1E1E               	comf	(___flge@ff1+2)^0,f,c
  6326   00406C  B0D8               	btfsc	status,0,c
  6327   00406E  2A1E               	incf	(___flge@ff1+2)^0,f,c
  6328   004070  0E80               	movlw	128
  6329   004072  561F               	subfwb	(___flge@ff1+3)^0,f,c
  6330   004074                     l3180:
  6331   004074  AE23               	btfss	(___flge@ff2+3)^0,7,c
  6332   004076  EF3F  F020         	goto	u3141
  6333   00407A  EF41  F020         	goto	u3140
  6334   00407E                     u3141:
  6335   00407E  EF4A  F020         	goto	l506
  6336   004082                     u3140:
  6337   004082  6C20               	negf	___flge@ff2^0,c
  6338   004084  1E21               	comf	(___flge@ff2+1)^0,f,c
  6339   004086  B0D8               	btfsc	status,0,c
  6340   004088  2A21               	incf	(___flge@ff2+1)^0,f,c
  6341   00408A  1E22               	comf	(___flge@ff2+2)^0,f,c
  6342   00408C  B0D8               	btfsc	status,0,c
  6343   00408E  2A22               	incf	(___flge@ff2+2)^0,f,c
  6344   004090  0E80               	movlw	128
  6345   004092  5623               	subfwb	(___flge@ff2+3)^0,f,c
  6346   004094                     l506:
  6347   004094  0E00               	movlw	0
  6348   004096  1A1C               	xorwf	___flge@ff1^0,f,c
  6349   004098  0E00               	movlw	0
  6350   00409A  1A1D               	xorwf	(___flge@ff1+1)^0,f,c
  6351   00409C  0E00               	movlw	0
  6352   00409E  1A1E               	xorwf	(___flge@ff1+2)^0,f,c
  6353   0040A0  0E80               	movlw	128
  6354   0040A2  1A1F               	xorwf	(___flge@ff1+3)^0,f,c
  6355   0040A4  0E00               	movlw	0
  6356   0040A6  1A20               	xorwf	___flge@ff2^0,f,c
  6357   0040A8  0E00               	movlw	0
  6358   0040AA  1A21               	xorwf	(___flge@ff2+1)^0,f,c
  6359   0040AC  0E00               	movlw	0
  6360   0040AE  1A22               	xorwf	(___flge@ff2+2)^0,f,c
  6361   0040B0  0E80               	movlw	128
  6362   0040B2  1A23               	xorwf	(___flge@ff2+3)^0,f,c
  6363   0040B4  5020               	movf	___flge@ff2^0,w,c
  6364   0040B6  5C1C               	subwf	___flge@ff1^0,w,c
  6365   0040B8  5021               	movf	(___flge@ff2+1)^0,w,c
  6366   0040BA  581D               	subwfb	(___flge@ff1+1)^0,w,c
  6367   0040BC  5022               	movf	(___flge@ff2+2)^0,w,c
  6368   0040BE  581E               	subwfb	(___flge@ff1+2)^0,w,c
  6369   0040C0  5023               	movf	(___flge@ff2+3)^0,w,c
  6370   0040C2  581F               	subwfb	(___flge@ff1+3)^0,w,c
  6371   0040C4  B0D8               	btfsc	status,0,c
  6372   0040C6  EF67  F020         	goto	u3151
  6373   0040CA  EF69  F020         	goto	u3150
  6374   0040CE                     u3151:
  6375   0040CE  EF6C  F020         	goto	l3186
  6376   0040D2                     u3150:
  6377   0040D2  90D8               	bcf	status,0,c
  6378   0040D4  EF6D  F020         	goto	l511
  6379   0040D8                     l3186:
  6380   0040D8  80D8               	bsf	status,0,c
  6381   0040DA                     l511:
  6382   0040DA  0012               	return		;funcret
  6383   0040DC                     __end_of___flge:
  6384                           	callstack 0
  6385                           
  6386 ;; *************** function ___fleq *****************
  6387 ;; Defined at:
  6388 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fleq.c"
  6389 ;; Parameters:    Size  Location     Type
  6390 ;;  ff1             4    2[COMRAM] unsigned char 
  6391 ;;  ff2             4    6[COMRAM] unsigned char 
  6392 ;; Auto vars:     Size  Location     Type
  6393 ;;		None
  6394 ;; Return value:  Size  Location     Type
  6395 ;;		None               void
  6396 ;; Registers used:
  6397 ;;		wreg, status,2, status,0
  6398 ;; Tracked objects:
  6399 ;;		On entry : 0/0
  6400 ;;		On exit  : 0/0
  6401 ;;		Unchanged: 0/0
  6402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6403 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6405 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6406 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6407 ;;Total ram usage:       12 bytes
  6408 ;; Hardware stack levels used: 1
  6409 ;; Hardware stack levels required when called: 1
  6410 ;; This function calls:
  6411 ;;		Nothing
  6412 ;; This function is called by:
  6413 ;;		_efgtoa
  6414 ;; This function uses a non-reentrant model
  6415 ;;
  6416                           
  6417                           	psect	text18
  6418   0044AE                     __ptext18:
  6419                           	callstack 0
  6420   0044AE                     ___fleq:
  6421                           	callstack 24
  6422   0044AE  0E00               	movlw	0
  6423   0044B0  1403               	andwf	___fleq@ff1^0,w,c
  6424   0044B2  6E0B               	movwf	??___fleq^0,c
  6425   0044B4  0E00               	movlw	0
  6426   0044B6  1404               	andwf	(___fleq@ff1+1)^0,w,c
  6427   0044B8  6E0C               	movwf	(??___fleq+1)^0,c
  6428   0044BA  0E80               	movlw	128
  6429   0044BC  1405               	andwf	(___fleq@ff1+2)^0,w,c
  6430   0044BE  6E0D               	movwf	(??___fleq+2)^0,c
  6431   0044C0  0E7F               	movlw	127
  6432   0044C2  1406               	andwf	(___fleq@ff1+3)^0,w,c
  6433   0044C4  6E0E               	movwf	(??___fleq+3)^0,c
  6434   0044C6  500B               	movf	??___fleq^0,w,c
  6435   0044C8  100C               	iorwf	(??___fleq+1)^0,w,c
  6436   0044CA  100D               	iorwf	(??___fleq+2)^0,w,c
  6437   0044CC  100E               	iorwf	(??___fleq+3)^0,w,c
  6438   0044CE  A4D8               	btfss	status,2,c
  6439   0044D0  EF6C  F022         	goto	u3081
  6440   0044D4  EF6E  F022         	goto	u3080
  6441   0044D8                     u3081:
  6442   0044D8  EF76  F022         	goto	l3156
  6443   0044DC                     u3080:
  6444   0044DC  0E00               	movlw	0
  6445   0044DE  6E03               	movwf	___fleq@ff1^0,c
  6446   0044E0  0E00               	movlw	0
  6447   0044E2  6E04               	movwf	(___fleq@ff1+1)^0,c
  6448   0044E4  0E00               	movlw	0
  6449   0044E6  6E05               	movwf	(___fleq@ff1+2)^0,c
  6450   0044E8  0E00               	movlw	0
  6451   0044EA  6E06               	movwf	(___fleq@ff1+3)^0,c
  6452   0044EC                     l3156:
  6453   0044EC  0E00               	movlw	0
  6454   0044EE  1407               	andwf	___fleq@ff2^0,w,c
  6455   0044F0  6E0B               	movwf	??___fleq^0,c
  6456   0044F2  0E00               	movlw	0
  6457   0044F4  1408               	andwf	(___fleq@ff2+1)^0,w,c
  6458   0044F6  6E0C               	movwf	(??___fleq+1)^0,c
  6459   0044F8  0E80               	movlw	128
  6460   0044FA  1409               	andwf	(___fleq@ff2+2)^0,w,c
  6461   0044FC  6E0D               	movwf	(??___fleq+2)^0,c
  6462   0044FE  0E7F               	movlw	127
  6463   004500  140A               	andwf	(___fleq@ff2+3)^0,w,c
  6464   004502  6E0E               	movwf	(??___fleq+3)^0,c
  6465   004504  500B               	movf	??___fleq^0,w,c
  6466   004506  100C               	iorwf	(??___fleq+1)^0,w,c
  6467   004508  100D               	iorwf	(??___fleq+2)^0,w,c
  6468   00450A  100E               	iorwf	(??___fleq+3)^0,w,c
  6469   00450C  A4D8               	btfss	status,2,c
  6470   00450E  EF8B  F022         	goto	u3091
  6471   004512  EF8D  F022         	goto	u3090
  6472   004516                     u3091:
  6473   004516  EF95  F022         	goto	l3160
  6474   00451A                     u3090:
  6475   00451A  0E00               	movlw	0
  6476   00451C  6E07               	movwf	___fleq@ff2^0,c
  6477   00451E  0E00               	movlw	0
  6478   004520  6E08               	movwf	(___fleq@ff2+1)^0,c
  6479   004522  0E00               	movlw	0
  6480   004524  6E09               	movwf	(___fleq@ff2+2)^0,c
  6481   004526  0E00               	movlw	0
  6482   004528  6E0A               	movwf	(___fleq@ff2+3)^0,c
  6483   00452A                     l3160:
  6484   00452A  5007               	movf	___fleq@ff2^0,w,c
  6485   00452C  1803               	xorwf	___fleq@ff1^0,w,c
  6486   00452E  E10F               	bnz	u3100
  6487   004530  5008               	movf	(___fleq@ff2+1)^0,w,c
  6488   004532  1804               	xorwf	(___fleq@ff1+1)^0,w,c
  6489   004534  E10C               	bnz	u3100
  6490   004536  5009               	movf	(___fleq@ff2+2)^0,w,c
  6491   004538  1805               	xorwf	(___fleq@ff1+2)^0,w,c
  6492   00453A  E109               	bnz	u3100
  6493   00453C  500A               	movf	(___fleq@ff2+3)^0,w,c
  6494   00453E  1806               	xorwf	(___fleq@ff1+3)^0,w,c
  6495   004540  B4D8               	btfsc	status,2,c
  6496   004542  EFA5  F022         	goto	u3101
  6497   004546  EFA7  F022         	goto	u3100
  6498   00454A                     u3101:
  6499   00454A  EFAA  F022         	goto	l3164
  6500   00454E                     u3100:
  6501   00454E  90D8               	bcf	status,0,c
  6502   004550  EFAB  F022         	goto	l500
  6503   004554                     l3164:
  6504   004554  80D8               	bsf	status,0,c
  6505   004556                     l500:
  6506   004556  0012               	return		;funcret
  6507   004558                     __end_of___fleq:
  6508                           	callstack 0
  6509                           
  6510 ;; *************** function ___fldiv *****************
  6511 ;; Defined at:
  6512 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
  6513 ;; Parameters:    Size  Location     Type
  6514 ;;  b               4    2[COMRAM] unsigned char 
  6515 ;;  a               4    6[COMRAM] unsigned char 
  6516 ;; Auto vars:     Size  Location     Type
  6517 ;;  grs             4   21[COMRAM] unsigned long 
  6518 ;;  rem             4   14[COMRAM] unsigned long 
  6519 ;;  new_exp         2   19[COMRAM] short 
  6520 ;;  aexp            1   26[COMRAM] unsigned char 
  6521 ;;  bexp            1   25[COMRAM] unsigned char 
  6522 ;;  sign            1   18[COMRAM] unsigned char 
  6523 ;; Return value:  Size  Location     Type
  6524 ;;                  4    2[COMRAM] unsigned char 
  6525 ;; Registers used:
  6526 ;;		wreg, status,2, status,0
  6527 ;; Tracked objects:
  6528 ;;		On entry : 0/0
  6529 ;;		On exit  : 0/0
  6530 ;;		Unchanged: 0/0
  6531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6532 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6533 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6534 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6535 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6536 ;;Total ram usage:       25 bytes
  6537 ;; Hardware stack levels used: 1
  6538 ;; Hardware stack levels required when called: 1
  6539 ;; This function calls:
  6540 ;;		Nothing
  6541 ;; This function is called by:
  6542 ;;		_efgtoa
  6543 ;;		_readADC
  6544 ;; This function uses a non-reentrant model
  6545 ;;
  6546                           
  6547                           	psect	text19
  6548   003310                     __ptext19:
  6549                           	callstack 0
  6550   003310                     ___fldiv:
  6551                           	callstack 24
  6552   003310  5006               	movf	(___fldiv@b+3)^0,w,c
  6553   003312  0B80               	andlw	128
  6554   003314  6E13               	movwf	___fldiv@sign^0,c
  6555   003316  5006               	movf	(___fldiv@b+3)^0,w,c
  6556   003318  2406               	addwf	(___fldiv@b+3)^0,w,c
  6557   00331A  6E1A               	movwf	___fldiv@bexp^0,c
  6558   00331C  AE05               	btfss	(___fldiv@b+2)^0,7,c
  6559   00331E  EF93  F019         	goto	u2541
  6560   003322  EF95  F019         	goto	u2540
  6561   003326                     u2541:
  6562   003326  EF96  F019         	goto	l2808
  6563   00332A                     u2540:
  6564   00332A  801A               	bsf	___fldiv@bexp^0,0,c
  6565   00332C                     l2808:
  6566   00332C  501A               	movf	___fldiv@bexp^0,w,c
  6567   00332E  B4D8               	btfsc	status,2,c
  6568   003330  EF9C  F019         	goto	u2551
  6569   003334  EF9E  F019         	goto	u2550
  6570   003338                     u2551:
  6571   003338  EFB2  F019         	goto	l2818
  6572   00333C                     u2550:
  6573   00333C  281A               	incf	___fldiv@bexp^0,w,c
  6574   00333E  A4D8               	btfss	status,2,c
  6575   003340  EFA4  F019         	goto	u2561
  6576   003344  EFA6  F019         	goto	u2560
  6577   003348                     u2561:
  6578   003348  EFAE  F019         	goto	l2814
  6579   00334C                     u2560:
  6580   00334C  0E00               	movlw	0
  6581   00334E  6E03               	movwf	___fldiv@b^0,c
  6582   003350  0E00               	movlw	0
  6583   003352  6E04               	movwf	(___fldiv@b+1)^0,c
  6584   003354  0E00               	movlw	0
  6585   003356  6E05               	movwf	(___fldiv@b+2)^0,c
  6586   003358  0E00               	movlw	0
  6587   00335A  6E06               	movwf	(___fldiv@b+3)^0,c
  6588   00335C                     l2814:
  6589   00335C  8E05               	bsf	(___fldiv@b+2)^0,7,c
  6590   00335E  6A06               	clrf	(___fldiv@b+3)^0,c
  6591   003360  EFBA  F019         	goto	l2820
  6592   003364                     l2818:
  6593   003364  0E00               	movlw	0
  6594   003366  6E03               	movwf	___fldiv@b^0,c
  6595   003368  0E00               	movlw	0
  6596   00336A  6E04               	movwf	(___fldiv@b+1)^0,c
  6597   00336C  0E00               	movlw	0
  6598   00336E  6E05               	movwf	(___fldiv@b+2)^0,c
  6599   003370  0E00               	movlw	0
  6600   003372  6E06               	movwf	(___fldiv@b+3)^0,c
  6601   003374                     l2820:
  6602   003374  500A               	movf	(___fldiv@a+3)^0,w,c
  6603   003376  0B80               	andlw	128
  6604   003378  1A13               	xorwf	___fldiv@sign^0,f,c
  6605   00337A  500A               	movf	(___fldiv@a+3)^0,w,c
  6606   00337C  240A               	addwf	(___fldiv@a+3)^0,w,c
  6607   00337E  6E1B               	movwf	___fldiv@aexp^0,c
  6608   003380  AE09               	btfss	(___fldiv@a+2)^0,7,c
  6609   003382  EFC5  F019         	goto	u2571
  6610   003386  EFC7  F019         	goto	u2570
  6611   00338A                     u2571:
  6612   00338A  EFC8  F019         	goto	l2828
  6613   00338E                     u2570:
  6614   00338E  801B               	bsf	___fldiv@aexp^0,0,c
  6615   003390                     l2828:
  6616   003390  501B               	movf	___fldiv@aexp^0,w,c
  6617   003392  B4D8               	btfsc	status,2,c
  6618   003394  EFCE  F019         	goto	u2581
  6619   003398  EFD0  F019         	goto	u2580
  6620   00339C                     u2581:
  6621   00339C  EFE4  F019         	goto	l2838
  6622   0033A0                     u2580:
  6623   0033A0  281B               	incf	___fldiv@aexp^0,w,c
  6624   0033A2  A4D8               	btfss	status,2,c
  6625   0033A4  EFD6  F019         	goto	u2591
  6626   0033A8  EFD8  F019         	goto	u2590
  6627   0033AC                     u2591:
  6628   0033AC  EFE0  F019         	goto	l2834
  6629   0033B0                     u2590:
  6630   0033B0  0E00               	movlw	0
  6631   0033B2  6E07               	movwf	___fldiv@a^0,c
  6632   0033B4  0E00               	movlw	0
  6633   0033B6  6E08               	movwf	(___fldiv@a+1)^0,c
  6634   0033B8  0E00               	movlw	0
  6635   0033BA  6E09               	movwf	(___fldiv@a+2)^0,c
  6636   0033BC  0E00               	movlw	0
  6637   0033BE  6E0A               	movwf	(___fldiv@a+3)^0,c
  6638   0033C0                     l2834:
  6639   0033C0  8E09               	bsf	(___fldiv@a+2)^0,7,c
  6640   0033C2  6A0A               	clrf	(___fldiv@a+3)^0,c
  6641   0033C4  EFEC  F019         	goto	l2840
  6642   0033C8                     l2838:
  6643   0033C8  0E00               	movlw	0
  6644   0033CA  6E07               	movwf	___fldiv@a^0,c
  6645   0033CC  0E00               	movlw	0
  6646   0033CE  6E08               	movwf	(___fldiv@a+1)^0,c
  6647   0033D0  0E00               	movlw	0
  6648   0033D2  6E09               	movwf	(___fldiv@a+2)^0,c
  6649   0033D4  0E00               	movlw	0
  6650   0033D6  6E0A               	movwf	(___fldiv@a+3)^0,c
  6651   0033D8                     l2840:
  6652   0033D8  5007               	movf	___fldiv@a^0,w,c
  6653   0033DA  1008               	iorwf	(___fldiv@a+1)^0,w,c
  6654   0033DC  1009               	iorwf	(___fldiv@a+2)^0,w,c
  6655   0033DE  100A               	iorwf	(___fldiv@a+3)^0,w,c
  6656   0033E0  A4D8               	btfss	status,2,c
  6657   0033E2  EFF5  F019         	goto	u2601
  6658   0033E6  EFF7  F019         	goto	u2600
  6659   0033EA                     u2601:
  6660   0033EA  EF0F  F01A         	goto	l2852
  6661   0033EE                     u2600:
  6662   0033EE  0E00               	movlw	0
  6663   0033F0  6E03               	movwf	___fldiv@b^0,c
  6664   0033F2  0E00               	movlw	0
  6665   0033F4  6E04               	movwf	(___fldiv@b+1)^0,c
  6666   0033F6  0E00               	movlw	0
  6667   0033F8  6E05               	movwf	(___fldiv@b+2)^0,c
  6668   0033FA  0E00               	movlw	0
  6669   0033FC  6E06               	movwf	(___fldiv@b+3)^0,c
  6670   0033FE  0E80               	movlw	128
  6671   003400  1205               	iorwf	(___fldiv@b+2)^0,f,c
  6672   003402  0E7F               	movlw	127
  6673   003404  1206               	iorwf	(___fldiv@b+3)^0,f,c
  6674   003406                     l2846:
  6675   003406  5013               	movf	___fldiv@sign^0,w,c
  6676   003408  1206               	iorwf	(___fldiv@b+3)^0,f,c
  6677   00340A  C003  F003         	movff	___fldiv@b,?___fldiv
  6678   00340E  C004  F004         	movff	___fldiv@b+1,?___fldiv+1
  6679   003412  C005  F005         	movff	___fldiv@b+2,?___fldiv+2
  6680   003416  C006  F006         	movff	___fldiv@b+3,?___fldiv+3
  6681   00341A  EF4F  F01B         	goto	l823
  6682   00341E                     l2852:
  6683   00341E  501A               	movf	___fldiv@bexp^0,w,c
  6684   003420  A4D8               	btfss	status,2,c
  6685   003422  EF15  F01A         	goto	u2611
  6686   003426  EF17  F01A         	goto	u2610
  6687   00342A                     u2611:
  6688   00342A  EF21  F01A         	goto	l2860
  6689   00342E                     u2610:
  6690   00342E  0E00               	movlw	0
  6691   003430  6E03               	movwf	?___fldiv^0,c
  6692   003432  0E00               	movlw	0
  6693   003434  6E04               	movwf	(?___fldiv+1)^0,c
  6694   003436  0E00               	movlw	0
  6695   003438  6E05               	movwf	(?___fldiv+2)^0,c
  6696   00343A  0E00               	movlw	0
  6697   00343C  6E06               	movwf	(?___fldiv+3)^0,c
  6698   00343E  EF4F  F01B         	goto	l823
  6699   003442                     l2860:
  6700   003442  501B               	movf	___fldiv@aexp^0,w,c
  6701   003444  C01A  F00B         	movff	___fldiv@bexp,??___fldiv
  6702   003448  6A0C               	clrf	(??___fldiv+1)^0,c
  6703   00344A  5E0B               	subwf	??___fldiv^0,f,c
  6704   00344C  0E00               	movlw	0
  6705   00344E  5A0C               	subwfb	(??___fldiv+1)^0,f,c
  6706   003450  0E7F               	movlw	127
  6707   003452  240B               	addwf	??___fldiv^0,w,c
  6708   003454  6E14               	movwf	___fldiv@new_exp^0,c
  6709   003456  0E00               	movlw	0
  6710   003458  200C               	addwfc	(??___fldiv+1)^0,w,c
  6711   00345A  6E15               	movwf	(___fldiv@new_exp+1)^0,c
  6712   00345C  C003  F00F         	movff	___fldiv@b,___fldiv@rem
  6713   003460  C004  F010         	movff	___fldiv@b+1,___fldiv@rem+1
  6714   003464  C005  F011         	movff	___fldiv@b+2,___fldiv@rem+2
  6715   003468  C006  F012         	movff	___fldiv@b+3,___fldiv@rem+3
  6716   00346C  0E00               	movlw	0
  6717   00346E  6E03               	movwf	___fldiv@b^0,c
  6718   003470  0E00               	movlw	0
  6719   003472  6E04               	movwf	(___fldiv@b+1)^0,c
  6720   003474  0E00               	movlw	0
  6721   003476  6E05               	movwf	(___fldiv@b+2)^0,c
  6722   003478  0E00               	movlw	0
  6723   00347A  6E06               	movwf	(___fldiv@b+3)^0,c
  6724   00347C  0E00               	movlw	0
  6725   00347E  6E16               	movwf	___fldiv@grs^0,c
  6726   003480  0E00               	movlw	0
  6727   003482  6E17               	movwf	(___fldiv@grs+1)^0,c
  6728   003484  0E00               	movlw	0
  6729   003486  6E18               	movwf	(___fldiv@grs+2)^0,c
  6730   003488  0E00               	movlw	0
  6731   00348A  6E19               	movwf	(___fldiv@grs+3)^0,c
  6732   00348C  6A1B               	clrf	___fldiv@aexp^0,c
  6733   00348E  EF81  F01A         	goto	l825
  6734   003492                     l2870:
  6735   003492  501B               	movf	___fldiv@aexp^0,w,c
  6736   003494  B4D8               	btfsc	status,2,c
  6737   003496  EF4F  F01A         	goto	u2621
  6738   00349A  EF51  F01A         	goto	u2620
  6739   00349E                     u2621:
  6740   00349E  EF68  F01A         	goto	l2878
  6741   0034A2                     u2620:
  6742   0034A2  90D8               	bcf	status,0,c
  6743   0034A4  360F               	rlcf	___fldiv@rem^0,f,c
  6744   0034A6  3610               	rlcf	(___fldiv@rem+1)^0,f,c
  6745   0034A8  3611               	rlcf	(___fldiv@rem+2)^0,f,c
  6746   0034AA  3612               	rlcf	(___fldiv@rem+3)^0,f,c
  6747   0034AC  90D8               	bcf	status,0,c
  6748   0034AE  3603               	rlcf	___fldiv@b^0,f,c
  6749   0034B0  3604               	rlcf	(___fldiv@b+1)^0,f,c
  6750   0034B2  3605               	rlcf	(___fldiv@b+2)^0,f,c
  6751   0034B4  3606               	rlcf	(___fldiv@b+3)^0,f,c
  6752   0034B6  AE19               	btfss	(___fldiv@grs+3)^0,7,c
  6753   0034B8  EF60  F01A         	goto	u2631
  6754   0034BC  EF62  F01A         	goto	u2630
  6755   0034C0                     u2631:
  6756   0034C0  EF63  F01A         	goto	l828
  6757   0034C4                     u2630:
  6758   0034C4  8003               	bsf	___fldiv@b^0,0,c
  6759   0034C6                     l828:
  6760   0034C6  90D8               	bcf	status,0,c
  6761   0034C8  3616               	rlcf	___fldiv@grs^0,f,c
  6762   0034CA  3617               	rlcf	(___fldiv@grs+1)^0,f,c
  6763   0034CC  3618               	rlcf	(___fldiv@grs+2)^0,f,c
  6764   0034CE  3619               	rlcf	(___fldiv@grs+3)^0,f,c
  6765   0034D0                     l2878:
  6766   0034D0  5007               	movf	___fldiv@a^0,w,c
  6767   0034D2  5C0F               	subwf	___fldiv@rem^0,w,c
  6768   0034D4  5008               	movf	(___fldiv@a+1)^0,w,c
  6769   0034D6  5810               	subwfb	(___fldiv@rem+1)^0,w,c
  6770   0034D8  5009               	movf	(___fldiv@a+2)^0,w,c
  6771   0034DA  5811               	subwfb	(___fldiv@rem+2)^0,w,c
  6772   0034DC  500A               	movf	(___fldiv@a+3)^0,w,c
  6773   0034DE  5812               	subwfb	(___fldiv@rem+3)^0,w,c
  6774   0034E0  A0D8               	btfss	status,0,c
  6775   0034E2  EF75  F01A         	goto	u2641
  6776   0034E6  EF77  F01A         	goto	u2640
  6777   0034EA                     u2641:
  6778   0034EA  EF80  F01A         	goto	l2884
  6779   0034EE                     u2640:
  6780   0034EE  8C19               	bsf	(___fldiv@grs+3)^0,6,c
  6781   0034F0  5007               	movf	___fldiv@a^0,w,c
  6782   0034F2  5E0F               	subwf	___fldiv@rem^0,f,c
  6783   0034F4  5008               	movf	(___fldiv@a+1)^0,w,c
  6784   0034F6  5A10               	subwfb	(___fldiv@rem+1)^0,f,c
  6785   0034F8  5009               	movf	(___fldiv@a+2)^0,w,c
  6786   0034FA  5A11               	subwfb	(___fldiv@rem+2)^0,f,c
  6787   0034FC  500A               	movf	(___fldiv@a+3)^0,w,c
  6788   0034FE  5A12               	subwfb	(___fldiv@rem+3)^0,f,c
  6789   003500                     l2884:
  6790   003500  2A1B               	incf	___fldiv@aexp^0,f,c
  6791   003502                     l825:
  6792   003502  0E19               	movlw	25
  6793   003504  641B               	cpfsgt	___fldiv@aexp^0,c
  6794   003506  EF87  F01A         	goto	u2651
  6795   00350A  EF89  F01A         	goto	u2650
  6796   00350E                     u2651:
  6797   00350E  EF49  F01A         	goto	l2870
  6798   003512                     u2650:
  6799   003512  500F               	movf	___fldiv@rem^0,w,c
  6800   003514  1010               	iorwf	(___fldiv@rem+1)^0,w,c
  6801   003516  1011               	iorwf	(___fldiv@rem+2)^0,w,c
  6802   003518  1012               	iorwf	(___fldiv@rem+3)^0,w,c
  6803   00351A  B4D8               	btfsc	status,2,c
  6804   00351C  EF92  F01A         	goto	u2661
  6805   003520  EF94  F01A         	goto	u2660
  6806   003524                     u2661:
  6807   003524  EFAC  F01A         	goto	l2896
  6808   003528                     u2660:
  6809   003528  8016               	bsf	___fldiv@grs^0,0,c
  6810   00352A  EFAC  F01A         	goto	l2896
  6811   00352E                     l2890:
  6812   00352E  90D8               	bcf	status,0,c
  6813   003530  3603               	rlcf	___fldiv@b^0,f,c
  6814   003532  3604               	rlcf	(___fldiv@b+1)^0,f,c
  6815   003534  3605               	rlcf	(___fldiv@b+2)^0,f,c
  6816   003536  3606               	rlcf	(___fldiv@b+3)^0,f,c
  6817   003538  AE19               	btfss	(___fldiv@grs+3)^0,7,c
  6818   00353A  EFA1  F01A         	goto	u2671
  6819   00353E  EFA3  F01A         	goto	u2670
  6820   003542                     u2671:
  6821   003542  EFA4  F01A         	goto	l834
  6822   003546                     u2670:
  6823   003546  8003               	bsf	___fldiv@b^0,0,c
  6824   003548                     l834:
  6825   003548  90D8               	bcf	status,0,c
  6826   00354A  3616               	rlcf	___fldiv@grs^0,f,c
  6827   00354C  3617               	rlcf	(___fldiv@grs+1)^0,f,c
  6828   00354E  3618               	rlcf	(___fldiv@grs+2)^0,f,c
  6829   003550  3619               	rlcf	(___fldiv@grs+3)^0,f,c
  6830   003552  0614               	decf	___fldiv@new_exp^0,f,c
  6831   003554  A0D8               	btfss	status,0,c
  6832   003556  0615               	decf	(___fldiv@new_exp+1)^0,f,c
  6833   003558                     l2896:
  6834   003558  AE05               	btfss	(___fldiv@b+2)^0,7,c
  6835   00355A  EFB1  F01A         	goto	u2681
  6836   00355E  EFB3  F01A         	goto	u2680
  6837   003562                     u2681:
  6838   003562  EF97  F01A         	goto	l2890
  6839   003566                     u2680:
  6840   003566  6A1B               	clrf	___fldiv@aexp^0,c
  6841   003568  AE19               	btfss	(___fldiv@grs+3)^0,7,c
  6842   00356A  EFB9  F01A         	goto	u2691
  6843   00356E  EFBB  F01A         	goto	u2690
  6844   003572                     u2691:
  6845   003572  EFDF  F01A         	goto	l836
  6846   003576                     u2690:
  6847   003576  0EFF               	movlw	255
  6848   003578  1416               	andwf	___fldiv@grs^0,w,c
  6849   00357A  6E0B               	movwf	??___fldiv^0,c
  6850   00357C  0EFF               	movlw	255
  6851   00357E  1417               	andwf	(___fldiv@grs+1)^0,w,c
  6852   003580  6E0C               	movwf	(??___fldiv+1)^0,c
  6853   003582  0EFF               	movlw	255
  6854   003584  1418               	andwf	(___fldiv@grs+2)^0,w,c
  6855   003586  6E0D               	movwf	(??___fldiv+2)^0,c
  6856   003588  0E7F               	movlw	127
  6857   00358A  1419               	andwf	(___fldiv@grs+3)^0,w,c
  6858   00358C  6E0E               	movwf	(??___fldiv+3)^0,c
  6859   00358E  500B               	movf	??___fldiv^0,w,c
  6860   003590  100C               	iorwf	(??___fldiv+1)^0,w,c
  6861   003592  100D               	iorwf	(??___fldiv+2)^0,w,c
  6862   003594  100E               	iorwf	(??___fldiv+3)^0,w,c
  6863   003596  B4D8               	btfsc	status,2,c
  6864   003598  EFD0  F01A         	goto	u2701
  6865   00359C  EFD2  F01A         	goto	u2700
  6866   0035A0                     u2701:
  6867   0035A0  EFD6  F01A         	goto	l837
  6868   0035A4                     u2700:
  6869   0035A4                     l2900:
  6870   0035A4  0E01               	movlw	1
  6871   0035A6  6E1B               	movwf	___fldiv@aexp^0,c
  6872   0035A8  EFDF  F01A         	goto	l836
  6873   0035AC                     l837:
  6874   0035AC  A003               	btfss	___fldiv@b^0,0,c
  6875   0035AE  EFDB  F01A         	goto	u2711
  6876   0035B2  EFDD  F01A         	goto	u2710
  6877   0035B6                     u2711:
  6878   0035B6  EFDF  F01A         	goto	l836
  6879   0035BA                     u2710:
  6880   0035BA  EFD2  F01A         	goto	l2900
  6881   0035BE                     l836:
  6882   0035BE  501B               	movf	___fldiv@aexp^0,w,c
  6883   0035C0  B4D8               	btfsc	status,2,c
  6884   0035C2  EFE5  F01A         	goto	u2721
  6885   0035C6  EFE7  F01A         	goto	u2720
  6886   0035CA                     u2721:
  6887   0035CA  EF0B  F01B         	goto	l2912
  6888   0035CE                     u2720:
  6889   0035CE  0E01               	movlw	1
  6890   0035D0  2603               	addwf	___fldiv@b^0,f,c
  6891   0035D2  0E00               	movlw	0
  6892   0035D4  2204               	addwfc	(___fldiv@b+1)^0,f,c
  6893   0035D6  2205               	addwfc	(___fldiv@b+2)^0,f,c
  6894   0035D8  2206               	addwfc	(___fldiv@b+3)^0,f,c
  6895   0035DA  A006               	btfss	(___fldiv@b+3)^0,0,c
  6896   0035DC  EFF2  F01A         	goto	u2731
  6897   0035E0  EFF4  F01A         	goto	u2730
  6898   0035E4                     u2731:
  6899   0035E4  EF0B  F01B         	goto	l2912
  6900   0035E8                     u2730:
  6901   0035E8  C003  F00B         	movff	___fldiv@b,??___fldiv
  6902   0035EC  C004  F00C         	movff	___fldiv@b+1,??___fldiv+1
  6903   0035F0  C005  F00D         	movff	___fldiv@b+2,??___fldiv+2
  6904   0035F4  C006  F00E         	movff	___fldiv@b+3,??___fldiv+3
  6905   0035F8  340E               	rlcf	(??___fldiv+3)^0,w,c
  6906   0035FA  320E               	rrcf	(??___fldiv+3)^0,f,c
  6907   0035FC  320D               	rrcf	(??___fldiv+2)^0,f,c
  6908   0035FE  320C               	rrcf	(??___fldiv+1)^0,f,c
  6909   003600  320B               	rrcf	??___fldiv^0,f,c
  6910   003602  C00B  F003         	movff	??___fldiv,___fldiv@b
  6911   003606  C00C  F004         	movff	??___fldiv+1,___fldiv@b+1
  6912   00360A  C00D  F005         	movff	??___fldiv+2,___fldiv@b+2
  6913   00360E  C00E  F006         	movff	??___fldiv+3,___fldiv@b+3
  6914   003612  4A14               	infsnz	___fldiv@new_exp^0,f,c
  6915   003614  2A15               	incf	(___fldiv@new_exp+1)^0,f,c
  6916   003616                     l2912:
  6917   003616  BE15               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6918   003618  EF16  F01B         	goto	u2741
  6919   00361C  5015               	movf	(___fldiv@new_exp+1)^0,w,c
  6920   00361E  E108               	bnz	u2740
  6921   003620  2814               	incf	___fldiv@new_exp^0,w,c
  6922   003622  A0D8               	btfss	status,0,c
  6923   003624  EF16  F01B         	goto	u2741
  6924   003628  EF18  F01B         	goto	u2740
  6925   00362C                     u2741:
  6926   00362C  EF23  F01B         	goto	l2916
  6927   003630                     u2740:
  6928   003630  0E00               	movlw	0
  6929   003632  6E15               	movwf	(___fldiv@new_exp+1)^0,c
  6930   003634  6814               	setf	___fldiv@new_exp^0,c
  6931   003636  0E00               	movlw	0
  6932   003638  6E03               	movwf	___fldiv@b^0,c
  6933   00363A  0E00               	movlw	0
  6934   00363C  6E04               	movwf	(___fldiv@b+1)^0,c
  6935   00363E  0E00               	movlw	0
  6936   003640  6E05               	movwf	(___fldiv@b+2)^0,c
  6937   003642  0E00               	movlw	0
  6938   003644  6E06               	movwf	(___fldiv@b+3)^0,c
  6939   003646                     l2916:
  6940   003646  BE15               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6941   003648  EF30  F01B         	goto	u2750
  6942   00364C  5015               	movf	(___fldiv@new_exp+1)^0,w,c
  6943   00364E  E106               	bnz	u2751
  6944   003650  0414               	decf	___fldiv@new_exp^0,w,c
  6945   003652  B0D8               	btfsc	status,0,c
  6946   003654  EF2E  F01B         	goto	u2751
  6947   003658  EF30  F01B         	goto	u2750
  6948   00365C                     u2751:
  6949   00365C  EF3D  F01B         	goto	l2922
  6950   003660                     u2750:
  6951   003660  0E00               	movlw	0
  6952   003662  6E15               	movwf	(___fldiv@new_exp+1)^0,c
  6953   003664  0E00               	movlw	0
  6954   003666  6E14               	movwf	___fldiv@new_exp^0,c
  6955   003668  0E00               	movlw	0
  6956   00366A  6E03               	movwf	___fldiv@b^0,c
  6957   00366C  0E00               	movlw	0
  6958   00366E  6E04               	movwf	(___fldiv@b+1)^0,c
  6959   003670  0E00               	movlw	0
  6960   003672  6E05               	movwf	(___fldiv@b+2)^0,c
  6961   003674  0E00               	movlw	0
  6962   003676  6E06               	movwf	(___fldiv@b+3)^0,c
  6963   003678  6A13               	clrf	___fldiv@sign^0,c
  6964   00367A                     l2922:
  6965   00367A  C014  F01A         	movff	___fldiv@new_exp,___fldiv@bexp
  6966   00367E  A01A               	btfss	___fldiv@bexp^0,0,c
  6967   003680  EF44  F01B         	goto	u2761
  6968   003684  EF46  F01B         	goto	u2760
  6969   003688                     u2761:
  6970   003688  EF49  F01B         	goto	l2928
  6971   00368C                     u2760:
  6972   00368C  8E05               	bsf	(___fldiv@b+2)^0,7,c
  6973   00368E  EF4A  F01B         	goto	l2930
  6974   003692                     l2928:
  6975   003692  9E05               	bcf	(___fldiv@b+2)^0,7,c
  6976   003694                     l2930:
  6977   003694  90D8               	bcf	status,0,c
  6978   003696  301A               	rrcf	___fldiv@bexp^0,w,c
  6979   003698  6E06               	movwf	(___fldiv@b+3)^0,c
  6980   00369A  EF03  F01A         	goto	l2846
  6981   00369E                     l823:
  6982   00369E  0012               	return		;funcret
  6983   0036A0                     __end_of___fldiv:
  6984                           	callstack 0
  6985                           
  6986 ;; *************** function _dtoa *****************
  6987 ;; Defined at:
  6988 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  6989 ;; Parameters:    Size  Location     Type
  6990 ;;  fp              1   24[COMRAM] PTR struct _IO_FILE
  6991 ;;		 -> sprintf@f(11), 
  6992 ;;  d               2   25[COMRAM] int 
  6993 ;; Auto vars:     Size  Location     Type
  6994 ;;  i               2   34[COMRAM] int 
  6995 ;;  p               2   31[COMRAM] int 
  6996 ;;  w               2   29[COMRAM] int 
  6997 ;;  s               1   33[COMRAM] unsigned char 
  6998 ;; Return value:  Size  Location     Type
  6999 ;;                  1    wreg      void 
  7000 ;; Registers used:
  7001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7002 ;; Tracked objects:
  7003 ;;		On entry : 0/0
  7004 ;;		On exit  : 0/0
  7005 ;;		Unchanged: 0/0
  7006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7007 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7008 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7010 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7011 ;;Total ram usage:       12 bytes
  7012 ;; Hardware stack levels used: 1
  7013 ;; Hardware stack levels required when called: 5
  7014 ;; This function calls:
  7015 ;;		___awdiv
  7016 ;;		___awmod
  7017 ;;		_abs
  7018 ;;		_pad
  7019 ;; This function is called by:
  7020 ;;		_vfpfcnvrt
  7021 ;; This function uses a non-reentrant model
  7022 ;;
  7023                           
  7024                           	psect	text20
  7025   003D58                     __ptext20:
  7026                           	callstack 0
  7027   003D58                     _dtoa:
  7028                           	callstack 21
  7029   003D58                     
  7030                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
  7031   003D58  BE1B               	btfsc	(dtoa@d+1)^0,7,c
  7032   003D5A  EFB1  F01E         	goto	u3491
  7033   003D5E  EFB4  F01E         	goto	u3490
  7034   003D62                     u3491:
  7035   003D62  0E01               	movlw	1
  7036   003D64  EFB5  F01E         	goto	u3500
  7037   003D68                     u3490:
  7038   003D68  0E00               	movlw	0
  7039   003D6A                     u3500:
  7040   003D6A  6E22               	movwf	dtoa@s^0,c
  7041                           
  7042                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
  7043   003D6C  0100               	movlb	0	; () banked
  7044   003D6E  BFD2               	btfsc	(_prec+1)& (0+255),7,b
  7045   003D70  EFBE  F01E         	goto	u3510
  7046   003D74  EFBC  F01E         	goto	u3511
  7047   003D78                     u3511:
  7048   003D78  EFC4  F01E         	goto	l956
  7049   003D7C                     u3510:
  7050   003D7C                     
  7051                           ; BSR set to: 0
  7052   003D7C  0E00               	movlw	0
  7053   003D7E  6E21               	movwf	(dtoa@p+1)^0,c
  7054   003D80  0E01               	movlw	1
  7055   003D82  6E20               	movwf	dtoa@p^0,c
  7056   003D84  EFC8  F01E         	goto	l958
  7057   003D88                     l956:
  7058                           
  7059                           ; BSR set to: 0
  7060   003D88  C0D1  F020         	movff	_prec,dtoa@p
  7061   003D8C  C0D2  F021         	movff	_prec+1,dtoa@p+1
  7062   003D90                     l958:
  7063                           
  7064                           ; BSR set to: 0
  7065                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  7066   003D90  C0CF  F01E         	movff	_width,dtoa@w
  7067   003D94  C0D0  F01F         	movff	_width+1,dtoa@w+1
  7068   003D98                     
  7069                           ; BSR set to: 0
  7070                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 536:     if (s
  7071   003D98  5022               	movf	dtoa@s^0,w,c
  7072   003D9A  B4D8               	btfsc	status,2,c
  7073   003D9C  EFD2  F01E         	goto	u3521
  7074   003DA0  EFD4  F01E         	goto	u3520
  7075   003DA4                     u3521:
  7076   003DA4  EFEB  F01E         	goto	l959
  7077   003DA8                     u3520:
  7078   003DA8                     
  7079                           ; BSR set to: 0
  7080                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 541:         --w;
  7081   003DA8  061E               	decf	dtoa@w^0,f,c
  7082   003DAA  A0D8               	btfss	status,0,c
  7083   003DAC  061F               	decf	(dtoa@w+1)^0,f,c
  7084   003DAE                     
  7085                           ; BSR set to: 0
  7086                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  7087   003DAE  5022               	movf	dtoa@s^0,w,c
  7088   003DB0  A4D8               	btfss	status,2,c
  7089   003DB2  EFDD  F01E         	goto	u3531
  7090   003DB6  EFDF  F01E         	goto	u3530
  7091   003DBA                     u3531:
  7092   003DBA  EFE5  F01E         	goto	l3360
  7093   003DBE                     u3530:
  7094   003DBE                     
  7095                           ; BSR set to: 0
  7096   003DBE  0E00               	movlw	0
  7097   003DC0  6E1D               	movwf	(_dtoa$1302+1)^0,c
  7098   003DC2  0E2B               	movlw	43
  7099   003DC4  6E1C               	movwf	_dtoa$1302^0,c
  7100   003DC6  EFE9  F01E         	goto	l3362
  7101   003DCA                     l3360:
  7102                           
  7103                           ; BSR set to: 0
  7104   003DCA  0E00               	movlw	0
  7105   003DCC  6E1D               	movwf	(_dtoa$1302+1)^0,c
  7106   003DCE  0E2D               	movlw	45
  7107   003DD0  6E1C               	movwf	_dtoa$1302^0,c
  7108   003DD2                     l3362:
  7109                           
  7110                           ; BSR set to: 0
  7111   003DD2  C01C  F022         	movff	_dtoa$1302,dtoa@s
  7112   003DD6                     l959:
  7113                           
  7114                           ; BSR set to: 0
  7115                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  7116   003DD6  0E00               	movlw	0
  7117   003DD8  6E24               	movwf	(dtoa@i+1)^0,c
  7118   003DDA  0E4F               	movlw	79
  7119   003DDC  6E23               	movwf	dtoa@i^0,c
  7120   003DDE                     
  7121                           ; BSR set to: 0
  7122                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  7123   003DDE  0101               	movlb	1	; () banked
  7124   003DE0  6B4F               	clrf	(_dbuf+79)& (0+255),b
  7125                           
  7126                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  7127   003DE2  EF23  F01F         	goto	l3376
  7128   003DE6                     l3366:
  7129                           
  7130                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 564:         --i;
  7131   003DE6  0623               	decf	dtoa@i^0,f,c
  7132   003DE8  A0D8               	btfss	status,0,c
  7133   003DEA  0624               	decf	(dtoa@i+1)^0,f,c
  7134   003DEC                     
  7135                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  7136   003DEC  0E00               	movlw	low _dbuf
  7137   003DEE  2423               	addwf	dtoa@i^0,w,c
  7138   003DF0  6ED9               	movwf	fsr2l,c
  7139   003DF2  0E01               	movlw	high _dbuf
  7140   003DF4  2024               	addwfc	(dtoa@i+1)^0,w,c
  7141   003DF6  6EDA               	movwf	fsr2h,c
  7142   003DF8  C01A  F003         	movff	dtoa@d,___awmod@dividend
  7143   003DFC  C01B  F004         	movff	dtoa@d+1,___awmod@dividend+1
  7144   003E00  0E00               	movlw	0
  7145   003E02  6E06               	movwf	(___awmod@divisor+1)^0,c
  7146   003E04  0E0A               	movlw	10
  7147   003E06  6E05               	movwf	___awmod@divisor^0,c
  7148   003E08  ECAA  F021         	call	___awmod	;wreg free
  7149   003E0C  C003  F009         	movff	?___awmod,abs@a
  7150   003E10  C004  F00A         	movff	?___awmod+1,abs@a+1
  7151   003E14  EC72  F025         	call	_abs	;wreg free
  7152   003E18  5009               	movf	?_abs^0,w,c
  7153   003E1A  0F30               	addlw	48
  7154   003E1C  6EDF               	movwf	indf2,c
  7155   003E1E                     
  7156                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 567:         --p;
  7157   003E1E  0620               	decf	dtoa@p^0,f,c
  7158   003E20  A0D8               	btfss	status,0,c
  7159   003E22  0621               	decf	(dtoa@p+1)^0,f,c
  7160   003E24                     
  7161                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 571:         --w;
  7162   003E24  061E               	decf	dtoa@w^0,f,c
  7163   003E26  A0D8               	btfss	status,0,c
  7164   003E28  061F               	decf	(dtoa@w+1)^0,f,c
  7165   003E2A                     
  7166                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  7167   003E2A  C01A  F003         	movff	dtoa@d,___awdiv@dividend
  7168   003E2E  C01B  F004         	movff	dtoa@d+1,___awdiv@dividend+1
  7169   003E32  0E00               	movlw	0
  7170   003E34  6E06               	movwf	(___awdiv@divisor+1)^0,c
  7171   003E36  0E0A               	movlw	10
  7172   003E38  6E05               	movwf	___awdiv@divisor^0,c
  7173   003E3A  ECED  F020         	call	___awdiv	;wreg free
  7174   003E3E  C003  F01A         	movff	?___awdiv,dtoa@d
  7175   003E42  C004  F01B         	movff	?___awdiv+1,dtoa@d+1
  7176   003E46                     l3376:
  7177                           
  7178                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  7179   003E46  BE24               	btfsc	(dtoa@i+1)^0,7,c
  7180   003E48  EF2E  F01F         	goto	u3541
  7181   003E4C  5024               	movf	(dtoa@i+1)^0,w,c
  7182   003E4E  E108               	bnz	u3540
  7183   003E50  0423               	decf	dtoa@i^0,w,c
  7184   003E52  A0D8               	btfss	status,0,c
  7185   003E54  EF2E  F01F         	goto	u3541
  7186   003E58  EF30  F01F         	goto	u3540
  7187   003E5C                     u3541:
  7188   003E5C  EF46  F01F         	goto	l3382
  7189   003E60                     u3540:
  7190   003E60  501A               	movf	dtoa@d^0,w,c
  7191   003E62  101B               	iorwf	(dtoa@d+1)^0,w,c
  7192   003E64  A4D8               	btfss	status,2,c
  7193   003E66  EF37  F01F         	goto	u3551
  7194   003E6A  EF39  F01F         	goto	u3550
  7195   003E6E                     u3551:
  7196   003E6E  EFF3  F01E         	goto	l3366
  7197   003E72                     u3550:
  7198   003E72  BE21               	btfsc	(dtoa@p+1)^0,7,c
  7199   003E74  EF46  F01F         	goto	u3560
  7200   003E78  5021               	movf	(dtoa@p+1)^0,w,c
  7201   003E7A  E106               	bnz	u3561
  7202   003E7C  0420               	decf	dtoa@p^0,w,c
  7203   003E7E  B0D8               	btfsc	status,0,c
  7204   003E80  EF44  F01F         	goto	u3561
  7205   003E84  EF46  F01F         	goto	u3560
  7206   003E88                     u3561:
  7207   003E88  EFF3  F01E         	goto	l3366
  7208   003E8C                     u3560:
  7209   003E8C                     l3382:
  7210                           
  7211                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  7212   003E8C  5022               	movf	dtoa@s^0,w,c
  7213   003E8E  B4D8               	btfsc	status,2,c
  7214   003E90  EF4C  F01F         	goto	u3571
  7215   003E94  EF4E  F01F         	goto	u3570
  7216   003E98                     u3571:
  7217   003E98  EF5A  F01F         	goto	l3388
  7218   003E9C                     u3570:
  7219   003E9C                     
  7220                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 577:         --i;
  7221   003E9C  0623               	decf	dtoa@i^0,f,c
  7222   003E9E  A0D8               	btfss	status,0,c
  7223   003EA0  0624               	decf	(dtoa@i+1)^0,f,c
  7224   003EA2                     
  7225                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  7226   003EA2  0E00               	movlw	low _dbuf
  7227   003EA4  2423               	addwf	dtoa@i^0,w,c
  7228   003EA6  6ED9               	movwf	fsr2l,c
  7229   003EA8  0E01               	movlw	high _dbuf
  7230   003EAA  2024               	addwfc	(dtoa@i+1)^0,w,c
  7231   003EAC  6EDA               	movwf	fsr2h,c
  7232   003EAE  0060  F08B  FFDF   	movff	dtoa@s,indf2
  7233   003EB4                     l3388:
  7234                           
  7235                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  7236   003EB4  C019  F011         	movff	dtoa@fp,pad@fp
  7237   003EB8  0E00               	movlw	low _dbuf
  7238   003EBA  2423               	addwf	dtoa@i^0,w,c
  7239   003EBC  6E12               	movwf	pad@buf^0,c
  7240   003EBE  0E01               	movlw	high _dbuf
  7241   003EC0  2024               	addwfc	(dtoa@i+1)^0,w,c
  7242   003EC2  6E13               	movwf	(pad@buf+1)^0,c
  7243   003EC4  C01E  F014         	movff	dtoa@w,pad@p
  7244   003EC8  C01F  F015         	movff	dtoa@w+1,pad@p+1
  7245   003ECC  EC6C  F023         	call	_pad	;wreg free
  7246   003ED0  0012               	return		;funcret
  7247   003ED2                     __end_of_dtoa:
  7248                           	callstack 0
  7249                           
  7250 ;; *************** function _pad *****************
  7251 ;; Defined at:
  7252 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  7253 ;; Parameters:    Size  Location     Type
  7254 ;;  fp              1   16[COMRAM] PTR struct _IO_FILE
  7255 ;;		 -> sprintf@f(11), 
  7256 ;;  buf             2   17[COMRAM] PTR unsigned char 
  7257 ;;		 -> dbuf(80), 
  7258 ;;  p               2   19[COMRAM] int 
  7259 ;; Auto vars:     Size  Location     Type
  7260 ;;  i               2   22[COMRAM] int 
  7261 ;; Return value:  Size  Location     Type
  7262 ;;                  1    wreg      void 
  7263 ;; Registers used:
  7264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7265 ;; Tracked objects:
  7266 ;;		On entry : 0/0
  7267 ;;		On exit  : 0/0
  7268 ;;		Unchanged: 0/0
  7269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7270 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7271 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7272 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7273 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7274 ;;Total ram usage:        8 bytes
  7275 ;; Hardware stack levels used: 1
  7276 ;; Hardware stack levels required when called: 4
  7277 ;; This function calls:
  7278 ;;		_fputc
  7279 ;;		_fputs
  7280 ;; This function is called by:
  7281 ;;		_dtoa
  7282 ;;		_efgtoa
  7283 ;; This function uses a non-reentrant model
  7284 ;;
  7285                           
  7286                           	psect	text21
  7287   0046D8                     __ptext21:
  7288                           	callstack 0
  7289   0046D8                     _pad:
  7290                           	callstack 21
  7291   0046D8                     
  7292                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  7293   0046D8  BE15               	btfsc	(pad@p+1)^0,7,c
  7294   0046DA  EF73  F023         	goto	u3240
  7295   0046DE  EF71  F023         	goto	u3241
  7296   0046E2                     u3241:
  7297   0046E2  EF77  F023         	goto	l948
  7298   0046E6                     u3240:
  7299   0046E6                     
  7300                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  7301   0046E6  0E00               	movlw	0
  7302   0046E8  6E15               	movwf	(pad@p+1)^0,c
  7303   0046EA  0E00               	movlw	0
  7304   0046EC  6E14               	movwf	pad@p^0,c
  7305   0046EE                     l948:
  7306                           
  7307                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  7308   0046EE  0E00               	movlw	0
  7309   0046F0  6E18               	movwf	(pad@i+1)^0,c
  7310   0046F2  0E00               	movlw	0
  7311   0046F4  6E17               	movwf	pad@i^0,c
  7312                           
  7313                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  7314   0046F6  EF87  F023         	goto	l3250
  7315   0046FA                     l3246:
  7316                           
  7317                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  7318   0046FA  0E00               	movlw	0
  7319   0046FC  6E04               	movwf	(fputc@c+1)^0,c
  7320   0046FE  0E20               	movlw	32
  7321   004700  6E03               	movwf	fputc@c^0,c
  7322   004702  C011  F005         	movff	pad@fp,fputc@fp
  7323   004706  EC01  F022         	call	_fputc	;wreg free
  7324   00470A                     
  7325                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
  7326   00470A  4A17               	infsnz	pad@i^0,f,c
  7327   00470C  2A18               	incf	(pad@i+1)^0,f,c
  7328   00470E                     l3250:
  7329                           
  7330                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  7331   00470E  5014               	movf	pad@p^0,w,c
  7332   004710  5C17               	subwf	pad@i^0,w,c
  7333   004712  5018               	movf	(pad@i+1)^0,w,c
  7334   004714  0A80               	xorlw	128
  7335   004716  6E16               	movwf	??_pad^0,c
  7336   004718  5015               	movf	(pad@p+1)^0,w,c
  7337   00471A  0A80               	xorlw	128
  7338   00471C  5816               	subwfb	??_pad^0,w,c
  7339   00471E  A0D8               	btfss	status,0,c
  7340   004720  EF94  F023         	goto	u3251
  7341   004724  EF96  F023         	goto	u3250
  7342   004728                     u3251:
  7343   004728  EF7D  F023         	goto	l3246
  7344   00472C                     u3250:
  7345   00472C                     
  7346                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  7347   00472C  C012  F00B         	movff	pad@buf,fputs@s
  7348   004730  C013  F00C         	movff	pad@buf+1,fputs@s+1
  7349   004734  C011  F00D         	movff	pad@fp,fputs@fp
  7350   004738  ECFB  F024         	call	_fputs	;wreg free
  7351   00473C  0012               	return		;funcret
  7352   00473E                     __end_of_pad:
  7353                           	callstack 0
  7354                           
  7355 ;; *************** function _fputs *****************
  7356 ;; Defined at:
  7357 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
  7358 ;; Parameters:    Size  Location     Type
  7359 ;;  s               2   10[COMRAM] PTR const unsigned char 
  7360 ;;		 -> dbuf(80), 
  7361 ;;  fp              1   12[COMRAM] PTR struct _IO_FILE
  7362 ;;		 -> sprintf@f(11), 
  7363 ;; Auto vars:     Size  Location     Type
  7364 ;;  i               2   14[COMRAM] int 
  7365 ;;  c               1   13[COMRAM] unsigned char 
  7366 ;; Return value:  Size  Location     Type
  7367 ;;                  2   10[COMRAM] int 
  7368 ;; Registers used:
  7369 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7370 ;; Tracked objects:
  7371 ;;		On entry : 0/0
  7372 ;;		On exit  : 0/0
  7373 ;;		Unchanged: 0/0
  7374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7375 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7376 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7378 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7379 ;;Total ram usage:        6 bytes
  7380 ;; Hardware stack levels used: 1
  7381 ;; Hardware stack levels required when called: 3
  7382 ;; This function calls:
  7383 ;;		_fputc
  7384 ;; This function is called by:
  7385 ;;		_pad
  7386 ;; This function uses a non-reentrant model
  7387 ;;
  7388                           
  7389                           	psect	text22
  7390   0049F6                     __ptext22:
  7391                           	callstack 0
  7392   0049F6                     _fputs:
  7393                           	callstack 21
  7394   0049F6  0E00               	movlw	0
  7395   0049F8  6E10               	movwf	(fputs@i+1)^0,c
  7396   0049FA  0E00               	movlw	0
  7397   0049FC  6E0F               	movwf	fputs@i^0,c
  7398   0049FE  EF0A  F025         	goto	l2800
  7399   004A02                     l2796:
  7400   004A02  C00E  F003         	movff	fputs@c,fputc@c
  7401   004A06  6A04               	clrf	(fputc@c+1)^0,c
  7402   004A08  C00D  F005         	movff	fputs@fp,fputc@fp
  7403   004A0C  EC01  F022         	call	_fputc	;wreg free
  7404   004A10  4A0F               	infsnz	fputs@i^0,f,c
  7405   004A12  2A10               	incf	(fputs@i+1)^0,f,c
  7406   004A14                     l2800:
  7407   004A14  500F               	movf	fputs@i^0,w,c
  7408   004A16  240B               	addwf	fputs@s^0,w,c
  7409   004A18  6ED9               	movwf	fsr2l,c
  7410   004A1A  5010               	movf	(fputs@i+1)^0,w,c
  7411   004A1C  200C               	addwfc	(fputs@s+1)^0,w,c
  7412   004A1E  6EDA               	movwf	fsr2h,c
  7413   004A20  50DF               	movf	indf2,w,c
  7414   004A22  6E0E               	movwf	fputs@c^0,c
  7415   004A24  500E               	movf	fputs@c^0,w,c
  7416   004A26  A4D8               	btfss	status,2,c
  7417   004A28  EF18  F025         	goto	u2531
  7418   004A2C  EF1A  F025         	goto	u2530
  7419   004A30                     u2531:
  7420   004A30  EF01  F025         	goto	l2796
  7421   004A34                     u2530:
  7422   004A34  0012               	return		;funcret
  7423   004A36                     __end_of_fputs:
  7424                           	callstack 0
  7425                           
  7426 ;; *************** function _fputc *****************
  7427 ;; Defined at:
  7428 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  7429 ;; Parameters:    Size  Location     Type
  7430 ;;  c               2    2[COMRAM] int 
  7431 ;;  fp              1    4[COMRAM] PTR struct _IO_FILE
  7432 ;;		 -> sprintf@f(11), 
  7433 ;; Auto vars:     Size  Location     Type
  7434 ;;		None
  7435 ;; Return value:  Size  Location     Type
  7436 ;;                  2    2[COMRAM] int 
  7437 ;; Registers used:
  7438 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7439 ;; Tracked objects:
  7440 ;;		On entry : 0/0
  7441 ;;		On exit  : 0/0
  7442 ;;		Unchanged: 0/0
  7443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7444 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7446 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7447 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7448 ;;Total ram usage:        8 bytes
  7449 ;; Hardware stack levels used: 1
  7450 ;; Hardware stack levels required when called: 2
  7451 ;; This function calls:
  7452 ;;		_putch
  7453 ;; This function is called by:
  7454 ;;		_pad
  7455 ;;		_vfpfcnvrt
  7456 ;;		_fputs
  7457 ;; This function uses a non-reentrant model
  7458 ;;
  7459                           
  7460                           	psect	text23
  7461   004402                     __ptext23:
  7462                           	callstack 0
  7463   004402                     _fputc:
  7464                           	callstack 24
  7465   004402  5005               	movf	fputc@fp^0,w,c
  7466   004404  B4D8               	btfsc	status,2,c
  7467   004406  EF07  F022         	goto	u2101
  7468   00440A  EF09  F022         	goto	u2100
  7469   00440E                     u2101:
  7470   00440E  EF11  F022         	goto	l2590
  7471   004412                     u2100:
  7472   004412  5005               	movf	fputc@fp^0,w,c
  7473   004414  A4D8               	btfss	status,2,c
  7474   004416  EF0F  F022         	goto	u2111
  7475   00441A  EF11  F022         	goto	u2110
  7476   00441E                     u2111:
  7477   00441E  EF16  F022         	goto	l2592
  7478   004422                     u2110:
  7479   004422                     l2590:
  7480   004422  5003               	movf	fputc@c^0,w,c
  7481   004424  EC31  F026         	call	_putch
  7482   004428  EF56  F022         	goto	l1116
  7483   00442C                     l2592:
  7484   00442C  5005               	movf	fputc@fp^0,w,c
  7485   00442E  6ED9               	movwf	fsr2l,c
  7486   004430  6ADA               	clrf	fsr2h,c
  7487   004432  0E09               	movlw	9
  7488   004434  26D9               	addwf	fsr2l,f,c
  7489   004436  50DE               	movf	postinc2,w,c
  7490   004438  10DE               	iorwf	postinc2,w,c
  7491   00443A  B4D8               	btfsc	status,2,c
  7492   00443C  EF22  F022         	goto	u2121
  7493   004440  EF24  F022         	goto	u2120
  7494   004444                     u2121:
  7495   004444  EF3D  F022         	goto	l2596
  7496   004448                     u2120:
  7497   004448  5005               	movf	fputc@fp^0,w,c
  7498   00444A  6ED9               	movwf	fsr2l,c
  7499   00444C  6ADA               	clrf	fsr2h,c
  7500   00444E  0E09               	movlw	9
  7501   004450  26D9               	addwf	fsr2l,f,c
  7502   004452  5005               	movf	fputc@fp^0,w,c
  7503   004454  6EE1               	movwf	fsr1l,c
  7504   004456  6AE2               	clrf	fsr1h,c
  7505   004458  0E02               	movlw	2
  7506   00445A  26E1               	addwf	fsr1l,f,c
  7507   00445C  50DE               	movf	postinc2,w,c
  7508   00445E  5CE6               	subwf	postinc1,w,c
  7509   004460  50E6               	movf	postinc1,w,c
  7510   004462  0A80               	xorlw	128
  7511   004464  6E0A               	movwf	(??_fputc+4)^0,c
  7512   004466  50DE               	movf	postinc2,w,c
  7513   004468  0A80               	xorlw	128
  7514   00446A  580A               	subwfb	(??_fputc+4)^0,w,c
  7515   00446C  B0D8               	btfsc	status,0,c
  7516   00446E  EF3B  F022         	goto	u2131
  7517   004472  EF3D  F022         	goto	u2130
  7518   004476                     u2131:
  7519   004476  EF56  F022         	goto	l1116
  7520   00447A                     u2130:
  7521   00447A                     l2596:
  7522   00447A  5005               	movf	fputc@fp^0,w,c
  7523   00447C  6ED9               	movwf	fsr2l,c
  7524   00447E  6ADA               	clrf	fsr2h,c
  7525   004480  0E02               	movlw	2
  7526   004482  26D9               	addwf	fsr2l,f,c
  7527   004484  50DF               	movf	indf2,w,c
  7528   004486  6E06               	movwf	??_fputc^0,c
  7529   004488  5005               	movf	fputc@fp^0,w,c
  7530   00448A  6ED9               	movwf	fsr2l,c
  7531   00448C  6ADA               	clrf	fsr2h,c
  7532   00448E  50DF               	movf	indf2,w,c
  7533   004490  2406               	addwf	??_fputc^0,w,c
  7534   004492  6ED9               	movwf	fsr2l,c
  7535   004494  6ADA               	clrf	fsr2h,c
  7536   004496  0060  F00F  FFDF   	movff	fputc@c,indf2
  7537   00449C  5005               	movf	fputc@fp^0,w,c
  7538   00449E  6ED9               	movwf	fsr2l,c
  7539   0044A0  6ADA               	clrf	fsr2h,c
  7540   0044A2  0E02               	movlw	2
  7541   0044A4  26D9               	addwf	fsr2l,f,c
  7542   0044A6  2ADE               	incf	postinc2,f,c
  7543   0044A8  0E00               	movlw	0
  7544   0044AA  22DD               	addwfc	postdec2,f,c
  7545   0044AC                     l1116:
  7546   0044AC  0012               	return		;funcret
  7547   0044AE                     __end_of_fputc:
  7548                           	callstack 0
  7549                           
  7550 ;; *************** function _putch *****************
  7551 ;; Defined at:
  7552 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  7553 ;; Parameters:    Size  Location     Type
  7554 ;;  c               1    wreg     unsigned char 
  7555 ;; Auto vars:     Size  Location     Type
  7556 ;;  c               1    0[COMRAM] unsigned char 
  7557 ;; Return value:  Size  Location     Type
  7558 ;;                  1    wreg      void 
  7559 ;; Registers used:
  7560 ;;		wreg
  7561 ;; Tracked objects:
  7562 ;;		On entry : 0/0
  7563 ;;		On exit  : 0/0
  7564 ;;		Unchanged: 0/0
  7565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7570 ;;Total ram usage:        0 bytes
  7571 ;; Hardware stack levels used: 1
  7572 ;; Hardware stack levels required when called: 1
  7573 ;; This function calls:
  7574 ;;		Nothing
  7575 ;; This function is called by:
  7576 ;;		_fputc
  7577 ;; This function uses a non-reentrant model
  7578 ;;
  7579                           
  7580                           	psect	text24
  7581   004C62                     __ptext24:
  7582                           	callstack 0
  7583   004C62                     _putch:
  7584                           	callstack 24
  7585   004C62  0012               	return		;funcret
  7586   004C64                     __end_of_putch:
  7587                           	callstack 0
  7588                           
  7589 ;; *************** function _abs *****************
  7590 ;; Defined at:
  7591 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
  7592 ;; Parameters:    Size  Location     Type
  7593 ;;  a               2    8[COMRAM] int 
  7594 ;; Auto vars:     Size  Location     Type
  7595 ;;		None
  7596 ;; Return value:  Size  Location     Type
  7597 ;;                  2    8[COMRAM] int 
  7598 ;; Registers used:
  7599 ;;		wreg, status,2, status,0
  7600 ;; Tracked objects:
  7601 ;;		On entry : 0/0
  7602 ;;		On exit  : 0/0
  7603 ;;		Unchanged: 0/0
  7604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7605 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7607 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7608 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7609 ;;Total ram usage:        4 bytes
  7610 ;; Hardware stack levels used: 1
  7611 ;; Hardware stack levels required when called: 1
  7612 ;; This function calls:
  7613 ;;		Nothing
  7614 ;; This function is called by:
  7615 ;;		_dtoa
  7616 ;; This function uses a non-reentrant model
  7617 ;;
  7618                           
  7619                           	psect	text25
  7620   004AE4                     __ptext25:
  7621                           	callstack 0
  7622   004AE4                     _abs:
  7623                           	callstack 24
  7624   004AE4  BE0A               	btfsc	(abs@a+1)^0,7,c
  7625   004AE6  EF77  F025         	goto	u3261
  7626   004AEA  EF79  F025         	goto	u3260
  7627   004AEE                     u3261:
  7628   004AEE  EF7F  F025         	goto	l1075
  7629   004AF2                     u3260:
  7630   004AF2  C009  F009         	movff	abs@a,?_abs
  7631   004AF6  C00A  F00A         	movff	abs@a+1,?_abs+1
  7632   004AFA  EF8B  F025         	goto	l1078
  7633   004AFE                     l1075:
  7634   004AFE  C009  F00B         	movff	abs@a,??_abs
  7635   004B02  C00A  F00C         	movff	abs@a+1,??_abs+1
  7636   004B06  1E0B               	comf	??_abs^0,f,c
  7637   004B08  1E0C               	comf	(??_abs+1)^0,f,c
  7638   004B0A  4A0B               	infsnz	??_abs^0,f,c
  7639   004B0C  2A0C               	incf	(??_abs+1)^0,f,c
  7640   004B0E  C00B  F009         	movff	??_abs,?_abs
  7641   004B12  C00C  F00A         	movff	??_abs+1,?_abs+1
  7642   004B16                     l1078:
  7643   004B16  0012               	return		;funcret
  7644   004B18                     __end_of_abs:
  7645                           	callstack 0
  7646                           
  7647 ;; *************** function ___awmod *****************
  7648 ;; Defined at:
  7649 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  7650 ;; Parameters:    Size  Location     Type
  7651 ;;  dividend        2    2[COMRAM] int 
  7652 ;;  divisor         2    4[COMRAM] int 
  7653 ;; Auto vars:     Size  Location     Type
  7654 ;;  sign            1    7[COMRAM] unsigned char 
  7655 ;;  counter         1    6[COMRAM] unsigned char 
  7656 ;; Return value:  Size  Location     Type
  7657 ;;                  2    2[COMRAM] int 
  7658 ;; Registers used:
  7659 ;;		wreg, status,2, status,0
  7660 ;; Tracked objects:
  7661 ;;		On entry : 0/0
  7662 ;;		On exit  : 0/0
  7663 ;;		Unchanged: 0/0
  7664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7665 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7666 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7668 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7669 ;;Total ram usage:        6 bytes
  7670 ;; Hardware stack levels used: 1
  7671 ;; Hardware stack levels required when called: 1
  7672 ;; This function calls:
  7673 ;;		Nothing
  7674 ;; This function is called by:
  7675 ;;		_dtoa
  7676 ;; This function uses a non-reentrant model
  7677 ;;
  7678                           
  7679                           	psect	text26
  7680   004354                     __ptext26:
  7681                           	callstack 0
  7682   004354                     ___awmod:
  7683                           	callstack 24
  7684   004354  6A08               	clrf	___awmod@sign^0,c
  7685   004356  BE04               	btfsc	(___awmod@dividend+1)^0,7,c
  7686   004358  EFB2  F021         	goto	u3020
  7687   00435C  EFB0  F021         	goto	u3021
  7688   004360                     u3021:
  7689   004360  EFB8  F021         	goto	l3124
  7690   004364                     u3020:
  7691   004364  6C03               	negf	___awmod@dividend^0,c
  7692   004366  1E04               	comf	(___awmod@dividend+1)^0,f,c
  7693   004368  B0D8               	btfsc	status,0,c
  7694   00436A  2A04               	incf	(___awmod@dividend+1)^0,f,c
  7695   00436C  0E01               	movlw	1
  7696   00436E  6E08               	movwf	___awmod@sign^0,c
  7697   004370                     l3124:
  7698   004370  BE06               	btfsc	(___awmod@divisor+1)^0,7,c
  7699   004372  EFBF  F021         	goto	u3030
  7700   004376  EFBD  F021         	goto	u3031
  7701   00437A                     u3031:
  7702   00437A  EFC3  F021         	goto	l3128
  7703   00437E                     u3030:
  7704   00437E  6C05               	negf	___awmod@divisor^0,c
  7705   004380  1E06               	comf	(___awmod@divisor+1)^0,f,c
  7706   004382  B0D8               	btfsc	status,0,c
  7707   004384  2A06               	incf	(___awmod@divisor+1)^0,f,c
  7708   004386                     l3128:
  7709   004386  5005               	movf	___awmod@divisor^0,w,c
  7710   004388  1006               	iorwf	(___awmod@divisor+1)^0,w,c
  7711   00438A  B4D8               	btfsc	status,2,c
  7712   00438C  EFCA  F021         	goto	u3041
  7713   004390  EFCC  F021         	goto	u3040
  7714   004394                     u3041:
  7715   004394  EFF0  F021         	goto	l3144
  7716   004398                     u3040:
  7717   004398  0E01               	movlw	1
  7718   00439A  6E07               	movwf	___awmod@counter^0,c
  7719   00439C  EFD4  F021         	goto	l3134
  7720   0043A0                     l3132:
  7721   0043A0  90D8               	bcf	status,0,c
  7722   0043A2  3605               	rlcf	___awmod@divisor^0,f,c
  7723   0043A4  3606               	rlcf	(___awmod@divisor+1)^0,f,c
  7724   0043A6  2A07               	incf	___awmod@counter^0,f,c
  7725   0043A8                     l3134:
  7726   0043A8  AE06               	btfss	(___awmod@divisor+1)^0,7,c
  7727   0043AA  EFD9  F021         	goto	u3051
  7728   0043AE  EFDB  F021         	goto	u3050
  7729   0043B2                     u3051:
  7730   0043B2  EFD0  F021         	goto	l3132
  7731   0043B6                     u3050:
  7732   0043B6                     l3136:
  7733   0043B6  5005               	movf	___awmod@divisor^0,w,c
  7734   0043B8  5C03               	subwf	___awmod@dividend^0,w,c
  7735   0043BA  5006               	movf	(___awmod@divisor+1)^0,w,c
  7736   0043BC  5804               	subwfb	(___awmod@dividend+1)^0,w,c
  7737   0043BE  A0D8               	btfss	status,0,c
  7738   0043C0  EFE4  F021         	goto	u3061
  7739   0043C4  EFE6  F021         	goto	u3060
  7740   0043C8                     u3061:
  7741   0043C8  EFEA  F021         	goto	l3140
  7742   0043CC                     u3060:
  7743   0043CC  5005               	movf	___awmod@divisor^0,w,c
  7744   0043CE  5E03               	subwf	___awmod@dividend^0,f,c
  7745   0043D0  5006               	movf	(___awmod@divisor+1)^0,w,c
  7746   0043D2  5A04               	subwfb	(___awmod@dividend+1)^0,f,c
  7747   0043D4                     l3140:
  7748   0043D4  90D8               	bcf	status,0,c
  7749   0043D6  3206               	rrcf	(___awmod@divisor+1)^0,f,c
  7750   0043D8  3205               	rrcf	___awmod@divisor^0,f,c
  7751   0043DA  2E07               	decfsz	___awmod@counter^0,f,c
  7752   0043DC  EFDB  F021         	goto	l3136
  7753   0043E0                     l3144:
  7754   0043E0  5008               	movf	___awmod@sign^0,w,c
  7755   0043E2  B4D8               	btfsc	status,2,c
  7756   0043E4  EFF6  F021         	goto	u3071
  7757   0043E8  EFF8  F021         	goto	u3070
  7758   0043EC                     u3071:
  7759   0043EC  EFFC  F021         	goto	l3148
  7760   0043F0                     u3070:
  7761   0043F0  6C03               	negf	___awmod@dividend^0,c
  7762   0043F2  1E04               	comf	(___awmod@dividend+1)^0,f,c
  7763   0043F4  B0D8               	btfsc	status,0,c
  7764   0043F6  2A04               	incf	(___awmod@dividend+1)^0,f,c
  7765   0043F8                     l3148:
  7766   0043F8  C003  F003         	movff	___awmod@dividend,?___awmod
  7767   0043FC  C004  F004         	movff	___awmod@dividend+1,?___awmod+1
  7768   004400  0012               	return		;funcret
  7769   004402                     __end_of___awmod:
  7770                           	callstack 0
  7771                           
  7772 ;; *************** function ___awdiv *****************
  7773 ;; Defined at:
  7774 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  7775 ;; Parameters:    Size  Location     Type
  7776 ;;  dividend        2    2[COMRAM] int 
  7777 ;;  divisor         2    4[COMRAM] int 
  7778 ;; Auto vars:     Size  Location     Type
  7779 ;;  quotient        2    8[COMRAM] int 
  7780 ;;  sign            1    7[COMRAM] unsigned char 
  7781 ;;  counter         1    6[COMRAM] unsigned char 
  7782 ;; Return value:  Size  Location     Type
  7783 ;;                  2    2[COMRAM] int 
  7784 ;; Registers used:
  7785 ;;		wreg, status,2, status,0
  7786 ;; Tracked objects:
  7787 ;;		On entry : 0/0
  7788 ;;		On exit  : 0/0
  7789 ;;		Unchanged: 0/0
  7790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7791 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7792 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7794 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7795 ;;Total ram usage:        8 bytes
  7796 ;; Hardware stack levels used: 1
  7797 ;; Hardware stack levels required when called: 1
  7798 ;; This function calls:
  7799 ;;		Nothing
  7800 ;; This function is called by:
  7801 ;;		_dtoa
  7802 ;; This function uses a non-reentrant model
  7803 ;;
  7804                           
  7805                           	psect	text27
  7806   0041DA                     __ptext27:
  7807                           	callstack 0
  7808   0041DA                     ___awdiv:
  7809                           	callstack 24
  7810   0041DA  6A08               	clrf	___awdiv@sign^0,c
  7811   0041DC  BE06               	btfsc	(___awdiv@divisor+1)^0,7,c
  7812   0041DE  EFF5  F020         	goto	u2960
  7813   0041E2  EFF3  F020         	goto	u2961
  7814   0041E6                     u2961:
  7815   0041E6  EFFB  F020         	goto	l3080
  7816   0041EA                     u2960:
  7817   0041EA  6C05               	negf	___awdiv@divisor^0,c
  7818   0041EC  1E06               	comf	(___awdiv@divisor+1)^0,f,c
  7819   0041EE  B0D8               	btfsc	status,0,c
  7820   0041F0  2A06               	incf	(___awdiv@divisor+1)^0,f,c
  7821   0041F2  0E01               	movlw	1
  7822   0041F4  6E08               	movwf	___awdiv@sign^0,c
  7823   0041F6                     l3080:
  7824   0041F6  BE04               	btfsc	(___awdiv@dividend+1)^0,7,c
  7825   0041F8  EF02  F021         	goto	u2970
  7826   0041FC  EF00  F021         	goto	u2971
  7827   004200                     u2971:
  7828   004200  EF08  F021         	goto	l3086
  7829   004204                     u2970:
  7830   004204  6C03               	negf	___awdiv@dividend^0,c
  7831   004206  1E04               	comf	(___awdiv@dividend+1)^0,f,c
  7832   004208  B0D8               	btfsc	status,0,c
  7833   00420A  2A04               	incf	(___awdiv@dividend+1)^0,f,c
  7834   00420C  0E01               	movlw	1
  7835   00420E  1A08               	xorwf	___awdiv@sign^0,f,c
  7836   004210                     l3086:
  7837   004210  0E00               	movlw	0
  7838   004212  6E0A               	movwf	(___awdiv@quotient+1)^0,c
  7839   004214  0E00               	movlw	0
  7840   004216  6E09               	movwf	___awdiv@quotient^0,c
  7841   004218  5005               	movf	___awdiv@divisor^0,w,c
  7842   00421A  1006               	iorwf	(___awdiv@divisor+1)^0,w,c
  7843   00421C  B4D8               	btfsc	status,2,c
  7844   00421E  EF13  F021         	goto	u2981
  7845   004222  EF15  F021         	goto	u2980
  7846   004226                     u2981:
  7847   004226  EF3D  F021         	goto	l3108
  7848   00422A                     u2980:
  7849   00422A  0E01               	movlw	1
  7850   00422C  6E07               	movwf	___awdiv@counter^0,c
  7851   00422E  EF1D  F021         	goto	l3094
  7852   004232                     l3092:
  7853   004232  90D8               	bcf	status,0,c
  7854   004234  3605               	rlcf	___awdiv@divisor^0,f,c
  7855   004236  3606               	rlcf	(___awdiv@divisor+1)^0,f,c
  7856   004238  2A07               	incf	___awdiv@counter^0,f,c
  7857   00423A                     l3094:
  7858   00423A  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
  7859   00423C  EF22  F021         	goto	u2991
  7860   004240  EF24  F021         	goto	u2990
  7861   004244                     u2991:
  7862   004244  EF19  F021         	goto	l3092
  7863   004248                     u2990:
  7864   004248                     l3096:
  7865   004248  90D8               	bcf	status,0,c
  7866   00424A  3609               	rlcf	___awdiv@quotient^0,f,c
  7867   00424C  360A               	rlcf	(___awdiv@quotient+1)^0,f,c
  7868   00424E  5005               	movf	___awdiv@divisor^0,w,c
  7869   004250  5C03               	subwf	___awdiv@dividend^0,w,c
  7870   004252  5006               	movf	(___awdiv@divisor+1)^0,w,c
  7871   004254  5804               	subwfb	(___awdiv@dividend+1)^0,w,c
  7872   004256  A0D8               	btfss	status,0,c
  7873   004258  EF30  F021         	goto	u3001
  7874   00425C  EF32  F021         	goto	u3000
  7875   004260                     u3001:
  7876   004260  EF37  F021         	goto	l3104
  7877   004264                     u3000:
  7878   004264  5005               	movf	___awdiv@divisor^0,w,c
  7879   004266  5E03               	subwf	___awdiv@dividend^0,f,c
  7880   004268  5006               	movf	(___awdiv@divisor+1)^0,w,c
  7881   00426A  5A04               	subwfb	(___awdiv@dividend+1)^0,f,c
  7882   00426C  8009               	bsf	___awdiv@quotient^0,0,c
  7883   00426E                     l3104:
  7884   00426E  90D8               	bcf	status,0,c
  7885   004270  3206               	rrcf	(___awdiv@divisor+1)^0,f,c
  7886   004272  3205               	rrcf	___awdiv@divisor^0,f,c
  7887   004274  2E07               	decfsz	___awdiv@counter^0,f,c
  7888   004276  EF24  F021         	goto	l3096
  7889   00427A                     l3108:
  7890   00427A  5008               	movf	___awdiv@sign^0,w,c
  7891   00427C  B4D8               	btfsc	status,2,c
  7892   00427E  EF43  F021         	goto	u3011
  7893   004282  EF45  F021         	goto	u3010
  7894   004286                     u3011:
  7895   004286  EF49  F021         	goto	l3112
  7896   00428A                     u3010:
  7897   00428A  6C09               	negf	___awdiv@quotient^0,c
  7898   00428C  1E0A               	comf	(___awdiv@quotient+1)^0,f,c
  7899   00428E  B0D8               	btfsc	status,0,c
  7900   004290  2A0A               	incf	(___awdiv@quotient+1)^0,f,c
  7901   004292                     l3112:
  7902   004292  C009  F003         	movff	___awdiv@quotient,?___awdiv
  7903   004296  C00A  F004         	movff	___awdiv@quotient+1,?___awdiv+1
  7904   00429A  0012               	return		;funcret
  7905   00429C                     __end_of___awdiv:
  7906                           	callstack 0
  7907                           
  7908 ;; *************** function ___lmul *****************
  7909 ;; Defined at:
  7910 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul32.c"
  7911 ;; Parameters:    Size  Location     Type
  7912 ;;  multiplier      4    2[COMRAM] unsigned long 
  7913 ;;  multiplicand    4    6[COMRAM] unsigned long 
  7914 ;; Auto vars:     Size  Location     Type
  7915 ;;  product         4   10[COMRAM] unsigned long 
  7916 ;; Return value:  Size  Location     Type
  7917 ;;                  4    2[COMRAM] unsigned long 
  7918 ;; Registers used:
  7919 ;;		wreg, status,2, status,0
  7920 ;; Tracked objects:
  7921 ;;		On entry : 0/0
  7922 ;;		On exit  : 0/0
  7923 ;;		Unchanged: 0/0
  7924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7925 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7926 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7928 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7929 ;;Total ram usage:       12 bytes
  7930 ;; Hardware stack levels used: 1
  7931 ;; Hardware stack levels required when called: 1
  7932 ;; This function calls:
  7933 ;;		Nothing
  7934 ;; This function is called by:
  7935 ;;		_PWM
  7936 ;; This function uses a non-reentrant model
  7937 ;;
  7938                           
  7939                           	psect	text28
  7940   00466E                     __ptext28:
  7941                           	callstack 0
  7942   00466E                     ___lmul:
  7943                           	callstack 28
  7944   00466E  0E00               	movlw	0
  7945   004670  6E0B               	movwf	___lmul@product^0,c
  7946   004672  0E00               	movlw	0
  7947   004674  6E0C               	movwf	(___lmul@product+1)^0,c
  7948   004676  0E00               	movlw	0
  7949   004678  6E0D               	movwf	(___lmul@product+2)^0,c
  7950   00467A  0E00               	movlw	0
  7951   00467C  6E0E               	movwf	(___lmul@product+3)^0,c
  7952   00467E                     l3814:
  7953   00467E  A003               	btfss	___lmul@multiplier^0,0,c
  7954   004680  EF44  F023         	goto	u4051
  7955   004684  EF46  F023         	goto	u4050
  7956   004688                     u4051:
  7957   004688  EF4E  F023         	goto	l3818
  7958   00468C                     u4050:
  7959   00468C  5007               	movf	___lmul@multiplicand^0,w,c
  7960   00468E  260B               	addwf	___lmul@product^0,f,c
  7961   004690  5008               	movf	(___lmul@multiplicand+1)^0,w,c
  7962   004692  220C               	addwfc	(___lmul@product+1)^0,f,c
  7963   004694  5009               	movf	(___lmul@multiplicand+2)^0,w,c
  7964   004696  220D               	addwfc	(___lmul@product+2)^0,f,c
  7965   004698  500A               	movf	(___lmul@multiplicand+3)^0,w,c
  7966   00469A  220E               	addwfc	(___lmul@product+3)^0,f,c
  7967   00469C                     l3818:
  7968   00469C  90D8               	bcf	status,0,c
  7969   00469E  3607               	rlcf	___lmul@multiplicand^0,f,c
  7970   0046A0  3608               	rlcf	(___lmul@multiplicand+1)^0,f,c
  7971   0046A2  3609               	rlcf	(___lmul@multiplicand+2)^0,f,c
  7972   0046A4  360A               	rlcf	(___lmul@multiplicand+3)^0,f,c
  7973   0046A6  90D8               	bcf	status,0,c
  7974   0046A8  3206               	rrcf	(___lmul@multiplier+3)^0,f,c
  7975   0046AA  3205               	rrcf	(___lmul@multiplier+2)^0,f,c
  7976   0046AC  3204               	rrcf	(___lmul@multiplier+1)^0,f,c
  7977   0046AE  3203               	rrcf	___lmul@multiplier^0,f,c
  7978   0046B0  5003               	movf	___lmul@multiplier^0,w,c
  7979   0046B2  1004               	iorwf	(___lmul@multiplier+1)^0,w,c
  7980   0046B4  1005               	iorwf	(___lmul@multiplier+2)^0,w,c
  7981   0046B6  1006               	iorwf	(___lmul@multiplier+3)^0,w,c
  7982   0046B8  A4D8               	btfss	status,2,c
  7983   0046BA  EF61  F023         	goto	u4061
  7984   0046BE  EF63  F023         	goto	u4060
  7985   0046C2                     u4061:
  7986   0046C2  EF3F  F023         	goto	l3814
  7987   0046C6                     u4060:
  7988   0046C6  C00B  F003         	movff	___lmul@product,?___lmul
  7989   0046CA  C00C  F004         	movff	___lmul@product+1,?___lmul+1
  7990   0046CE  C00D  F005         	movff	___lmul@product+2,?___lmul+2
  7991   0046D2  C00E  F006         	movff	___lmul@product+3,?___lmul+3
  7992   0046D6  0012               	return		;funcret
  7993   0046D8                     __end_of___lmul:
  7994                           	callstack 0
  7995                           
  7996 ;; *************** function ___lldiv *****************
  7997 ;; Defined at:
  7998 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__lldiv.c"
  7999 ;; Parameters:    Size  Location     Type
  8000 ;;  dividend        4   14[COMRAM] unsigned long 
  8001 ;;  divisor         4   18[COMRAM] unsigned long 
  8002 ;; Auto vars:     Size  Location     Type
  8003 ;;  quotient        4   22[COMRAM] unsigned long 
  8004 ;;  counter         1   26[COMRAM] unsigned char 
  8005 ;; Return value:  Size  Location     Type
  8006 ;;                  4   14[COMRAM] unsigned long 
  8007 ;; Registers used:
  8008 ;;		wreg, status,2, status,0
  8009 ;; Tracked objects:
  8010 ;;		On entry : 0/0
  8011 ;;		On exit  : 0/0
  8012 ;;		Unchanged: 0/0
  8013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8014 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8015 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8017 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8018 ;;Total ram usage:       13 bytes
  8019 ;; Hardware stack levels used: 1
  8020 ;; Hardware stack levels required when called: 1
  8021 ;; This function calls:
  8022 ;;		Nothing
  8023 ;; This function is called by:
  8024 ;;		_PWM
  8025 ;; This function uses a non-reentrant model
  8026 ;;
  8027                           
  8028                           	psect	text29
  8029   004558                     __ptext29:
  8030                           	callstack 0
  8031   004558                     ___lldiv:
  8032                           	callstack 28
  8033   004558  0E00               	movlw	0
  8034   00455A  6E17               	movwf	___lldiv@quotient^0,c
  8035   00455C  0E00               	movlw	0
  8036   00455E  6E18               	movwf	(___lldiv@quotient+1)^0,c
  8037   004560  0E00               	movlw	0
  8038   004562  6E19               	movwf	(___lldiv@quotient+2)^0,c
  8039   004564  0E00               	movlw	0
  8040   004566  6E1A               	movwf	(___lldiv@quotient+3)^0,c
  8041   004568  5013               	movf	___lldiv@divisor^0,w,c
  8042   00456A  1014               	iorwf	(___lldiv@divisor+1)^0,w,c
  8043   00456C  1015               	iorwf	(___lldiv@divisor+2)^0,w,c
  8044   00456E  1016               	iorwf	(___lldiv@divisor+3)^0,w,c
  8045   004570  B4D8               	btfsc	status,2,c
  8046   004572  EFBD  F022         	goto	u4071
  8047   004576  EFBF  F022         	goto	u4070
  8048   00457A                     u4071:
  8049   00457A  EFF5  F022         	goto	l268
  8050   00457E                     u4070:
  8051   00457E  0E01               	movlw	1
  8052   004580  6E1B               	movwf	___lldiv@counter^0,c
  8053   004582  EFC9  F022         	goto	l3830
  8054   004586                     l3828:
  8055   004586  90D8               	bcf	status,0,c
  8056   004588  3613               	rlcf	___lldiv@divisor^0,f,c
  8057   00458A  3614               	rlcf	(___lldiv@divisor+1)^0,f,c
  8058   00458C  3615               	rlcf	(___lldiv@divisor+2)^0,f,c
  8059   00458E  3616               	rlcf	(___lldiv@divisor+3)^0,f,c
  8060   004590  2A1B               	incf	___lldiv@counter^0,f,c
  8061   004592                     l3830:
  8062   004592  AE16               	btfss	(___lldiv@divisor+3)^0,7,c
  8063   004594  EFCE  F022         	goto	u4081
  8064   004598  EFD0  F022         	goto	u4080
  8065   00459C                     u4081:
  8066   00459C  EFC3  F022         	goto	l3828
  8067   0045A0                     u4080:
  8068   0045A0                     l3832:
  8069   0045A0  90D8               	bcf	status,0,c
  8070   0045A2  3617               	rlcf	___lldiv@quotient^0,f,c
  8071   0045A4  3618               	rlcf	(___lldiv@quotient+1)^0,f,c
  8072   0045A6  3619               	rlcf	(___lldiv@quotient+2)^0,f,c
  8073   0045A8  361A               	rlcf	(___lldiv@quotient+3)^0,f,c
  8074   0045AA  5013               	movf	___lldiv@divisor^0,w,c
  8075   0045AC  5C0F               	subwf	___lldiv@dividend^0,w,c
  8076   0045AE  5014               	movf	(___lldiv@divisor+1)^0,w,c
  8077   0045B0  5810               	subwfb	(___lldiv@dividend+1)^0,w,c
  8078   0045B2  5015               	movf	(___lldiv@divisor+2)^0,w,c
  8079   0045B4  5811               	subwfb	(___lldiv@dividend+2)^0,w,c
  8080   0045B6  5016               	movf	(___lldiv@divisor+3)^0,w,c
  8081   0045B8  5812               	subwfb	(___lldiv@dividend+3)^0,w,c
  8082   0045BA  A0D8               	btfss	status,0,c
  8083   0045BC  EFE2  F022         	goto	u4091
  8084   0045C0  EFE4  F022         	goto	u4090
  8085   0045C4                     u4091:
  8086   0045C4  EFED  F022         	goto	l3840
  8087   0045C8                     u4090:
  8088   0045C8  5013               	movf	___lldiv@divisor^0,w,c
  8089   0045CA  5E0F               	subwf	___lldiv@dividend^0,f,c
  8090   0045CC  5014               	movf	(___lldiv@divisor+1)^0,w,c
  8091   0045CE  5A10               	subwfb	(___lldiv@dividend+1)^0,f,c
  8092   0045D0  5015               	movf	(___lldiv@divisor+2)^0,w,c
  8093   0045D2  5A11               	subwfb	(___lldiv@dividend+2)^0,f,c
  8094   0045D4  5016               	movf	(___lldiv@divisor+3)^0,w,c
  8095   0045D6  5A12               	subwfb	(___lldiv@dividend+3)^0,f,c
  8096   0045D8  8017               	bsf	___lldiv@quotient^0,0,c
  8097   0045DA                     l3840:
  8098   0045DA  90D8               	bcf	status,0,c
  8099   0045DC  3216               	rrcf	(___lldiv@divisor+3)^0,f,c
  8100   0045DE  3215               	rrcf	(___lldiv@divisor+2)^0,f,c
  8101   0045E0  3214               	rrcf	(___lldiv@divisor+1)^0,f,c
  8102   0045E2  3213               	rrcf	___lldiv@divisor^0,f,c
  8103   0045E4  2E1B               	decfsz	___lldiv@counter^0,f,c
  8104   0045E6  EFD0  F022         	goto	l3832
  8105   0045EA                     l268:
  8106   0045EA  C017  F00F         	movff	___lldiv@quotient,?___lldiv
  8107   0045EE  C018  F010         	movff	___lldiv@quotient+1,?___lldiv+1
  8108   0045F2  C019  F011         	movff	___lldiv@quotient+2,?___lldiv+2
  8109   0045F6  C01A  F012         	movff	___lldiv@quotient+3,?___lldiv+3
  8110   0045FA  0012               	return		;funcret
  8111   0045FC                     __end_of___lldiv:
  8112                           	callstack 0
  8113                           
  8114 ;; *************** function _TMR2_StartTimer *****************
  8115 ;; Defined at:
  8116 ;;		line 55 in file "./PWM.h"
  8117 ;; Parameters:    Size  Location     Type
  8118 ;;		None
  8119 ;; Auto vars:     Size  Location     Type
  8120 ;;		None
  8121 ;; Return value:  Size  Location     Type
  8122 ;;                  1    wreg      void 
  8123 ;; Registers used:
  8124 ;;		cstack
  8125 ;; Tracked objects:
  8126 ;;		On entry : 0/0
  8127 ;;		On exit  : 0/0
  8128 ;;		Unchanged: 0/0
  8129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8134 ;;Total ram usage:        0 bytes
  8135 ;; Hardware stack levels used: 1
  8136 ;; Hardware stack levels required when called: 2
  8137 ;; This function calls:
  8138 ;;		_TMR2_Start
  8139 ;; This function is called by:
  8140 ;;		_PWM
  8141 ;; This function uses a non-reentrant model
  8142 ;;
  8143                           
  8144                           	psect	text30
  8145   004C58                     __ptext30:
  8146                           	callstack 0
  8147   004C58                     _TMR2_StartTimer:
  8148                           	callstack 27
  8149   004C58                     
  8150                           ;./PWM.h: 57:     TMR2_Start();
  8151   004C58  EC2F  F026         	call	_TMR2_Start	;wreg free
  8152   004C5C  0012               	return		;funcret
  8153   004C5E                     __end_of_TMR2_StartTimer:
  8154                           	callstack 0
  8155                           
  8156 ;; *************** function _TMR2_Start *****************
  8157 ;; Defined at:
  8158 ;;		line 49 in file "./PWM.h"
  8159 ;; Parameters:    Size  Location     Type
  8160 ;;		None
  8161 ;; Auto vars:     Size  Location     Type
  8162 ;;		None
  8163 ;; Return value:  Size  Location     Type
  8164 ;;                  1    wreg      void 
  8165 ;; Registers used:
  8166 ;;		None
  8167 ;; Tracked objects:
  8168 ;;		On entry : 0/0
  8169 ;;		On exit  : 0/0
  8170 ;;		Unchanged: 0/0
  8171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8176 ;;Total ram usage:        0 bytes
  8177 ;; Hardware stack levels used: 1
  8178 ;; Hardware stack levels required when called: 1
  8179 ;; This function calls:
  8180 ;;		Nothing
  8181 ;; This function is called by:
  8182 ;;		_TMR2_StartTimer
  8183 ;; This function uses a non-reentrant model
  8184 ;;
  8185                           
  8186                           	psect	text31
  8187   004C5E                     __ptext31:
  8188                           	callstack 0
  8189   004C5E                     _TMR2_Start:
  8190                           	callstack 27
  8191   004C5E                     
  8192                           ;./PWM.h: 52:     T2CONbits.TMR2ON = 1;
  8193   004C5E  8EAC               	bsf	172,7,c	;volatile
  8194   004C60  0012               	return		;funcret
  8195   004C62                     __end_of_TMR2_Start:
  8196                           	callstack 0
  8197                           
  8198 ;; *************** function _TMR2_Initialize *****************
  8199 ;; Defined at:
  8200 ;;		line 11 in file "./PWM.h"
  8201 ;; Parameters:    Size  Location     Type
  8202 ;;		None
  8203 ;; Auto vars:     Size  Location     Type
  8204 ;;		None
  8205 ;; Return value:  Size  Location     Type
  8206 ;;                  1    wreg      void 
  8207 ;; Registers used:
  8208 ;;		wreg, status,2
  8209 ;; Tracked objects:
  8210 ;;		On entry : 0/0
  8211 ;;		On exit  : 0/0
  8212 ;;		Unchanged: 0/0
  8213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8218 ;;Total ram usage:        0 bytes
  8219 ;; Hardware stack levels used: 1
  8220 ;; Hardware stack levels required when called: 1
  8221 ;; This function calls:
  8222 ;;		Nothing
  8223 ;; This function is called by:
  8224 ;;		_PWM
  8225 ;; This function uses a non-reentrant model
  8226 ;;
  8227                           
  8228                           	psect	text32
  8229   004BFC                     __ptext32:
  8230                           	callstack 0
  8231   004BFC                     _TMR2_Initialize:
  8232                           	callstack 28
  8233   004BFC                     
  8234                           ;./PWM.h: 16:     T2CLKCON = 0x01;
  8235   004BFC  0E01               	movlw	1
  8236   004BFE  6EAE               	movwf	174,c	;volatile
  8237   004C00                     
  8238                           ;./PWM.h: 19:     T2HLT = 0x00;
  8239   004C00  6AAD               	clrf	173,c	;volatile
  8240   004C02                     
  8241                           ;./PWM.h: 22:     T2RST = 0x00;
  8242   004C02  6AAF               	clrf	175,c	;volatile
  8243   004C04                     
  8244                           ;./PWM.h: 25:     T2PR = 0xFF;
  8245   004C04  68AB               	setf	171,c	;volatile
  8246   004C06                     
  8247                           ;./PWM.h: 28:     T2TMR = 0x00;
  8248   004C06  6AAA               	clrf	170,c	;volatile
  8249   004C08                     
  8250                           ;./PWM.h: 31:     PIR4bits.TMR2IF = 0;
  8251   004C08  0139               	movlb	57	; () banked
  8252   004C0A  95A4               	bcf	164,2,b	;volatile
  8253                           
  8254                           ;./PWM.h: 34:     T2CON = 0xB0;
  8255   004C0C  0EB0               	movlw	176
  8256   004C0E  6EAC               	movwf	172,c	;volatile
  8257   004C10                     
  8258                           ; BSR set to: 57
  8259   004C10  0012               	return		;funcret
  8260   004C12                     __end_of_TMR2_Initialize:
  8261                           	callstack 0
  8262                           
  8263 ;; *************** function _PWM_Output_D8_Enable *****************
  8264 ;; Defined at:
  8265 ;;		line 123 in file "./PWM.h"
  8266 ;; Parameters:    Size  Location     Type
  8267 ;;		None
  8268 ;; Auto vars:     Size  Location     Type
  8269 ;;		None
  8270 ;; Return value:  Size  Location     Type
  8271 ;;                  1    wreg      void 
  8272 ;; Registers used:
  8273 ;;		wreg, status,2
  8274 ;; Tracked objects:
  8275 ;;		On entry : 0/0
  8276 ;;		On exit  : 0/0
  8277 ;;		Unchanged: 0/0
  8278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8283 ;;Total ram usage:        0 bytes
  8284 ;; Hardware stack levels used: 1
  8285 ;; Hardware stack levels required when called: 1
  8286 ;; This function calls:
  8287 ;;		Nothing
  8288 ;; This function is called by:
  8289 ;;		_PWM
  8290 ;; This function uses a non-reentrant model
  8291 ;;
  8292                           
  8293                           	psect	text33
  8294   004BE0                     __ptext33:
  8295                           	callstack 0
  8296   004BE0                     _PWM_Output_D8_Enable:
  8297                           	callstack 28
  8298   004BE0                     
  8299                           ;./PWM.h: 124:     PPSLOCK = 0x55;
  8300   004BE0  0E55               	movlw	85
  8301   004BE2  013A               	movlb	58	; () banked
  8302   004BE4  6FBF               	movwf	191,b	;volsfr
  8303                           
  8304                           ;./PWM.h: 125:     PPSLOCK = 0xAA;
  8305   004BE6  0EAA               	movlw	170
  8306   004BE8  6FBF               	movwf	191,b	;volsfr
  8307   004BEA                     
  8308                           ; BSR set to: 58
  8309                           ;./PWM.h: 126:     PPSLOCKbits.PPSLOCKED = 0x00;
  8310   004BEA  91BF               	bcf	191,0,b	;volsfr
  8311                           
  8312                           ;./PWM.h: 129:     RB3PPS = 0x0A;
  8313   004BEC  0E0A               	movlw	10
  8314   004BEE  6F0B               	movwf	11,b	;volatile
  8315                           
  8316                           ;./PWM.h: 131:     PPSLOCK = 0x55;
  8317   004BF0  0E55               	movlw	85
  8318   004BF2  6FBF               	movwf	191,b	;volsfr
  8319                           
  8320                           ;./PWM.h: 132:     PPSLOCK = 0xAA;
  8321   004BF4  0EAA               	movlw	170
  8322   004BF6  6FBF               	movwf	191,b	;volsfr
  8323   004BF8                     
  8324                           ; BSR set to: 58
  8325                           ;./PWM.h: 133:     PPSLOCKbits.PPSLOCKED = 0x01;
  8326   004BF8  81BF               	bsf	191,0,b	;volsfr
  8327   004BFA                     
  8328                           ; BSR set to: 58
  8329   004BFA  0012               	return		;funcret
  8330   004BFC                     __end_of_PWM_Output_D8_Enable:
  8331                           	callstack 0
  8332                           
  8333 ;; *************** function _PWM2_OutputStatusGet *****************
  8334 ;; Defined at:
  8335 ;;		line 186 in file "./PWM.h"
  8336 ;; Parameters:    Size  Location     Type
  8337 ;;		None
  8338 ;; Auto vars:     Size  Location     Type
  8339 ;;		None
  8340 ;; Return value:  Size  Location     Type
  8341 ;;                  1    wreg      _Bool 
  8342 ;; Registers used:
  8343 ;;		wreg
  8344 ;; Tracked objects:
  8345 ;;		On entry : 0/0
  8346 ;;		On exit  : 0/0
  8347 ;;		Unchanged: 0/0
  8348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8353 ;;Total ram usage:        0 bytes
  8354 ;; Hardware stack levels used: 1
  8355 ;; Hardware stack levels required when called: 1
  8356 ;; This function calls:
  8357 ;;		Nothing
  8358 ;; This function is called by:
  8359 ;;		_PWM
  8360 ;; This function uses a non-reentrant model
  8361 ;;
  8362                           
  8363                           	psect	text34
  8364   004C3C                     __ptext34:
  8365                           	callstack 0
  8366   004C3C                     _PWM2_OutputStatusGet:
  8367                           	callstack 28
  8368   004C3C                     
  8369                           ;./PWM.h: 189:     return(CCP2CONbits.OUT);
  8370   004C3C  BA7A               	btfsc	122,5,c	;volatile
  8371   004C3E  EF23  F026         	goto	u4041
  8372   004C42  EF26  F026         	goto	u4040
  8373   004C46                     u4041:
  8374   004C46  0E01               	movlw	1
  8375   004C48  EF27  F026         	goto	u4046
  8376   004C4C                     u4040:
  8377   004C4C  0E00               	movlw	0
  8378   004C4E                     u4046:
  8379   004C4E  0012               	return		;funcret
  8380   004C50                     __end_of_PWM2_OutputStatusGet:
  8381                           	callstack 0
  8382                           
  8383 ;; *************** function _PWM2_LoadDutyValue *****************
  8384 ;; Defined at:
  8385 ;;		line 168 in file "./PWM.h"
  8386 ;; Parameters:    Size  Location     Type
  8387 ;;  dutyValue       2    2[COMRAM] unsigned short 
  8388 ;; Auto vars:     Size  Location     Type
  8389 ;;		None
  8390 ;; Return value:  Size  Location     Type
  8391 ;;                  1    wreg      void 
  8392 ;; Registers used:
  8393 ;;		wreg, status,2, status,0
  8394 ;; Tracked objects:
  8395 ;;		On entry : 0/0
  8396 ;;		On exit  : 0/0
  8397 ;;		Unchanged: 0/0
  8398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8399 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8402 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8403 ;;Total ram usage:        2 bytes
  8404 ;; Hardware stack levels used: 1
  8405 ;; Hardware stack levels required when called: 1
  8406 ;; This function calls:
  8407 ;;		Nothing
  8408 ;; This function is called by:
  8409 ;;		_PWM
  8410 ;; This function uses a non-reentrant model
  8411 ;;
  8412                           
  8413                           	psect	text35
  8414   004B18                     __ptext35:
  8415                           	callstack 0
  8416   004B18                     _PWM2_LoadDutyValue:
  8417                           	callstack 28
  8418   004B18                     
  8419                           ;./PWM.h: 168: void PWM2_LoadDutyValue(uint16_t dutyValue);./PWM.h: 169: {;./PWM.h: 170:
      +                               dutyValue &= 0x03FF;
  8420   004B18  0EFF               	movlw	255
  8421   004B1A  1603               	andwf	PWM2_LoadDutyValue@dutyValue^0,f,c
  8422   004B1C  0E03               	movlw	3
  8423   004B1E  1604               	andwf	(PWM2_LoadDutyValue@dutyValue+1)^0,f,c
  8424   004B20                     
  8425                           ;./PWM.h: 173:     if(CCP2CONbits.FMT)
  8426   004B20  A87A               	btfss	122,4,c	;volatile
  8427   004B22  EF95  F025         	goto	u4021
  8428   004B26  EF97  F025         	goto	u4020
  8429   004B2A                     u4021:
  8430   004B2A  EF9E  F025         	goto	l3788
  8431   004B2E                     u4020:
  8432   004B2E                     
  8433                           ;./PWM.h: 174:     {;./PWM.h: 175:         dutyValue <<= 6;
  8434   004B2E  0E06               	movlw	6
  8435   004B30                     u4035:
  8436   004B30  90D8               	bcf	status,0,c
  8437   004B32  3603               	rlcf	PWM2_LoadDutyValue@dutyValue^0,f,c
  8438   004B34  3604               	rlcf	(PWM2_LoadDutyValue@dutyValue+1)^0,f,c
  8439   004B36  2EE8               	decfsz	wreg,f,c
  8440   004B38  EF98  F025         	goto	u4035
  8441   004B3C                     l3788:
  8442                           
  8443                           ;./PWM.h: 176:         CCPR2H = dutyValue >> 8;
  8444   004B3C  5004               	movf	(PWM2_LoadDutyValue@dutyValue+1)^0,w,c
  8445   004B3E  6E79               	movwf	121,c	;volatile
  8446   004B40                     
  8447                           ;./PWM.h: 177:         CCPR2L = dutyValue;
  8448   004B40  0060  F00F  FF78   	movff	PWM2_LoadDutyValue@dutyValue,16248	;volatile
  8449   004B46  0012               	return		;funcret
  8450   004B48                     __end_of_PWM2_LoadDutyValue:
  8451                           	callstack 0
  8452                           
  8453 ;; *************** function _PWM2_Initialize *****************
  8454 ;; Defined at:
  8455 ;;		line 151 in file "./PWM.h"
  8456 ;; Parameters:    Size  Location     Type
  8457 ;;		None
  8458 ;; Auto vars:     Size  Location     Type
  8459 ;;		None
  8460 ;; Return value:  Size  Location     Type
  8461 ;;                  1    wreg      void 
  8462 ;; Registers used:
  8463 ;;		wreg, status,2
  8464 ;; Tracked objects:
  8465 ;;		On entry : 0/0
  8466 ;;		On exit  : 0/0
  8467 ;;		Unchanged: 0/0
  8468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8473 ;;Total ram usage:        0 bytes
  8474 ;; Hardware stack levels used: 1
  8475 ;; Hardware stack levels required when called: 1
  8476 ;; This function calls:
  8477 ;;		Nothing
  8478 ;; This function is called by:
  8479 ;;		_PWM
  8480 ;; This function uses a non-reentrant model
  8481 ;;
  8482                           
  8483                           	psect	text36
  8484   004C12                     __ptext36:
  8485                           	callstack 0
  8486   004C12                     _PWM2_Initialize:
  8487                           	callstack 28
  8488   004C12                     
  8489                           ;./PWM.h: 156:  CCP2CON = 0x8C;
  8490   004C12  0E8C               	movlw	140
  8491   004C14  6E7A               	movwf	122,c	;volatile
  8492   004C16                     
  8493                           ;./PWM.h: 159:  CCPR2H = 0x0;
  8494   004C16  6A79               	clrf	121,c	;volatile
  8495                           
  8496                           ;./PWM.h: 162:  CCPR2L = 0x0f;
  8497   004C18  0E0F               	movlw	15
  8498   004C1A  6E78               	movwf	120,c	;volatile
  8499                           
  8500                           ;./PWM.h: 165:  CCPTMRS0bits.C2TSEL = 0x1;
  8501   004C1C  013F               	movlb	63	; () banked
  8502   004C1E  515E               	movf	94,w,b	;volatile
  8503   004C20  0BF3               	andlw	-13
  8504   004C22  0904               	iorlw	4
  8505   004C24  6F5E               	movwf	94,b	;volatile
  8506   004C26                     
  8507                           ; BSR set to: 63
  8508   004C26  0012               	return		;funcret
  8509   004C28                     __end_of_PWM2_Initialize:
  8510                           	callstack 0
  8511                           
  8512 ;; *************** function _LCD_String_xy *****************
  8513 ;; Defined at:
  8514 ;;		line 80 in file "./LCD.h"
  8515 ;; Parameters:    Size  Location     Type
  8516 ;;  row             1    wreg     unsigned char 
  8517 ;;  pos             1   11[COMRAM] unsigned char 
  8518 ;;  msg             2   12[COMRAM] PTR const unsigned char 
  8519 ;;		 -> PWM@percent(15), readADC@buffer(12), STR_2(15), STR_1(6), 
  8520 ;; Auto vars:     Size  Location     Type
  8521 ;;  row             1   14[COMRAM] unsigned char 
  8522 ;;  location        1   15[COMRAM] unsigned char 
  8523 ;; Return value:  Size  Location     Type
  8524 ;;                  1    wreg      void 
  8525 ;; Registers used:
  8526 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8527 ;; Tracked objects:
  8528 ;;		On entry : 0/0
  8529 ;;		On exit  : 0/0
  8530 ;;		Unchanged: 0/0
  8531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8532 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8533 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8535 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8536 ;;Total ram usage:        5 bytes
  8537 ;; Hardware stack levels used: 1
  8538 ;; Hardware stack levels required when called: 4
  8539 ;; This function calls:
  8540 ;;		_LCD_Command
  8541 ;;		_LCD_String
  8542 ;; This function is called by:
  8543 ;;		_main
  8544 ;;		_PWM
  8545 ;;		_readADC
  8546 ;; This function uses a non-reentrant model
  8547 ;;
  8548                           
  8549                           	psect	text37
  8550   004A36                     __ptext37:
  8551                           	callstack 0
  8552   004A36                     _LCD_String_xy:
  8553                           	callstack 25
  8554                           
  8555                           ; BSR set to: 63
  8556                           ;incstack = 0
  8557                           ;LCD_String_xy@row stored from wreg
  8558   004A36  6E0F               	movwf	LCD_String_xy@row^0,c
  8559   004A38                     
  8560                           ;./LCD.h: 83:     if(row<=1)
  8561   004A38  0E02               	movlw	2
  8562   004A3A  600F               	cpfslt	LCD_String_xy@row^0,c
  8563   004A3C  EF22  F025         	goto	u4011
  8564   004A40  EF24  F025         	goto	u4010
  8565   004A44                     u4011:
  8566   004A44  EF2D  F025         	goto	l3752
  8567   004A48                     u4010:
  8568   004A48                     
  8569                           ;./LCD.h: 84:     {;./LCD.h: 85:         location=(0x80) | ((pos) & 0x0f);
  8570   004A48  500C               	movf	LCD_String_xy@pos^0,w,c
  8571   004A4A  0B0F               	andlw	15
  8572   004A4C  0980               	iorlw	128
  8573   004A4E  6E10               	movwf	LCD_String_xy@location^0,c
  8574   004A50                     
  8575                           ;./LCD.h: 86:         LCD_Command(location);
  8576   004A50  5010               	movf	LCD_String_xy@location^0,w,c
  8577   004A52  ECCE  F025         	call	_LCD_Command
  8578                           
  8579                           ;./LCD.h: 87:     }
  8580   004A56  EF34  F025         	goto	l3756
  8581   004A5A                     l3752:
  8582                           
  8583                           ;./LCD.h: 89:     {;./LCD.h: 90:         location=(0xC0) | ((pos) & 0x0f);
  8584   004A5A  500C               	movf	LCD_String_xy@pos^0,w,c
  8585   004A5C  0B0F               	andlw	15
  8586   004A5E  09C0               	iorlw	192
  8587   004A60  6E10               	movwf	LCD_String_xy@location^0,c
  8588   004A62                     
  8589                           ;./LCD.h: 91:         LCD_Command(location);
  8590   004A62  5010               	movf	LCD_String_xy@location^0,w,c
  8591   004A64  ECCE  F025         	call	_LCD_Command
  8592   004A68                     l3756:
  8593                           
  8594                           ;./LCD.h: 93:     LCD_String(msg);
  8595   004A68  C00D  F00A         	movff	LCD_String_xy@msg,LCD_String@msg
  8596   004A6C  C00E  F00B         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  8597   004A70  ECFE  F022         	call	_LCD_String	;wreg free
  8598   004A74  0012               	return		;funcret
  8599   004A76                     __end_of_LCD_String_xy:
  8600                           	callstack 0
  8601                           
  8602 ;; *************** function _LCD_String *****************
  8603 ;; Defined at:
  8604 ;;		line 71 in file "./LCD.h"
  8605 ;; Parameters:    Size  Location     Type
  8606 ;;  msg             2    9[COMRAM] PTR const unsigned char 
  8607 ;;		 -> PWM@percent(15), readADC@buffer(12), STR_2(15), STR_1(6), 
  8608 ;; Auto vars:     Size  Location     Type
  8609 ;;		None
  8610 ;; Return value:  Size  Location     Type
  8611 ;;                  1    wreg      void 
  8612 ;; Registers used:
  8613 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8614 ;; Tracked objects:
  8615 ;;		On entry : 0/0
  8616 ;;		On exit  : 0/0
  8617 ;;		Unchanged: 0/0
  8618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8619 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8622 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8623 ;;Total ram usage:        2 bytes
  8624 ;; Hardware stack levels used: 1
  8625 ;; Hardware stack levels required when called: 3
  8626 ;; This function calls:
  8627 ;;		_LCD_Char
  8628 ;; This function is called by:
  8629 ;;		_LCD_String_xy
  8630 ;; This function uses a non-reentrant model
  8631 ;;
  8632                           
  8633                           	psect	text38
  8634   0045FC                     __ptext38:
  8635                           	callstack 0
  8636   0045FC                     _LCD_String:
  8637                           	callstack 25
  8638   0045FC                     
  8639                           ;./LCD.h: 71: void LCD_String(const char *msg);./LCD.h: 72: {;./LCD.h: 73:     while((*m
      +                          sg)!=0)
  8640   0045FC  EF19  F023         	goto	l3728
  8641   004600                     l3724:
  8642                           
  8643                           ;./LCD.h: 74:     {;./LCD.h: 75:       LCD_Char(*msg);
  8644   004600  0060  F02B  FFF6   	movff	LCD_String@msg,tblptrl
  8645   004606  0060  F02F  FFF7   	movff	LCD_String@msg+1,tblptrh
  8646   00460C  0E00               	movlw	low (__smallconst shr (0+16))
  8647   00460E  6EF8               	movwf	tblptru,c
  8648   004610  0E1F               	movlw	(high __ramtop+-1)
  8649   004612  64F7               	cpfsgt	tblptrh,c
  8650   004614  D003               	bra	u3977
  8651   004616  0008               	tblrd		*
  8652   004618  50F5               	movf	tablat,w,c
  8653   00461A  D007               	bra	u3970
  8654   00461C                     u3977:
  8655   00461C  006F FFDB FFE9     	movff	tblptrl,fsr0l
  8656   004622  006F FFDF FFEA     	movff	tblptrh,fsr0h
  8657   004628  50EF               	movf	indf0,w,c
  8658   00462A                     u3970:
  8659   00462A  ECE1  F025         	call	_LCD_Char
  8660   00462E                     
  8661                           ;./LCD.h: 76:       msg++;
  8662   00462E  4A0A               	infsnz	LCD_String@msg^0,f,c
  8663   004630  2A0B               	incf	(LCD_String@msg+1)^0,f,c
  8664   004632                     l3728:
  8665                           
  8666                           ;./LCD.h: 73:     while((*msg)!=0)
  8667   004632  0060  F02B  FFF6   	movff	LCD_String@msg,tblptrl
  8668   004638  0060  F02F  FFF7   	movff	LCD_String@msg+1,tblptrh
  8669   00463E  0E00               	movlw	low (__smallconst shr (0+16))
  8670   004640  6EF8               	movwf	tblptru,c
  8671   004642  0E1F               	movlw	(high __ramtop+-1)
  8672   004644  64F7               	cpfsgt	tblptrh,c
  8673   004646  D003               	bra	u3987
  8674   004648  0008               	tblrd		*
  8675   00464A  50F5               	movf	tablat,w,c
  8676   00464C  D007               	bra	u3980
  8677   00464E                     u3987:
  8678   00464E  006F FFDB FFE9     	movff	tblptrl,fsr0l
  8679   004654  006F FFDF FFEA     	movff	tblptrh,fsr0h
  8680   00465A  50EF               	movf	indf0,w,c
  8681   00465C                     u3980:
  8682   00465C  0900               	iorlw	0
  8683   00465E  A4D8               	btfss	status,2,c
  8684   004660  EF34  F023         	goto	u3991
  8685   004664  EF36  F023         	goto	u3990
  8686   004668                     u3991:
  8687   004668  EF00  F023         	goto	l3724
  8688   00466C                     u3990:
  8689   00466C  0012               	return		;funcret
  8690   00466E                     __end_of_LCD_String:
  8691                           	callstack 0
  8692                           
  8693 ;; *************** function _LCD_Char *****************
  8694 ;; Defined at:
  8695 ;;		line 60 in file "./LCD.h"
  8696 ;; Parameters:    Size  Location     Type
  8697 ;;  dat             1    wreg     unsigned char 
  8698 ;; Auto vars:     Size  Location     Type
  8699 ;;  dat             1    8[COMRAM] unsigned char 
  8700 ;; Return value:  Size  Location     Type
  8701 ;;                  1    wreg      void 
  8702 ;; Registers used:
  8703 ;;		wreg, status,2, status,0, cstack
  8704 ;; Tracked objects:
  8705 ;;		On entry : 0/0
  8706 ;;		On exit  : 0/0
  8707 ;;		Unchanged: 0/0
  8708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8710 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8712 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8713 ;;Total ram usage:        1 bytes
  8714 ;; Hardware stack levels used: 1
  8715 ;; Hardware stack levels required when called: 2
  8716 ;; This function calls:
  8717 ;;		_MSdelay
  8718 ;; This function is called by:
  8719 ;;		_LCD_String
  8720 ;; This function uses a non-reentrant model
  8721 ;;
  8722                           
  8723                           	psect	text39
  8724   004BC2                     __ptext39:
  8725                           	callstack 0
  8726   004BC2                     _LCD_Char:
  8727                           	callstack 25
  8728                           
  8729                           ;incstack = 0
  8730                           ;LCD_Char@dat stored from wreg
  8731   004BC2  6E09               	movwf	LCD_Char@dat^0,c
  8732   004BC4                     
  8733                           ;./LCD.h: 60: void LCD_Char(char dat);./LCD.h: 61: {;./LCD.h: 62:     LATD= dat;
  8734   004BC4  0060  F027  FFBD   	movff	LCD_Char@dat,16317	;volatile
  8735   004BCA                     
  8736                           ;./LCD.h: 63:     LATC3 = 1;
  8737   004BCA  86BC               	bsf	16316,3,c	;volatile
  8738   004BCC                     
  8739                           ;./LCD.h: 64:     LATC4=1;
  8740   004BCC  88BC               	bsf	16316,4,c	;volatile
  8741   004BCE                     
  8742                           ;./LCD.h: 65:     __nop();
  8743   004BCE  0000               	nop	
  8744   004BD0                     
  8745                           ;./LCD.h: 66:     LATC4=0;
  8746   004BD0  98BC               	bcf	16316,4,c	;volatile
  8747   004BD2                     
  8748                           ;./LCD.h: 67:     MSdelay(1);
  8749   004BD2  0E00               	movlw	0
  8750   004BD4  6E04               	movwf	(MSdelay@val+1)^0,c
  8751   004BD6  0E01               	movlw	1
  8752   004BD8  6E03               	movwf	MSdelay@val^0,c
  8753   004BDA  EC4B  F024         	call	_MSdelay	;wreg free
  8754   004BDE  0012               	return		;funcret
  8755   004BE0                     __end_of_LCD_Char:
  8756                           	callstack 0
  8757                           
  8758 ;; *************** function _LCD_Clear *****************
  8759 ;; Defined at:
  8760 ;;		line 44 in file "./LCD.h"
  8761 ;; Parameters:    Size  Location     Type
  8762 ;;		None
  8763 ;; Auto vars:     Size  Location     Type
  8764 ;;		None
  8765 ;; Return value:  Size  Location     Type
  8766 ;;                  1    wreg      void 
  8767 ;; Registers used:
  8768 ;;		wreg, status,2, status,0, cstack
  8769 ;; Tracked objects:
  8770 ;;		On entry : 0/0
  8771 ;;		On exit  : 0/0
  8772 ;;		Unchanged: 0/0
  8773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8778 ;;Total ram usage:        0 bytes
  8779 ;; Hardware stack levels used: 1
  8780 ;; Hardware stack levels required when called: 3
  8781 ;; This function calls:
  8782 ;;		_LCD_Command
  8783 ;; This function is called by:
  8784 ;;		_main
  8785 ;;		_PWM
  8786 ;; This function uses a non-reentrant model
  8787 ;;
  8788                           
  8789                           	psect	text40
  8790   004C50                     __ptext40:
  8791                           	callstack 0
  8792   004C50                     _LCD_Clear:
  8793                           	callstack 26
  8794   004C50                     
  8795                           ;./LCD.h: 46:         LCD_Command(0x01);
  8796   004C50  0E01               	movlw	1
  8797   004C52  ECCE  F025         	call	_LCD_Command
  8798   004C56  0012               	return		;funcret
  8799   004C58                     __end_of_LCD_Clear:
  8800                           	callstack 0
  8801                           
  8802 ;; *************** function _LCD_Init *****************
  8803 ;; Defined at:
  8804 ;;		line 33 in file "./LCD.h"
  8805 ;; Parameters:    Size  Location     Type
  8806 ;;		None
  8807 ;; Auto vars:     Size  Location     Type
  8808 ;;		None
  8809 ;; Return value:  Size  Location     Type
  8810 ;;                  1    wreg      void 
  8811 ;; Registers used:
  8812 ;;		wreg, status,2, status,0, cstack
  8813 ;; Tracked objects:
  8814 ;;		On entry : 0/0
  8815 ;;		On exit  : 0/0
  8816 ;;		Unchanged: 0/0
  8817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8822 ;;Total ram usage:        0 bytes
  8823 ;; Hardware stack levels used: 1
  8824 ;; Hardware stack levels required when called: 3
  8825 ;; This function calls:
  8826 ;;		_LCD_Command
  8827 ;;		_MSdelay
  8828 ;; This function is called by:
  8829 ;;		_main
  8830 ;; This function uses a non-reentrant model
  8831 ;;
  8832                           
  8833                           	psect	text41
  8834   004B72                     __ptext41:
  8835                           	callstack 0
  8836   004B72                     _LCD_Init:
  8837                           	callstack 27
  8838   004B72                     
  8839                           ;./LCD.h: 35:     MSdelay(15);
  8840   004B72  0E00               	movlw	0
  8841   004B74  6E04               	movwf	(MSdelay@val+1)^0,c
  8842   004B76  0E0F               	movlw	15
  8843   004B78  6E03               	movwf	MSdelay@val^0,c
  8844   004B7A  EC4B  F024         	call	_MSdelay	;wreg free
  8845   004B7E                     
  8846                           ;./LCD.h: 36:     TRISD = 0x00;
  8847   004B7E  6AC5               	clrf	197,c	;volatile
  8848   004B80                     
  8849                           ;./LCD.h: 37:     TRISC = 0x00;
  8850   004B80  6AC4               	clrf	196,c	;volatile
  8851                           
  8852                           ;./LCD.h: 38:     LCD_Command(0x01);
  8853   004B82  0E01               	movlw	1
  8854   004B84  ECCE  F025         	call	_LCD_Command
  8855                           
  8856                           ;./LCD.h: 39:     LCD_Command(0x38);
  8857   004B88  0E38               	movlw	56
  8858   004B8A  ECCE  F025         	call	_LCD_Command
  8859                           
  8860                           ;./LCD.h: 40:     LCD_Command(0x0c);
  8861   004B8E  0E0C               	movlw	12
  8862   004B90  ECCE  F025         	call	_LCD_Command
  8863                           
  8864                           ;./LCD.h: 41:     LCD_Command(0x06);
  8865   004B94  0E06               	movlw	6
  8866   004B96  ECCE  F025         	call	_LCD_Command
  8867   004B9A  0012               	return		;funcret
  8868   004B9C                     __end_of_LCD_Init:
  8869                           	callstack 0
  8870                           
  8871 ;; *************** function _LCD_Command *****************
  8872 ;; Defined at:
  8873 ;;		line 49 in file "./LCD.h"
  8874 ;; Parameters:    Size  Location     Type
  8875 ;;  cmd             1    wreg     unsigned char 
  8876 ;; Auto vars:     Size  Location     Type
  8877 ;;  cmd             1    8[COMRAM] unsigned char 
  8878 ;; Return value:  Size  Location     Type
  8879 ;;                  1    wreg      void 
  8880 ;; Registers used:
  8881 ;;		wreg, status,2, status,0, cstack
  8882 ;; Tracked objects:
  8883 ;;		On entry : 0/0
  8884 ;;		On exit  : 0/0
  8885 ;;		Unchanged: 0/0
  8886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8888 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8890 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8891 ;;Total ram usage:        1 bytes
  8892 ;; Hardware stack levels used: 1
  8893 ;; Hardware stack levels required when called: 2
  8894 ;; This function calls:
  8895 ;;		_MSdelay
  8896 ;; This function is called by:
  8897 ;;		_LCD_Init
  8898 ;;		_LCD_Clear
  8899 ;;		_LCD_String_xy
  8900 ;; This function uses a non-reentrant model
  8901 ;;
  8902                           
  8903                           	psect	text42
  8904   004B9C                     __ptext42:
  8905                           	callstack 0
  8906   004B9C                     _LCD_Command:
  8907                           	callstack 26
  8908                           
  8909                           ;incstack = 0
  8910                           ;LCD_Command@cmd stored from wreg
  8911   004B9C  6E09               	movwf	LCD_Command@cmd^0,c
  8912   004B9E                     
  8913                           ;./LCD.h: 49: void LCD_Command(char cmd );./LCD.h: 50: {;./LCD.h: 51:     LATD= cmd;
  8914   004B9E  0060  F027  FFBD   	movff	LCD_Command@cmd,16317	;volatile
  8915   004BA4                     
  8916                           ;./LCD.h: 52:     _delay((unsigned long)((1)*(4000000/4000.0)));
  8917   004BA4  0EC8               	movlw	200
  8918   004BA6                     u4167:
  8919   004BA6  D000               	nop2	
  8920   004BA8  2EE8               	decfsz	wreg,f,c
  8921   004BAA  D7FD               	bra	u4167
  8922   004BAC                     
  8923                           ;./LCD.h: 53:     LATC3 = 0;
  8924   004BAC  96BC               	bcf	16316,3,c	;volatile
  8925   004BAE                     
  8926                           ;./LCD.h: 54:     LATC4 = 1;
  8927   004BAE  88BC               	bsf	16316,4,c	;volatile
  8928   004BB0                     
  8929                           ;./LCD.h: 55:     __nop();
  8930   004BB0  0000               	nop	
  8931   004BB2                     
  8932                           ;./LCD.h: 56:     LATC4 = 0;
  8933   004BB2  98BC               	bcf	16316,4,c	;volatile
  8934   004BB4                     
  8935                           ;./LCD.h: 57:     MSdelay(3);
  8936   004BB4  0E00               	movlw	0
  8937   004BB6  6E04               	movwf	(MSdelay@val+1)^0,c
  8938   004BB8  0E03               	movlw	3
  8939   004BBA  6E03               	movwf	MSdelay@val^0,c
  8940   004BBC  EC4B  F024         	call	_MSdelay	;wreg free
  8941   004BC0  0012               	return		;funcret
  8942   004BC2                     __end_of_LCD_Command:
  8943                           	callstack 0
  8944                           
  8945 ;; *************** function _MSdelay *****************
  8946 ;; Defined at:
  8947 ;;		line 97 in file "./LCD.h"
  8948 ;; Parameters:    Size  Location     Type
  8949 ;;  val             2    2[COMRAM] unsigned int 
  8950 ;; Auto vars:     Size  Location     Type
  8951 ;;  j               2    6[COMRAM] unsigned int 
  8952 ;;  i               2    4[COMRAM] unsigned int 
  8953 ;; Return value:  Size  Location     Type
  8954 ;;                  1    wreg      void 
  8955 ;; Registers used:
  8956 ;;		wreg, status,2, status,0
  8957 ;; Tracked objects:
  8958 ;;		On entry : 0/0
  8959 ;;		On exit  : 0/0
  8960 ;;		Unchanged: 0/0
  8961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8962 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8963 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8965 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8966 ;;Total ram usage:        6 bytes
  8967 ;; Hardware stack levels used: 1
  8968 ;; Hardware stack levels required when called: 1
  8969 ;; This function calls:
  8970 ;;		Nothing
  8971 ;; This function is called by:
  8972 ;;		_LCD_Init
  8973 ;;		_LCD_Command
  8974 ;;		_LCD_Char
  8975 ;; This function uses a non-reentrant model
  8976 ;;
  8977                           
  8978                           	psect	text43
  8979   004896                     __ptext43:
  8980                           	callstack 0
  8981   004896                     _MSdelay:
  8982                           	callstack 25
  8983   004896                     
  8984                           ;./LCD.h: 97: void MSdelay(unsigned int val);./LCD.h: 98: {;./LCD.h: 99:      unsigned i
      +                          nt i,j;;./LCD.h: 100:         for(i=0;i<val;i++)
  8985   004896  0E00               	movlw	0
  8986   004898  6E06               	movwf	(MSdelay@i+1)^0,c
  8987   00489A  0E00               	movlw	0
  8988   00489C  6E05               	movwf	MSdelay@i^0,c
  8989   00489E  EF64  F024         	goto	l3346
  8990   0048A2                     l3334:
  8991                           
  8992                           ;./LCD.h: 101:             for(j=0;j<165;j++);
  8993   0048A2  0E00               	movlw	0
  8994   0048A4  6E08               	movwf	(MSdelay@j+1)^0,c
  8995   0048A6  0E00               	movlw	0
  8996   0048A8  6E07               	movwf	MSdelay@j^0,c
  8997   0048AA                     l3340:
  8998   0048AA  4A07               	infsnz	MSdelay@j^0,f,c
  8999   0048AC  2A08               	incf	(MSdelay@j+1)^0,f,c
  9000   0048AE  5008               	movf	(MSdelay@j+1)^0,w,c
  9001   0048B0  E109               	bnz	u3470
  9002   0048B2  0EA5               	movlw	165
  9003   0048B4  5C07               	subwf	MSdelay@j^0,w,c
  9004   0048B6  A0D8               	btfss	status,0,c
  9005   0048B8  EF60  F024         	goto	u3471
  9006   0048BC  EF62  F024         	goto	u3470
  9007   0048C0                     u3471:
  9008   0048C0  EF55  F024         	goto	l3340
  9009   0048C4                     u3470:
  9010   0048C4  4A05               	infsnz	MSdelay@i^0,f,c
  9011   0048C6  2A06               	incf	(MSdelay@i+1)^0,f,c
  9012   0048C8                     l3346:
  9013   0048C8  5003               	movf	MSdelay@val^0,w,c
  9014   0048CA  5C05               	subwf	MSdelay@i^0,w,c
  9015   0048CC  5004               	movf	(MSdelay@val+1)^0,w,c
  9016   0048CE  5806               	subwfb	(MSdelay@i+1)^0,w,c
  9017   0048D0  A0D8               	btfss	status,0,c
  9018   0048D2  EF6D  F024         	goto	u3481
  9019   0048D6  EF6F  F024         	goto	u3480
  9020   0048DA                     u3481:
  9021   0048DA  EF51  F024         	goto	l3334
  9022   0048DE                     u3480:
  9023   0048DE  0012               	return		;funcret
  9024   0048E0                     __end_of_MSdelay:
  9025                           	callstack 0
  9026                           
  9027 ;; *************** function _Initialize *****************
  9028 ;; Defined at:
  9029 ;;		line 11 in file "./init.h"
  9030 ;; Parameters:    Size  Location     Type
  9031 ;;		None
  9032 ;; Auto vars:     Size  Location     Type
  9033 ;;		None
  9034 ;; Return value:  Size  Location     Type
  9035 ;;                  1    wreg      void 
  9036 ;; Registers used:
  9037 ;;		wreg, status,2
  9038 ;; Tracked objects:
  9039 ;;		On entry : 0/0
  9040 ;;		On exit  : 0/0
  9041 ;;		Unchanged: 0/0
  9042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9047 ;;Total ram usage:        0 bytes
  9048 ;; Hardware stack levels used: 1
  9049 ;; Hardware stack levels required when called: 1
  9050 ;; This function calls:
  9051 ;;		Nothing
  9052 ;; This function is called by:
  9053 ;;		_main
  9054 ;; This function uses a non-reentrant model
  9055 ;;
  9056                           
  9057                           	psect	text44
  9058   00496C                     __ptext44:
  9059                           	callstack 0
  9060   00496C                     _Initialize:
  9061                           	callstack 29
  9062   00496C                     
  9063                           ;./init.h: 12:     TRISD = 0x00;
  9064   00496C  6AC5               	clrf	197,c	;volatile
  9065   00496E                     
  9066                           ;./init.h: 13:     TRISC = 0b11000111;
  9067   00496E  0EC7               	movlw	199
  9068   004970  6EC4               	movwf	196,c	;volatile
  9069   004972                     
  9070                           ;./init.h: 14:     TRISE = 0xFF;
  9071   004972  68C6               	setf	198,c	;volatile
  9072   004974                     
  9073                           ;./init.h: 15:     ANSELE = 0x00;
  9074   004974  013A               	movlb	58	; () banked
  9075   004976  6B80               	clrf	128,b	;volatile
  9076   004978                     
  9077                           ; BSR set to: 58
  9078                           ;./init.h: 16:     ANSELD = 0x00;
  9079   004978  6B70               	clrf	112,b	;volatile
  9080   00497A                     
  9081                           ; BSR set to: 58
  9082                           ;./init.h: 17:     ANSELC = 0x00;
  9083   00497A  6B60               	clrf	96,b	;volatile
  9084   00497C                     
  9085                           ; BSR set to: 58
  9086                           ;./init.h: 19:     TRISAbits.TRISA0 = 1;
  9087   00497C  80C2               	bsf	194,0,c	;volatile
  9088   00497E                     
  9089                           ; BSR set to: 58
  9090                           ;./init.h: 20:     ANSELAbits.ANSELA0 = 1;
  9091   00497E  8140               	bsf	64,0,b	;volatile
  9092                           
  9093                           ;./init.h: 23:     ADCON0bits.FM = 1;
  9094   004980  013E               	movlb	62	; () banked
  9095   004982  51F8               	movf	248,w,b	;volatile
  9096   004984  0BF3               	andlw	-13
  9097   004986  0904               	iorlw	4
  9098   004988  6FF8               	movwf	248,b	;volatile
  9099   00498A                     
  9100                           ; BSR set to: 62
  9101                           ;./init.h: 24:     ADCON0bits.CS = 1;
  9102   00498A  89F8               	bsf	248,4,b	;volatile
  9103   00498C                     
  9104                           ; BSR set to: 62
  9105                           ;./init.h: 25:     ADCLK = 0x00;
  9106   00498C  6BFF               	clrf	255,b	;volatile
  9107   00498E                     
  9108                           ; BSR set to: 62
  9109                           ;./init.h: 26:     ADPCH = 0x00;
  9110   00498E  6BF1               	clrf	241,b	;volatile
  9111   004990                     
  9112                           ; BSR set to: 62
  9113                           ;./init.h: 27:     ADCAP = 0x00;
  9114   004990  6BF5               	clrf	245,b	;volatile
  9115   004992                     
  9116                           ; BSR set to: 62
  9117                           ;./init.h: 28:     ADREF = 0x00;
  9118   004992  6BFD               	clrf	253,b	;volatile
  9119   004994                     
  9120                           ; BSR set to: 62
  9121                           ;./init.h: 29:     ADPREL = 0x00;
  9122   004994  6BF6               	clrf	246,b	;volatile
  9123   004996                     
  9124                           ; BSR set to: 62
  9125                           ;./init.h: 30:     ADPREH = 0x00;
  9126   004996  6BF7               	clrf	247,b	;volatile
  9127   004998                     
  9128                           ; BSR set to: 62
  9129                           ;./init.h: 31:     ADACQL = 0x00;
  9130   004998  6BF3               	clrf	243,b	;volatile
  9131   00499A                     
  9132                           ; BSR set to: 62
  9133                           ;./init.h: 32:     ADACQH = 0x00;
  9134   00499A  6BF4               	clrf	244,b	;volatile
  9135   00499C                     
  9136                           ; BSR set to: 62
  9137                           ;./init.h: 33:     ADCON0bits.ON = 1;
  9138   00499C  8FF8               	bsf	248,7,b	;volatile
  9139   00499E                     
  9140                           ; BSR set to: 62
  9141                           ;./init.h: 37:     IOCCPbits.IOCCP2 = 1;
  9142   00499E  013A               	movlb	58	; () banked
  9143   0049A0  8565               	bsf	101,2,b	;volatile
  9144   0049A2                     
  9145                           ; BSR set to: 58
  9146                           ;./init.h: 38:     PIE0bits.IOCIE = 1;
  9147   0049A2  0139               	movlb	57	; () banked
  9148   0049A4  8F90               	bsf	144,7,b	;volatile
  9149   0049A6                     
  9150                           ; BSR set to: 57
  9151                           ;./init.h: 39:     INTCON0bits.IPEN = 1;
  9152   0049A6  8AD2               	bsf	210,5,c	;volatile
  9153   0049A8                     
  9154                           ; BSR set to: 57
  9155                           ;./init.h: 40:     INTCON0bits.GIEH = 1;
  9156   0049A8  8ED2               	bsf	210,7,c	;volatile
  9157   0049AA                     
  9158                           ; BSR set to: 57
  9159                           ;./init.h: 41:     IOCCFbits.IOCCF2 = 0;
  9160   0049AA  013A               	movlb	58	; () banked
  9161   0049AC  9567               	bcf	103,2,b	;volatile
  9162   0049AE                     
  9163                           ; BSR set to: 58
  9164                           ;./init.h: 42:     WPUCbits.WPUC2 = 1;
  9165   0049AE  8561               	bsf	97,2,b	;volatile
  9166   0049B0                     
  9167                           ; BSR set to: 58
  9168   0049B0  0012               	return		;funcret
  9169   0049B2                     __end_of_Initialize:
  9170                           	callstack 0
  9171                           
  9172 ;; *************** function _ISR *****************
  9173 ;; Defined at:
  9174 ;;		line 45 in file "./init.h"
  9175 ;; Parameters:    Size  Location     Type
  9176 ;;		None
  9177 ;; Auto vars:     Size  Location     Type
  9178 ;;  i               2    0[COMRAM] int 
  9179 ;; Return value:  Size  Location     Type
  9180 ;;                  1    wreg      void 
  9181 ;; Registers used:
  9182 ;;		wreg, status,2, status,0
  9183 ;; Tracked objects:
  9184 ;;		On entry : 0/0
  9185 ;;		On exit  : 0/0
  9186 ;;		Unchanged: 0/0
  9187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9189 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9191 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9192 ;;Total ram usage:        2 bytes
  9193 ;; Hardware stack levels used: 1
  9194 ;; This function calls:
  9195 ;;		Nothing
  9196 ;; This function is called by:
  9197 ;;		Interrupt level 2
  9198 ;; This function uses a non-reentrant model
  9199 ;;
  9200                           
  9201                           	psect	text45
  9202   004844                     __ptext45:
  9203                           	callstack 0
  9204   004844                     _ISR:
  9205                           	callstack 21
  9206   004844                     
  9207                           ;./init.h: 46:     if (IOCCFbits.IOCCF2) {
  9208   004844  013A               	movlb	58	; () banked
  9209   004846  A567               	btfss	103,2,b	;volatile
  9210   004848  EF28  F024         	goto	i2u205_41
  9211   00484C  EF2A  F024         	goto	i2u205_40
  9212   004850                     i2u205_41:
  9213   004850  EF4A  F024         	goto	i2l164
  9214   004854                     i2u205_40:
  9215   004854                     
  9216                           ; BSR set to: 58
  9217                           ;./init.h: 48:         for (int i = 0; i < 30; i++) {
  9218   004854  0E00               	movlw	0
  9219   004856  6E02               	movwf	(ISR@i+1)^0,c
  9220   004858  0E00               	movlw	0
  9221   00485A  6E01               	movwf	ISR@i^0,c
  9222   00485C                     i2l162:
  9223                           
  9224                           ;./init.h: 49:             LATC5 = ~LATC5;
  9225   00485C  AABC               	btfss	16316,5,c	;volatile
  9226   00485E  EF33  F024         	goto	i2u206_41
  9227   004862  EF36  F024         	goto	i2u206_40
  9228   004866                     i2u206_41:
  9229   004866  8ABC               	bsf	16316,5,c	;volatile
  9230   004868  EF37  F024         	goto	i2u207_45
  9231   00486C                     i2u206_40:
  9232   00486C  9ABC               	bcf	16316,5,c	;volatile
  9233   00486E                     i2u207_45:
  9234   00486E                     
  9235                           ;./init.h: 51:         }
  9236   00486E  4A01               	infsnz	ISR@i^0,f,c
  9237   004870  2A02               	incf	(ISR@i+1)^0,f,c
  9238   004872  BE02               	btfsc	(ISR@i+1)^0,7,c
  9239   004874  EF45  F024         	goto	i2u208_41
  9240   004878  5002               	movf	(ISR@i+1)^0,w,c
  9241   00487A  E109               	bnz	i2u208_40
  9242   00487C  0E1E               	movlw	30
  9243   00487E  5C01               	subwf	ISR@i^0,w,c
  9244   004880  A0D8               	btfss	status,0,c
  9245   004882  EF45  F024         	goto	i2u208_41
  9246   004886  EF47  F024         	goto	i2u208_40
  9247   00488A                     i2u208_41:
  9248   00488A  EF2E  F024         	goto	i2l162
  9249   00488E                     i2u208_40:
  9250   00488E                     
  9251                           ;./init.h: 52:         LATC5 = 0;
  9252   00488E  9ABC               	bcf	16316,5,c	;volatile
  9253                           
  9254                           ;./init.h: 53:         IOCCFbits.IOCCF2 = 0;
  9255   004890  013A               	movlb	58	; () banked
  9256   004892  9567               	bcf	103,2,b	;volatile
  9257   004894                     i2l164:
  9258                           
  9259                           ; BSR set to: 58
  9260   004894  0011               	retfie		f
  9261   004896                     __end_of_ISR:
  9262                           	callstack 0
  9263                           
  9264                           ;
  9265                           ; H/W Interrupt Vector Table @ 0x8
  9266                           ;
  9267                           
  9268                           	psect	ivt0x8
  9269   000008                     __pivt0x8:
  9270                           	callstack 0
  9271   000008                     ivt0x8_base:
  9272                           	callstack 0
  9273                           
  9274                           ; Vector 0 : SWINT
  9275   000008  002B               	dw	ivt0x8_undefint shr (0+2)
  9276                           
  9277                           ; Vector 1 : HLVD
  9278   00000A  002B               	dw	ivt0x8_undefint shr (0+2)
  9279                           
  9280                           ; Vector 2 : OSF
  9281   00000C  002B               	dw	ivt0x8_undefint shr (0+2)
  9282                           
  9283                           ; Vector 3 : CSW
  9284   00000E  002B               	dw	ivt0x8_undefint shr (0+2)
  9285                           
  9286                           ; Vector 4 : NVM
  9287   000010  002B               	dw	ivt0x8_undefint shr (0+2)
  9288                           
  9289                           ; Vector 5 : SCAN
  9290   000012  002B               	dw	ivt0x8_undefint shr (0+2)
  9291                           
  9292                           ; Vector 6 : CRC
  9293   000014  002B               	dw	ivt0x8_undefint shr (0+2)
  9294                           
  9295                           ; Vector 7 : IOC
  9296   000016  1211               	dw	_ISR shr (0+2)
  9297                           
  9298                           ; Vector 8 : INT0
  9299   000018  002B               	dw	ivt0x8_undefint shr (0+2)
  9300                           
  9301                           ; Vector 9 : ZCD
  9302   00001A  002B               	dw	ivt0x8_undefint shr (0+2)
  9303                           
  9304                           ; Vector 10 : AD
  9305   00001C  002B               	dw	ivt0x8_undefint shr (0+2)
  9306                           
  9307                           ; Vector 11 : ADT
  9308   00001E  002B               	dw	ivt0x8_undefint shr (0+2)
  9309                           
  9310                           ; Vector 12 : CMP1
  9311   000020  002B               	dw	ivt0x8_undefint shr (0+2)
  9312                           
  9313                           ; Vector 13 : SMT1
  9314   000022  002B               	dw	ivt0x8_undefint shr (0+2)
  9315                           
  9316                           ; Vector 14 : SMT1PRA
  9317   000024  002B               	dw	ivt0x8_undefint shr (0+2)
  9318                           
  9319                           ; Vector 15 : SMT1PRW
  9320   000026  002B               	dw	ivt0x8_undefint shr (0+2)
  9321                           
  9322                           ; Vector 16 : DMA1SCNT
  9323   000028  002B               	dw	ivt0x8_undefint shr (0+2)
  9324                           
  9325                           ; Vector 17 : DMA1DCNT
  9326   00002A  002B               	dw	ivt0x8_undefint shr (0+2)
  9327                           
  9328                           ; Vector 18 : DMA1OR
  9329   00002C  002B               	dw	ivt0x8_undefint shr (0+2)
  9330                           
  9331                           ; Vector 19 : DMA1A
  9332   00002E  002B               	dw	ivt0x8_undefint shr (0+2)
  9333                           
  9334                           ; Vector 20 : SPI1RX
  9335   000030  002B               	dw	ivt0x8_undefint shr (0+2)
  9336                           
  9337                           ; Vector 21 : SPI1TX
  9338   000032  002B               	dw	ivt0x8_undefint shr (0+2)
  9339                           
  9340                           ; Vector 22 : SPI1
  9341   000034  002B               	dw	ivt0x8_undefint shr (0+2)
  9342                           
  9343                           ; Vector 23 : I2C1RX
  9344   000036  002B               	dw	ivt0x8_undefint shr (0+2)
  9345                           
  9346                           ; Vector 24 : I2C1TX
  9347   000038  002B               	dw	ivt0x8_undefint shr (0+2)
  9348                           
  9349                           ; Vector 25 : I2C1
  9350   00003A  002B               	dw	ivt0x8_undefint shr (0+2)
  9351                           
  9352                           ; Vector 26 : I2C1E
  9353   00003C  002B               	dw	ivt0x8_undefint shr (0+2)
  9354                           
  9355                           ; Vector 27 : U1RX
  9356   00003E  002B               	dw	ivt0x8_undefint shr (0+2)
  9357                           
  9358                           ; Vector 28 : U1TX
  9359   000040  002B               	dw	ivt0x8_undefint shr (0+2)
  9360                           
  9361                           ; Vector 29 : U1E
  9362   000042  002B               	dw	ivt0x8_undefint shr (0+2)
  9363                           
  9364                           ; Vector 30 : U1
  9365   000044  002B               	dw	ivt0x8_undefint shr (0+2)
  9366                           
  9367                           ; Vector 31 : TMR0
  9368   000046  002B               	dw	ivt0x8_undefint shr (0+2)
  9369                           
  9370                           ; Vector 32 : TMR1
  9371   000048  002B               	dw	ivt0x8_undefint shr (0+2)
  9372                           
  9373                           ; Vector 33 : TMR1G
  9374   00004A  002B               	dw	ivt0x8_undefint shr (0+2)
  9375                           
  9376                           ; Vector 34 : TMR2
  9377   00004C  002B               	dw	ivt0x8_undefint shr (0+2)
  9378                           
  9379                           ; Vector 35 : CCP1
  9380   00004E  002B               	dw	ivt0x8_undefint shr (0+2)
  9381                           
  9382                           ; Vector 36 : Undefined
  9383   000050  002B               	dw	ivt0x8_undefint shr (0+2)
  9384                           
  9385                           ; Vector 37 : NCO1
  9386   000052  002B               	dw	ivt0x8_undefint shr (0+2)
  9387                           
  9388                           ; Vector 38 : CWG1
  9389   000054  002B               	dw	ivt0x8_undefint shr (0+2)
  9390                           
  9391                           ; Vector 39 : CLC1
  9392   000056  002B               	dw	ivt0x8_undefint shr (0+2)
  9393                           
  9394                           ; Vector 40 : INT1
  9395   000058  002B               	dw	ivt0x8_undefint shr (0+2)
  9396                           
  9397                           ; Vector 41 : CMP2
  9398   00005A  002B               	dw	ivt0x8_undefint shr (0+2)
  9399                           
  9400                           ; Vector 42 : DMA2SCNT
  9401   00005C  002B               	dw	ivt0x8_undefint shr (0+2)
  9402                           
  9403                           ; Vector 43 : DMA2DCNT
  9404   00005E  002B               	dw	ivt0x8_undefint shr (0+2)
  9405                           
  9406                           ; Vector 44 : DMA2OR
  9407   000060  002B               	dw	ivt0x8_undefint shr (0+2)
  9408                           
  9409                           ; Vector 45 : DMA2A
  9410   000062  002B               	dw	ivt0x8_undefint shr (0+2)
  9411                           
  9412                           ; Vector 46 : I2C2RX
  9413   000064  002B               	dw	ivt0x8_undefint shr (0+2)
  9414                           
  9415                           ; Vector 47 : I2C2TX
  9416   000066  002B               	dw	ivt0x8_undefint shr (0+2)
  9417                           
  9418                           ; Vector 48 : I2C2
  9419   000068  002B               	dw	ivt0x8_undefint shr (0+2)
  9420                           
  9421                           ; Vector 49 : I2C2E
  9422   00006A  002B               	dw	ivt0x8_undefint shr (0+2)
  9423                           
  9424                           ; Vector 50 : U2RX
  9425   00006C  002B               	dw	ivt0x8_undefint shr (0+2)
  9426                           
  9427                           ; Vector 51 : U2TX
  9428   00006E  002B               	dw	ivt0x8_undefint shr (0+2)
  9429                           
  9430                           ; Vector 52 : U2E
  9431   000070  002B               	dw	ivt0x8_undefint shr (0+2)
  9432                           
  9433                           ; Vector 53 : U2
  9434   000072  002B               	dw	ivt0x8_undefint shr (0+2)
  9435                           
  9436                           ; Vector 54 : TMR3
  9437   000074  002B               	dw	ivt0x8_undefint shr (0+2)
  9438                           
  9439                           ; Vector 55 : TMR3G
  9440   000076  002B               	dw	ivt0x8_undefint shr (0+2)
  9441                           
  9442                           ; Vector 56 : TMR4
  9443   000078  002B               	dw	ivt0x8_undefint shr (0+2)
  9444                           
  9445                           ; Vector 57 : CCP2
  9446   00007A  002B               	dw	ivt0x8_undefint shr (0+2)
  9447                           
  9448                           ; Vector 58 : Undefined
  9449   00007C  002B               	dw	ivt0x8_undefint shr (0+2)
  9450                           
  9451                           ; Vector 59 : CWG2
  9452   00007E  002B               	dw	ivt0x8_undefint shr (0+2)
  9453                           
  9454                           ; Vector 60 : CLC2
  9455   000080  002B               	dw	ivt0x8_undefint shr (0+2)
  9456                           
  9457                           ; Vector 61 : INT2
  9458   000082  002B               	dw	ivt0x8_undefint shr (0+2)
  9459                           
  9460                           ; Vector 62 : Undefined
  9461   000084  002B               	dw	ivt0x8_undefint shr (0+2)
  9462                           
  9463                           ; Vector 63 : Undefined
  9464   000086  002B               	dw	ivt0x8_undefint shr (0+2)
  9465                           
  9466                           ; Vector 64 : Undefined
  9467   000088  002B               	dw	ivt0x8_undefint shr (0+2)
  9468                           
  9469                           ; Vector 65 : Undefined
  9470   00008A  002B               	dw	ivt0x8_undefint shr (0+2)
  9471                           
  9472                           ; Vector 66 : Undefined
  9473   00008C  002B               	dw	ivt0x8_undefint shr (0+2)
  9474                           
  9475                           ; Vector 67 : Undefined
  9476   00008E  002B               	dw	ivt0x8_undefint shr (0+2)
  9477                           
  9478                           ; Vector 68 : Undefined
  9479   000090  002B               	dw	ivt0x8_undefint shr (0+2)
  9480                           
  9481                           ; Vector 69 : Undefined
  9482   000092  002B               	dw	ivt0x8_undefint shr (0+2)
  9483                           
  9484                           ; Vector 70 : TMR5
  9485   000094  002B               	dw	ivt0x8_undefint shr (0+2)
  9486                           
  9487                           ; Vector 71 : TMR5G
  9488   000096  002B               	dw	ivt0x8_undefint shr (0+2)
  9489                           
  9490                           ; Vector 72 : TMR6
  9491   000098  002B               	dw	ivt0x8_undefint shr (0+2)
  9492                           
  9493                           ; Vector 73 : CCP3
  9494   00009A  002B               	dw	ivt0x8_undefint shr (0+2)
  9495                           
  9496                           ; Vector 74 : CWG3
  9497   00009C  002B               	dw	ivt0x8_undefint shr (0+2)
  9498                           
  9499                           ; Vector 75 : CLC3
  9500   00009E  002B               	dw	ivt0x8_undefint shr (0+2)
  9501                           
  9502                           ; Vector 76 : Undefined
  9503   0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
  9504                           
  9505                           ; Vector 77 : Undefined
  9506   0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
  9507                           
  9508                           ; Vector 78 : Undefined
  9509   0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
  9510                           
  9511                           ; Vector 79 : Undefined
  9512   0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
  9513                           
  9514                           ; Vector 80 : CCP4
  9515   0000A8  002B               	dw	ivt0x8_undefint shr (0+2)
  9516                           
  9517                           ; Vector 81 : CLC4
  9518   0000AA  002B               	dw	ivt0x8_undefint shr (0+2)
  9519   0000AC                     ivt0x8_undefint:
  9520                           	callstack 0
  9521   0000AC  00FF               	reset	
  9522                           
  9523                           	psect	rparam
  9524   000001                     ___rparam_used  equ	1
  9525   000000                     ___param_bank   equ	0
  9526   000000                     __Lparam        equ	__Lrparam
  9527   000000                     __Hparam        equ	__Hrparam
  9528                           
  9529                           	psect	config
  9530                           
  9531                           ;Config register CONFIG1L @ 0x300000
  9532                           ;	External Oscillator Selection
  9533                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  9534                           ;	Reset Oscillator Selection
  9535                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  9536   300000                     	org	3145728
  9537   300000  F8                 	db	248
  9538                           
  9539                           ;Config register CONFIG1H @ 0x300001
  9540                           ;	Clock out Enable bit
  9541                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  9542                           ;	PRLOCKED One-Way Set Enable bit
  9543                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  9544                           ;	Clock Switch Enable bit
  9545                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  9546                           ;	Fail-Safe Clock Monitor Enable bit
  9547                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  9548   300001                     	org	3145729
  9549   300001  FF                 	db	255
  9550                           
  9551                           ;Config register CONFIG2L @ 0x300002
  9552                           ;	MCLR Enable bit
  9553                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  9554                           ;	Power-up timer selection bits
  9555                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  9556                           ;	Multi-vector enable bit
  9557                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  9558                           ;	IVTLOCK bit One-way set enable bit
  9559                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  9560                           ;	Low Power BOR Enable bit
  9561                           ;	LPBOREN = OFF, ULPBOR disabled
  9562                           ;	Brown-out Reset Enable bits
  9563                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  9564   300002                     	org	3145730
  9565   300002  FF                 	db	255
  9566                           
  9567                           ;Config register CONFIG2H @ 0x300003
  9568                           ;	Brown-out Reset Voltage Selection bits
  9569                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  9570                           ;	ZCD Disable bit
  9571                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  9572                           ;	PPSLOCK bit One-Way Set Enable bit
  9573                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  9574                           ;	Stack Full/Underflow Reset Enable bit
  9575                           ;	STVREN = ON, Stack full/underflow will cause Reset
  9576                           ;	Debugger Enable bit
  9577                           ;	DEBUG = OFF, Background debugger disabled
  9578                           ;	Extended Instruction Set Enable bit
  9579                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  9580   300003                     	org	3145731
  9581   300003  FF                 	db	255
  9582                           
  9583                           ;Config register CONFIG3L @ 0x300004
  9584                           ;	WDT Period selection bits
  9585                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9586                           ;	WDT operating mode
  9587                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  9588   300004                     	org	3145732
  9589   300004  9F                 	db	159
  9590                           
  9591                           ;Config register CONFIG3H @ 0x300005
  9592                           ;	WDT Window Select bits
  9593                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  9594                           ;	WDT input clock selector
  9595                           ;	WDTCCS = SC, Software Control
  9596   300005                     	org	3145733
  9597   300005  FF                 	db	255
  9598                           
  9599                           ;Config register CONFIG4L @ 0x300006
  9600                           ;	Boot Block Size selection bits
  9601                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  9602                           ;	Boot Block enable bit
  9603                           ;	BBEN = OFF, Boot block disabled
  9604                           ;	Storage Area Flash enable bit
  9605                           ;	SAFEN = OFF, SAF disabled
  9606                           ;	Application Block write protection bit
  9607                           ;	WRTAPP = OFF, Application Block not write protected
  9608   300006                     	org	3145734
  9609   300006  FF                 	db	255
  9610                           
  9611                           ;Config register CONFIG4H @ 0x300007
  9612                           ;	Boot Block Write Protection bit
  9613                           ;	WRTB = OFF, Boot Block not write-protected
  9614                           ;	Configuration Register Write Protection bit
  9615                           ;	WRTC = OFF, Configuration registers not write-protected
  9616                           ;	Data EEPROM Write Protection bit
  9617                           ;	WRTD = OFF, Data EEPROM not write-protected
  9618                           ;	SAF Write protection bit
  9619                           ;	WRTSAF = OFF, SAF not Write Protected
  9620                           ;	Low Voltage Programming Enable bit
  9621                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  9622   300007                     	org	3145735
  9623   300007  FF                 	db	255
  9624                           
  9625                           ;Config register CONFIG5L @ 0x300008
  9626                           ;	PFM and Data EEPROM Code Protection bit
  9627                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  9628   300008                     	org	3145736
  9629   300008  FF                 	db	255
  9630                           
  9631                           ;Config register CONFIG5H @ 0x300009
  9632                           ;	unspecified, using default values
  9633   300009                     	org	3145737
  9634   300009  FF                 	db	255
  9635                           tosu	equ	0x3FFF
  9636                           tosh	equ	0x3FFE
  9637                           tosl	equ	0x3FFD
  9638                           stkptr	equ	0x3FFC
  9639                           pclatu	equ	0x3FFB
  9640                           pclath	equ	0x3FFA
  9641                           pcl	equ	0x3FF9
  9642                           tblptru	equ	0x3FF8
  9643                           tblptrh	equ	0x3FF7
  9644                           tblptrl	equ	0x3FF6
  9645                           tablat	equ	0x3FF5
  9646                           prodh	equ	0x3FF4
  9647                           prodl	equ	0x3FF3
  9648                           indf0	equ	0x3FEF
  9649                           postinc0	equ	0x3FEE
  9650                           postdec0	equ	0x3FED
  9651                           preinc0	equ	0x3FEC
  9652                           plusw0	equ	0x3FEB
  9653                           fsr0h	equ	0x3FEA
  9654                           fsr0l	equ	0x3FE9
  9655                           wreg	equ	0x3FE8
  9656                           indf1	equ	0x3FE7
  9657                           postinc1	equ	0x3FE6
  9658                           postdec1	equ	0x3FE5
  9659                           preinc1	equ	0x3FE4
  9660                           plusw1	equ	0x3FE3
  9661                           fsr1h	equ	0x3FE2
  9662                           fsr1l	equ	0x3FE1
  9663                           bsr	equ	0x3FE0
  9664                           indf2	equ	0x3FDF
  9665                           postinc2	equ	0x3FDE
  9666                           postdec2	equ	0x3FDD
  9667                           preinc2	equ	0x3FDC
  9668                           plusw2	equ	0x3FDB
  9669                           fsr2h	equ	0x3FDA
  9670                           fsr2l	equ	0x3FD9
  9671                           status	equ	0x3FD8

Data Sizes:
    Strings     40
    Constant    0
    Data        20
    BSS         93
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     83      92
    BANK0           160     91     115
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[11]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[11]), 

    f$.$buffer	PTR unsigned char  size(1) Largest target is 15
		 -> PWM@percent(BANK0[15]), readADC@buffer(COMRAM[12]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 15
		 -> PWM@percent(BANK0[15]), readADC@buffer(COMRAM[12]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[11]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 15
		 -> PWM@percent(BANK0[15]), readADC@buffer(COMRAM[12]), STR_1(CODE[6]), STR_2(CODE[15]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 15
		 -> PWM@percent(BANK0[15]), readADC@buffer(COMRAM[12]), STR_1(CODE[6]), STR_2(CODE[15]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S1192$buffer	PTR unsigned char  size(1) Largest target is 15
		 -> PWM@percent(BANK0[15]), readADC@buffer(COMRAM[12]), 

    S1192$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 12
		 -> readADC@buffer(COMRAM[12]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[5]), STR_5(CODE[3]), STR_6(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 15
		 -> PWM@percent(BANK0[15]), readADC@buffer(COMRAM[12]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_10(CODE[4]), STR_7(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[5]), STR_5(CODE[3]), STR_6(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[5]), STR_5(CODE[3]), STR_6(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[5]), STR_5(CODE[3]), STR_6(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->_PWM
    _PWM->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    ___lldiv->___lmul
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Clear->_LCD_Command
    _LCD_Init->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_PWM
    _PWM->_sprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   16216
                         _Initialize
                          _LCD_Clear
                           _LCD_Init
                      _LCD_String_xy
                                _PWM
 ---------------------------------------------------------------------------------
 (1) _PWM                                                 45    45      0   15427
                                             81 COMRAM     2     2      0
                                             50 BANK0     41    41      0
                          _LCD_Clear
                      _LCD_String_xy
                    _PWM2_Initialize
                 _PWM2_LoadDutyValue
               _PWM2_OutputStatusGet
               _PWM_Output_D8_Enable
                    _TMR2_Initialize
                    _TMR2_StartTimer
                            ___lldiv
                             ___lmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    14      6   14133
                                             69 COMRAM    12    12      0
                                             44 BANK0      6     0      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3   13922
                                             65 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           11     8      3   13785
                                             55 COMRAM    10     7      3
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   7     5      2     182
                                              2 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              53    47      6   10910
                                             47 COMRAM     8     2      6
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     3      3      77
                                              2 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     146
                                              2 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4      69
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     340
                                             27 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     137
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     232
                                              2 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2037
                                             27 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    1988
                                              2 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4      46
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    1480
                                              2 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     190
                                             27 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8      94
                                              2 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    1133
                                              2 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                12     9      3    1767
                                             24 COMRAM    12     9      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  8     3      5     710
                                             16 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                6     3      3     331
                                             10 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     232
                                              2 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2      67
                                              8 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     298
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     302
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8      96
                                              2 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     166
                                             14 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _TMR2_StartTimer                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (3) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Output_D8_Enable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_OutputStatusGet                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_LoadDutyValue                                   2     0      2      92
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        5     2      3     446
                                             11 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2     170
                                              9 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             1     1      0     124
                                              8 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     124
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0     219
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          1     1      0     124
                                              8 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (5) _MSdelay                                              6     4      2      95
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                 2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Initialize
   _LCD_Clear
     _LCD_Command
       _MSdelay
   _LCD_Init
     _LCD_Command
     _MSdelay
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
         _MSdelay
   _PWM
     _LCD_Clear
     _LCD_String_xy
     _PWM2_Initialize
     _PWM2_LoadDutyValue
     _PWM2_OutputStatusGet
     _PWM_Output_D8_Enable
     _TMR2_Initialize
     _TMR2_StartTimer
       _TMR2_Start
     ___lldiv
       ___lmul (ARG)
     ___lmul
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _efgtoa
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
             _strcpy
           _fputc
           _read_prec_or_width

 _ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRllh      1383      0       0      0.0%
BITBIGSFRlll       400      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0      80     31.2%
BITBIGSFRlh        182      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160     91     115     71.9%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     83      92     96.8%
BITBIGSFRh          80      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     286      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Apr 29 15:43:11 2025

       ?_PWM_Output_D8_Enable 0001                  ___fldiv@aexp 001B                  ___fldiv@bexp 001A  
                ___fldiv@sign 0013                  ?_LCD_Command 0001                  ___awdiv@sign 0008  
                 ?_LCD_String 000A                           l200 4BFA                           l131 4BC0  
                         l211 4B46                           l140 466C                           l125 4B9A  
                         l134 4BDE                           l206 4C26                           l214 4C4E  
                         l128 4C56                           l153 48DE                           l145 4A74  
                         l170 4C60                           l219 4B6E                           l156 49B0  
                         l252 46C6                           l500 4556                           l173 4C5C  
                         l253 46D6                           l167 4C10                           l511 40DA  
                         l506 4094                           l275 45FA                           l515 4AAC  
                         l268 45EA                           l472 429A                           l802 2E88  
                         l538 3FD6                           l811 496A                           l485 4400  
                         l823 369E                           l825 3502                           l834 3548  
                         l770 2BE6                           l835 3566                           l771 2BAC  
                         l836 35BE                           l828 34C6                           l837 35AC  
                         l862 31A4                           l863 31C2                           l855 2F8A  
                         l783 2DA0                           l919 4AE2                           l952 473C  
                         l872 32D0                           l864 321A                           l865 3208  
                         l769 2BF8                           l970 3ED0                           l786 2D12  
                         l778 2EC4                           l859 330E                           l795 2DE0  
                         l948 46EE                           l956 3D88                           l796 2DCE  
                         l981 2A0E                           l958 3D90                           l959 3DD6  
                         l984 23AE                           l986 21F4                           _PR2 3FAB  
                         _ISR 4844                           _PWM 3B4A                           _abs 4AE4  
                         _pad 46D8                  ___awmod@sign 0008               _TMR2_Initialize 4BFC  
                         wreg 3FE8                  ___flmul@aexp 0014                  ___flmul@bexp 0015  
                ___flmul@sign 000F                  ___flmul@temp 001A                  ___flmul@prod 0016  
                        ?_ISR 0001                   LCD_Char@dat 0009                          ?_PWM 0001  
                        ISR@i 0001                  ___fltol@exp1 000C  __end_of_PWM2_OutputStatusGet 4C50  
                        l1014 27F4                          l1030 4352                          l1104 4796  
                        l1026 434A                          ?_abs 0009                          l1116 44AC  
                        l1124 4A34                          l1044 37E0                          l1060 49F4  
                        l1070 41D8                          l1142 4924                          l1038 3936  
                        l1127 4C62                          l3000 3070                          l3010 30DE  
                        l3002 3080                          l1075 4AFE                          l3100 4264  
                        l3020 318A                          l3012 30FE                          l3004 309E  
                        l1084 3B48                          l3110 428A                          l3102 426C  
                        l1078 4B16                          l3030 3200                          l3022 3194  
                        l3014 3128                          l3006 30AE                          l1087 3A8C  
                        l3112 4292                          l3104 426E                          l3120 4364  
                        l3040 326E                          l3024 31A2                          l3016 315E  
                        l3008 30CE                          l3200 3EE8                          l2410 4972  
                        l3106 4274                          l3130 4398                          l3122 436C  
                        l3050 32CA                          l3034 322A                          l3042 3272  
                        l3026 31B4                          l3018 316C                          l3210 3F38  
                        l1098 4842                          l2420 497E                          l2412 4974  
                        l3108 427A                          l3140 43D4                          l3132 43A0  
                        l3124 4370                          l3116 4354                          l3052 32D4  
                        l3060 32FA                          l3044 328C                          l3036 3236  
                        l3028 31D2                          l3220 3F62                          l3212 3F3C  
                        l3204 3EFC                          l3300 39D0                          l2430 4992  
                        l2422 498A                          l2414 4978                          l2406 496C  
                        l3142 43DA                          l3134 43A8                          l3126 437E  
                        l3118 4356                          l3062 32FE                          l3054 32E4  
                        l3046 32A0                          l3038 3244                          l3230 3F8A  
                        l3222 3F6C                          l3214 3F4A                          l3206 3F26  
                        l3310 3AEC                          l2440 499C                          l2432 4994  
                        l2424 498C                          l2416 497A                          l2408 496E  
                        l3080 41F6                          l3072 41DA                          l3136 43B6  
                        l3144 43E0                          l3128 4386                          l3160 452A  
                        l3152 44AE                          l3056 32F2                          l3048 32BA  
                        l2600 2A10                          l3232 3F96                          l3224 3F76  
                        l3208 3F28                          l3312 3B00                          l3304 3A40  
                        l3320 473E                          l3400 2074                          l2450 49AA  
                        l2442 499E                          l2434 4996                          l2426 498E  
                        l2418 497C                          l3090 422A                          l3082 4204  
                        l3074 41DC                          l3146 43F0                          l3138 43CC  
                        l3250 470E                          l3242 46D8                          l3162 454E  
                        l3154 44DC                          l3170 4006                          l3058 32F4  
                        l2610 2A4C                          l2602 2A1C                          l3066 4926  
                        l3234 3FA6                          l3314 3B28                          l3306 3A7C  
                        l3322 4752                          l3330 477C                          l3410 20B2  
                        l3402 207E                          l2452 49AE                          l2444 49A2  
                        l2436 4998                          l2428 4990                          l3340 48AA  
                        l3332 4896                          l3092 4232                          l3084 420C  
                        l3076 41EA                          l3148 43F8                          l3252 472C  
                        l3244 46E6                          l3164 4554                          l3156 44EC  
                        l3180 4074                          l3172 4016                          l2700 2C16  
                        l2620 2A7A                          l2612 2A5C                          l2604 2A2A  
                        l3068 4936                          l3236 3FB6                          l3260 40FC  
                        l3316 3B38                          l3308 3AB0                          l3324 4762  
                        l3500 2440                          l3420 20FA                          l3412 20BA  
                        l3404 2086                          l2446 49A6                          l2438 499A  
                        l3342 48AE                          l3334 48A2                          l3094 423A  
                        l3086 4210                          l3078 41F2                          l3254 4AE4  
                        l3246 46FA                          l3350 3D7C                          l3158 451A  
                        l3182 4082                          l3174 4044                          l3190 4A76  
                        l2710 2C56                          l2630 2AA4                          l2622 2A8C  
                        l2614 2A5E                          l2606 2A2C                          l3238 3FC6  
                        l3262 413A                          l3270 417A                          l3326 4766  
                        l3510 2554                          l3502 2450                          l3422 2100  
                        l3406 2096                          l3414 20BE                          l2448 49A8  
                        l3344 48C4                          l3096 4248                          l3088 4218  
                        l3256 4AF2                          l2800 4A14                          l3248 470A  
                        l3360 3DCA                          l3352 3D98                          l3184 40D2  
                        l3176 4054                          l3168 3FD8                          l3192 4A8C  
                        l2720 2C80                          l2712 2C62                          l2704 2C2A  
                        l2632 2AB4                          l2640 2ADC                          l2624 2A8E  
                        l2608 2A3C                          l2616 2A64                          l3272 418C  
                        l3264 4162                          l3328 4778                          l3280 48E0  
                        l3600 29AA                          l3520 25F4                          l3504 2464  
                        l3512 255A                          l3440 2184                          l3424 2108  
                        l3416 20E4                          l3432 2142                          l3408 20A6  
                        l3346 48C8                          l3098 424E                          l3370 3E1E  
                        l3362 3DD2                          l3354 3DA8                          l2810 333C  
                        l2802 3310                          l3186 40D8                          l3178 4062  
                        l3194 4A9C                          l2730 2CF2                          l2714 2C66  
                        l2706 2C3A                          l2722 2C86                          l2650 2B14  
                        l2642 2AEC                          l2634 2AC4                          l2626 2A94  
                        l2618 2A74                          l3266 416E                          l3258 40DC  
                        l3282 48E8                          l3602 29C2                          l3530 26D0  
                        l3522 2626                          l3514 2578                          l3506 24C8  
                        l3442 218C                          l3434 2168                          l3450 21A4  
                        l3426 211C                          l3418 20F6                          l3380 3E72  
                        l3372 3E24                          l3364 3DDE                          l3356 3DAE  
                        l3348 3D58                          l2900 35A4                          l2820 3374  
                        l2812 334C                          l2804 331C                          l2740 2D4C  
                        l2724 2CAC                          l2732 2D02                          l2716 2C74  
                        l2708 2C48                          l2660 2B28                          l2652 2B18  
                        l2644 2AFE                          l2636 2AD4                          l2628 2AA2  
                        l3276 41D0                          l3292 3938                          l3284 47EE  
                        l3604 29D2                          l3540 2732                          l3532 26D6  
                        l3524 2636                          l3516 25AC                          l3508 2520  
                        l3460 223E                          l3452 21BE                          l3436 217A  
                        l3428 2126                          l3620 42F4                          l3612 429C  
                        l3710 4BA4                          l3630 4BCC                          l2590 4422  
                        l3382 3E8C                          l3374 3E2A                          l3366 3DE6  
                        l3358 3DBE                          l2910 3612                          l2830 33A0  
                        l2822 337A                          l2814 335C                          l2806 332A  
                        l2750 2D7C                          l2742 2D56                          l2734 2D28  
                        l2726 2CE0                          l2718 2C76                          l2670 2B3C  
                        l2662 2B2C                          l2654 2B1C                          l2646 2B0C  
                        l2638 2AD6                          l3198 3ED2                          l3294 3958  
                        l3286 47FC                          l3606 29EA                          l3550 27CA  
                        l3542 273A                          l3534 270A                          l3526 2646  
                        l3518 25DE                          l3470 2334                          l3462 227C  
                        l3438 217E                          l3622 4316                          l3614 42A4  
                        l3702 390E                          l3720 4BB4                          l3712 4BAC  
                        l3632 4BCE                          l2592 442C                          l3384 3E9C  
                        l3368 3DEC                          l3376 3E46                          l2920 3678  
                        l2904 35CE                          l2912 3616                          l2840 33D8  
                        l2832 33B0                          l2824 3380                          l2816 335E  
                        l2808 332C                          l2760 2DC6                          l2752 2D80  
                        l2744 2D64                          l2736 2D38                          l2728 2CE2  
                        l2680 2B78                          l2672 2B40                          l2664 2B30  
                        l2656 2B20                          l2648 2B10                          l3296 39AE  
                        l3288 4810                          l3608 29F2                          l3560 2828  
                        l3552 27EA                          l3544 273E                          l3536 271E  
                        l3528 267A                          l3480 23C6                          l3472 233C  
                        l3464 22AE                          l3456 2204                          l3392 202A  
                        l3616 42CC                          l3624 431E                          l3640 36C8  
                        l3800 4AAE                          l3714 4BAE                          l3634 4BD0  
                        l3626 4BC4                          l3722 45FC                          l3730 4C5E  
                        l2594 4448                          l2586 4402                          l3386 3EA2  
                        l3378 3E60                          l2930 3694                          l2922 367A  
                        l2914 3630                          l2906 35DA                          l2842 33EE  
                        l2834 33C0                          l2826 338E                          l2818 3364  
                        l2770 2E44                          l2754 2D90                          l2746 2D66  
                        l2690 2BCA                          l2682 2B94                          l2674 2B44  
                        l2666 2B34                          l2658 2B24                          l3298 39C2  
                        l3570 2850                          l3562 282E                          l3554 2806  
                        l3546 2746                          l3538 2722                          l3490 23F8  
                        l3482 23D2                          l3466 22EC                          l3458 220A  
                        l3394 203E                          l3618 42D4                          l3650 3712  
                        l3642 36D0                          l3802 4AB6                          l3716 4BB0  
                        l3708 4B9E                          l3636 4BD2                          l3628 4BCA  
                        l3724 4600                          l3820 46A6                          l3812 466E  
                        l2596 447A                          l2588 4412                          l3388 3EB4  
                        l2924 367E                          l2916 3646                          l2908 35E8  
                        l2860 3442                          l2844 33FE                          l2852 341E  
                        l2836 33C2                          l2828 3390                          l2940 2ED2  
                        l2780 2E96                          l2764 2DF0                          l2772 2E46  
                        l2748 2D74                          l2756 2D92                          l2692 2BD8  
                        l2684 2BA4                          l2676 2B48                          l2668 2B38  
                        l3580 2884                          l3564 2836                          l3556 2814  
                        l3572 2856                          l3548 2752                          l3492 2406  
                        l3484 23DA                          l3468 2300                          l3476 237C  
                        l3396 204C                          l3660 3790                          l3652 3726  
                        l3644 36DE                          l3732 49B2                          l3804 4ABE  
                        l3900 3D12                          l3718 4BB2                          l3742 4C50  
                        l3726 462E                          l3750 4A50                          l3830 4592  
                        l3822 4558                          l3814 467E                          l2926 368C  
                        l2918 3660                          l2870 3492                          l2862 345C  
                        l2854 342E                          l2846 3406                          l2838 33C8  
                        l2950 2F12                          l2942 2EE0                          l2790 2EB4  
                        l2782 2E9C                          l2774 2E56                          l2766 2DFC  
                        l2758 2DB0                          l2694 2BDA                          l2686 2BBA  
                        l2678 2B4C                          l3590 293A                          l3582 28DC  
                        l3574 2868                          l3566 2846                          l3558 2824  
                        l3494 241E                          l3486 23E2                          l3478 23B6  
                        l3398 2050                          l3670 37D2                          l3662 379A  
                        l3654 3730                          l3646 36E2                          l3638 36A0  
                        l3734 49BA                          l3806 4AC6                          l3902 3D16  
                        l3910 4B4C                          ?_pad 0011                          l3728 4632  
                        l3752 4A5A                          l3744 4A38                          l3760 4C00  
                        l3840 45DA                          l3832 45A0                          l3824 4568  
                        l3816 468C                          l2928 3692                          l2880 34EE  
                        l2872 34A2                          l2864 346C                          l2856 342E  
                        l2848 340A                          l2960 2F42                          l2952 2F18  
                        l2944 2EE2                          l2784 2E9E                          l2776 2E66  
                        l2768 2E0A                          l2696 2BE4                          l2688 2BC6  
                        l3592 2956                          l3584 2910                          l3576 287A  
                        l3568 284A                          l3496 2430                          l3488 23E6  
                        l3680 382A                          l3672 37D8                          l3656 3752  
                        l3648 370A                          l3736 49CA                          l3808 4AD6  
                        l3904 3D2C                          l3912 4B50                          l3754 4A62  
                        l3746 4A38                          l3762 4C02                          l3770 4C58  
                        l3842 45E4                          l3834 45AA                          l3826 457E  
                        l3818 469C                          l2794 49F6                          l2890 352E  
                        l2882 34F0                          l2874 34B6                          l2866 347C  
                        l2970 2F7A                          l2962 2F44                          l2954 2F28  
                        l2946 2EF2                          l2938 2EC6                          l2786 2EA4  
                        l2778 2E86                          l2698 2C06                          l3594 295E  
                        l3586 2918                          l3578 287E                          l3498 2438  
                        l3690 38B2                          l3682 385C                          l3666 37AE  
                        l3658 3774                          l3738 49EC                          l3906 3D3C  
                        l3850 3B4A                          l3914 4B66                          l3844 4B72  
                        l3756 4A68                          l3748 4A48                          l3780 4C16  
                        l3772 4BE0                          l3764 4C04                          l3836 45C8  
                        l3828 4586                          l2796 4A02                          l2892 3538  
                        l2884 3500                          l2876 34C4                          l2868 348C  
                        l2980 2FCE                          l2972 2F9A                          l2964 2F54  
                        l2956 2F2E                          l2948 2F02                          l2788 2EB2  
                        l3596 296C                          l3588 291C                          l3676 37E6  
                        l3668 37B8                          l3860 3B74                          l3852 3B5E  
                        l3916 4B6A                          l3908 4B48                          l3846 4B7E  
                        l3790 4B40                          l3782 4B18                          l3774 4BEA  
                        l3766 4C06                          l3758 4BFC                          l3838 45D8  
                        l2798 4A10                          l2894 3546                          l2886 3512  
                        l2878 34D0                          l2990 3026                          l2982 2FD8  
                        l2974 2FAA                          l2966 2F64                          l2958 2F34  
                        l3598 299C                          l3686 388E                          l3678 3804  
                        l3870 3B84                          l3862 3B76                          l3854 3B68  
                        l3848 4B80                          l3784 4B20                          l3776 4BF8  
                        l3768 4C08                          l2888 3528                          l2896 3558  
                        l2992 3032                          l2984 2FF2                          l2968 2F74  
                        l3696 38E4                          l3688 38A4                          l3880 3C08  
                        l3872 3B88                          l3864 3B78                          l3856 3B6C  
                        l3778 4C12                          l3786 4B2E                          l2898 3576  
                        l2994 3040                          l2986 2FFE                          l2978 2FBE  
                        l3698 3902                          l3890 3C54                          l3882 3C1E  
                        l3874 3B94                          l3866 3B7C                          l3858 3B70  
                        l3788 4B3C                          l3796 4C3C                          l2996 3050  
                        l2988 301A                          l3892 3C5A                          l3884 3C2E  
                        l3876 3C02                          l3868 3B80                          l2998 3060  
                        l3894 3C6E                          l3886 3C3C                          l3878 3C04  
                        l3896 3C76                          l3888 3C46                          l3898 3CF4  
                        STR_1 2010                          STR_2 2001                          STR_3 2016  
                        STR_4 2023                          STR_5 2026                          STR_6 2026  
                        STR_7 201B                          u2100 4412                          u2101 440E  
                        u2110 4422                          u2111 441E                          u3000 4264  
                        u2120 4448                          u2200 2AC4                          u3001 4260  
                        u2121 4444                          u2201 2AC0                          u3010 428A  
                        u2130 447A                          u2210 2AFE                          u3011 4286  
                        u2131 4476                          u2211 2AFA                          u3020 4364  
                        u3100 454E                          u2300 2C16                          u2220 2B0C  
                        u2140 2A2A                          u3021 4360                          u3101 454A  
                        u2301 2C12                          u2221 2B08                          u2141 2A26  
                        u3030 437E                          u3110 4006                          u2310 2C48  
                        u2230 2B78                          u2150 2A3C                          u3031 437A  
                        u3111 4002                          u2311 2C44                          u2231 2B74  
                        u2151 2A38                          u3040 4398                          u3120 4044  
                        u2400 2D90                          u2320 2C56                          u2240 2B90  
                        u2160 2A4C                          u3200 3F5E                          u4000 49EC  
                        _LATD 3FBD                          u3041 4394                          u3121 4040  
                        u2401 2D8C                          u2321 2C52                          u2241 2B8A  
                        u2161 2A48                          u3201 3F5A                          u4001 49E8  
                        u4010 4A48                          u3050 43B6                          u3130 4062  
                        u2410 2DA0                          u2330 2C74                          u2250 2B92  
                        u2170 2A8C                          u3210 3F86                          u4011 4A44  
                        u3051 43B2                          u3131 405E                          u2411 2D9C  
                        u2331 2C70                          u2171 2A88                          u3211 3F82  
                        u4020 4B2E                          u3060 43CC                          u3140 4082  
                        u2500 2E86                          u2420 2DB0                          u2340 2CAC  
                        u2260 2BBA                          u2180 2AA2                          u3220 3FA6  
                        u3300 418C                          u4021 4B2A                          u3061 43C8  
                        u3141 407E                          u2501 2E82                          u2421 2DAC  
                        u2341 2CA8                          u2261 2BB6                          u2181 2A9E  
                        u3221 3FA2                          u3301 4188                          u4101 3B54  
                        u3070 43F0                          u3150 40D2                          u2510 2E96  
                        u2430 2DC6                          u2350 2CF2                          u2270 2BD8  
                        u2190 2AB4                          u3230 3FB6                          u3071 43EC  
                        u3151 40CE                          u2511 2E92                          u2431 2DC2  
                        u2351 2CEE                          u2271 2BD4                          u2191 2AB0  
                        u3231 3FB2                          u4040 4C4C                          u3240 46E6  
                        u2600 33EE                          u3080 44DC                          u3160 4A8C  
                        u2520 2EB2                          u2440 2DDC                          u2360 2D28  
                        u2280 2BF8                          u3320 41C6                          u3400 3A3C  
                        u4120 3C54                          u4041 4C46                          u3241 46E2  
                        u2601 33EA                          u3081 44D8                          u3161 4A88  
                        u2521 2EAE                          u2441 2DD8                          u2361 2D24  
                        u2281 2BF4                          u3321 41C0                          u3401 3A38  
                        u4121 3C50                          u4050 468C                          u2530 4A34  
                        u3250 472C                          u2610 342E                          u3090 451A  
                        u2450 2DF0                          u2370 2D38                          u2290 2C06  
                        u3170 3EE8                          u3330 41C8                          u3410 3A60  
                        u4130 3C6E                          _T2PR 3FAB                          u4035 4B30  
                        u4051 4688                          u2531 4A30                          u3251 4728  
                        u2611 342A                          u3091 4516                          u2451 2DEC  
                        u2371 2D34                          u2291 2C02                          u3171 3EE4  
                        u3315 419E                          u4131 3C6A                          u4115 3C44  
                        u4060 46C6                          u3260 4AF2                          u3500 3D6A  
                        u2700 35A4                          u2620 34A2                          u2540 332A  
                        u2460 2E0A                          u2380 2D64                          u3180 3F1C  
                        u3420 3A7C                          u3340 4924                          u4116 3C46  
                        u4061 46C2                          u3261 4AEE                          u2701 35A0  
                        u2621 349E                          u2541 3326                          u2461 2E06  
                        u2381 2D60                          u3421 3A78                          u3341 4920  
                        u4046 4C4E                          u4070 457E                          u3510 3D7C  
                        u2710 35BA                          u2630 34C4                          u2550 333C  
                        u2470 2E44                          u2390 2D74                          u3190 3F4A  
                        u3270 411C                          u3430 3AD0                          u3350 47FC  
                        u4071 457A                          u3511 3D78                          u2711 35B6  
                        u2631 34C0                          u2551 3338                          u2471 2E40  
                        u2391 2D70                          u3191 3F46                          u3415 3A56  
                        u3351 47F8                          u4080 45A0                          u3520 3DA8  
                        u2720 35CE                          u2640 34EE                          u2560 334C  
                        u2800 2F42                          u2480 2E56                          u3280 413A  
                        u3440 3AEC                          u3360 3980                          u3600 20A6  
                        u4081 459C                          u3521 3DA4                          u2721 35CA  
                        u2641 34EA                          u2561 3348                          u2801 2F3E  
                        u2481 2E52                          u3185 3F12                          u3281 4136  
                        u3441 3AE8                          u3601 20A2                          u4090 45C8  
                        u3530 3DBE                          u2730 35E8                          u2650 3512  
                        u2570 338E                          u2810 2F54                          u2490 2E66  
                        u3290 4162                          u3450 3B28                          u3370 39AE  
                        u3610 20E4                          u4091 45C4                          u3531 3DBA  
                        u2731 35E4                          u2651 350E                          u2571 338A  
                        u2811 2F50                          u2491 2E62                          u3291 415E  
                        u3275 4112                          u3451 3B24                          u3435 3AC6  
                        u3371 39AA                          u3611 20E0                          u3540 3E60  
                        u2740 3630                          u2660 3528                          u2580 33A0  
                        u2900 3216                          u2820 2F64                          u3380 39D0  
                        u3460 4796                          u3700 23AE                          u3620 20F6  
                        u3541 3E5C                          u2741 362C                          u2661 3524  
                        u2581 339C                          u2901 3212                          u2821 2F60  
                        u3381 39CC                          u3365 3976                          u3461 4792  
                        u3701 23AA                          u3621 20F2                          u4157 3D46  
                        u3470 48C4                          u3550 3E72                          u2750 3660  
                        u2670 3546                          u2590 33B0                          u2910 322A  
                        u2830 2F9A                          u3710 23C6                          u3630 2168  
                        u3471 48C0                          u4167 4BA6                          u3551 3E6E  
                        u2751 365C                          u2671 3542                          u2591 33AC  
                        u2911 3226                          u2831 2F96                          u3711 23C2  
                        u3631 2164                          u3480 48DE                          u3560 3E8C  
                        u2760 368C                          u2680 3566                          u2920 3244  
                        u2840 2FAA                          u3800 271E                          u3720 23F8  
                        u3640 217A                          u3481 48DA                          u3561 3E88  
                        u2761 3688                          u2681 3562                          u2921 3240  
                        u2841 2FA6                          u3801 271A                          u3721 23F4  
                        u3641 2176                          u3570 3E9C                          u3490 3D68  
                        u2690 3576                          u2930 328C                          u2850 3148  
                        u2770 2EE0                          u3810 27CA                          u3730 2406  
                        u3650 21F0                          u3571 3E98                          u3491 3D62  
                        u2691 3572                          u2931 3288                          u2771 2EDC  
                        u3395 39E4                          u3811 27C6                          u3731 2402  
                        u3651 21EC                          u2940 32BA                          u2860 31A2  
                        u2780 2EF2                          u3396 39EE                          u3820 2806  
                        u3740 2430                          u3660 227C                          u3580 204C  
                        u3900 42CC                          u2941 32B6                          u2861 319E  
                        u2781 2EEE                          u3397 39FE                          u3821 2802  
                        u3741 242C                          u3661 2278                          u3581 2048  
                        u3901 42C8                          u2950 32F2                          u2870 31C2  
                        u2790 2F02                          u3830 2814                          u3750 2578  
                        u3670 22AE                          u3590 2096                          u3910 434A  
                        u2951 32EE                          u2871 31BE                          u2855 313E  
                        u2791 2EFE                          u3831 2810                          u3751 2574  
                        u3671 22AA                          u3591 2092                          u3911 4346  
                        u2960 41EA                          u2880 31D2                          u3840 2868  
                        u3760 25DE                          u3680 22EC                          u3920 36C8  
                        u2961 41E6                          u2881 31CE                          u3841 2864  
                        u3761 25DA                          u3681 22E8                          u3921 36C4  
                        u2970 4204                          u2890 3200                          u3850 293A  
                        u3770 2626                          u3690 2378                          u3930 370A  
                        u2971 4200                          u2891 31FC                          u3851 2936  
                        u3771 2622                          u3691 2374                          u3931 3706  
                        u2980 422A                          u3860 2956                          u3780 2636  
                        u3940 3752                          u2981 4226                          u3861 2952  
                        u3781 2632                          u3941 374E                          u2990 4248  
                        u3870 29BC                          u3790 26D0                          u3950 3774  
                        u2991 4244                          u3871 29B6                          u3791 26CC  
                        u3951 3770                          u3880 29BE                          u3960 3826  
                        u3961 3822                          u3970 462A                          u3890 29D2  
                        u3891 29CE                          u3980 465C                          u3990 466C  
                        u3991 4668                          u3977 461C                          u3987 464E  
                        _TMR2 3FAA                          abs@a 0009                          _dbuf 0100  
                        _labs 47EE                          _main 4B48                          _dtoa 3D58  
                        _prec 00D1                          pad@i 0017                          pad@p 0014  
                        fsr0h 3FEA                          fsr1h 3FE2                          indf0 3FEF  
                        fsr2h 3FDA                          fsr0l 3FE9                          indf2 3FDF  
                        fsr1l 3FE1                          fsr2l 3FD9                 ___fpclassifyf 40DC  
                        prodh 3FF4                          prodl 3FF3                          start 00AE  
             __end_of_MSdelay 48E0               ___fldiv@new_exp 0014                 _LCD_String_xy 4A36  
                ___param_bank 0000                         ??_ISR 0001                         ??_PWM 0052  
                       ??_abs 000B                         ??_pad 0016              __end_of_LCD_Char 4BE0  
     __end_of_PWM2_Initialize 4C28              __end_of_LCD_Init 4B9C                 ___fltol@sign1 000B  
                       ?_labs 0003                         _ADCAP 3EF5               __end_of___fladd 2EC6  
                       ?_main 0001                         ?_dtoa 0019                         _ADCLK 3EFF  
                       _ADPCH 3EF1               __end_of___fldiv 36A0                         _ADREF 3EFD  
             __end_of___awdiv 429C               __end_of___flneg 4AAE                         STR_10 201F  
             __end_of___awmod 4402               __end_of___flmul 3310               __end_of___flsub 496C  
             __end_of___fltol 3FD8               __end_of___lldiv 45FC               ___awdiv@divisor 0005  
                       _T2CON 3FAC                         _LATC3 1FDE3                         _LATC4 1FDE4  
                       _LATC5 1FDE5                         _T2HLT 3FAD                         _T2TMR 3FAA  
                       _T2RST 3FAF                         i2l162 485C                         i2l163 488E  
                       i2l164 4894               ___awdiv@counter 0007                  vfpfcnvrt@fmt 0039  
                       _PORTB 3FCB                         _TRISB 3FC3                         _TRISC 3FC4  
                       _TRISD 3FC5                         _TRISE 3FC6           ___lmul@multiplicand 0007  
                       _flags 005C                   ?_TMR2_Start 0001           read_prec_or_width@c 0007  
         read_prec_or_width@n 0008                         _fputc 4402                         _fputs 49F6  
                       labs@a 0003                         pad@fp 0011                         _width 00CF  
                       _putch 4C62                         dtoa@d 001A                         dtoa@i 0023  
                       dtoa@p 0020                         dtoa@s 0022                         dtoa@w 001E  
                       tablat 3FF5                         plusw1 3FE3                         plusw2 3FDB  
                       status 3FD8               __end_of_sprintf 4AE4                ?___fpclassifyf 0003  
             _TMR2_StartTimer 4C58                ?_LCD_String_xy 000C        ??_PWM_Output_D8_Enable 0003  
             __initialization 4798                  __end_of_labs 4844                  __end_of_main 4B72  
                __end_of_dtoa 3ED2       __end_of_TMR2_Initialize 4C12                    _Initialize 496C  
                PWM@pwmStatus 00B5                        ??_labs 0007                        ??_main 0054  
                      ??_dtoa 001C             __end_of_LCD_Clear 4C58                 __activetblptr 0003  
  __end_of_read_prec_or_width 4354                        _ADACQH 3EF4                        _ADACQL 3EF3  
                      ?_fputc 0003                        ?_fputs 000B                        _ADRESH 3EF0  
                      _ADRESL 3EEF                        _ADPREH 3EF7                        _ADPREL 3EF6  
                      _CCPR2H 3F79                        _CCPR2L 3F78              ___awdiv@dividend 0003  
                      ?_putch 0001                        _ANSELB 3A50                        _ANSELC 3A60  
                      _ANSELD 3A70                        _ANSELE 3A80              LCD_String_xy@msg 000D  
            LCD_String_xy@pos 000C              LCD_String_xy@row 000F                        _RB3PPS 3A0B  
                   ??_MSdelay 0005                        i2l2532 486E                        i2l2524 4844  
                      i2l2534 4872                        i2l2526 4854                        _OSCFRQ 39DF  
                _CCPTMRS0bits 3F5E                  vfprintf@cfmt 0045                        ___flge 3FD8  
                      ___fleq 44AE                        ___lmul 466E                     ??___fladd 000B  
                   ??___fldiv 000B                     ??___awdiv 0007                     ??___flneg 0007  
                   ??___awmod 0007                     ??___flmul 000B                     ??___flsub 0024  
                   ??___fltol 0007                     ??___lldiv 0017                        _efgtoa 202A  
                      _floorf 3938                        _memcpy 473E              ?_PWM2_Initialize 0001  
        _PWM2_OutputStatusGet 4C3C          read_prec_or_width@ap 0004                        clear_0 47C0  
                      clear_1 47D6              ___awdiv@quotient 0009               ___awmod@divisor 0005  
                      isa$std 0001               ___awmod@counter 0007                        pad@buf 0012  
                      dtoa@fp 0019                        _strcpy 48E0                        fputc@c 0003  
                      fputs@c 000E                        fputs@i 000F                        fputs@s 000B  
             ___fpclassifyf@e 000B               ___fpclassifyf@u 000D               ___fpclassifyf@x 0003  
                __mediumconst 2000                        tblptrh 3FF7                        tblptrl 3FF6  
                      tblptru 3FF8                        putch@c 0001              __end_of_vfprintf 49F6  
     __end_of_TMR2_StartTimer 4C5E                     ??_sprintf 0046                    ___flge@ff1 001C  
                  ___flge@ff2 0020               ??___fpclassifyf 0007                    ___fleq@ff1 0003  
                  ___fleq@ff2 0007                     ?_LCD_Char 0001                    __accesstop 0060  
     __end_of__initialization 47E8                     ?_LCD_Init 0001               ??_LCD_String_xy 000F  
                  ___flneg@f1 0003    __end_of_PWM2_LoadDutyValue 4B48                 ___rparam_used 0001  
                  ___fltol@f1 0003                __pcstackCOMRAM 0001                  __pidataBANK0 4C28  
              ivt0x8_undefint 00AC                 __end_of_fputc 44AE                 __end_of_fputs 4A36  
       ?_PWM2_OutputStatusGet 0001                   ?_Initialize 0001                 __end_of_putch 4C64  
            ?_TMR2_Initialize 0001                  ??_LCD_String 000C                       ??_fputc 0006  
                     ??_fputs 000E                       ??_putch 0003                    __pbssBANK0 00CF  
                  __pbssBANK1 0100                    ??_LCD_Char 0009                    ??_LCD_Init 000A  
          __end_of_LCD_String 466E                       IVTBASEH 3FD6                       IVTBASEL 3FD5  
                     IVTBASEU 3FD7                       ?___flge 001C                       ?___fleq 0003  
                     ?___lmul 0003                     PWM@F16999 00BB                       ?_efgtoa 0030  
                     _CCP2CON 3F7A                       ?_floorf 001C                       ?_memcpy 0003  
              ___lmul@product 000B                       ?_strcpy 0003                       _PPSLOCK 3ABF  
                ??_TMR2_Start 0003              ?_TMR2_StartTimer 0001                       _MSdelay 4896  
               LCD_String@msg 000A                       __Hparam 0000                       __Lparam 0000  
      ??_PWM2_OutputStatusGet 0003                       ___fladd 2A10                       ___fldiv 3310  
                     ___awdiv 41DA                       ___flneg 4A76                       ___awmod 4354  
                     ___flmul 2EC6                       ___flsub 4926                       ___fltol 3ED2  
                     ___lldiv 4558                     ?_vfprintf 0042                  __psmallconst 2000  
          __end_of_TMR2_Start 4C62                       __pcinit 4798                       __ramtop 2000  
                     __ptext0 4B48                       __ptext1 3B4A                       __ptext2 4AAE  
                     __ptext3 49B2                       __ptext4 36A0                       __ptext5 429C  
                     __ptext6 202A                       __ptext7 48E0                       __ptext8 473E  
                     __ptext9 47EE                     _T2CONbits 3FAC         read_prec_or_width@fmt 0003  
            ___awmod@dividend 0003                     _IOCCFbits 3A67                       efgtoa@c 0035  
                     efgtoa@d 006B                       efgtoa@e 006F                       efgtoa@f 0031  
                     efgtoa@g 0084                       efgtoa@h 0079                       efgtoa@i 0077  
                     efgtoa@l 007D                       efgtoa@m 006D                       efgtoa@n 0082  
                     efgtoa@p 0062                       efgtoa@t 0064                       efgtoa@u 0088  
                     efgtoa@w 0071                     _IOCCPbits 3A65                     _LCD_Clear 4C50  
                     _sprintf 4AAE          end_of_initialization 47E8                       floorf@e 002A  
                     floorf@m 0026                       floorf@u 002C                       floorf@x 001C  
                     memcpy@d 0009                       memcpy@n 0007                       memcpy@s 000B  
                     fputc@fp 0005                LCD_Command@cmd 0009                       fputs@fp 000D  
          _read_prec_or_width 429C               ___lldiv@divisor 0013               ___lldiv@counter 001B  
           __end_of_vfpfcnvrt 3938                    efgtoa@mode 0069                    efgtoa@sign 0081  
                     postdec1 3FE5                       postdec2 3FDD           ?_read_prec_or_width 0003  
                     postinc0 3FEE                       postinc1 3FE6                       postinc2 3FDE  
            vfpfcnvrt@convarg 003C                    ??_vfprintf 0045                       strcpy@d 0007  
                   _PORTBbits 3FCB                     _PORTEbits 3FCE                   ___fladd@grs 0012  
                   _TRISAbits 3FC2                     _TRISBbits 3FC3                    ?_LCD_Clear 0001  
        ??_read_prec_or_width 0005                   ___fldiv@grs 0016                   ___fldiv@rem 000F  
                 ___flmul@grs 0010                   _CCP2CONbits 3F7A                 ??_LCD_Command 0009  
              __end_of___flge 40DC                __end_of___fleq 4558                __end_of___lmul 46D8  
                ??_Initialize 0003                   vfpfcnvrt@ap 003A                   vfpfcnvrt@cp 0041  
                 vfpfcnvrt@fp 0038                __end_of_efgtoa 2A10            _PWM2_LoadDutyValue 4B18  
              __end_of_floorf 3B4A                __end_of_memcpy 4798                    floorf@F521 0054  
              __end_of_strcpy 4926           start_initialization 4798                   __end_of_ISR 4896  
                 __end_of_PWM 3D58           ?_PWM2_LoadDutyValue 0003                   __end_of_abs 4B18  
                 __end_of_pad 473E                    ivt0x8_base 0008         __end_of___fpclassifyf 41DA  
          __end_of_Initialize 49B2         __end_of_LCD_String_xy 4A76          ??_PWM2_LoadDutyValue 0005  
                 vfprintf@fmt 0043                      ??___flge 0024                      ??___fleq 000B  
 PWM2_LoadDutyValue@dutyValue 0003                      ??___lmul 000B                      ??_efgtoa 0036  
                 __pdataBANK0 00BB                      ??_floorf 0020                      ??_memcpy 0009  
                    ??_strcpy 0006                     ___fladd@a 0007                     ___fladd@b 0003  
                   ___fldiv@a 0007                     ___fldiv@b 0003           __end_of_LCD_Command 4BC2  
                   ___flmul@a 0007                     ___flmul@b 0003                   __pbssCOMRAM 0054  
                   ___flsub@a 0020                     ___flsub@b 001C                 __pcstackBANK0 0060  
                 ??_LCD_Clear 000A                      ?_MSdelay 0003                   _efgtoa$1333 0066  
                   _dtoa$1302 001C                      ?___fladd 0003                      ?___fldiv 0003  
                    ?___awdiv 0003                      ?___flneg 0003                      ?___awmod 0003  
                    ?___flmul 0003                      ?___flsub 001C                      ?___fltol 0003  
                    ?___lldiv 000F                      PWM@dcVal 00A1                   __smallconst 2000  
                    PWM@index 00B9         LCD_String_xy@location 0010                      ?_sprintf 008C  
                    _T2CLKCON 3FAE                      MSdelay@i 0005                      MSdelay@j 0007  
                    _LCD_Char 4BC2             ??_PWM2_Initialize 0003                      _LCD_Init 4B72  
                    _PIE0bits 3990                      i2u205_40 4854                      i2u205_41 4850  
                    i2u206_40 486C                      i2u206_41 4866                      i2u207_45 486E  
                    i2u208_40 488E                      i2u208_41 488A                      _PIR4bits 39A4  
                 _LCD_Command 4B9C                     _vfpfcnvrt 36A0                    _ADCON0bits 3EF8  
                    _WPUCbits 3A61  __end_of_PWM_Output_D8_Enable 4BFC                    vfpfcnvrt@c 0040  
                 _INTCON0bits 3FD2             ___lmul@multiplier 0003                     copy_data0 47AC  
                  PWM@percent 0092             ??_TMR2_Initialize 0003                      __Hrparam 0000  
                   memcpy@tmp 000D                    vfprintf@ap 0044                      __Lrparam 0000  
                  vfprintf@fp 0042                    ?_vfpfcnvrt 0038                    _ANSELAbits 3A40  
          ___fpclassifyf@F465 0058                    sprintf@fmt 008D                      __pivt0x8 0008  
                    __ptext10 3938                      __ptext11 40DC                      __ptext20 3D58  
                    __ptext12 3ED2                      __ptext21 46D8                      __ptext13 4926  
                    __ptext30 4C58                      __ptext22 49F6                      __ptext14 2A10  
                    __ptext31 4C5E                      __ptext23 4402                      __ptext15 4A76  
                    __ptext40 4C50                      __ptext32 4BFC                      __ptext24 4C62  
                    __ptext16 2EC6                      __ptext41 4B72                      __ptext33 4BE0  
                    __ptext25 4AE4                      __ptext17 3FD8                      __ptext42 4B9C  
                    __ptext34 4C3C                      __ptext26 4354                      __ptext18 44AE  
                    __ptext43 4896                      __ptext35 4B18                      __ptext27 41DA  
                    __ptext19 3310                      __ptext44 496C                      __ptext36 4C12  
                    __ptext28 466E                      __ptext45 4844                      __ptext37 4A36  
                    __ptext29 4558                      __ptext38 45FC                      __ptext39 4BC2  
                  strcpy@dest 0003                    MSdelay@val 0003                      efgtoa@fp 0030  
                    efgtoa@ne 0060                      efgtoa@pp 0068                      efgtoa@ou 0073  
                    isa$xinst 0000                      _vfprintf 49B2             ??_TMR2_StartTimer 0003  
                  _LCD_String 45FC                   _OSCSTATbits 39DC                      memcpy@d1 0003  
                    memcpy@s1 0005                      intlevel2 0000                     sprintf@ap 0046  
            ___lldiv@dividend 000F                     strcpy@src 0005                   _PPSLOCKbits 3ABF  
                 efgtoa@nmode 006A          _PWM_Output_D8_Enable 4BE0                   ??_vfpfcnvrt 003B  
                    sprintf@f 0047                      sprintf@s 008C              ___lldiv@quotient 0017  
             _PWM2_Initialize 4C12                    _TMR2_Start 4C5E                 ___fladd@signs 000F  
                ___fladd@aexp 0010                  ___fladd@bexp 0011             PWM@checkdutyCycle 00B7  
