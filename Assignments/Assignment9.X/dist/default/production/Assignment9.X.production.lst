

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Apr 29 11:40:42 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=3
    17                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=2
    18                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=3
    20                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=1
    24                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=2
    33                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=2
    34                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=2
    35                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1,group=2
    36                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1,group=2
    37                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=1
    38                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,group=1
    39                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1,group=3
    40                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1,group=3
    41                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1,group=3
    42                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1,group=3
    43                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1,group=2
    44                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1,group=2
    46                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1,group=2
    47                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text48,global,reloc=4,class=CODE,space=0,delta=1
    63                           	psect	ivt0x8,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
    64                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    66                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    67   000000                     
    68                           ; Generated 12/10/2023 GMT
    69                           ; 
    70                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution. Publication is not required when
    84                           ;        this file is used in an embedded application.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC18F47K42 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102   003FE0                     bsr             equ	16352
   103   003FE9                     fsr0            equ	16361
   104   003FEA                     fsr0h           equ	16362
   105   003FE9                     fsr0l           equ	16361
   106   003FE1                     fsr1            equ	16353
   107   003FE2                     fsr1h           equ	16354
   108   003FE1                     fsr1l           equ	16353
   109   003FD9                     fsr2            equ	16345
   110   003FDA                     fsr2h           equ	16346
   111   003FD9                     fsr2l           equ	16345
   112   003FEF                     indf0           equ	16367
   113   003FE7                     indf1           equ	16359
   114   003FDF                     indf2           equ	16351
   115   003FD2                     intcon          equ	16338
   116   0039E5                     nvmcon          equ	14821
   117   003FF9                     pcl             equ	16377
   118   003FFA                     pclath          equ	16378
   119   003FFB                     pclatu          equ	16379
   120   003FEB                     plusw0          equ	16363
   121   003FE3                     plusw1          equ	16355
   122   003FDB                     plusw2          equ	16347
   123   003FED                     postdec0        equ	16365
   124   003FE5                     postdec1        equ	16357
   125   003FDD                     postdec2        equ	16349
   126   003FEE                     postinc0        equ	16366
   127   003FE6                     postinc1        equ	16358
   128   003FDE                     postinc2        equ	16350
   129   003FEC                     preinc0         equ	16364
   130   003FE4                     preinc1         equ	16356
   131   003FDC                     preinc2         equ	16348
   132   003FF3                     prod            equ	16371
   133   003FF4                     prodh           equ	16372
   134   003FF3                     prodl           equ	16371
   135   003FD8                     status          equ	16344
   136   003FF5                     tablat          equ	16373
   137   003FF6                     tblptr          equ	16374
   138   003FF7                     tblptrh         equ	16375
   139   003FF6                     tblptrl         equ	16374
   140   003FF8                     tblptru         equ	16376
   141   003FFD                     tosl            equ	16381
   142   003FE8                     wreg            equ	16360
   143   003880                     STATUS_CSHAD    equ	14464	;# 
   144   003881                     WREG_CSHAD      equ	14465	;# 
   145   003882                     BSR_CSHAD       equ	14466	;# 
   146   003883                     SHADCON         equ	14467	;# 
   147   003884                     STATUS_SHAD     equ	14468	;# 
   148   003885                     WREG_SHAD       equ	14469	;# 
   149   003886                     BSR_SHAD        equ	14470	;# 
   150   003887                     PCLATH_SHAD     equ	14471	;# 
   151   003888                     PCLATU_SHAD     equ	14472	;# 
   152   003889                     FSR0SH          equ	14473	;# 
   153   003889                     FSR0L_SHAD      equ	14473	;# 
   154   00388A                     FSR0H_SHAD      equ	14474	;# 
   155   00388B                     FSR1SH          equ	14475	;# 
   156   00388B                     FSR1L_SHAD      equ	14475	;# 
   157   00388C                     FSR1H_SHAD      equ	14476	;# 
   158   00388D                     FSR2SH          equ	14477	;# 
   159   00388D                     FSR2L_SHAD      equ	14477	;# 
   160   00388E                     FSR2H_SHAD      equ	14478	;# 
   161   00388F                     PRODSH          equ	14479	;# 
   162   00388F                     PRODL_SHAD      equ	14479	;# 
   163   003890                     PRODH_SHAD      equ	14480	;# 
   164   00389D                     IVTADL          equ	14493	;# 
   165   00389E                     IVTADH          equ	14494	;# 
   166   00389F                     IVTADU          equ	14495	;# 
   167   00395B                     WDTCON0         equ	14683	;# 
   168   00395C                     WDTCON1         equ	14684	;# 
   169   00395D                     WDTPSL          equ	14685	;# 
   170   00395E                     WDTPSH          equ	14686	;# 
   171   00395F                     WDTTMR          equ	14687	;# 
   172   003960                     CRCDATA         equ	14688	;# 
   173   003960                     CRCDATL         equ	14688	;# 
   174   003961                     CRCDATH         equ	14689	;# 
   175   003962                     CRCACC          equ	14690	;# 
   176   003962                     CRCACCL         equ	14690	;# 
   177   003963                     CRCACCH         equ	14691	;# 
   178   003964                     CRCSHFT         equ	14692	;# 
   179   003964                     CRCSHIFTL       equ	14692	;# 
   180   003965                     CRCSHIFTH       equ	14693	;# 
   181   003966                     CRCXOR          equ	14694	;# 
   182   003966                     CRCXORL         equ	14694	;# 
   183   003967                     CRCXORH         equ	14695	;# 
   184   003968                     CRCCON0         equ	14696	;# 
   185   003969                     CRCCON1         equ	14697	;# 
   186   003976                     SCANLADR        equ	14710	;# 
   187   003976                     SCANLADRL       equ	14710	;# 
   188   003977                     SCANLADRH       equ	14711	;# 
   189   003978                     SCANLADRU       equ	14712	;# 
   190   003979                     SCANHADR        equ	14713	;# 
   191   003979                     SCANHADRL       equ	14713	;# 
   192   00397A                     SCANHADRH       equ	14714	;# 
   193   00397B                     SCANHADRU       equ	14715	;# 
   194   00397C                     SCANCON0        equ	14716	;# 
   195   00397D                     SCANTRIG        equ	14717	;# 
   196   003980                     IPR0            equ	14720	;# 
   197   003981                     IPR1            equ	14721	;# 
   198   003982                     IPR2            equ	14722	;# 
   199   003983                     IPR3            equ	14723	;# 
   200   003984                     IPR4            equ	14724	;# 
   201   003985                     IPR5            equ	14725	;# 
   202   003986                     IPR6            equ	14726	;# 
   203   003987                     IPR7            equ	14727	;# 
   204   003988                     IPR8            equ	14728	;# 
   205   003989                     IPR9            equ	14729	;# 
   206   00398A                     IPR10           equ	14730	;# 
   207   003990                     PIE0            equ	14736	;# 
   208   003991                     PIE1            equ	14737	;# 
   209   003992                     PIE2            equ	14738	;# 
   210   003993                     PIE3            equ	14739	;# 
   211   003994                     PIE4            equ	14740	;# 
   212   003995                     PIE5            equ	14741	;# 
   213   003996                     PIE6            equ	14742	;# 
   214   003997                     PIE7            equ	14743	;# 
   215   003998                     PIE8            equ	14744	;# 
   216   003999                     PIE9            equ	14745	;# 
   217   00399A                     PIE10           equ	14746	;# 
   218   0039A0                     PIR0            equ	14752	;# 
   219   0039A1                     PIR1            equ	14753	;# 
   220   0039A2                     PIR2            equ	14754	;# 
   221   0039A3                     PIR3            equ	14755	;# 
   222   0039A4                     PIR4            equ	14756	;# 
   223   0039A5                     PIR5            equ	14757	;# 
   224   0039A6                     PIR6            equ	14758	;# 
   225   0039A7                     PIR7            equ	14759	;# 
   226   0039A8                     PIR8            equ	14760	;# 
   227   0039A9                     PIR9            equ	14761	;# 
   228   0039AA                     PIR10           equ	14762	;# 
   229   0039C0                     PMD0            equ	14784	;# 
   230   0039C1                     PMD1            equ	14785	;# 
   231   0039C2                     PMD2            equ	14786	;# 
   232   0039C3                     PMD3            equ	14787	;# 
   233   0039C4                     PMD4            equ	14788	;# 
   234   0039C5                     PMD5            equ	14789	;# 
   235   0039C6                     PMD6            equ	14790	;# 
   236   0039C7                     PMD7            equ	14791	;# 
   237   0039D0                     BORCON          equ	14800	;# 
   238   0039D1                     VREGCON         equ	14801	;# 
   239   0039D8                     CPUDOZE         equ	14808	;# 
   240   0039D9                     OSCCON1         equ	14809	;# 
   241   0039DA                     OSCCON2         equ	14810	;# 
   242   0039DB                     OSCCON3         equ	14811	;# 
   243   0039DC                     OSCSTAT         equ	14812	;# 
   244   0039DC                     OSCSTAT1        equ	14812	;# 
   245   0039DD                     OSCEN           equ	14813	;# 
   246   0039DE                     OSCTUNE         equ	14814	;# 
   247   0039DF                     OSCFRQ          equ	14815	;# 
   248   0039E0                     NVMADRL         equ	14816	;# 
   249   0039E1                     NVMADRH         equ	14817	;# 
   250   0039E3                     NVMDAT          equ	14819	;# 
   251   0039E5                     NVMCON1         equ	14821	;# 
   252   0039E6                     NVMCON2         equ	14822	;# 
   253   0039EF                     PRLOCK          equ	14831	;# 
   254   0039F1                     ISRPR           equ	14833	;# 
   255   0039F2                     MAINPR          equ	14834	;# 
   256   0039F3                     DMA1PR          equ	14835	;# 
   257   0039F4                     DMA2PR          equ	14836	;# 
   258   0039F7                     SCANPR          equ	14839	;# 
   259   003A00                     RA0PPS          equ	14848	;# 
   260   003A01                     RA1PPS          equ	14849	;# 
   261   003A02                     RA2PPS          equ	14850	;# 
   262   003A03                     RA3PPS          equ	14851	;# 
   263   003A04                     RA4PPS          equ	14852	;# 
   264   003A05                     RA5PPS          equ	14853	;# 
   265   003A06                     RA6PPS          equ	14854	;# 
   266   003A07                     RA7PPS          equ	14855	;# 
   267   003A08                     RB0PPS          equ	14856	;# 
   268   003A09                     RB1PPS          equ	14857	;# 
   269   003A0A                     RB2PPS          equ	14858	;# 
   270   003A0B                     RB3PPS          equ	14859	;# 
   271   003A0C                     RB4PPS          equ	14860	;# 
   272   003A0D                     RB5PPS          equ	14861	;# 
   273   003A0E                     RB6PPS          equ	14862	;# 
   274   003A0F                     RB7PPS          equ	14863	;# 
   275   003A10                     RC0PPS          equ	14864	;# 
   276   003A11                     RC1PPS          equ	14865	;# 
   277   003A12                     RC2PPS          equ	14866	;# 
   278   003A13                     RC3PPS          equ	14867	;# 
   279   003A14                     RC4PPS          equ	14868	;# 
   280   003A15                     RC5PPS          equ	14869	;# 
   281   003A16                     RC6PPS          equ	14870	;# 
   282   003A17                     RC7PPS          equ	14871	;# 
   283   003A18                     RD0PPS          equ	14872	;# 
   284   003A19                     RD1PPS          equ	14873	;# 
   285   003A1A                     RD2PPS          equ	14874	;# 
   286   003A1B                     RD3PPS          equ	14875	;# 
   287   003A1C                     RD4PPS          equ	14876	;# 
   288   003A1D                     RD5PPS          equ	14877	;# 
   289   003A1E                     RD6PPS          equ	14878	;# 
   290   003A1F                     RD7PPS          equ	14879	;# 
   291   003A20                     RE0PPS          equ	14880	;# 
   292   003A21                     RE1PPS          equ	14881	;# 
   293   003A22                     RE2PPS          equ	14882	;# 
   294   003A40                     ANSELA          equ	14912	;# 
   295   003A41                     WPUA            equ	14913	;# 
   296   003A42                     ODCONA          equ	14914	;# 
   297   003A43                     SLRCONA         equ	14915	;# 
   298   003A44                     INLVLA          equ	14916	;# 
   299   003A45                     IOCAP           equ	14917	;# 
   300   003A46                     IOCAN           equ	14918	;# 
   301   003A47                     IOCAF           equ	14919	;# 
   302   003A50                     ANSELB          equ	14928	;# 
   303   003A51                     WPUB            equ	14929	;# 
   304   003A52                     ODCONB          equ	14930	;# 
   305   003A53                     SLRCONB         equ	14931	;# 
   306   003A54                     INLVLB          equ	14932	;# 
   307   003A55                     IOCBP           equ	14933	;# 
   308   003A56                     IOCBN           equ	14934	;# 
   309   003A57                     IOCBF           equ	14935	;# 
   310   003A5A                     RB1I2C          equ	14938	;# 
   311   003A5B                     RB2I2C          equ	14939	;# 
   312   003A60                     ANSELC          equ	14944	;# 
   313   003A61                     WPUC            equ	14945	;# 
   314   003A62                     ODCONC          equ	14946	;# 
   315   003A63                     SLRCONC         equ	14947	;# 
   316   003A64                     INLVLC          equ	14948	;# 
   317   003A65                     IOCCP           equ	14949	;# 
   318   003A66                     IOCCN           equ	14950	;# 
   319   003A67                     IOCCF           equ	14951	;# 
   320   003A6A                     RC3I2C          equ	14954	;# 
   321   003A6B                     RC4I2C          equ	14955	;# 
   322   003A70                     ANSELD          equ	14960	;# 
   323   003A71                     WPUD            equ	14961	;# 
   324   003A72                     ODCOND          equ	14962	;# 
   325   003A73                     SLRCOND         equ	14963	;# 
   326   003A74                     INLVLD          equ	14964	;# 
   327   003A7A                     RD0I2C          equ	14970	;# 
   328   003A7B                     RD1I2C          equ	14971	;# 
   329   003A80                     ANSELE          equ	14976	;# 
   330   003A81                     WPUE            equ	14977	;# 
   331   003A82                     ODCONE          equ	14978	;# 
   332   003A83                     SLRCONE         equ	14979	;# 
   333   003A84                     INLVLE          equ	14980	;# 
   334   003A85                     IOCEP           equ	14981	;# 
   335   003A86                     IOCEN           equ	14982	;# 
   336   003A87                     IOCEF           equ	14983	;# 
   337   003ABF                     PPSLOCK         equ	15039	;# 
   338   003AC0                     INT0PPS         equ	15040	;# 
   339   003AC1                     INT1PPS         equ	15041	;# 
   340   003AC2                     INT2PPS         equ	15042	;# 
   341   003AC3                     T0CKIPPS        equ	15043	;# 
   342   003AC4                     T1CKIPPS        equ	15044	;# 
   343   003AC5                     T1GPPS          equ	15045	;# 
   344   003AC6                     T3CKIPPS        equ	15046	;# 
   345   003AC7                     T3GPPS          equ	15047	;# 
   346   003AC8                     T5CKIPPS        equ	15048	;# 
   347   003AC9                     T5GPPS          equ	15049	;# 
   348   003ACA                     T2INPPS         equ	15050	;# 
   349   003ACB                     T4INPPS         equ	15051	;# 
   350   003ACC                     T6INPPS         equ	15052	;# 
   351   003ACD                     CCP1PPS         equ	15053	;# 
   352   003ACE                     CCP2PPS         equ	15054	;# 
   353   003ACF                     CCP3PPS         equ	15055	;# 
   354   003AD0                     CCP4PPS         equ	15056	;# 
   355   003AD1                     SMT1WINPPS      equ	15057	;# 
   356   003AD2                     SMT1SIGPPS      equ	15058	;# 
   357   003AD3                     CWG1INPPS       equ	15059	;# 
   358   003AD4                     CWG2INPPS       equ	15060	;# 
   359   003AD5                     CWG3INPPS       equ	15061	;# 
   360   003AD6                     MD1CARLPPS      equ	15062	;# 
   361   003AD7                     MD1CARHPPS      equ	15063	;# 
   362   003AD8                     MD1SRCPPS       equ	15064	;# 
   363   003AD9                     CLCIN0PPS       equ	15065	;# 
   364   003ADA                     CLCIN1PPS       equ	15066	;# 
   365   003ADB                     CLCIN2PPS       equ	15067	;# 
   366   003ADC                     CLCIN3PPS       equ	15068	;# 
   367   003ADD                     ADACTPPS        equ	15069	;# 
   368   003ADE                     SPI1SCKPPS      equ	15070	;# 
   369   003ADF                     SPI1SDIPPS      equ	15071	;# 
   370   003AE0                     SPI1SSPPS       equ	15072	;# 
   371   003AE1                     I2C1SCLPPS      equ	15073	;# 
   372   003AE2                     I2C1SDAPPS      equ	15074	;# 
   373   003AE3                     I2C2SCLPPS      equ	15075	;# 
   374   003AE4                     I2C2SDAPPS      equ	15076	;# 
   375   003AE5                     U1RXPPS         equ	15077	;# 
   376   003AE6                     U1CTSPPS        equ	15078	;# 
   377   003AE8                     U2RXPPS         equ	15080	;# 
   378   003AE9                     U2CTSPPS        equ	15081	;# 
   379   003BC9                     DMA2BUF         equ	15305	;# 
   380   003BCA                     DMA2DCNT        equ	15306	;# 
   381   003BCA                     DMA2DCNTL       equ	15306	;# 
   382   003BCB                     DMA2DCNTH       equ	15307	;# 
   383   003BCC                     DMA2DPTR        equ	15308	;# 
   384   003BCC                     DMA2DPTRL       equ	15308	;# 
   385   003BCD                     DMA2DPTRH       equ	15309	;# 
   386   003BCE                     DMA2DSZ         equ	15310	;# 
   387   003BCE                     DMA2DSZL        equ	15310	;# 
   388   003BCF                     DMA2DSZH        equ	15311	;# 
   389   003BD0                     DMA2DSA         equ	15312	;# 
   390   003BD0                     DMA2DSAL        equ	15312	;# 
   391   003BD1                     DMA2DSAH        equ	15313	;# 
   392   003BD2                     DMA2SCNT        equ	15314	;# 
   393   003BD2                     DMA2SCNTL       equ	15314	;# 
   394   003BD3                     DMA2SCNTH       equ	15315	;# 
   395   003BD4                     DMA2SPTR        equ	15316	;# 
   396   003BD4                     DMA2SPTRL       equ	15316	;# 
   397   003BD5                     DMA2SPTRH       equ	15317	;# 
   398   003BD6                     DMA2SPTRU       equ	15318	;# 
   399   003BD7                     DMA2SSZ         equ	15319	;# 
   400   003BD7                     DMA2SSZL        equ	15319	;# 
   401   003BD8                     DMA2SSZH        equ	15320	;# 
   402   003BD9                     DMA2SSA         equ	15321	;# 
   403   003BD9                     DMA2SSAL        equ	15321	;# 
   404   003BDA                     DMA2SSAH        equ	15322	;# 
   405   003BDB                     DMA2SSAU        equ	15323	;# 
   406   003BDC                     DMA2CON0        equ	15324	;# 
   407   003BDD                     DMA2CON1        equ	15325	;# 
   408   003BDE                     DMA2AIRQ        equ	15326	;# 
   409   003BDF                     DMA2SIRQ        equ	15327	;# 
   410   003BE9                     DMA1BUF         equ	15337	;# 
   411   003BEA                     DMA1DCNT        equ	15338	;# 
   412   003BEA                     DMA1DCNTL       equ	15338	;# 
   413   003BEB                     DMA1DCNTH       equ	15339	;# 
   414   003BEC                     DMA1DPTR        equ	15340	;# 
   415   003BEC                     DMA1DPTRL       equ	15340	;# 
   416   003BED                     DMA1DPTRH       equ	15341	;# 
   417   003BEE                     DMA1DSZ         equ	15342	;# 
   418   003BEE                     DMA1DSZL        equ	15342	;# 
   419   003BEF                     DMA1DSZH        equ	15343	;# 
   420   003BF0                     DMA1DSA         equ	15344	;# 
   421   003BF0                     DMA1DSAL        equ	15344	;# 
   422   003BF1                     DMA1DSAH        equ	15345	;# 
   423   003BF2                     DMA1SCNT        equ	15346	;# 
   424   003BF2                     DMA1SCNTL       equ	15346	;# 
   425   003BF3                     DMA1SCNTH       equ	15347	;# 
   426   003BF4                     DMA1SPTR        equ	15348	;# 
   427   003BF4                     DMA1SPTRL       equ	15348	;# 
   428   003BF5                     DMA1SPTRH       equ	15349	;# 
   429   003BF6                     DMA1SPTRU       equ	15350	;# 
   430   003BF7                     DMA1SSZ         equ	15351	;# 
   431   003BF7                     DMA1SSZL        equ	15351	;# 
   432   003BF8                     DMA1SSZH        equ	15352	;# 
   433   003BF9                     DMA1SSA         equ	15353	;# 
   434   003BF9                     DMA1SSAL        equ	15353	;# 
   435   003BFA                     DMA1SSAH        equ	15354	;# 
   436   003BFB                     DMA1SSAU        equ	15355	;# 
   437   003BFC                     DMA1CON0        equ	15356	;# 
   438   003BFD                     DMA1CON1        equ	15357	;# 
   439   003BFE                     DMA1AIRQ        equ	15358	;# 
   440   003BFF                     DMA1SIRQ        equ	15359	;# 
   441   003C56                     CLC4CON         equ	15446	;# 
   442   003C57                     CLC4POL         equ	15447	;# 
   443   003C58                     CLC4SEL0        equ	15448	;# 
   444   003C59                     CLC4SEL1        equ	15449	;# 
   445   003C5A                     CLC4SEL2        equ	15450	;# 
   446   003C5B                     CLC4SEL3        equ	15451	;# 
   447   003C5C                     CLC4GLS0        equ	15452	;# 
   448   003C5D                     CLC4GLS1        equ	15453	;# 
   449   003C5E                     CLC4GLS2        equ	15454	;# 
   450   003C5F                     CLC4GLS3        equ	15455	;# 
   451   003C60                     CLC3CON         equ	15456	;# 
   452   003C61                     CLC3POL         equ	15457	;# 
   453   003C62                     CLC3SEL0        equ	15458	;# 
   454   003C63                     CLC3SEL1        equ	15459	;# 
   455   003C64                     CLC3SEL2        equ	15460	;# 
   456   003C65                     CLC3SEL3        equ	15461	;# 
   457   003C66                     CLC3GLS0        equ	15462	;# 
   458   003C67                     CLC3GLS1        equ	15463	;# 
   459   003C68                     CLC3GLS2        equ	15464	;# 
   460   003C69                     CLC3GLS3        equ	15465	;# 
   461   003C6A                     CLC2CON         equ	15466	;# 
   462   003C6B                     CLC2POL         equ	15467	;# 
   463   003C6C                     CLC2SEL0        equ	15468	;# 
   464   003C6D                     CLC2SEL1        equ	15469	;# 
   465   003C6E                     CLC2SEL2        equ	15470	;# 
   466   003C6F                     CLC2SEL3        equ	15471	;# 
   467   003C70                     CLC2GLS0        equ	15472	;# 
   468   003C71                     CLC2GLS1        equ	15473	;# 
   469   003C72                     CLC2GLS2        equ	15474	;# 
   470   003C73                     CLC2GLS3        equ	15475	;# 
   471   003C74                     CLC1CON         equ	15476	;# 
   472   003C75                     CLC1POL         equ	15477	;# 
   473   003C76                     CLC1SEL0        equ	15478	;# 
   474   003C77                     CLC1SEL1        equ	15479	;# 
   475   003C78                     CLC1SEL2        equ	15480	;# 
   476   003C79                     CLC1SEL3        equ	15481	;# 
   477   003C7A                     CLC1GLS0        equ	15482	;# 
   478   003C7B                     CLC1GLS1        equ	15483	;# 
   479   003C7C                     CLC1GLS2        equ	15484	;# 
   480   003C7D                     CLC1GLS3        equ	15485	;# 
   481   003C7E                     CLCDATA0        equ	15486	;# 
   482   003CE5                     CLKRCON         equ	15589	;# 
   483   003CE6                     CLKRCLK         equ	15590	;# 
   484   003CFA                     MD1CON0         equ	15610	;# 
   485   003CFB                     MD1CON1         equ	15611	;# 
   486   003CFC                     MD1SRC          equ	15612	;# 
   487   003CFD                     MD1CARL         equ	15613	;# 
   488   003CFE                     MD1CARH         equ	15614	;# 
   489   003D10                     SPI1RXB         equ	15632	;# 
   490   003D11                     SPI1TXB         equ	15633	;# 
   491   003D12                     SPI1TCNT        equ	15634	;# 
   492   003D12                     SPI1TCNTL       equ	15634	;# 
   493   003D13                     SPI1TCNTH       equ	15635	;# 
   494   003D14                     SPI1CON0        equ	15636	;# 
   495   003D15                     SPI1CON1        equ	15637	;# 
   496   003D16                     SPI1CON2        equ	15638	;# 
   497   003D17                     SPI1STATUS      equ	15639	;# 
   498   003D18                     SPI1TWIDTH      equ	15640	;# 
   499   003D19                     SPI1BAUD        equ	15641	;# 
   500   003D1A                     SPI1INTF        equ	15642	;# 
   501   003D1B                     SPI1INTE        equ	15643	;# 
   502   003D1C                     SPI1CLK         equ	15644	;# 
   503   003D54                     I2C2RXB         equ	15700	;# 
   504   003D55                     I2C2TXB         equ	15701	;# 
   505   003D56                     I2C2CNT         equ	15702	;# 
   506   003D57                     I2C2ADB0        equ	15703	;# 
   507   003D58                     I2C2ADB1        equ	15704	;# 
   508   003D59                     I2C2ADR0        equ	15705	;# 
   509   003D5A                     I2C2ADR1        equ	15706	;# 
   510   003D5B                     I2C2ADR2        equ	15707	;# 
   511   003D5C                     I2C2ADR3        equ	15708	;# 
   512   003D5D                     I2C2CON0        equ	15709	;# 
   513   003D5E                     I2C2CON1        equ	15710	;# 
   514   003D5F                     I2C2CON2        equ	15711	;# 
   515   003D60                     I2C2ERR         equ	15712	;# 
   516   003D61                     I2C2STAT0       equ	15713	;# 
   517   003D62                     I2C2STAT1       equ	15714	;# 
   518   003D63                     I2C2PIR         equ	15715	;# 
   519   003D64                     I2C2PIE         equ	15716	;# 
   520   003D65                     I2C2CLK         equ	15717	;# 
   521   003D66                     I2C2BTO         equ	15718	;# 
   522   003D6A                     I2C1RXB         equ	15722	;# 
   523   003D6B                     I2C1TXB         equ	15723	;# 
   524   003D6C                     I2C1CNT         equ	15724	;# 
   525   003D6D                     I2C1ADB0        equ	15725	;# 
   526   003D6E                     I2C1ADB1        equ	15726	;# 
   527   003D6F                     I2C1ADR0        equ	15727	;# 
   528   003D70                     I2C1ADR1        equ	15728	;# 
   529   003D71                     I2C1ADR2        equ	15729	;# 
   530   003D72                     I2C1ADR3        equ	15730	;# 
   531   003D73                     I2C1CON0        equ	15731	;# 
   532   003D74                     I2C1CON1        equ	15732	;# 
   533   003D75                     I2C1CON2        equ	15733	;# 
   534   003D76                     I2C1ERR         equ	15734	;# 
   535   003D77                     I2C1STAT0       equ	15735	;# 
   536   003D78                     I2C1STAT1       equ	15736	;# 
   537   003D79                     I2C1PIR         equ	15737	;# 
   538   003D7A                     I2C1PIE         equ	15738	;# 
   539   003D7B                     I2C1CLK         equ	15739	;# 
   540   003D7C                     I2C1BTO         equ	15740	;# 
   541   003DD0                     U2RXB           equ	15824	;# 
   542   003DD0                     U2RXBL          equ	15824	;# 
   543   003DD2                     U2TXB           equ	15826	;# 
   544   003DD2                     U2TXBL          equ	15826	;# 
   545   003DD4                     U2P1            equ	15828	;# 
   546   003DD4                     U2P1L           equ	15828	;# 
   547   003DD6                     U2P2            equ	15830	;# 
   548   003DD6                     U2P2L           equ	15830	;# 
   549   003DD8                     U2P3            equ	15832	;# 
   550   003DD8                     U2P3L           equ	15832	;# 
   551   003DDA                     U2CON0          equ	15834	;# 
   552   003DDB                     U2CON1          equ	15835	;# 
   553   003DDC                     U2CON2          equ	15836	;# 
   554   003DDD                     U2BRG           equ	15837	;# 
   555   003DDD                     U2BRGL          equ	15837	;# 
   556   003DDE                     U2BRGH          equ	15838	;# 
   557   003DDF                     U2FIFO          equ	15839	;# 
   558   003DE0                     U2UIR           equ	15840	;# 
   559   003DE1                     U2ERRIR         equ	15841	;# 
   560   003DE2                     U2ERRIE         equ	15842	;# 
   561   003DE8                     U1RXB           equ	15848	;# 
   562   003DE8                     U1RXBL          equ	15848	;# 
   563   003DE9                     U1RXCHK         equ	15849	;# 
   564   003DEA                     U1TXB           equ	15850	;# 
   565   003DEA                     U1TXBL          equ	15850	;# 
   566   003DEB                     U1TXCHK         equ	15851	;# 
   567   003DEC                     U1P1            equ	15852	;# 
   568   003DEC                     U1P1L           equ	15852	;# 
   569   003DED                     U1P1H           equ	15853	;# 
   570   003DEE                     U1P2            equ	15854	;# 
   571   003DEE                     U1P2L           equ	15854	;# 
   572   003DEF                     U1P2H           equ	15855	;# 
   573   003DF0                     U1P3            equ	15856	;# 
   574   003DF0                     U1P3L           equ	15856	;# 
   575   003DF1                     U1P3H           equ	15857	;# 
   576   003DF2                     U1CON0          equ	15858	;# 
   577   003DF3                     U1CON1          equ	15859	;# 
   578   003DF4                     U1CON2          equ	15860	;# 
   579   003DF5                     U1BRG           equ	15861	;# 
   580   003DF5                     U1BRGL          equ	15861	;# 
   581   003DF6                     U1BRGH          equ	15862	;# 
   582   003DF7                     U1FIFO          equ	15863	;# 
   583   003DF8                     U1UIR           equ	15864	;# 
   584   003DF9                     U1ERRIR         equ	15865	;# 
   585   003DFA                     U1ERRIE         equ	15866	;# 
   586   003E9C                     DAC1CON1        equ	16028	;# 
   587   003E9E                     DAC1CON0        equ	16030	;# 
   588   003EB8                     CM2CON0         equ	16056	;# 
   589   003EB9                     CM2CON1         equ	16057	;# 
   590   003EBA                     CM2NCH          equ	16058	;# 
   591   003EBB                     CM2PCH          equ	16059	;# 
   592   003EBC                     CM1CON0         equ	16060	;# 
   593   003EBD                     CM1CON1         equ	16061	;# 
   594   003EBE                     CM1NCH          equ	16062	;# 
   595   003EBF                     CM1PCH          equ	16063	;# 
   596   003EC0                     CMOUT           equ	16064	;# 
   597   003EC1                     FVRCON          equ	16065	;# 
   598   003EC3                     ZCDCON          equ	16067	;# 
   599   003EC9                     HLVDCON0        equ	16073	;# 
   600   003ECA                     HLVDCON1        equ	16074	;# 
   601   003ED7                     ADCP            equ	16087	;# 
   602   003EDE                     ADLTH           equ	16094	;# 
   603   003EDE                     ADLTHL          equ	16094	;# 
   604   003EDF                     ADLTHH          equ	16095	;# 
   605   003EE0                     ADUTH           equ	16096	;# 
   606   003EE0                     ADUTHL          equ	16096	;# 
   607   003EE1                     ADUTHH          equ	16097	;# 
   608   003EE2                     ADERR           equ	16098	;# 
   609   003EE2                     ADERRL          equ	16098	;# 
   610   003EE3                     ADERRH          equ	16099	;# 
   611   003EE4                     ADSTPT          equ	16100	;# 
   612   003EE4                     ADSTPTL         equ	16100	;# 
   613   003EE5                     ADSTPTH         equ	16101	;# 
   614   003EE6                     ADFLTR          equ	16102	;# 
   615   003EE6                     ADFLTRL         equ	16102	;# 
   616   003EE7                     ADFLTRH         equ	16103	;# 
   617   003EE8                     ADACC           equ	16104	;# 
   618   003EE8                     ADACCL          equ	16104	;# 
   619   003EE9                     ADACCH          equ	16105	;# 
   620   003EEA                     ADACCU          equ	16106	;# 
   621   003EEB                     ADCNT           equ	16107	;# 
   622   003EEC                     ADRPT           equ	16108	;# 
   623   003EED                     ADPREV          equ	16109	;# 
   624   003EED                     ADPREVL         equ	16109	;# 
   625   003EEE                     ADPREVH         equ	16110	;# 
   626   003EEF                     ADRES           equ	16111	;# 
   627   003EEF                     ADRESL          equ	16111	;# 
   628   003EF0                     ADRESH          equ	16112	;# 
   629   003EF1                     ADPCH           equ	16113	;# 
   630   003EF3                     ADACQ           equ	16115	;# 
   631   003EF3                     ADACQL          equ	16115	;# 
   632   003EF4                     ADACQH          equ	16116	;# 
   633   003EF5                     ADCAP           equ	16117	;# 
   634   003EF6                     ADPRE           equ	16118	;# 
   635   003EF6                     ADPREL          equ	16118	;# 
   636   003EF7                     ADPREH          equ	16119	;# 
   637   003EF8                     ADCON0          equ	16120	;# 
   638   003EF9                     ADCON1          equ	16121	;# 
   639   003EFA                     ADCON2          equ	16122	;# 
   640   003EFB                     ADCON3          equ	16123	;# 
   641   003EFC                     ADSTAT          equ	16124	;# 
   642   003EFD                     ADREF           equ	16125	;# 
   643   003EFE                     ADACT           equ	16126	;# 
   644   003EFF                     ADCLK           equ	16127	;# 
   645   003F12                     SMT1TMR         equ	16146	;# 
   646   003F12                     SMT1TMRL        equ	16146	;# 
   647   003F13                     SMT1TMRH        equ	16147	;# 
   648   003F14                     SMT1TMRU        equ	16148	;# 
   649   003F15                     SMT1CPR         equ	16149	;# 
   650   003F15                     SMT1CPRL        equ	16149	;# 
   651   003F16                     SMT1CPRH        equ	16150	;# 
   652   003F17                     SMT1CPRU        equ	16151	;# 
   653   003F18                     SMT1CPW         equ	16152	;# 
   654   003F18                     SMT1CPWL        equ	16152	;# 
   655   003F19                     SMT1CPWH        equ	16153	;# 
   656   003F1A                     SMT1CPWU        equ	16154	;# 
   657   003F1B                     SMT1PR          equ	16155	;# 
   658   003F1B                     SMT1PRL         equ	16155	;# 
   659   003F1C                     SMT1PRH         equ	16156	;# 
   660   003F1D                     SMT1PRU         equ	16157	;# 
   661   003F1E                     SMT1CON0        equ	16158	;# 
   662   003F1F                     SMT1CON1        equ	16159	;# 
   663   003F20                     SMT1STAT        equ	16160	;# 
   664   003F21                     SMT1CLK         equ	16161	;# 
   665   003F22                     SMT1SIG         equ	16162	;# 
   666   003F23                     SMT1WIN         equ	16163	;# 
   667   003F38                     NCO1ACC         equ	16184	;# 
   668   003F38                     NCO1ACCL        equ	16184	;# 
   669   003F39                     NCO1ACCH        equ	16185	;# 
   670   003F3A                     NCO1ACCU        equ	16186	;# 
   671   003F3B                     NCO1INC         equ	16187	;# 
   672   003F3B                     NCO1INCL        equ	16187	;# 
   673   003F3C                     NCO1INCH        equ	16188	;# 
   674   003F3D                     NCO1INCU        equ	16189	;# 
   675   003F3E                     NCO1CON         equ	16190	;# 
   676   003F3F                     NCO1CLK         equ	16191	;# 
   677   003F40                     CWG3CLK         equ	16192	;# 
   678   003F40                     CWG3CLKCON      equ	16192	;# 
   679   003F41                     CWG3ISM         equ	16193	;# 
   680   003F41                     CWG3DAT         equ	16193	;# 
   681   003F42                     CWG3DBR         equ	16194	;# 
   682   003F43                     CWG3DBF         equ	16195	;# 
   683   003F44                     CWG3CON0        equ	16196	;# 
   684   003F45                     CWG3CON1        equ	16197	;# 
   685   003F46                     CWG3AS0         equ	16198	;# 
   686   003F47                     CWG3AS1         equ	16199	;# 
   687   003F48                     CWG3STR         equ	16200	;# 
   688   003F49                     CWG2CLK         equ	16201	;# 
   689   003F49                     CWG2CLKCON      equ	16201	;# 
   690   003F4A                     CWG2ISM         equ	16202	;# 
   691   003F4A                     CWG2DAT         equ	16202	;# 
   692   003F4B                     CWG2DBR         equ	16203	;# 
   693   003F4C                     CWG2DBF         equ	16204	;# 
   694   003F4D                     CWG2CON0        equ	16205	;# 
   695   003F4E                     CWG2CON1        equ	16206	;# 
   696   003F4F                     CWG2AS0         equ	16207	;# 
   697   003F50                     CWG2AS1         equ	16208	;# 
   698   003F51                     CWG2STR         equ	16209	;# 
   699   003F52                     CWG1CLK         equ	16210	;# 
   700   003F52                     CWG1CLKCON      equ	16210	;# 
   701   003F53                     CWG1ISM         equ	16211	;# 
   702   003F53                     CWG1DAT         equ	16211	;# 
   703   003F54                     CWG1DBR         equ	16212	;# 
   704   003F55                     CWG1DBF         equ	16213	;# 
   705   003F56                     CWG1CON0        equ	16214	;# 
   706   003F57                     CWG1CON1        equ	16215	;# 
   707   003F58                     CWG1AS0         equ	16216	;# 
   708   003F59                     CWG1AS1         equ	16217	;# 
   709   003F5A                     CWG1STR         equ	16218	;# 
   710   003F5E                     CCPTMRS0        equ	16222	;# 
   711   003F5F                     CCPTMRS1        equ	16223	;# 
   712   003F60                     PWM8DC          equ	16224	;# 
   713   003F60                     PWM8DCL         equ	16224	;# 
   714   003F61                     PWM8DCH         equ	16225	;# 
   715   003F62                     PWM8CON         equ	16226	;# 
   716   003F64                     PWM7DC          equ	16228	;# 
   717   003F64                     PWM7DCL         equ	16228	;# 
   718   003F65                     PWM7DCH         equ	16229	;# 
   719   003F66                     PWM7CON         equ	16230	;# 
   720   003F68                     PWM6DC          equ	16232	;# 
   721   003F68                     PWM6DCL         equ	16232	;# 
   722   003F69                     PWM6DCH         equ	16233	;# 
   723   003F6A                     PWM6CON         equ	16234	;# 
   724   003F6C                     PWM5DC          equ	16236	;# 
   725   003F6C                     PWM5DCL         equ	16236	;# 
   726   003F6D                     PWM5DCH         equ	16237	;# 
   727   003F6E                     PWM5CON         equ	16238	;# 
   728   003F70                     CCPR4           equ	16240	;# 
   729   003F70                     CCPR4L          equ	16240	;# 
   730   003F71                     CCPR4H          equ	16241	;# 
   731   003F72                     CCP4CON         equ	16242	;# 
   732   003F73                     CCP4CAP         equ	16243	;# 
   733   003F74                     CCPR3           equ	16244	;# 
   734   003F74                     CCPR3L          equ	16244	;# 
   735   003F75                     CCPR3H          equ	16245	;# 
   736   003F76                     CCP3CON         equ	16246	;# 
   737   003F77                     CCP3CAP         equ	16247	;# 
   738   003F78                     CCPR2           equ	16248	;# 
   739   003F78                     CCPR2L          equ	16248	;# 
   740   003F79                     CCPR2H          equ	16249	;# 
   741   003F7A                     CCP2CON         equ	16250	;# 
   742   003F7B                     CCP2CAP         equ	16251	;# 
   743   003F7C                     CCPR1           equ	16252	;# 
   744   003F7C                     CCPR1L          equ	16252	;# 
   745   003F7D                     CCPR1H          equ	16253	;# 
   746   003F7E                     CCP1CON         equ	16254	;# 
   747   003F7F                     CCP1CAP         equ	16255	;# 
   748   003F92                     T6TMR           equ	16274	;# 
   749   003F92                     TMR6            equ	16274	;# 
   750   003F93                     T6PR            equ	16275	;# 
   751   003F93                     PR6             equ	16275	;# 
   752   003F94                     T6CON           equ	16276	;# 
   753   003F95                     T6HLT           equ	16277	;# 
   754   003F96                     T6CLKCON        equ	16278	;# 
   755   003F96                     T6CLK           equ	16278	;# 
   756   003F97                     T6RST           equ	16279	;# 
   757   003F98                     TMR5            equ	16280	;# 
   758   003F98                     TMR5L           equ	16280	;# 
   759   003F99                     TMR5H           equ	16281	;# 
   760   003F9A                     T5CON           equ	16282	;# 
   761   003F9A                     TMR5CON         equ	16282	;# 
   762   003F9B                     T5GCON          equ	16283	;# 
   763   003F9B                     TMR5GCON        equ	16283	;# 
   764   003F9C                     T5GATE          equ	16284	;# 
   765   003F9C                     TMR5GATE        equ	16284	;# 
   766   003F9D                     T5CLK           equ	16285	;# 
   767   003F9D                     TMR5CLK         equ	16285	;# 
   768   003F9D                     PR5             equ	16285	;# 
   769   003F9E                     T4TMR           equ	16286	;# 
   770   003F9E                     TMR4            equ	16286	;# 
   771   003F9F                     T4PR            equ	16287	;# 
   772   003F9F                     PR4             equ	16287	;# 
   773   003FA0                     T4CON           equ	16288	;# 
   774   003FA1                     T4HLT           equ	16289	;# 
   775   003FA2                     T4CLKCON        equ	16290	;# 
   776   003FA2                     T4CLK           equ	16290	;# 
   777   003FA3                     T4RST           equ	16291	;# 
   778   003FA4                     TMR3            equ	16292	;# 
   779   003FA4                     TMR3L           equ	16292	;# 
   780   003FA5                     TMR3H           equ	16293	;# 
   781   003FA6                     T3CON           equ	16294	;# 
   782   003FA6                     TMR3CON         equ	16294	;# 
   783   003FA7                     T3GCON          equ	16295	;# 
   784   003FA7                     TMR3GCON        equ	16295	;# 
   785   003FA8                     T3GATE          equ	16296	;# 
   786   003FA8                     TMR3GATE        equ	16296	;# 
   787   003FA9                     T3CLK           equ	16297	;# 
   788   003FA9                     TMR3CLK         equ	16297	;# 
   789   003FA9                     PR3             equ	16297	;# 
   790   003FAA                     T2TMR           equ	16298	;# 
   791   003FAA                     TMR2            equ	16298	;# 
   792   003FAB                     T2PR            equ	16299	;# 
   793   003FAB                     PR2             equ	16299	;# 
   794   003FAC                     T2CON           equ	16300	;# 
   795   003FAD                     T2HLT           equ	16301	;# 
   796   003FAE                     T2CLKCON        equ	16302	;# 
   797   003FAE                     T2CLK           equ	16302	;# 
   798   003FAF                     T2RST           equ	16303	;# 
   799   003FB0                     TMR1            equ	16304	;# 
   800   003FB0                     TMR1L           equ	16304	;# 
   801   003FB1                     TMR1H           equ	16305	;# 
   802   003FB2                     T1CON           equ	16306	;# 
   803   003FB2                     TMR1CON         equ	16306	;# 
   804   003FB3                     T1GCON          equ	16307	;# 
   805   003FB3                     TMR1GCON        equ	16307	;# 
   806   003FB4                     T1GATE          equ	16308	;# 
   807   003FB4                     TMR1GATE        equ	16308	;# 
   808   003FB5                     T1CLK           equ	16309	;# 
   809   003FB5                     TMR1CLK         equ	16309	;# 
   810   003FB5                     PR1             equ	16309	;# 
   811   003FB6                     TMR0L           equ	16310	;# 
   812   003FB6                     TMR0            equ	16310	;# 
   813   003FB7                     TMR0H           equ	16311	;# 
   814   003FB7                     PR0             equ	16311	;# 
   815   003FB8                     T0CON0          equ	16312	;# 
   816   003FB9                     T0CON1          equ	16313	;# 
   817   003FBA                     LATA            equ	16314	;# 
   818   003FBB                     LATB            equ	16315	;# 
   819   003FBC                     LATC            equ	16316	;# 
   820   003FBD                     LATD            equ	16317	;# 
   821   003FBE                     LATE            equ	16318	;# 
   822   003FC2                     TRISA           equ	16322	;# 
   823   003FC3                     TRISB           equ	16323	;# 
   824   003FC4                     TRISC           equ	16324	;# 
   825   003FC5                     TRISD           equ	16325	;# 
   826   003FC6                     TRISE           equ	16326	;# 
   827   003FCA                     PORTA           equ	16330	;# 
   828   003FCB                     PORTB           equ	16331	;# 
   829   003FCC                     PORTC           equ	16332	;# 
   830   003FCD                     PORTD           equ	16333	;# 
   831   003FCE                     PORTE           equ	16334	;# 
   832   003FD2                     INTCON0         equ	16338	;# 
   833   003FD3                     INTCON1         equ	16339	;# 
   834   003FD4                     IVTLOCK         equ	16340	;# 
   835   003FD5                     IVTBASE         equ	16341	;# 
   836   003FD5                     IVTBASEL        equ	16341	;# 
   837   003FD6                     IVTBASEH        equ	16342	;# 
   838   003FD7                     IVTBASEU        equ	16343	;# 
   839   003FD8                     STATUS          equ	16344	;# 
   840   003FD9                     FSR2            equ	16345	;# 
   841   003FD9                     FSR2L           equ	16345	;# 
   842   003FDA                     FSR2H           equ	16346	;# 
   843   003FDB                     PLUSW2          equ	16347	;# 
   844   003FDC                     PREINC2         equ	16348	;# 
   845   003FDD                     POSTDEC2        equ	16349	;# 
   846   003FDE                     POSTINC2        equ	16350	;# 
   847   003FDF                     INDF2           equ	16351	;# 
   848   003FE0                     BSR             equ	16352	;# 
   849   003FE1                     FSR1            equ	16353	;# 
   850   003FE1                     FSR1L           equ	16353	;# 
   851   003FE2                     FSR1H           equ	16354	;# 
   852   003FE3                     PLUSW1          equ	16355	;# 
   853   003FE4                     PREINC1         equ	16356	;# 
   854   003FE5                     POSTDEC1        equ	16357	;# 
   855   003FE6                     POSTINC1        equ	16358	;# 
   856   003FE7                     INDF1           equ	16359	;# 
   857   003FE8                     WREG            equ	16360	;# 
   858   003FE9                     FSR0            equ	16361	;# 
   859   003FE9                     FSR0L           equ	16361	;# 
   860   003FEA                     FSR0H           equ	16362	;# 
   861   003FEB                     PLUSW0          equ	16363	;# 
   862   003FEC                     PREINC0         equ	16364	;# 
   863   003FED                     POSTDEC0        equ	16365	;# 
   864   003FEE                     POSTINC0        equ	16366	;# 
   865   003FEF                     INDF0           equ	16367	;# 
   866   003FF0                     PCON0           equ	16368	;# 
   867   003FF1                     PCON1           equ	16369	;# 
   868   003FF3                     PROD            equ	16371	;# 
   869   003FF3                     PRODL           equ	16371	;# 
   870   003FF4                     PRODH           equ	16372	;# 
   871   003FF5                     TABLAT          equ	16373	;# 
   872   003FF6                     TBLPTR          equ	16374	;# 
   873   003FF6                     TBLPTRL         equ	16374	;# 
   874   003FF7                     TBLPTRH         equ	16375	;# 
   875   003FF8                     TBLPTRU         equ	16376	;# 
   876   003FF9                     PCLAT           equ	16377	;# 
   877   003FF9                     PCL             equ	16377	;# 
   878   003FFA                     PCLATH          equ	16378	;# 
   879   003FFB                     PCLATU          equ	16379	;# 
   880   003FFC                     STKPTR          equ	16380	;# 
   881   003FFD                     TOS             equ	16381	;# 
   882   003FFD                     TOSL            equ	16381	;# 
   883   003FFE                     TOSH            equ	16382	;# 
   884   003FFF                     TOSU            equ	16383	;# 
   885                           
   886                           	psect	idataBANK0
   887   004FB4                     __pidataBANK0:
   888                           	callstack 0
   889                           
   890                           ;initializer for PWM@F16999
   891   004FB4  0000               	dw	0
   892   004FB6  0067               	dw	103
   893   004FB8  00CD               	dw	205
   894   004FBA  0134               	dw	308
   895   004FBC  019A               	dw	410
   896   004FBE  0200               	dw	512
   897   004FC0  0267               	dw	615
   898   004FC2  02CD               	dw	717
   899   004FC4  0334               	dw	820
   900   004FC6  039A               	dw	922
   901   0039DF                     _OSCFRQ         set	14815
   902   0039DC                     _OSCSTATbits    set	14812
   903   0039A4                     _PIR4bits       set	14756
   904   003990                     _PIE0bits       set	14736
   905   003A50                     _ANSELB         set	14928
   906   003A0B                     _RB3PPS         set	14859
   907   003ABF                     _PPSLOCKbits    set	15039
   908   003ABF                     _PPSLOCK        set	15039
   909   003A61                     _WPUCbits       set	14945
   910   003A67                     _IOCCFbits      set	14951
   911   003A65                     _IOCCPbits      set	14949
   912   003A40                     _ANSELAbits     set	14912
   913   003A60                     _ANSELC         set	14944
   914   003A70                     _ANSELD         set	14960
   915   003A80                     _ANSELE         set	14976
   916   003EEF                     _ADRESL         set	16111
   917   003EF0                     _ADRESH         set	16112
   918   003EF4                     _ADACQH         set	16116
   919   003EF3                     _ADACQL         set	16115
   920   003EF7                     _ADPREH         set	16119
   921   003EF6                     _ADPREL         set	16118
   922   003EFD                     _ADREF          set	16125
   923   003EF5                     _ADCAP          set	16117
   924   003EF1                     _ADPCH          set	16113
   925   003EFF                     _ADCLK          set	16127
   926   003EF8                     _ADCON0bits     set	16120
   927   003F5E                     _CCPTMRS0bits   set	16222
   928   003FCE                     _PORTEbits      set	16334
   929   003FCB                     _PORTBbits      set	16331
   930   003FCB                     _PORTB          set	16331
   931   003FC3                     _TRISB          set	16323
   932   003F7A                     _CCP2CONbits    set	16250
   933   003F78                     _CCPR2L         set	16248
   934   003F79                     _CCPR2H         set	16249
   935   003F7A                     _CCP2CON        set	16250
   936   003FC3                     _TRISBbits      set	16323
   937   003FAB                     _PR2            set	16299
   938   003FAA                     _TMR2           set	16298
   939   003FAC                     _T2CONbits      set	16300
   940   003FAC                     _T2CON          set	16300
   941   003FAA                     _T2TMR          set	16298
   942   003FAB                     _T2PR           set	16299
   943   003FAF                     _T2RST          set	16303
   944   003FAD                     _T2HLT          set	16301
   945   003FAE                     _T2CLKCON       set	16302
   946   003FD2                     _INTCON0bits    set	16338
   947   003FC2                     _TRISAbits      set	16322
   948   003FC6                     _TRISE          set	16326
   949   003FBD                     _LATD           set	16317
   950   003FC4                     _TRISC          set	16324
   951   003FC5                     _TRISD          set	16325
   952   01FDE5                     _LATC5          set	130533
   953   01FDE4                     _LATC4          set	130532
   954   01FDE3                     _LATC3          set	130531
   955                           
   956                           	psect	smallconst
   957   002000                     __psmallconst:
   958                           	callstack 0
   959   002000  00                 	db	0
   960   002001                     STR_2:
   961                           
   962                           ; BSR set to: 58
   963   002001  69                 	db	105	;'i'
   964   002002  6E                 	db	110	;'n'
   965   002003  70                 	db	112	;'p'
   966   002004  75                 	db	117	;'u'
   967   002005  74                 	db	116	;'t'
   968   002006  20                 	db	32
   969   002007  76                 	db	118	;'v'
   970   002008  6F                 	db	111	;'o'
   971   002009  6C                 	db	108	;'l'
   972   00200A  74                 	db	116	;'t'
   973   00200B  61                 	db	97	;'a'
   974   00200C  67                 	db	103	;'g'
   975   00200D  65                 	db	101	;'e'
   976   00200E  3A                 	db	58	;':'
   977   00200F  00                 	db	0
   978   002010                     STR_1:
   979                           
   980                           ; BSR set to: 58
   981   002010  4A                 	db	74	;'J'
   982   002011  61                 	db	97	;'a'
   983   002012  63                 	db	99	;'c'
   984   002013  6F                 	db	111	;'o'
   985   002014  62                 	db	98	;'b'
   986   002015  00                 	db	0
   987   002016                     STR_3:
   988                           
   989                           ; BSR set to: 58
   990   002016  25                 	db	37
   991   002017  2E                 	db	46
   992   002018  32                 	db	50	;'2'
   993   002019  66                 	db	102	;'f'
   994   00201A  00                 	db	0
   995   00201B                     STR_7:
   996                           
   997                           ; BSR set to: 58
   998   00201B  69                 	db	105	;'i'
   999   00201C  6E                 	db	110	;'n'
  1000   00201D  66                 	db	102	;'f'
  1001   00201E  00                 	db	0
  1002   00201F                     STR_10:
  1003                           
  1004                           ; BSR set to: 58
  1005   00201F  6E                 	db	110	;'n'
  1006   002020  61                 	db	97	;'a'
  1007   002021  6E                 	db	110	;'n'
  1008   002022  00                 	db	0
  1009   002023                     STR_4:
  1010                           
  1011                           ; BSR set to: 58
  1012   002023  20                 	db	32
  1013   002024  56                 	db	86	;'V'
  1014   002025  00                 	db	0
  1015   002026                     STR_5:
  1016                           
  1017                           ; BSR set to: 58
  1018   002026  25                 	db	37
  1019   002027  64                 	db	100	;'d'
  1020   002028  00                 	db	0
  1021   00201F                     STR_11          equ	STR_10
  1022   00201F                     STR_12          equ	STR_10
  1023   00201B                     STR_8           equ	STR_7
  1024   00201B                     STR_9           equ	STR_7
  1025   002026                     STR_6           equ	STR_5
  1026   002029  00                 	db	0	; dummy byte at the end
  1027   002000                     __smallconst    set	__psmallconst
  1028   002000                     __mediumconst   set	__psmallconst
  1029   000003                     __activetblptr  equ	3
  1030                           
  1031                           ; #config settings
  1032                           
  1033                           	psect	cinit
  1034   004BAA                     __pcinit:
  1035                           	callstack 0
  1036   004BAA                     start_initialization:
  1037                           	callstack 0
  1038   004BAA                     __initialization:
  1039                           	callstack 0
  1040                           
  1041                           ; Initialize objects allocated to BANK0 (20 bytes)
  1042                           ; load TBLPTR registers with __pidataBANK0
  1043   004BAA  0EB4               	movlw	low __pidataBANK0
  1044   004BAC  6EF6               	movwf	tblptrl,c
  1045   004BAE  0E4F               	movlw	high __pidataBANK0
  1046   004BB0  6EF7               	movwf	tblptrh,c
  1047   004BB2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1048   004BB4  6EF8               	movwf	tblptru,c
  1049   004BB6  EE00  F0DA         	lfsr	0,__pdataBANK0
  1050   004BBA  EE10 F014          	lfsr	1,20
  1051   004BBE                     copy_data0:
  1052   004BBE  0009               	tblrd		*+
  1053   004BC0  006F FFD7 FFEE     	movff	tablat,postinc0
  1054   004BC6  50E5               	movf	postdec1,w,c
  1055   004BC8  50E1               	movf	fsr1l,w,c
  1056   004BCA  E1F9               	bnz	copy_data0
  1057                           
  1058                           ; Clear objects allocated to BANK1 (80 bytes)
  1059   004BCC  EE00  F100         	lfsr	0,__pbssBANK1
  1060   004BD0  0E50               	movlw	80
  1061   004BD2                     clear_0:
  1062   004BD2  6AEE               	clrf	postinc0,c
  1063   004BD4  06E8               	decf	wreg,f,c
  1064   004BD6  E1FD               	bnz	clear_0
  1065                           
  1066                           ; Clear objects allocated to BANK0 (9 bytes)
  1067   004BD8  EE00  F0EE         	lfsr	0,__pbssBANK0
  1068   004BDC  0E09               	movlw	9
  1069   004BDE                     clear_1:
  1070   004BDE  6AEE               	clrf	postinc0,c
  1071   004BE0  06E8               	decf	wreg,f,c
  1072   004BE2  E1FD               	bnz	clear_1
  1073                           
  1074                           ; Clear objects allocated to COMRAM (4 bytes)
  1075   004BE4  6A5B               	clrf	(__pbssCOMRAM+3)& (0+255),c
  1076   004BE6  6A5A               	clrf	(__pbssCOMRAM+2)& (0+255),c
  1077   004BE8  6A59               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1078   004BEA  6A58               	clrf	__pbssCOMRAM& (0+255),c
  1079                           
  1080                           ;
  1081                           ; Setup IVTBASE
  1082                           ;
  1083   003FD5                     IVTBASEL        equ	16341
  1084   003FD6                     IVTBASEH        equ	16342
  1085   003FD7                     IVTBASEU        equ	16343
  1086   004BEC  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1087   004BEE  6ED5               	movwf	213,c
  1088   004BF0  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1089   004BF2  6ED6               	movwf	214,c
  1090   004BF4  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1091   004BF6  6ED7               	movwf	215,c
  1092   004BF8                     end_of_initialization:
  1093                           	callstack 0
  1094   004BF8                     __end_of__initialization:
  1095                           	callstack 0
  1096   004BF8  0100               	movlb	0
  1097   004BFA  EF24  F026         	goto	_main	;jump to C main() function
  1098                           
  1099                           	psect	bssCOMRAM
  1100   000058                     __pbssCOMRAM:
  1101                           	callstack 0
  1102   000058                     ___fpclassifyf@F465:
  1103                           	callstack 0
  1104   000058                     	ds	4
  1105                           
  1106                           	psect	bssBANK0
  1107   0000EE                     __pbssBANK0:
  1108                           	callstack 0
  1109   0000EE                     floorf@F521:
  1110                           	callstack 0
  1111   0000EE                     	ds	4
  1112   0000F2                     _width:
  1113                           	callstack 0
  1114   0000F2                     	ds	2
  1115   0000F4                     _prec:
  1116                           	callstack 0
  1117   0000F4                     	ds	2
  1118   0000F6                     _flags:
  1119                           	callstack 0
  1120   0000F6                     	ds	1
  1121                           
  1122                           	psect	dataBANK0
  1123   0000DA                     __pdataBANK0:
  1124                           	callstack 0
  1125   0000DA                     PWM@F16999:
  1126                           	callstack 0
  1127   0000DA                     	ds	20
  1128                           
  1129                           	psect	bssBANK1
  1130   000100                     __pbssBANK1:
  1131                           	callstack 0
  1132   000100                     _dbuf:
  1133                           	callstack 0
  1134   000100                     	ds	80
  1135                           
  1136                           	psect	cstackBANK0
  1137   000060                     __pcstackBANK0:
  1138                           	callstack 0
  1139   000060                     ??_efgtoa:
  1140                           
  1141                           ; 1 bytes @ 0x0
  1142   000060                     	ds	2
  1143   000062                     efgtoa@ne:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x2
  1147   000062                     	ds	2
  1148   000064                     efgtoa@p:
  1149                           	callstack 0
  1150                           
  1151                           ; 2 bytes @ 0x4
  1152   000064                     	ds	2
  1153   000066                     efgtoa@t:
  1154                           	callstack 0
  1155                           
  1156                           ; 2 bytes @ 0x6
  1157   000066                     	ds	2
  1158   000068                     _efgtoa$1337:
  1159                           	callstack 0
  1160                           
  1161                           ; 2 bytes @ 0x8
  1162   000068                     	ds	2
  1163   00006A                     efgtoa@pp:
  1164                           	callstack 0
  1165                           
  1166                           ; 1 bytes @ 0xA
  1167   00006A                     	ds	1
  1168   00006B                     efgtoa@mode:
  1169                           	callstack 0
  1170                           
  1171                           ; 1 bytes @ 0xB
  1172   00006B                     	ds	1
  1173   00006C                     efgtoa@nmode:
  1174                           	callstack 0
  1175                           
  1176                           ; 1 bytes @ 0xC
  1177   00006C                     	ds	1
  1178   00006D                     efgtoa@d:
  1179                           	callstack 0
  1180                           
  1181                           ; 2 bytes @ 0xD
  1182   00006D                     	ds	2
  1183   00006F                     efgtoa@m:
  1184                           	callstack 0
  1185                           
  1186                           ; 2 bytes @ 0xF
  1187   00006F                     	ds	2
  1188   000071                     efgtoa@e:
  1189                           	callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x11
  1192   000071                     	ds	2
  1193   000073                     efgtoa@w:
  1194                           	callstack 0
  1195                           
  1196                           ; 2 bytes @ 0x13
  1197   000073                     	ds	2
  1198   000075                     efgtoa@ou:
  1199                           	callstack 0
  1200                           
  1201                           ; 4 bytes @ 0x15
  1202   000075                     	ds	4
  1203   000079                     efgtoa@i:
  1204                           	callstack 0
  1205                           
  1206                           ; 2 bytes @ 0x19
  1207   000079                     	ds	2
  1208   00007B                     efgtoa@h:
  1209                           	callstack 0
  1210                           
  1211                           ; 4 bytes @ 0x1B
  1212   00007B                     	ds	4
  1213   00007F                     efgtoa@l:
  1214                           	callstack 0
  1215                           
  1216                           ; 4 bytes @ 0x1F
  1217   00007F                     	ds	4
  1218   000083                     efgtoa@sign:
  1219                           	callstack 0
  1220                           
  1221                           ; 1 bytes @ 0x23
  1222   000083                     	ds	1
  1223   000084                     efgtoa@g:
  1224                           	callstack 0
  1225                           
  1226                           ; 4 bytes @ 0x24
  1227   000084                     	ds	4
  1228   000088                     efgtoa@n:
  1229                           	callstack 0
  1230                           
  1231                           ; 2 bytes @ 0x28
  1232   000088                     	ds	2
  1233   00008A                     efgtoa@u:
  1234                           	callstack 0
  1235                           
  1236                           ; 4 bytes @ 0x2A
  1237   00008A                     	ds	4
  1238   00008E                     vfpfcnvrt@fp:
  1239                           	callstack 0
  1240                           
  1241                           ; 1 bytes @ 0x2E
  1242   00008E                     	ds	1
  1243   00008F                     vfpfcnvrt@fmt:
  1244                           	callstack 0
  1245                           
  1246                           ; 1 bytes @ 0x2F
  1247   00008F                     	ds	1
  1248   000090                     vfpfcnvrt@ap:
  1249                           	callstack 0
  1250                           
  1251                           ; 1 bytes @ 0x30
  1252   000090                     	ds	1
  1253   000091                     vfpfcnvrt@convarg:
  1254                           	callstack 0
  1255                           
  1256                           ; 4 bytes @ 0x31
  1257   000091                     	ds	4
  1258   000095                     vfpfcnvrt@c:
  1259                           	callstack 0
  1260                           
  1261                           ; 1 bytes @ 0x35
  1262   000095                     	ds	1
  1263   000096                     vfpfcnvrt@cp:
  1264                           	callstack 0
  1265                           
  1266                           ; 1 bytes @ 0x36
  1267   000096                     	ds	1
  1268   000097                     ?_vfprintf:
  1269                           	callstack 0
  1270   000097                     vfprintf@fp:
  1271                           	callstack 0
  1272                           
  1273                           ; 1 bytes @ 0x37
  1274   000097                     	ds	1
  1275   000098                     vfprintf@fmt:
  1276                           	callstack 0
  1277                           
  1278                           ; 1 bytes @ 0x38
  1279   000098                     	ds	1
  1280   000099                     vfprintf@ap:
  1281                           	callstack 0
  1282                           
  1283                           ; 1 bytes @ 0x39
  1284   000099                     	ds	1
  1285   00009A                     vfprintf@cfmt:
  1286                           	callstack 0
  1287                           
  1288                           ; 1 bytes @ 0x3A
  1289   00009A                     	ds	1
  1290   00009B                     ?_sprintf:
  1291                           	callstack 0
  1292   00009B                     sprintf@s:
  1293                           	callstack 0
  1294                           
  1295                           ; 1 bytes @ 0x3B
  1296   00009B                     	ds	1
  1297   00009C                     sprintf@fmt:
  1298                           	callstack 0
  1299                           
  1300                           ; 1 bytes @ 0x3C
  1301   00009C                     	ds	5
  1302   0000A1                     sprintf@ap:
  1303                           	callstack 0
  1304                           
  1305                           ; 1 bytes @ 0x41
  1306   0000A1                     	ds	1
  1307   0000A2                     sprintf@f:
  1308                           	callstack 0
  1309                           
  1310                           ; 11 bytes @ 0x42
  1311   0000A2                     	ds	11
  1312   0000AD                     ??_readADC:
  1313   0000AD                     ??_PWM:
  1314                           
  1315                           ; 1 bytes @ 0x4D
  1316   0000AD                     	ds	2
  1317   0000AF                     readADC@buffer:
  1318                           	callstack 0
  1319   0000AF                     PWM@percent:
  1320                           	callstack 0
  1321                           
  1322                           ; 15 bytes @ 0x4F
  1323   0000AF                     	ds	12
  1324   0000BB                     readADC@voltage:
  1325                           	callstack 0
  1326                           
  1327                           ; 4 bytes @ 0x5B
  1328   0000BB                     	ds	3
  1329   0000BE                     PWM@dcVal:
  1330                           	callstack 0
  1331                           
  1332                           ; 20 bytes @ 0x5E
  1333   0000BE                     	ds	1
  1334   0000BF                     readADC@Vref:
  1335                           	callstack 0
  1336                           
  1337                           ; 2 bytes @ 0x5F
  1338   0000BF                     	ds	2
  1339   0000C1                     readADC@digital:
  1340                           	callstack 0
  1341                           
  1342                           ; 2 bytes @ 0x61
  1343   0000C1                     	ds	17
  1344   0000D2                     PWM@pwmStatus:
  1345                           	callstack 0
  1346                           
  1347                           ; 2 bytes @ 0x72
  1348   0000D2                     	ds	2
  1349   0000D4                     PWM@checkdutyCycle:
  1350                           	callstack 0
  1351                           
  1352                           ; 2 bytes @ 0x74
  1353   0000D4                     	ds	2
  1354   0000D6                     PWM@index:
  1355                           	callstack 0
  1356                           
  1357                           ; 2 bytes @ 0x76
  1358   0000D6                     	ds	2
  1359   0000D8                     ??_main:
  1360                           
  1361                           ; 1 bytes @ 0x78
  1362   0000D8                     	ds	2
  1363                           
  1364                           	psect	cstackCOMRAM
  1365   000001                     __pcstackCOMRAM:
  1366                           	callstack 0
  1367   000001                     ??_ISR:
  1368                           
  1369                           ; 1 bytes @ 0x0
  1370   000001                     	ds	2
  1371   000003                     ISR@i:
  1372                           	callstack 0
  1373                           
  1374                           ; 2 bytes @ 0x2
  1375   000003                     	ds	2
  1376   000005                     ?___fpclassifyf:
  1377                           	callstack 0
  1378   000005                     ?___awdiv:
  1379                           	callstack 0
  1380   000005                     ?___awmod:
  1381                           	callstack 0
  1382   000005                     ?_read_prec_or_width:
  1383                           	callstack 0
  1384   000005                     ?___fladd:
  1385                           	callstack 0
  1386   000005                     ?_labs:
  1387                           	callstack 0
  1388   000005                     ?___lmul:
  1389                           	callstack 0
  1390   000005                     ?___flneg:
  1391                           	callstack 0
  1392   000005                     ?___fltol:
  1393                           	callstack 0
  1394   000005                     ?___xxtofl:
  1395                           	callstack 0
  1396   000005                     read_prec_or_width@fmt:
  1397                           	callstack 0
  1398   000005                     strcat@dest:
  1399                           	callstack 0
  1400   000005                     MSdelay@val:
  1401                           	callstack 0
  1402   000005                     PWM2_LoadDutyValue@dutyValue:
  1403                           	callstack 0
  1404   000005                     ___awdiv@dividend:
  1405                           	callstack 0
  1406   000005                     ___awmod@dividend:
  1407                           	callstack 0
  1408   000005                     memcpy@d1:
  1409                           	callstack 0
  1410   000005                     fputc@c:
  1411                           	callstack 0
  1412   000005                     strcpy@dest:
  1413                           	callstack 0
  1414   000005                     ___lmul@multiplier:
  1415                           	callstack 0
  1416   000005                     ___fleq@ff1:
  1417                           	callstack 0
  1418   000005                     ___flneg@f1:
  1419                           	callstack 0
  1420   000005                     ___fltol@f1:
  1421                           	callstack 0
  1422   000005                     ___fladd@b:
  1423                           	callstack 0
  1424   000005                     ___xxtofl@val:
  1425                           	callstack 0
  1426   000005                     ___fpclassifyf@x:
  1427                           	callstack 0
  1428   000005                     labs@a:
  1429                           	callstack 0
  1430   000005                     
  1431                           ; 1 bytes @ 0x4
  1432   000005                     	ds	1
  1433   000006                     read_prec_or_width@ap:
  1434                           	callstack 0
  1435   000006                     strcat@src:
  1436                           	callstack 0
  1437                           
  1438                           ; 1 bytes @ 0x5
  1439   000006                     	ds	1
  1440   000007                     fputc@fp:
  1441                           	callstack 0
  1442   000007                     strcpy@src:
  1443                           	callstack 0
  1444   000007                     MSdelay@i:
  1445                           	callstack 0
  1446   000007                     ___awdiv@divisor:
  1447                           	callstack 0
  1448   000007                     ___awmod@divisor:
  1449                           	callstack 0
  1450   000007                     memcpy@s1:
  1451                           	callstack 0
  1452   000007                     strcat@i:
  1453                           	callstack 0
  1454   000007                     ??_read_prec_or_width:
  1455                           
  1456                           ; 1 bytes @ 0x6
  1457   000007                     	ds	1
  1458   000008                     ??_fputc:
  1459   000008                     ??_strcpy:
  1460                           
  1461                           ; 1 bytes @ 0x7
  1462   000008                     	ds	1
  1463   000009                     ___awdiv@counter:
  1464                           	callstack 0
  1465   000009                     ___awmod@counter:
  1466                           	callstack 0
  1467   000009                     read_prec_or_width@c:
  1468                           	callstack 0
  1469   000009                     MSdelay@j:
  1470                           	callstack 0
  1471   000009                     memcpy@n:
  1472                           	callstack 0
  1473   000009                     strcpy@d:
  1474                           	callstack 0
  1475   000009                     ___lmul@multiplicand:
  1476                           	callstack 0
  1477   000009                     ___fleq@ff2:
  1478                           	callstack 0
  1479   000009                     ___fladd@a:
  1480                           	callstack 0
  1481   000009                     ??___fpclassifyf:
  1482   000009                     ??_labs:
  1483   000009                     ??___fltol:
  1484   000009                     ??___xxtofl:
  1485                           
  1486                           ; 1 bytes @ 0x8
  1487   000009                     	ds	1
  1488   00000A                     ___awdiv@sign:
  1489                           	callstack 0
  1490   00000A                     ___awmod@sign:
  1491                           	callstack 0
  1492   00000A                     read_prec_or_width@n:
  1493                           	callstack 0
  1494                           
  1495                           ; 2 bytes @ 0x9
  1496   00000A                     	ds	1
  1497   00000B                     ?_abs:
  1498                           	callstack 0
  1499   00000B                     LCD_Command@cmd:
  1500                           	callstack 0
  1501   00000B                     LCD_Char@dat:
  1502                           	callstack 0
  1503   00000B                     ___awdiv@quotient:
  1504                           	callstack 0
  1505   00000B                     abs@a:
  1506                           	callstack 0
  1507   00000B                     memcpy@d:
  1508                           	callstack 0
  1509   00000B                     
  1510                           ; 1 bytes @ 0xA
  1511   00000B                     	ds	1
  1512   00000C                     LCD_String@msg:
  1513                           	callstack 0
  1514   00000C                     
  1515                           ; 1 bytes @ 0xB
  1516   00000C                     	ds	1
  1517   00000D                     ___fltol@sign1:
  1518                           	callstack 0
  1519   00000D                     ___xxtofl@sign:
  1520                           	callstack 0
  1521   00000D                     ___fpclassifyf@e:
  1522                           	callstack 0
  1523   00000D                     memcpy@s:
  1524                           	callstack 0
  1525   00000D                     fputs@s:
  1526                           	callstack 0
  1527   00000D                     ___lmul@product:
  1528                           	callstack 0
  1529   00000D                     ??___fladd:
  1530   00000D                     ??_abs:
  1531   00000D                     ??___fleq:
  1532                           
  1533                           ; 1 bytes @ 0xC
  1534   00000D                     	ds	1
  1535   00000E                     LCD_String_xy@pos:
  1536                           	callstack 0
  1537   00000E                     ___fltol@exp1:
  1538                           	callstack 0
  1539   00000E                     ___xxtofl@exp:
  1540                           	callstack 0
  1541   00000E                     
  1542                           ; 1 bytes @ 0xD
  1543   00000E                     	ds	1
  1544   00000F                     memcpy@tmp:
  1545                           	callstack 0
  1546   00000F                     fputs@fp:
  1547                           	callstack 0
  1548   00000F                     LCD_String_xy@msg:
  1549                           	callstack 0
  1550   00000F                     ___xxtofl@arg:
  1551                           	callstack 0
  1552   00000F                     ___fpclassifyf@u:
  1553                           	callstack 0
  1554                           
  1555                           ; 4 bytes @ 0xE
  1556   00000F                     	ds	1
  1557   000010                     fputs@c:
  1558                           	callstack 0
  1559   000010                     
  1560                           ; 1 bytes @ 0xF
  1561   000010                     	ds	1
  1562   000011                     ?___lldiv:
  1563                           	callstack 0
  1564   000011                     LCD_String_xy@row:
  1565                           	callstack 0
  1566   000011                     ___fladd@signs:
  1567                           	callstack 0
  1568   000011                     fputs@i:
  1569                           	callstack 0
  1570   000011                     ___lldiv@dividend:
  1571                           	callstack 0
  1572   000011                     
  1573                           ; 1 bytes @ 0x10
  1574   000011                     	ds	1
  1575   000012                     LCD_String_xy@location:
  1576                           	callstack 0
  1577   000012                     ___fladd@aexp:
  1578                           	callstack 0
  1579                           
  1580                           ; 1 bytes @ 0x11
  1581   000012                     	ds	1
  1582   000013                     ?___fldiv:
  1583                           	callstack 0
  1584   000013                     ___fladd@bexp:
  1585                           	callstack 0
  1586   000013                     pad@fp:
  1587                           	callstack 0
  1588   000013                     ___fldiv@b:
  1589                           	callstack 0
  1590                           
  1591                           ; 4 bytes @ 0x12
  1592   000013                     	ds	1
  1593   000014                     ___fladd@grs:
  1594                           	callstack 0
  1595   000014                     pad@buf:
  1596                           	callstack 0
  1597                           
  1598                           ; 2 bytes @ 0x13
  1599   000014                     	ds	1
  1600   000015                     ___lldiv@divisor:
  1601                           	callstack 0
  1602                           
  1603                           ; 4 bytes @ 0x14
  1604   000015                     	ds	1
  1605   000016                     pad@p:
  1606                           	callstack 0
  1607                           
  1608                           ; 2 bytes @ 0x15
  1609   000016                     	ds	1
  1610   000017                     ___fldiv@a:
  1611                           	callstack 0
  1612                           
  1613                           ; 4 bytes @ 0x16
  1614   000017                     	ds	1
  1615   000018                     ??_pad:
  1616                           
  1617                           ; 1 bytes @ 0x17
  1618   000018                     	ds	1
  1619   000019                     pad@i:
  1620                           	callstack 0
  1621   000019                     ___lldiv@quotient:
  1622                           	callstack 0
  1623   000019                     
  1624                           ; 1 bytes @ 0x18
  1625   000019                     	ds	2
  1626   00001B                     dtoa@fp:
  1627                           	callstack 0
  1628   00001B                     ??___fldiv:
  1629                           
  1630                           ; 1 bytes @ 0x1A
  1631   00001B                     	ds	1
  1632   00001C                     dtoa@d:
  1633                           	callstack 0
  1634                           
  1635                           ; 2 bytes @ 0x1B
  1636   00001C                     	ds	1
  1637   00001D                     ___lldiv@counter:
  1638                           	callstack 0
  1639                           
  1640                           ; 1 bytes @ 0x1C
  1641   00001D                     	ds	1
  1642   00001E                     _dtoa$1306:
  1643                           	callstack 0
  1644   00001E                     
  1645                           ; 1 bytes @ 0x1D
  1646   00001E                     	ds	1
  1647   00001F                     ___fldiv@rem:
  1648                           	callstack 0
  1649                           
  1650                           ; 4 bytes @ 0x1E
  1651   00001F                     	ds	1
  1652   000020                     dtoa@w:
  1653                           	callstack 0
  1654                           
  1655                           ; 2 bytes @ 0x1F
  1656   000020                     	ds	2
  1657   000022                     dtoa@p:
  1658                           	callstack 0
  1659                           
  1660                           ; 2 bytes @ 0x21
  1661   000022                     	ds	1
  1662   000023                     ___fldiv@sign:
  1663                           	callstack 0
  1664                           
  1665                           ; 1 bytes @ 0x22
  1666   000023                     	ds	1
  1667   000024                     dtoa@s:
  1668                           	callstack 0
  1669   000024                     ___fldiv@new_exp:
  1670                           	callstack 0
  1671                           
  1672                           ; 2 bytes @ 0x23
  1673   000024                     	ds	1
  1674   000025                     dtoa@i:
  1675                           	callstack 0
  1676                           
  1677                           ; 2 bytes @ 0x24
  1678   000025                     	ds	1
  1679   000026                     ___fldiv@grs:
  1680                           	callstack 0
  1681                           
  1682                           ; 4 bytes @ 0x25
  1683   000026                     	ds	4
  1684   00002A                     ___fldiv@bexp:
  1685                           	callstack 0
  1686                           
  1687                           ; 1 bytes @ 0x29
  1688   00002A                     	ds	1
  1689   00002B                     ___fldiv@aexp:
  1690                           	callstack 0
  1691                           
  1692                           ; 1 bytes @ 0x2A
  1693   00002B                     	ds	1
  1694   00002C                     ?___flmul:
  1695                           	callstack 0
  1696   00002C                     ?_floorf:
  1697                           	callstack 0
  1698   00002C                     ___flmul@b:
  1699                           	callstack 0
  1700   00002C                     floorf@x:
  1701                           	callstack 0
  1702                           
  1703                           ; 4 bytes @ 0x2B
  1704   00002C                     	ds	4
  1705   000030                     ___flmul@a:
  1706                           	callstack 0
  1707   000030                     ??_floorf:
  1708                           
  1709                           ; 1 bytes @ 0x2F
  1710   000030                     	ds	4
  1711   000034                     ??___flmul:
  1712                           
  1713                           ; 1 bytes @ 0x33
  1714   000034                     	ds	2
  1715   000036                     floorf@m:
  1716                           	callstack 0
  1717                           
  1718                           ; 4 bytes @ 0x35
  1719   000036                     	ds	2
  1720   000038                     ___flmul@sign:
  1721                           	callstack 0
  1722                           
  1723                           ; 1 bytes @ 0x37
  1724   000038                     	ds	1
  1725   000039                     ___flmul@grs:
  1726                           	callstack 0
  1727                           
  1728                           ; 4 bytes @ 0x38
  1729   000039                     	ds	1
  1730   00003A                     floorf@e:
  1731                           	callstack 0
  1732                           
  1733                           ; 2 bytes @ 0x39
  1734   00003A                     	ds	2
  1735   00003C                     floorf@u:
  1736                           	callstack 0
  1737                           
  1738                           ; 4 bytes @ 0x3B
  1739   00003C                     	ds	1
  1740   00003D                     ___flmul@aexp:
  1741                           	callstack 0
  1742                           
  1743                           ; 1 bytes @ 0x3C
  1744   00003D                     	ds	1
  1745   00003E                     ___flmul@bexp:
  1746                           	callstack 0
  1747                           
  1748                           ; 1 bytes @ 0x3D
  1749   00003E                     	ds	1
  1750   00003F                     ___flmul@prod:
  1751                           	callstack 0
  1752                           
  1753                           ; 4 bytes @ 0x3E
  1754   00003F                     	ds	4
  1755   000043                     ___flmul@temp:
  1756                           	callstack 0
  1757                           
  1758                           ; 2 bytes @ 0x42
  1759   000043                     	ds	2
  1760   000045                     ?___flsub:
  1761                           	callstack 0
  1762   000045                     ___flge@ff1:
  1763                           	callstack 0
  1764   000045                     ___flsub@b:
  1765                           	callstack 0
  1766                           
  1767                           ; 4 bytes @ 0x44
  1768   000045                     	ds	4
  1769   000049                     ___flge@ff2:
  1770                           	callstack 0
  1771   000049                     ___flsub@a:
  1772                           	callstack 0
  1773                           
  1774                           ; 4 bytes @ 0x48
  1775   000049                     	ds	4
  1776   00004D                     ??___flge:
  1777                           
  1778                           ; 1 bytes @ 0x4C
  1779   00004D                     	ds	4
  1780   000051                     efgtoa@fp:
  1781                           	callstack 0
  1782                           
  1783                           ; 1 bytes @ 0x50
  1784   000051                     	ds	1
  1785   000052                     efgtoa@f:
  1786                           	callstack 0
  1787                           
  1788                           ; 4 bytes @ 0x51
  1789   000052                     	ds	4
  1790   000056                     efgtoa@c:
  1791                           	callstack 0
  1792                           
  1793                           ; 1 bytes @ 0x55
  1794   000056                     	ds	1
  1795   000057                     ??_vfpfcnvrt:
  1796                           
  1797                           ; 1 bytes @ 0x56
  1798   000057                     	ds	1
  1799   000058                     
  1800                           ; 1 bytes @ 0x57
  1801 ;;
  1802 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1803 ;;
  1804 ;; *************** function _main *****************
  1805 ;; Defined at:
  1806 ;;		line 25 in file "main.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;		None
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;		None
  1811 ;; Return value:  Size  Location     Type
  1812 ;;                  1    wreg      void 
  1813 ;; Registers used:
  1814 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1822 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1823 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1824 ;;Total ram usage:        2 bytes
  1825 ;; Hardware stack levels required when called: 10
  1826 ;; This function calls:
  1827 ;;		_Initialize
  1828 ;;		_LCD_Clear
  1829 ;;		_LCD_Init
  1830 ;;		_LCD_String_xy
  1831 ;;		_PWM
  1832 ;;		_readADC
  1833 ;; This function is called by:
  1834 ;;		Startup code after reset
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           
  1838                           	psect	text0
  1839   004C48                     __ptext0:
  1840                           	callstack 0
  1841   004C48                     _main:
  1842                           	callstack 21
  1843   004C48                     
  1844                           ;main.c: 26:     Initialize();
  1845   004C48  ECB2  F026         	call	_Initialize	;wreg free
  1846   004C4C                     
  1847                           ;main.c: 27:     LCD_Init();
  1848   004C4C  EC7F  F027         	call	_LCD_Init	;wreg free
  1849   004C50                     
  1850                           ;main.c: 28:     LCD_String_xy(1, 0, "Jacob");
  1851   004C50  0E00               	movlw	0
  1852   004C52  6E0E               	movwf	LCD_String_xy@pos^0,c
  1853   004C54  0E10               	movlw	low STR_1
  1854   004C56  6E0F               	movwf	LCD_String_xy@msg^0,c
  1855   004C58  500F               	movf	LCD_String_xy@msg^0,w,c
  1856   004C5A  A4D8               	btfss	status,2,c
  1857   004C5C  0E20               	movlw	high __smallconst
  1858   004C5E  6E10               	movwf	(LCD_String_xy@msg+1)^0,c
  1859   004C60  0E01               	movlw	1
  1860   004C62  ECF5  F026         	call	_LCD_String_xy
  1861   004C66                     
  1862                           ;main.c: 29:     _delay((unsigned long)((1500)*(4000000/4000.0)));
  1863   004C66  0E08               	movlw	8
  1864   004C68  0100               	movlb	0	; () banked
  1865   004C6A  6FD9               	movwf	(??_main+1)& (0+255),b
  1866   004C6C  0E9D               	movlw	157
  1867   004C6E  6FD8               	movwf	??_main& (0+255),b
  1868   004C70  0E05               	movlw	5
  1869   004C72                     u4827:
  1870   004C72  2EE8               	decfsz	wreg,f,c
  1871   004C74  D7FE               	bra	u4827
  1872   004C76  2FD8               	decfsz	??_main& (0+255),f,b
  1873   004C78  D7FC               	bra	u4827
  1874   004C7A  2FD9               	decfsz	(??_main+1)& (0+255),f,b
  1875   004C7C  D7FA               	bra	u4827
  1876   004C7E  D000               	nop2	
  1877   004C80                     
  1878                           ;main.c: 30:     LCD_Clear();
  1879   004C80  ECEE  F027         	call	_LCD_Clear	;wreg free
  1880   004C84                     
  1881                           ;main.c: 33:     readADC();
  1882   004C84  EC49  F020         	call	_readADC	;wreg free
  1883   004C88                     
  1884                           ;main.c: 35:     PWM();
  1885   004C88  EC9E  F01C         	call	_PWM	;wreg free
  1886   004C8C  EF57  F000         	goto	start
  1887   004C90                     __end_of_main:
  1888                           	callstack 0
  1889                           
  1890 ;; *************** function _readADC *****************
  1891 ;; Defined at:
  1892 ;;		line 40 in file "main.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;		None
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;  buffer         12   79[BANK0 ] unsigned char [12]
  1897 ;;  voltage         4   91[BANK0 ] float 
  1898 ;;  digital         2   97[BANK0 ] int 
  1899 ;;  Vref            2   95[BANK0 ] int 
  1900 ;; Return value:  Size  Location     Type
  1901 ;;                  1    wreg      void 
  1902 ;; Registers used:
  1903 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1904 ;; Tracked objects:
  1905 ;;		On entry : 0/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: 0/0
  1908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1910 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1911 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1912 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1913 ;;Total ram usage:       22 bytes
  1914 ;; Hardware stack levels used: 1
  1915 ;; Hardware stack levels required when called: 9
  1916 ;; This function calls:
  1917 ;;		_LCD_String_xy
  1918 ;;		___fldiv
  1919 ;;		___flmul
  1920 ;;		___xxtofl
  1921 ;;		_sprintf
  1922 ;;		_strcat
  1923 ;; This function is called by:
  1924 ;;		_main
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           	psect	text1
  1929   004092                     __ptext1:
  1930                           	callstack 0
  1931   004092                     _readADC:
  1932                           	callstack 21
  1933   004092                     
  1934                           ;main.c: 41:     int Vref = 5;
  1935   004092  0E00               	movlw	0
  1936   004094  0100               	movlb	0	; () banked
  1937   004096  6FC0               	movwf	(readADC@Vref+1)& (0+255),b
  1938   004098  0E05               	movlw	5
  1939   00409A  6FBF               	movwf	readADC@Vref& (0+255),b
  1940   00409C                     
  1941                           ; BSR set to: 0
  1942                           ;main.c: 42:     char buffer[12];;main.c: 43:     int digital;;main.c: 44:     float vol
      +                          tage;;main.c: 45:     LCD_String_xy(1, 0, "input voltage:");
  1943   00409C  0E00               	movlw	0
  1944   00409E  6E0E               	movwf	LCD_String_xy@pos^0,c
  1945   0040A0  0E01               	movlw	low STR_2
  1946   0040A2  6E0F               	movwf	LCD_String_xy@msg^0,c
  1947   0040A4  500F               	movf	LCD_String_xy@msg^0,w,c
  1948   0040A6  A4D8               	btfss	status,2,c
  1949   0040A8  0E20               	movlw	high __smallconst
  1950   0040AA  6E10               	movwf	(LCD_String_xy@msg+1)^0,c
  1951   0040AC  0E01               	movlw	1
  1952   0040AE  ECF5  F026         	call	_LCD_String_xy
  1953   0040B2                     l4376:
  1954                           
  1955                           ;main.c: 47:         ADCON0bits.GO = 1;
  1956   0040B2  013E               	movlb	62	; () banked
  1957   0040B4  81F8               	bsf	248,0,b	;volatile
  1958   0040B6                     l225:
  1959                           
  1960                           ; BSR set to: 62
  1961   0040B6  B1F8               	btfsc	248,0,b	;volatile
  1962   0040B8  EF60  F020         	goto	u4771
  1963   0040BC  EF62  F020         	goto	u4770
  1964   0040C0                     u4771:
  1965   0040C0  EF5B  F020         	goto	l225
  1966   0040C4                     u4770:
  1967   0040C4                     
  1968                           ; BSR set to: 62
  1969                           ;main.c: 49:         digital = (ADRESH * 256) | ADRESL;
  1970   0040C4  51EF               	movf	239,w,b	;volatile
  1971   0040C6  006F FBC0  F0AD    	movff	16112,??_readADC	;volatile
  1972   0040CC  0100               	movlb	0	; () banked
  1973   0040CE  6BAE               	clrf	(??_readADC+1)& (0+255),b
  1974   0040D0  C0AD  F0AE         	movff	??_readADC,??_readADC+1
  1975   0040D4  6BAD               	clrf	??_readADC& (0+255),b
  1976   0040D6  11AD               	iorwf	??_readADC& (0+255),w,b
  1977   0040D8  6FC1               	movwf	readADC@digital& (0+255),b
  1978   0040DA  51AE               	movf	(??_readADC+1)& (0+255),w,b
  1979   0040DC  6FC2               	movwf	(readADC@digital+1)& (0+255),b
  1980   0040DE                     
  1981                           ; BSR set to: 0
  1982                           ;main.c: 50:         voltage = digital * ((float)Vref / (float)(4096));
  1983   0040DE  C0C1  F005         	movff	readADC@digital,___xxtofl@val
  1984   0040E2  C0C2  F006         	movff	readADC@digital+1,___xxtofl@val+1
  1985   0040E6  0E00               	movlw	0
  1986   0040E8  BE06               	btfsc	(___xxtofl@val+1)^0,7,c
  1987   0040EA  0EFF               	movlw	-1
  1988   0040EC  6E07               	movwf	(___xxtofl@val+2)^0,c
  1989   0040EE  6E08               	movwf	(___xxtofl@val+3)^0,c
  1990   0040F0  0E01               	movlw	1
  1991   0040F2  ECB2  F01E         	call	___xxtofl
  1992   0040F6  C005  F02C         	movff	?___xxtofl,___flmul@b
  1993   0040FA  C006  F02D         	movff	?___xxtofl+1,___flmul@b+1
  1994   0040FE  C007  F02E         	movff	?___xxtofl+2,___flmul@b+2
  1995   004102  C008  F02F         	movff	?___xxtofl+3,___flmul@b+3
  1996   004106  0E00               	movlw	0
  1997   004108  6E17               	movwf	___fldiv@a^0,c
  1998   00410A  0E00               	movlw	0
  1999   00410C  6E18               	movwf	(___fldiv@a+1)^0,c
  2000   00410E  0E80               	movlw	128
  2001   004110  6E19               	movwf	(___fldiv@a+2)^0,c
  2002   004112  0E45               	movlw	69
  2003   004114  6E1A               	movwf	(___fldiv@a+3)^0,c
  2004   004116  C0BF  F005         	movff	readADC@Vref,___xxtofl@val
  2005   00411A  C0C0  F006         	movff	readADC@Vref+1,___xxtofl@val+1
  2006   00411E  0E00               	movlw	0
  2007   004120  BE06               	btfsc	(___xxtofl@val+1)^0,7,c
  2008   004122  0EFF               	movlw	-1
  2009   004124  6E07               	movwf	(___xxtofl@val+2)^0,c
  2010   004126  6E08               	movwf	(___xxtofl@val+3)^0,c
  2011   004128  0E01               	movlw	1
  2012   00412A  ECB2  F01E         	call	___xxtofl
  2013   00412E  C005  F013         	movff	?___xxtofl,___fldiv@b
  2014   004132  C006  F014         	movff	?___xxtofl+1,___fldiv@b+1
  2015   004136  C007  F015         	movff	?___xxtofl+2,___fldiv@b+2
  2016   00413A  C008  F016         	movff	?___xxtofl+3,___fldiv@b+3
  2017   00413E  EC88  F019         	call	___fldiv	;wreg free
  2018   004142  C013  F030         	movff	?___fldiv,___flmul@a
  2019   004146  C014  F031         	movff	?___fldiv+1,___flmul@a+1
  2020   00414A  C015  F032         	movff	?___fldiv+2,___flmul@a+2
  2021   00414E  C016  F033         	movff	?___fldiv+3,___flmul@a+3
  2022   004152  EC63  F017         	call	___flmul	;wreg free
  2023   004156  C02C  F0BB         	movff	?___flmul,readADC@voltage
  2024   00415A  C02D  F0BC         	movff	?___flmul+1,readADC@voltage+1
  2025   00415E  C02E  F0BD         	movff	?___flmul+2,readADC@voltage+2
  2026   004162  C02F  F0BE         	movff	?___flmul+3,readADC@voltage+3
  2027   004166                     
  2028                           ;main.c: 51:         sprintf(buffer, "%.2f", voltage);
  2029   004166  0EAF               	movlw	low readADC@buffer
  2030   004168  0100               	movlb	0	; () banked
  2031   00416A  6F9B               	movwf	sprintf@s& (0+255),b
  2032   00416C  0E16               	movlw	low STR_3
  2033   00416E  6F9C               	movwf	sprintf@fmt& (0+255),b
  2034   004170  C0BB  F09D         	movff	readADC@voltage,?_sprintf+2
  2035   004174  C0BC  F09E         	movff	readADC@voltage+1,?_sprintf+3
  2036   004178  C0BD  F09F         	movff	readADC@voltage+2,?_sprintf+4
  2037   00417C  C0BE  F0A0         	movff	readADC@voltage+3,?_sprintf+5
  2038   004180  EC15  F027         	call	_sprintf	;wreg free
  2039   004184                     
  2040                           ;main.c: 52:         strcat(buffer, " V");
  2041   004184  0EAF               	movlw	low readADC@buffer
  2042   004186  6E05               	movwf	strcat@dest^0,c
  2043   004188  0E23               	movlw	low STR_4
  2044   00418A  6E06               	movwf	strcat@src^0,c
  2045   00418C  EC4C  F025         	call	_strcat	;wreg free
  2046   004190                     
  2047                           ;main.c: 53:         LCD_String_xy(2, 0, buffer);
  2048   004190  0E00               	movlw	0
  2049   004192  6E0E               	movwf	LCD_String_xy@pos^0,c
  2050   004194  0EAF               	movlw	low readADC@buffer
  2051   004196  6E0F               	movwf	LCD_String_xy@msg^0,c
  2052   004198  6A10               	clrf	(LCD_String_xy@msg+1)^0,c
  2053   00419A  0E02               	movlw	2
  2054   00419C  ECF5  F026         	call	_LCD_String_xy
  2055   0041A0                     
  2056                           ;main.c: 54:         _delay((unsigned long)((2000)*(4000000/4000.0)));
  2057   0041A0  0E0B               	movlw	11
  2058   0041A2  0100               	movlb	0	; () banked
  2059   0041A4  6FAE               	movwf	(??_readADC+1)& (0+255),b
  2060   0041A6  0E26               	movlw	38
  2061   0041A8  6FAD               	movwf	??_readADC& (0+255),b
  2062   0041AA  0E5D               	movlw	93
  2063   0041AC                     u4837:
  2064   0041AC  2EE8               	decfsz	wreg,f,c
  2065   0041AE  D7FE               	bra	u4837
  2066   0041B0  2FAD               	decfsz	??_readADC& (0+255),f,b
  2067   0041B2  D7FC               	bra	u4837
  2068   0041B4  2FAE               	decfsz	(??_readADC+1)& (0+255),f,b
  2069   0041B6  D7FA               	bra	u4837
  2070   0041B8  D000               	nop2	
  2071   0041BA  EF59  F020         	goto	l4376
  2072   0041BE  0012               	return		;funcret
  2073   0041C0                     __end_of_readADC:
  2074                           	callstack 0
  2075                           
  2076 ;; *************** function _strcat *****************
  2077 ;; Defined at:
  2078 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcat.c"
  2079 ;; Parameters:    Size  Location     Type
  2080 ;;  dest            1    4[COMRAM] PTR unsigned char 
  2081 ;;		 -> readADC@buffer(12), 
  2082 ;;  src             1    5[COMRAM] PTR const unsigned char 
  2083 ;;		 -> STR_4(3), 
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;  i               2    6[COMRAM] unsigned int 
  2086 ;; Return value:  Size  Location     Type
  2087 ;;                  1    4[COMRAM] PTR unsigned char 
  2088 ;; Registers used:
  2089 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2090 ;; Tracked objects:
  2091 ;;		On entry : 0/0
  2092 ;;		On exit  : 0/0
  2093 ;;		Unchanged: 0/0
  2094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2095 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2096 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2098 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2099 ;;Total ram usage:        4 bytes
  2100 ;; Hardware stack levels used: 1
  2101 ;; Hardware stack levels required when called: 1
  2102 ;; This function calls:
  2103 ;;		Nothing
  2104 ;; This function is called by:
  2105 ;;		_readADC
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109                           	psect	text2
  2110   004A98                     __ptext2:
  2111                           	callstack 0
  2112   004A98                     _strcat:
  2113                           	callstack 28
  2114   004A98  0E00               	movlw	0
  2115   004A9A  6E08               	movwf	(strcat@i+1)^0,c
  2116   004A9C  0E00               	movlw	0
  2117   004A9E  6E07               	movwf	strcat@i^0,c
  2118   004AA0  EF54  F025         	goto	l3878
  2119   004AA4                     l3876:
  2120   004AA4  4A07               	infsnz	strcat@i^0,f,c
  2121   004AA6  2A08               	incf	(strcat@i+1)^0,f,c
  2122   004AA8                     l3878:
  2123   004AA8  5005               	movf	strcat@dest^0,w,c
  2124   004AAA  2407               	addwf	strcat@i^0,w,c
  2125   004AAC  6ED9               	movwf	fsr2l,c
  2126   004AAE  6ADA               	clrf	fsr2h,c
  2127   004AB0  50DF               	movf	indf2,w,c
  2128   004AB2  A4D8               	btfss	status,2,c
  2129   004AB4  EF5E  F025         	goto	u4171
  2130   004AB8  EF60  F025         	goto	u4170
  2131   004ABC                     u4171:
  2132   004ABC  EF52  F025         	goto	l3876
  2133   004AC0                     u4170:
  2134   004AC0  EF65  F025         	goto	l3882
  2135   004AC4                     l3880:
  2136   004AC4  4A07               	infsnz	strcat@i^0,f,c
  2137   004AC6  2A08               	incf	(strcat@i+1)^0,f,c
  2138   004AC8  2A06               	incf	strcat@src^0,f,c
  2139   004ACA                     l3882:
  2140   004ACA  0060  F01B  FFF6   	movff	strcat@src,tblptrl
  2141   004AD0                     	if	1	;There is more than 1 active tblptr byte
  2142   004AD0  0E20               	movlw	high __smallconst
  2143   004AD2  6EF7               	movwf	tblptrh,c
  2144   004AD4                     	endif
  2145   004AD4                     	if	0	;tblptru may be non-zero
  2146   004AD4                     	endif
  2147   004AD4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2148   004AD4  0E00               	movlw	low (__smallconst shr (0+16))
  2149   004AD6  6EF8               	movwf	tblptru,c
  2150   004AD8                     	endif
  2151   004AD8  5005               	movf	strcat@dest^0,w,c
  2152   004ADA  2407               	addwf	strcat@i^0,w,c
  2153   004ADC  6ED9               	movwf	fsr2l,c
  2154   004ADE  6ADA               	clrf	fsr2h,c
  2155   004AE0  0008               	tblrd		*
  2156   004AE2  006F FFD7 FFDF     	movff	tablat,indf2
  2157   004AE8  50DF               	movf	indf2,w,c
  2158   004AEA  A4D8               	btfss	status,2,c
  2159   004AEC  EF7A  F025         	goto	u4181
  2160   004AF0  EF7C  F025         	goto	u4180
  2161   004AF4                     u4181:
  2162   004AF4  EF62  F025         	goto	l3880
  2163   004AF8                     u4180:
  2164   004AF8  0012               	return		;funcret
  2165   004AFA                     __end_of_strcat:
  2166                           	callstack 0
  2167                           
  2168 ;; *************** function ___xxtofl *****************
  2169 ;; Defined at:
  2170 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;  sign            1    wreg     unsigned char 
  2173 ;;  val             4    4[COMRAM] long 
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;  sign            1   12[COMRAM] unsigned char 
  2176 ;;  arg             4   14[COMRAM] unsigned long 
  2177 ;;  exp             1   13[COMRAM] unsigned char 
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  4    4[COMRAM] unsigned char 
  2180 ;; Registers used:
  2181 ;;		wreg, status,2, status,0
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2187 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2188 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2189 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2190 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2191 ;;Total ram usage:       14 bytes
  2192 ;; Hardware stack levels used: 1
  2193 ;; Hardware stack levels required when called: 1
  2194 ;; This function calls:
  2195 ;;		Nothing
  2196 ;; This function is called by:
  2197 ;;		_readADC
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201                           	psect	text3
  2202   003D64                     __ptext3:
  2203                           	callstack 0
  2204   003D64                     ___xxtofl:
  2205                           	callstack 28
  2206                           
  2207                           ;incstack = 0
  2208                           ;___xxtofl@sign stored from wreg
  2209   003D64  6E0D               	movwf	___xxtofl@sign^0,c
  2210   003D66  500D               	movf	___xxtofl@sign^0,w,c
  2211   003D68  B4D8               	btfsc	status,2,c
  2212   003D6A  EFB9  F01E         	goto	u4241
  2213   003D6E  EFBB  F01E         	goto	u4240
  2214   003D72                     u4241:
  2215   003D72  EFDD  F01E         	goto	l898
  2216   003D76                     u4240:
  2217   003D76  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  2218   003D78  EFC2  F01E         	goto	u4250
  2219   003D7C  EFC0  F01E         	goto	u4251
  2220   003D80                     u4251:
  2221   003D80  EFDD  F01E         	goto	l898
  2222   003D84                     u4250:
  2223   003D84  C005  F009         	movff	___xxtofl@val,??___xxtofl
  2224   003D88  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  2225   003D8C  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  2226   003D90  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  2227   003D94  1E09               	comf	??___xxtofl^0,f,c
  2228   003D96  1E0A               	comf	(??___xxtofl+1)^0,f,c
  2229   003D98  1E0B               	comf	(??___xxtofl+2)^0,f,c
  2230   003D9A  1E0C               	comf	(??___xxtofl+3)^0,f,c
  2231   003D9C  2A09               	incf	??___xxtofl^0,f,c
  2232   003D9E  0E00               	movlw	0
  2233   003DA0  220A               	addwfc	(??___xxtofl+1)^0,f,c
  2234   003DA2  220B               	addwfc	(??___xxtofl+2)^0,f,c
  2235   003DA4  220C               	addwfc	(??___xxtofl+3)^0,f,c
  2236   003DA6  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  2237   003DAA  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  2238   003DAE  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  2239   003DB2  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  2240   003DB6  EFE5  F01E         	goto	l3922
  2241   003DBA                     l898:
  2242   003DBA  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  2243   003DBE  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2244   003DC2  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2245   003DC6  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2246   003DCA                     l3922:
  2247   003DCA  5005               	movf	___xxtofl@val^0,w,c
  2248   003DCC  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  2249   003DCE  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  2250   003DD0  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  2251   003DD2  A4D8               	btfss	status,2,c
  2252   003DD4  EFEE  F01E         	goto	u4261
  2253   003DD8  EFF0  F01E         	goto	u4260
  2254   003DDC                     u4261:
  2255   003DDC  EFFA  F01E         	goto	l3928
  2256   003DE0                     u4260:
  2257   003DE0  0E00               	movlw	0
  2258   003DE2  6E05               	movwf	?___xxtofl^0,c
  2259   003DE4  0E00               	movlw	0
  2260   003DE6  6E06               	movwf	(?___xxtofl+1)^0,c
  2261   003DE8  0E00               	movlw	0
  2262   003DEA  6E07               	movwf	(?___xxtofl+2)^0,c
  2263   003DEC  0E00               	movlw	0
  2264   003DEE  6E08               	movwf	(?___xxtofl+3)^0,c
  2265   003DF0  EF8B  F01F         	goto	l901
  2266   003DF4                     l3928:
  2267   003DF4  0E96               	movlw	150
  2268   003DF6  6E0E               	movwf	___xxtofl@exp^0,c
  2269   003DF8  EF04  F01F         	goto	l3932
  2270   003DFC                     l3930:
  2271   003DFC  2A0E               	incf	___xxtofl@exp^0,f,c
  2272   003DFE  90D8               	bcf	status,0,c
  2273   003E00  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  2274   003E02  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  2275   003E04  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  2276   003E06  320F               	rrcf	___xxtofl@arg^0,f,c
  2277   003E08                     l3932:
  2278   003E08  0E00               	movlw	0
  2279   003E0A  140F               	andwf	___xxtofl@arg^0,w,c
  2280   003E0C  6E09               	movwf	??___xxtofl^0,c
  2281   003E0E  0E00               	movlw	0
  2282   003E10  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  2283   003E12  6E0A               	movwf	(??___xxtofl+1)^0,c
  2284   003E14  0E00               	movlw	0
  2285   003E16  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  2286   003E18  6E0B               	movwf	(??___xxtofl+2)^0,c
  2287   003E1A  0EFE               	movlw	254
  2288   003E1C  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  2289   003E1E  6E0C               	movwf	(??___xxtofl+3)^0,c
  2290   003E20  5009               	movf	??___xxtofl^0,w,c
  2291   003E22  100A               	iorwf	(??___xxtofl+1)^0,w,c
  2292   003E24  100B               	iorwf	(??___xxtofl+2)^0,w,c
  2293   003E26  100C               	iorwf	(??___xxtofl+3)^0,w,c
  2294   003E28  A4D8               	btfss	status,2,c
  2295   003E2A  EF19  F01F         	goto	u4271
  2296   003E2E  EF1B  F01F         	goto	u4270
  2297   003E32                     u4271:
  2298   003E32  EFFE  F01E         	goto	l3930
  2299   003E36                     u4270:
  2300   003E36  EF29  F01F         	goto	l905
  2301   003E3A                     l3934:
  2302   003E3A  2A0E               	incf	___xxtofl@exp^0,f,c
  2303   003E3C  0E01               	movlw	1
  2304   003E3E  260F               	addwf	___xxtofl@arg^0,f,c
  2305   003E40  0E00               	movlw	0
  2306   003E42  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  2307   003E44  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  2308   003E46  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  2309   003E48  90D8               	bcf	status,0,c
  2310   003E4A  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  2311   003E4C  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  2312   003E4E  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  2313   003E50  320F               	rrcf	___xxtofl@arg^0,f,c
  2314   003E52                     l905:
  2315   003E52  0E00               	movlw	0
  2316   003E54  140F               	andwf	___xxtofl@arg^0,w,c
  2317   003E56  6E09               	movwf	??___xxtofl^0,c
  2318   003E58  0E00               	movlw	0
  2319   003E5A  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  2320   003E5C  6E0A               	movwf	(??___xxtofl+1)^0,c
  2321   003E5E  0E00               	movlw	0
  2322   003E60  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  2323   003E62  6E0B               	movwf	(??___xxtofl+2)^0,c
  2324   003E64  0EFF               	movlw	255
  2325   003E66  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  2326   003E68  6E0C               	movwf	(??___xxtofl+3)^0,c
  2327   003E6A  5009               	movf	??___xxtofl^0,w,c
  2328   003E6C  100A               	iorwf	(??___xxtofl+1)^0,w,c
  2329   003E6E  100B               	iorwf	(??___xxtofl+2)^0,w,c
  2330   003E70  100C               	iorwf	(??___xxtofl+3)^0,w,c
  2331   003E72  A4D8               	btfss	status,2,c
  2332   003E74  EF3E  F01F         	goto	u4281
  2333   003E78  EF40  F01F         	goto	u4280
  2334   003E7C                     u4281:
  2335   003E7C  EF1D  F01F         	goto	l3934
  2336   003E80                     u4280:
  2337   003E80  EF48  F01F         	goto	l3942
  2338   003E84                     l3940:
  2339   003E84  060E               	decf	___xxtofl@exp^0,f,c
  2340   003E86  90D8               	bcf	status,0,c
  2341   003E88  360F               	rlcf	___xxtofl@arg^0,f,c
  2342   003E8A  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  2343   003E8C  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  2344   003E8E  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  2345   003E90                     l3942:
  2346   003E90  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  2347   003E92  EF4D  F01F         	goto	u4291
  2348   003E96  EF4F  F01F         	goto	u4290
  2349   003E9A                     u4291:
  2350   003E9A  EF57  F01F         	goto	l912
  2351   003E9E                     u4290:
  2352   003E9E  0E02               	movlw	2
  2353   003EA0  600E               	cpfslt	___xxtofl@exp^0,c
  2354   003EA2  EF55  F01F         	goto	u4301
  2355   003EA6  EF57  F01F         	goto	u4300
  2356   003EAA                     u4301:
  2357   003EAA  EF42  F01F         	goto	l3940
  2358   003EAE                     u4300:
  2359   003EAE                     l912:
  2360   003EAE  B00E               	btfsc	___xxtofl@exp^0,0,c
  2361   003EB0  EF5C  F01F         	goto	u4311
  2362   003EB4  EF5E  F01F         	goto	u4310
  2363   003EB8                     u4311:
  2364   003EB8  EF5F  F01F         	goto	l3948
  2365   003EBC                     u4310:
  2366   003EBC  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  2367   003EBE                     l3948:
  2368   003EBE  90D8               	bcf	status,0,c
  2369   003EC0  320E               	rrcf	___xxtofl@exp^0,f,c
  2370   003EC2  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  2371   003EC6  6A0A               	clrf	(??___xxtofl+1)^0,c
  2372   003EC8  6A0B               	clrf	(??___xxtofl+2)^0,c
  2373   003ECA  6A0C               	clrf	(??___xxtofl+3)^0,c
  2374   003ECC  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  2375   003ED0  6A0B               	clrf	(??___xxtofl+2)^0,c
  2376   003ED2  6A0A               	clrf	(??___xxtofl+1)^0,c
  2377   003ED4  6A09               	clrf	??___xxtofl^0,c
  2378   003ED6  5009               	movf	??___xxtofl^0,w,c
  2379   003ED8  120F               	iorwf	___xxtofl@arg^0,f,c
  2380   003EDA  500A               	movf	(??___xxtofl+1)^0,w,c
  2381   003EDC  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  2382   003EDE  500B               	movf	(??___xxtofl+2)^0,w,c
  2383   003EE0  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  2384   003EE2  500C               	movf	(??___xxtofl+3)^0,w,c
  2385   003EE4  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  2386   003EE6  500D               	movf	___xxtofl@sign^0,w,c
  2387   003EE8  B4D8               	btfsc	status,2,c
  2388   003EEA  EF79  F01F         	goto	u4321
  2389   003EEE  EF7B  F01F         	goto	u4320
  2390   003EF2                     u4321:
  2391   003EF2  EF83  F01F         	goto	l3958
  2392   003EF6                     u4320:
  2393   003EF6  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  2394   003EF8  EF82  F01F         	goto	u4330
  2395   003EFC  EF80  F01F         	goto	u4331
  2396   003F00                     u4331:
  2397   003F00  EF83  F01F         	goto	l3958
  2398   003F04                     u4330:
  2399   003F04  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  2400   003F06                     l3958:
  2401   003F06  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  2402   003F0A  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  2403   003F0E  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  2404   003F12  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  2405   003F16                     l901:
  2406   003F16  0012               	return		;funcret
  2407   003F18                     __end_of___xxtofl:
  2408                           	callstack 0
  2409                           
  2410 ;; *************** function _PWM *****************
  2411 ;; Defined at:
  2412 ;;		line 58 in file "main.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;		None
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;  dcVal          20   94[BANK0 ] int [10]
  2417 ;;  percent        15   79[BANK0 ] unsigned char [15]
  2418 ;;  index           2  118[BANK0 ] int 
  2419 ;;  checkdutyCyc    2  116[BANK0 ] unsigned int 
  2420 ;;  pwmStatus       2  114[BANK0 ] unsigned int 
  2421 ;;  preScale        2    0        unsigned int 
  2422 ;; Return value:  Size  Location     Type
  2423 ;;                  1    wreg      void 
  2424 ;; Registers used:
  2425 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2426 ;; Tracked objects:
  2427 ;;		On entry : 0/0
  2428 ;;		On exit  : 0/0
  2429 ;;		Unchanged: 0/0
  2430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2432 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2433 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2434 ;;      Totals:         0      43       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2435 ;;Total ram usage:       43 bytes
  2436 ;; Hardware stack levels used: 1
  2437 ;; Hardware stack levels required when called: 9
  2438 ;; This function calls:
  2439 ;;		_LCD_Clear
  2440 ;;		_LCD_String_xy
  2441 ;;		_PWM2_Initialize
  2442 ;;		_PWM2_LoadDutyValue
  2443 ;;		_PWM2_OutputStatusGet
  2444 ;;		_PWM_Output_D8_Enable
  2445 ;;		_TMR2_Initialize
  2446 ;;		_TMR2_StartTimer
  2447 ;;		___lldiv
  2448 ;;		___lmul
  2449 ;;		_sprintf
  2450 ;; This function is called by:
  2451 ;;		_main
  2452 ;; This function uses a non-reentrant model
  2453 ;;
  2454                           
  2455                           	psect	text4
  2456   00393C                     __ptext4:
  2457                           	callstack 0
  2458   00393C                     _PWM:
  2459                           	callstack 21
  2460   00393C                     
  2461                           ;main.c: 59:     unsigned int checkdutyCycle, pwmStatus, preScale;;main.c: 60:     int d
      +                          cVal[10] = {0, 103, 205, 308, 410, 512, 615, 717, 820, 922};
  2462   00393C  EE20  F0DA         	lfsr	2,PWM@F16999
  2463   003940  EE10  F0BE         	lfsr	1,PWM@dcVal
  2464   003944  0E13               	movlw	19
  2465   003946                     u4781:
  2466   003946  006F FF6F FFE3     	movff	plusw2,plusw1
  2467   00394C  06E8               	decf	wreg,f,c
  2468   00394E  E2FB               	bc	u4781
  2469   003950                     
  2470                           ;main.c: 61:     int index = 0;
  2471   003950  0E00               	movlw	0
  2472   003952  0100               	movlb	0	; () banked
  2473   003954  6FD7               	movwf	(PWM@index+1)& (0+255),b
  2474   003956  0E00               	movlw	0
  2475   003958  6FD6               	movwf	PWM@index& (0+255),b
  2476   00395A                     
  2477                           ; BSR set to: 0
  2478                           ;main.c: 62:     char percent[15];;main.c: 63:     OSCSTATbits.HFOR =1;
  2479   00395A  0139               	movlb	57	; () banked
  2480   00395C  8DDC               	bsf	220,6,b	;volatile
  2481   00395E                     
  2482                           ; BSR set to: 57
  2483                           ;main.c: 64:     OSCFRQ=0x02;
  2484   00395E  0E02               	movlw	2
  2485   003960  6FDF               	movwf	223,b	;volatile
  2486   003962                     
  2487                           ; BSR set to: 57
  2488                           ;main.c: 66:     ANSELB = 0b00000000;
  2489   003962  013A               	movlb	58	; () banked
  2490   003964  6B50               	clrf	80,b	;volatile
  2491   003966                     
  2492                           ; BSR set to: 58
  2493                           ;main.c: 67:     TRISB= 0b00000000;
  2494   003966  6AC3               	clrf	195,c	;volatile
  2495   003968                     
  2496                           ; BSR set to: 58
  2497                           ;main.c: 68:     PORTB= 0b00000000;
  2498   003968  6ACB               	clrf	203,c	;volatile
  2499   00396A                     
  2500                           ; BSR set to: 58
  2501                           ;main.c: 69:     TMR2_Initialize();
  2502   00396A  ECC4  F027         	call	_TMR2_Initialize	;wreg free
  2503   00396E                     
  2504                           ;main.c: 70:     TMR2_StartTimer();
  2505   00396E  ECF2  F027         	call	_TMR2_StartTimer	;wreg free
  2506   003972                     
  2507                           ;main.c: 72:     PWM_Output_D8_Enable();
  2508   003972  ECB6  F027         	call	_PWM_Output_D8_Enable	;wreg free
  2509   003976                     
  2510                           ;main.c: 73:     PWM2_Initialize();
  2511   003976  ECCF  F027         	call	_PWM2_Initialize	;wreg free
  2512   00397A                     
  2513                           ;main.c: 74:     PWM2_LoadDutyValue( dcVal[index] );
  2514   00397A  C0BE  F005         	movff	PWM@dcVal,PWM2_LoadDutyValue@dutyValue
  2515   00397E  C0BF  F006         	movff	PWM@dcVal+1,PWM2_LoadDutyValue@dutyValue+1
  2516   003982  EC67  F027         	call	_PWM2_LoadDutyValue	;wreg free
  2517   003986                     
  2518                           ;main.c: 79:     checkdutyCycle =(uint16_t)((100UL*dcVal[index])/(4*(T2PR+1)));
  2519   003986  C0BE  F005         	movff	PWM@dcVal,___lmul@multiplier
  2520   00398A  C0BF  F006         	movff	PWM@dcVal+1,___lmul@multiplier+1
  2521   00398E  0E00               	movlw	0
  2522   003990  BE06               	btfsc	(___lmul@multiplier+1)^0,7,c
  2523   003992  0EFF               	movlw	-1
  2524   003994  6E07               	movwf	(___lmul@multiplier+2)^0,c
  2525   003996  6E08               	movwf	(___lmul@multiplier+3)^0,c
  2526   003998  0E64               	movlw	100
  2527   00399A  6E09               	movwf	___lmul@multiplicand^0,c
  2528   00399C  0E00               	movlw	0
  2529   00399E  6E0A               	movwf	(___lmul@multiplicand+1)^0,c
  2530   0039A0  0E00               	movlw	0
  2531   0039A2  6E0B               	movwf	(___lmul@multiplicand+2)^0,c
  2532   0039A4  0E00               	movlw	0
  2533   0039A6  6E0C               	movwf	(___lmul@multiplicand+3)^0,c
  2534   0039A8  ECAE  F024         	call	___lmul	;wreg free
  2535   0039AC  C005  F011         	movff	?___lmul,___lldiv@dividend
  2536   0039B0  C006  F012         	movff	?___lmul+1,___lldiv@dividend+1
  2537   0039B4  C007  F013         	movff	?___lmul+2,___lldiv@dividend+2
  2538   0039B8  C008  F014         	movff	?___lmul+3,___lldiv@dividend+3
  2539   0039BC  50AB               	movf	171,w,c	;volatile
  2540   0039BE  0100               	movlb	0	; () banked
  2541   0039C0  6FAD               	movwf	??_PWM& (0+255),b
  2542   0039C2  6BAE               	clrf	(??_PWM+1)& (0+255),b
  2543   0039C4  90D8               	bcf	status,0,c
  2544   0039C6  37AD               	rlcf	??_PWM& (0+255),f,b
  2545   0039C8  37AE               	rlcf	(??_PWM+1)& (0+255),f,b
  2546   0039CA  90D8               	bcf	status,0,c
  2547   0039CC  37AD               	rlcf	??_PWM& (0+255),f,b
  2548   0039CE  37AE               	rlcf	(??_PWM+1)& (0+255),f,b
  2549   0039D0  0E04               	movlw	4
  2550   0039D2  27AD               	addwf	??_PWM& (0+255),f,b
  2551   0039D4  0E00               	movlw	0
  2552   0039D6  23AE               	addwfc	(??_PWM+1)& (0+255),f,b
  2553   0039D8  C0AD  F015         	movff	??_PWM,___lldiv@divisor
  2554   0039DC  C0AE  F016         	movff	??_PWM+1,___lldiv@divisor+1
  2555   0039E0  0E00               	movlw	0
  2556   0039E2  BE16               	btfsc	(___lldiv@divisor+1)^0,7,c
  2557   0039E4  0EFF               	movlw	-1
  2558   0039E6  6E17               	movwf	(___lldiv@divisor+2)^0,c
  2559   0039E8  6E18               	movwf	(___lldiv@divisor+3)^0,c
  2560   0039EA  EC23  F024         	call	___lldiv	;wreg free
  2561   0039EE  C011  F0D4         	movff	?___lldiv,PWM@checkdutyCycle
  2562   0039F2  C012  F0D5         	movff	?___lldiv+1,PWM@checkdutyCycle+1
  2563   0039F6  50AC               	movf	172,w,c	;volatile
  2564   0039F8                     
  2565                           ;main.c: 83:     LCD_Clear();
  2566   0039F8  ECEE  F027         	call	_LCD_Clear	;wreg free
  2567   0039FC                     
  2568                           ;main.c: 84:     sprintf(percent, "%d", checkdutyCycle);
  2569   0039FC  0EAF               	movlw	low PWM@percent
  2570   0039FE  0100               	movlb	0	; () banked
  2571   003A00  6F9B               	movwf	sprintf@s& (0+255),b
  2572   003A02  0E26               	movlw	low STR_5
  2573   003A04  6F9C               	movwf	sprintf@fmt& (0+255),b
  2574   003A06  C0D4  F09D         	movff	PWM@checkdutyCycle,?_sprintf+2
  2575   003A0A  C0D5  F09E         	movff	PWM@checkdutyCycle+1,?_sprintf+3
  2576   003A0E  EC15  F027         	call	_sprintf	;wreg free
  2577   003A12                     
  2578                           ;main.c: 85:     LCD_String_xy(2, 0, percent);
  2579   003A12  0E00               	movlw	0
  2580   003A14  6E0E               	movwf	LCD_String_xy@pos^0,c
  2581   003A16  0EAF               	movlw	low PWM@percent
  2582   003A18  6E0F               	movwf	LCD_String_xy@msg^0,c
  2583   003A1A  6A10               	clrf	(LCD_String_xy@msg+1)^0,c
  2584   003A1C  0E02               	movlw	2
  2585   003A1E  ECF5  F026         	call	_LCD_String_xy
  2586   003A22                     l4424:
  2587                           
  2588                           ;main.c: 88:         pwmStatus = PWM2_OutputStatusGet();
  2589   003A22  ECE4  F027         	call	_PWM2_OutputStatusGet	;wreg free
  2590   003A26  0100               	movlb	0	; () banked
  2591   003A28  6FAD               	movwf	??_PWM& (0+255),b
  2592   003A2A  51AD               	movf	??_PWM& (0+255),w,b
  2593   003A2C  6FD2               	movwf	PWM@pwmStatus& (0+255),b
  2594   003A2E  6BD3               	clrf	(PWM@pwmStatus+1)& (0+255),b
  2595   003A30                     
  2596                           ; BSR set to: 0
  2597                           ;main.c: 89:         PORTBbits.RB2 = pwmStatus;
  2598   003A30  B1D2               	btfsc	PWM@pwmStatus& (0+255),0,b
  2599   003A32  D002               	bra	u4795
  2600   003A34  94CB               	bcf	203,2,c	;volatile
  2601   003A36  D001               	bra	u4796
  2602   003A38                     u4795:
  2603   003A38  84CB               	bsf	203,2,c	;volatile
  2604   003A3A                     u4796:
  2605   003A3A                     
  2606                           ;main.c: 97:         if (PORTEbits.RE1 == 1) {
  2607   003A3A  A2CE               	btfss	206,1,c	;volatile
  2608   003A3C  EF22  F01D         	goto	u4801
  2609   003A40  EF24  F01D         	goto	u4800
  2610   003A44                     u4801:
  2611   003A44  EF11  F01D         	goto	l4424
  2612   003A48                     u4800:
  2613   003A48                     
  2614                           ;main.c: 98:             index++;
  2615   003A48  0100               	movlb	0	; () banked
  2616   003A4A  4BD6               	infsnz	PWM@index& (0+255),f,b
  2617   003A4C  2BD7               	incf	(PWM@index+1)& (0+255),f,b
  2618   003A4E                     
  2619                           ; BSR set to: 0
  2620                           ;main.c: 100:             if (index == 10) { index = 0; }
  2621   003A4E  0E0A               	movlw	10
  2622   003A50  19D6               	xorwf	PWM@index& (0+255),w,b
  2623   003A52  11D7               	iorwf	(PWM@index+1)& (0+255),w,b
  2624   003A54  A4D8               	btfss	status,2,c
  2625   003A56  EF2F  F01D         	goto	u4811
  2626   003A5A  EF31  F01D         	goto	u4810
  2627   003A5E                     u4811:
  2628   003A5E  EF35  F01D         	goto	l4436
  2629   003A62                     u4810:
  2630   003A62                     
  2631                           ; BSR set to: 0
  2632   003A62  0E00               	movlw	0
  2633   003A64  6FD7               	movwf	(PWM@index+1)& (0+255),b
  2634   003A66  0E00               	movlw	0
  2635   003A68  6FD6               	movwf	PWM@index& (0+255),b
  2636   003A6A                     l4436:
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;main.c: 101:             checkdutyCycle =(uint16_t)((100UL*dcVal[index])/(4*(T2PR+1)));
  2640   003A6A  51D6               	movf	PWM@index& (0+255),w,b
  2641   003A6C  0D02               	mullw	2
  2642   003A6E  50F3               	movf	243,w,c
  2643   003A70  0FBE               	addlw	low PWM@dcVal
  2644   003A72  6ED9               	movwf	fsr2l,c
  2645   003A74  6ADA               	clrf	fsr2h,c
  2646   003A76  006F FF78  F005    	movff	postinc2,___lmul@multiplier
  2647   003A7C  006F FF74  F006    	movff	postdec2,___lmul@multiplier+1
  2648   003A82  0E00               	movlw	0
  2649   003A84  BE06               	btfsc	(___lmul@multiplier+1)^0,7,c
  2650   003A86  0EFF               	movlw	-1
  2651   003A88  6E07               	movwf	(___lmul@multiplier+2)^0,c
  2652   003A8A  6E08               	movwf	(___lmul@multiplier+3)^0,c
  2653   003A8C  0E64               	movlw	100
  2654   003A8E  6E09               	movwf	___lmul@multiplicand^0,c
  2655   003A90  0E00               	movlw	0
  2656   003A92  6E0A               	movwf	(___lmul@multiplicand+1)^0,c
  2657   003A94  0E00               	movlw	0
  2658   003A96  6E0B               	movwf	(___lmul@multiplicand+2)^0,c
  2659   003A98  0E00               	movlw	0
  2660   003A9A  6E0C               	movwf	(___lmul@multiplicand+3)^0,c
  2661   003A9C  ECAE  F024         	call	___lmul	;wreg free
  2662   003AA0  C005  F011         	movff	?___lmul,___lldiv@dividend
  2663   003AA4  C006  F012         	movff	?___lmul+1,___lldiv@dividend+1
  2664   003AA8  C007  F013         	movff	?___lmul+2,___lldiv@dividend+2
  2665   003AAC  C008  F014         	movff	?___lmul+3,___lldiv@dividend+3
  2666   003AB0  50AB               	movf	171,w,c	;volatile
  2667   003AB2  0100               	movlb	0	; () banked
  2668   003AB4  6FAD               	movwf	??_PWM& (0+255),b
  2669   003AB6  6BAE               	clrf	(??_PWM+1)& (0+255),b
  2670   003AB8  90D8               	bcf	status,0,c
  2671   003ABA  37AD               	rlcf	??_PWM& (0+255),f,b
  2672   003ABC  37AE               	rlcf	(??_PWM+1)& (0+255),f,b
  2673   003ABE  90D8               	bcf	status,0,c
  2674   003AC0  37AD               	rlcf	??_PWM& (0+255),f,b
  2675   003AC2  37AE               	rlcf	(??_PWM+1)& (0+255),f,b
  2676   003AC4  0E04               	movlw	4
  2677   003AC6  27AD               	addwf	??_PWM& (0+255),f,b
  2678   003AC8  0E00               	movlw	0
  2679   003ACA  23AE               	addwfc	(??_PWM+1)& (0+255),f,b
  2680   003ACC  C0AD  F015         	movff	??_PWM,___lldiv@divisor
  2681   003AD0  C0AE  F016         	movff	??_PWM+1,___lldiv@divisor+1
  2682   003AD4  0E00               	movlw	0
  2683   003AD6  BE16               	btfsc	(___lldiv@divisor+1)^0,7,c
  2684   003AD8  0EFF               	movlw	-1
  2685   003ADA  6E17               	movwf	(___lldiv@divisor+2)^0,c
  2686   003ADC  6E18               	movwf	(___lldiv@divisor+3)^0,c
  2687   003ADE  EC23  F024         	call	___lldiv	;wreg free
  2688   003AE2  C011  F0D4         	movff	?___lldiv,PWM@checkdutyCycle
  2689   003AE6  C012  F0D5         	movff	?___lldiv+1,PWM@checkdutyCycle+1
  2690   003AEA                     
  2691                           ;main.c: 104:             PWM2_LoadDutyValue( dcVal[index] );
  2692   003AEA  0100               	movlb	0	; () banked
  2693   003AEC  51D6               	movf	PWM@index& (0+255),w,b
  2694   003AEE  0D02               	mullw	2
  2695   003AF0  50F3               	movf	243,w,c
  2696   003AF2  0FBE               	addlw	low PWM@dcVal
  2697   003AF4  6ED9               	movwf	fsr2l,c
  2698   003AF6  6ADA               	clrf	fsr2h,c
  2699   003AF8  006F FF78  F005    	movff	postinc2,PWM2_LoadDutyValue@dutyValue
  2700   003AFE  006F FF74  F006    	movff	postdec2,PWM2_LoadDutyValue@dutyValue+1
  2701   003B04  EC67  F027         	call	_PWM2_LoadDutyValue	;wreg free
  2702   003B08                     
  2703                           ;main.c: 107:             LCD_Clear();
  2704   003B08  ECEE  F027         	call	_LCD_Clear	;wreg free
  2705   003B0C                     
  2706                           ;main.c: 108:             sprintf(percent, "%d", checkdutyCycle);
  2707   003B0C  0EAF               	movlw	low PWM@percent
  2708   003B0E  0100               	movlb	0	; () banked
  2709   003B10  6F9B               	movwf	sprintf@s& (0+255),b
  2710   003B12  0E26               	movlw	low STR_5
  2711   003B14  6F9C               	movwf	sprintf@fmt& (0+255),b
  2712   003B16  C0D4  F09D         	movff	PWM@checkdutyCycle,?_sprintf+2
  2713   003B1A  C0D5  F09E         	movff	PWM@checkdutyCycle+1,?_sprintf+3
  2714   003B1E  EC15  F027         	call	_sprintf	;wreg free
  2715   003B22                     
  2716                           ;main.c: 109:             LCD_String_xy(2, 0, percent);
  2717   003B22  0E00               	movlw	0
  2718   003B24  6E0E               	movwf	LCD_String_xy@pos^0,c
  2719   003B26  0EAF               	movlw	low PWM@percent
  2720   003B28  6E0F               	movwf	LCD_String_xy@msg^0,c
  2721   003B2A  6A10               	clrf	(LCD_String_xy@msg+1)^0,c
  2722   003B2C  0E02               	movlw	2
  2723   003B2E  ECF5  F026         	call	_LCD_String_xy
  2724   003B32                     
  2725                           ;main.c: 110:             _delay((unsigned long)((1000)*(4000000/4000.0)));
  2726   003B32  0E06               	movlw	6
  2727   003B34  0100               	movlb	0	; () banked
  2728   003B36  6FAE               	movwf	(??_PWM+1)& (0+255),b
  2729   003B38  0E13               	movlw	19
  2730   003B3A  6FAD               	movwf	??_PWM& (0+255),b
  2731   003B3C  0EAD               	movlw	173
  2732   003B3E                     u4847:
  2733   003B3E  2EE8               	decfsz	wreg,f,c
  2734   003B40  D7FE               	bra	u4847
  2735   003B42  2FAD               	decfsz	??_PWM& (0+255),f,b
  2736   003B44  D7FC               	bra	u4847
  2737   003B46  2FAE               	decfsz	(??_PWM+1)& (0+255),f,b
  2738   003B48  D7FA               	bra	u4847
  2739   003B4A  D000               	nop2	
  2740   003B4C  EF11  F01D         	goto	l4424
  2741   003B50  0012               	return		;funcret
  2742   003B52                     __end_of_PWM:
  2743                           	callstack 0
  2744                           
  2745 ;; *************** function _sprintf *****************
  2746 ;; Defined at:
  2747 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  2748 ;; Parameters:    Size  Location     Type
  2749 ;;  s               1   59[BANK0 ] PTR unsigned char 
  2750 ;;		 -> PWM@percent(15), readADC@buffer(12), 
  2751 ;;  fmt             1   60[BANK0 ] PTR const unsigned char 
  2752 ;;		 -> STR_6(3), STR_5(3), STR_3(5), 
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;  f              11   66[BANK0 ] struct _IO_FILE
  2755 ;;  ret             2    0        int 
  2756 ;;  ap              1   65[BANK0 ] PTR void [1]
  2757 ;;		 -> ?_sprintf(2), 
  2758 ;; Return value:  Size  Location     Type
  2759 ;;                  2   59[BANK0 ] int 
  2760 ;; Registers used:
  2761 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2762 ;; Tracked objects:
  2763 ;;		On entry : 0/0
  2764 ;;		On exit  : 0/0
  2765 ;;		Unchanged: 0/0
  2766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2767 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2768 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2770 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2771 ;;Total ram usage:       18 bytes
  2772 ;; Hardware stack levels used: 1
  2773 ;; Hardware stack levels required when called: 8
  2774 ;; This function calls:
  2775 ;;		_vfprintf
  2776 ;; This function is called by:
  2777 ;;		_readADC
  2778 ;;		_PWM
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           	psect	text5
  2783   004E2A                     __ptext5:
  2784                           	callstack 0
  2785   004E2A                     _sprintf:
  2786                           	callstack 21
  2787   004E2A  0E9D               	movlw	low (?_sprintf+2)
  2788   004E2C  0100               	movlb	0	; () banked
  2789   004E2E  6FA1               	movwf	sprintf@ap& (0+255),b
  2790   004E30  C09B  F0A2         	movff	sprintf@s,sprintf@f
  2791   004E34                     
  2792                           ; BSR set to: 0
  2793   004E34  0E00               	movlw	0
  2794   004E36  6FA5               	movwf	(sprintf@f+3)& (0+255),b
  2795   004E38  0E00               	movlw	0
  2796   004E3A  6FA4               	movwf	(sprintf@f+2)& (0+255),b
  2797   004E3C                     
  2798                           ; BSR set to: 0
  2799   004E3C  0E00               	movlw	0
  2800   004E3E  6FAC               	movwf	(sprintf@f+10)& (0+255),b
  2801   004E40  0E00               	movlw	0
  2802   004E42  6FAB               	movwf	(sprintf@f+9)& (0+255),b
  2803   004E44                     
  2804                           ; BSR set to: 0
  2805   004E44  0EA2               	movlw	low sprintf@f
  2806   004E46  6F97               	movwf	vfprintf@fp& (0+255),b
  2807   004E48  C09C  F098         	movff	sprintf@fmt,vfprintf@fmt
  2808   004E4C  0EA1               	movlw	low sprintf@ap
  2809   004E4E  6F99               	movwf	vfprintf@ap& (0+255),b
  2810   004E50  EC48  F026         	call	_vfprintf	;wreg free
  2811   004E54  0100               	movlb	0	; () banked
  2812   004E56  519B               	movf	sprintf@s& (0+255),w,b
  2813   004E58  25A4               	addwf	(sprintf@f+2)& (0+255),w,b
  2814   004E5A  6ED9               	movwf	fsr2l,c
  2815   004E5C  6ADA               	clrf	fsr2h,c
  2816   004E5E  6ADF               	clrf	indf2,c
  2817   004E60                     
  2818                           ; BSR set to: 0
  2819   004E60  0012               	return		;funcret
  2820   004E62                     __end_of_sprintf:
  2821                           	callstack 0
  2822                           
  2823 ;; *************** function _vfprintf *****************
  2824 ;; Defined at:
  2825 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;  fp              1   55[BANK0 ] PTR struct _IO_FILE
  2828 ;;		 -> sprintf@f(11), 
  2829 ;;  fmt             1   56[BANK0 ] PTR const unsigned char 
  2830 ;;		 -> STR_6(3), STR_5(3), STR_3(5), 
  2831 ;;  ap              1   57[BANK0 ] PTR PTR void 
  2832 ;;		 -> sprintf@ap(1), 
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;  cfmt            1   58[BANK0 ] PTR unsigned char 
  2835 ;;		 -> STR_6(3), STR_5(3), STR_3(5), 
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  2   55[BANK0 ] int 
  2838 ;; Registers used:
  2839 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2845 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2846 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2848 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2849 ;;Total ram usage:        4 bytes
  2850 ;; Hardware stack levels used: 1
  2851 ;; Hardware stack levels required when called: 7
  2852 ;; This function calls:
  2853 ;;		_vfpfcnvrt
  2854 ;; This function is called by:
  2855 ;;		_sprintf
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859                           	psect	text6
  2860   004C90                     __ptext6:
  2861                           	callstack 0
  2862   004C90                     _vfprintf:
  2863                           	callstack 21
  2864   004C90                     
  2865                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2866   004C90  C098  F09A         	movff	vfprintf@fmt,vfprintf@cfmt
  2867                           
  2868                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2869   004C94  EF55  F026         	goto	l4354
  2870   004C98                     l4352:
  2871                           
  2872                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2873   004C98  C097  F08E         	movff	vfprintf@fp,vfpfcnvrt@fp
  2874   004C9C  0E9A               	movlw	low vfprintf@cfmt
  2875   004C9E  0100               	movlb	0	; () banked
  2876   004CA0  6F8F               	movwf	vfpfcnvrt@fmt& (0+255),b
  2877   004CA2  C099  F090         	movff	vfprintf@ap,vfpfcnvrt@ap
  2878   004CA6  EC50  F01B         	call	_vfpfcnvrt	;wreg free
  2879   004CAA                     l4354:
  2880                           
  2881                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2882   004CAA  0060  F26B  FFF6   	movff	vfprintf@cfmt,tblptrl
  2883   004CB0                     	if	1	;There is more than 1 active tblptr byte
  2884   004CB0  0E20               	movlw	high __smallconst
  2885   004CB2  6EF7               	movwf	tblptrh,c
  2886   004CB4                     	endif
  2887   004CB4                     	if	0	;tblptru may be non-zero
  2888   004CB4                     	endif
  2889   004CB4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2890   004CB4  0E00               	movlw	low (__smallconst shr (0+16))
  2891   004CB6  6EF8               	movwf	tblptru,c
  2892   004CB8                     	endif
  2893   004CB8  0008               	tblrd		*
  2894   004CBA  50F5               	movf	tablat,w,c
  2895   004CBC  0900               	iorlw	0
  2896   004CBE  A4D8               	btfss	status,2,c
  2897   004CC0  EF64  F026         	goto	u4761
  2898   004CC4  EF66  F026         	goto	u4760
  2899   004CC8                     u4761:
  2900   004CC8  EF4C  F026         	goto	l4352
  2901   004CCC                     u4760:
  2902   004CCC                     
  2903                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2904   004CCC  0E00               	movlw	0
  2905   004CCE  0100               	movlb	0	; () banked
  2906   004CD0  6F98               	movwf	(?_vfprintf+1)& (0+255),b
  2907   004CD2  0E00               	movlw	0
  2908   004CD4  6F97               	movwf	?_vfprintf& (0+255),b
  2909   004CD6                     
  2910                           ; BSR set to: 0
  2911   004CD6  0012               	return		;funcret
  2912   004CD8                     __end_of_vfprintf:
  2913                           	callstack 0
  2914                           
  2915 ;; *************** function _vfpfcnvrt *****************
  2916 ;; Defined at:
  2917 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;  fp              1   46[BANK0 ] PTR struct _IO_FILE
  2920 ;;		 -> sprintf@f(11), 
  2921 ;;  fmt             1   47[BANK0 ] PTR PTR unsigned char 
  2922 ;;		 -> vfprintf@cfmt(1), 
  2923 ;;  ap              1   48[BANK0 ] PTR PTR void 
  2924 ;;		 -> sprintf@ap(1), 
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;  convarg         4   49[BANK0 ] struct .
  2927 ;;  cp              1   54[BANK0 ] PTR unsigned char 
  2928 ;;		 -> STR_6(3), STR_5(3), STR_3(5), 
  2929 ;;  c               1   53[BANK0 ] unsigned char 
  2930 ;;  done            1    0        _Bool 
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  1    wreg      void 
  2933 ;; Registers used:
  2934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2940 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2941 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2942 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2943 ;;      Totals:         1       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2944 ;;Total ram usage:       10 bytes
  2945 ;; Hardware stack levels used: 1
  2946 ;; Hardware stack levels required when called: 6
  2947 ;; This function calls:
  2948 ;;		_dtoa
  2949 ;;		_efgtoa
  2950 ;;		_fputc
  2951 ;;		_read_prec_or_width
  2952 ;; This function is called by:
  2953 ;;		_vfprintf
  2954 ;; This function uses a non-reentrant model
  2955 ;;
  2956                           
  2957                           	psect	text7
  2958   0036A0                     __ptext7:
  2959                           	callstack 0
  2960   0036A0                     _vfpfcnvrt:
  2961                           	callstack 21
  2962   0036A0                     
  2963                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2964   0036A0  0100               	movlb	0	; () banked
  2965   0036A2  518F               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2966   0036A4  6ED9               	movwf	fsr2l,c
  2967   0036A6  6ADA               	clrf	fsr2h,c
  2968   0036A8  006F FF7F FFF6     	movff	indf2,tblptrl
  2969   0036AE                     	if	1	;There is more than 1 active tblptr byte
  2970   0036AE  0E20               	movlw	high __smallconst
  2971   0036B0  6EF7               	movwf	tblptrh,c
  2972   0036B2                     	endif
  2973   0036B2                     	if	0	;tblptru may be non-zero
  2974   0036B2                     	endif
  2975   0036B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2976   0036B2  0E00               	movlw	low (__smallconst shr (0+16))
  2977   0036B4  6EF8               	movwf	tblptru,c
  2978   0036B6                     	endif
  2979   0036B6  0008               	tblrd		*
  2980   0036B8  50F5               	movf	tablat,w,c
  2981   0036BA  0A25               	xorlw	37
  2982   0036BC  A4D8               	btfss	status,2,c
  2983   0036BE  EF63  F01B         	goto	u4711
  2984   0036C2  EF65  F01B         	goto	u4710
  2985   0036C6                     u4711:
  2986   0036C6  EF89  F01C         	goto	l4344
  2987   0036CA                     u4710:
  2988   0036CA                     
  2989                           ; BSR set to: 0
  2990                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2991   0036CA  518F               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2992   0036CC  6ED9               	movwf	fsr2l,c
  2993   0036CE  6ADA               	clrf	fsr2h,c
  2994   0036D0  2ADF               	incf	indf2,f,c
  2995   0036D2                     
  2996                           ; BSR set to: 0
  2997                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2998   0036D2  0E00               	movlw	0
  2999   0036D4  6FF3               	movwf	(_width+1)& (0+255),b
  3000   0036D6  0E00               	movlw	0
  3001   0036D8  6FF2               	movwf	_width& (0+255),b
  3002   0036DA  C0F2  F0F6         	movff	_width,_flags
  3003   0036DE                     
  3004                           ; BSR set to: 0
  3005                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  3006   0036DE  69F4               	setf	_prec& (0+255),b
  3007   0036E0  69F5               	setf	(_prec+1)& (0+255),b
  3008   0036E2                     
  3009                           ; BSR set to: 0
  3010                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  3011   0036E2  518F               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3012   0036E4  6ED9               	movwf	fsr2l,c
  3013   0036E6  6ADA               	clrf	fsr2h,c
  3014   0036E8  006F FF7F FFF6     	movff	indf2,tblptrl
  3015   0036EE                     	if	1	;There is more than 1 active tblptr byte
  3016   0036EE  0E20               	movlw	high __smallconst
  3017   0036F0  6EF7               	movwf	tblptrh,c
  3018   0036F2                     	endif
  3019   0036F2                     	if	0	;tblptru may be non-zero
  3020   0036F2                     	endif
  3021   0036F2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3022   0036F2  0E00               	movlw	low (__smallconst shr (0+16))
  3023   0036F4  6EF8               	movwf	tblptru,c
  3024   0036F6                     	endif
  3025   0036F6  0008               	tblrd		*
  3026   0036F8  50F5               	movf	tablat,w,c
  3027   0036FA  0A2E               	xorlw	46
  3028   0036FC  A4D8               	btfss	status,2,c
  3029   0036FE  EF83  F01B         	goto	u4721
  3030   003702  EF85  F01B         	goto	u4720
  3031   003706                     u4721:
  3032   003706  EF93  F01B         	goto	l4294
  3033   00370A                     u4720:
  3034   00370A                     
  3035                           ; BSR set to: 0
  3036                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  3037   00370A  518F               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3038   00370C  6ED9               	movwf	fsr2l,c
  3039   00370E  6ADA               	clrf	fsr2h,c
  3040   003710  2ADF               	incf	indf2,f,c
  3041   003712                     
  3042                           ; BSR set to: 0
  3043                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  3044   003712  C08F  F005         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  3045   003716  C090  F006         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  3046   00371A  ECC5  F022         	call	_read_prec_or_width	;wreg free
  3047   00371E  C005  F0F4         	movff	?_read_prec_or_width,_prec
  3048   003722  C006  F0F5         	movff	?_read_prec_or_width+1,_prec+1
  3049   003726                     l4294:
  3050                           
  3051                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  3052   003726  0100               	movlb	0	; () banked
  3053   003728  518F               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3054   00372A  6ED9               	movwf	fsr2l,c
  3055   00372C  6ADA               	clrf	fsr2h,c
  3056   00372E  50DF               	movf	indf2,w,c
  3057   003730  6F96               	movwf	vfpfcnvrt@cp& (0+255),b
  3058   003732                     
  3059                           ; BSR set to: 0
  3060                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3061   003732  0060  F25B  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  3062   003738                     	if	1	;There is more than 1 active tblptr byte
  3063   003738  0E20               	movlw	high __smallconst
  3064   00373A  6EF7               	movwf	tblptrh,c
  3065   00373C                     	endif
  3066   00373C                     	if	0	;tblptru may be non-zero
  3067   00373C                     	endif
  3068   00373C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3069   00373C  0E00               	movlw	low (__smallconst shr (0+16))
  3070   00373E  6EF8               	movwf	tblptru,c
  3071   003740                     	endif
  3072   003740  0008               	tblrd		*
  3073   003742  50F5               	movf	tablat,w,c
  3074   003744  0A64               	xorlw	100
  3075   003746  B4D8               	btfsc	status,2,c
  3076   003748  EFA8  F01B         	goto	u4731
  3077   00374C  EFAA  F01B         	goto	u4730
  3078   003750                     u4731:
  3079   003750  EFBB  F01B         	goto	l4300
  3080   003754                     u4730:
  3081   003754                     
  3082                           ; BSR set to: 0
  3083   003754  0060  F25B  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  3084   00375A                     	if	1	;There is more than 1 active tblptr byte
  3085   00375A  0E20               	movlw	high __smallconst
  3086   00375C  6EF7               	movwf	tblptrh,c
  3087   00375E                     	endif
  3088   00375E                     	if	0	;tblptru may be non-zero
  3089   00375E                     	endif
  3090   00375E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3091   00375E  0E00               	movlw	low (__smallconst shr (0+16))
  3092   003760  6EF8               	movwf	tblptru,c
  3093   003762                     	endif
  3094   003762  0008               	tblrd		*
  3095   003764  50F5               	movf	tablat,w,c
  3096   003766  0A69               	xorlw	105
  3097   003768  A4D8               	btfss	status,2,c
  3098   00376A  EFB9  F01B         	goto	u4741
  3099   00376E  EFBB  F01B         	goto	u4740
  3100   003772                     u4741:
  3101   003772  EFD8  F01B         	goto	l4308
  3102   003776                     u4740:
  3103   003776                     l4300:
  3104                           
  3105                           ; BSR set to: 0
  3106                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3107   003776  5190               	movf	vfpfcnvrt@ap& (0+255),w,b
  3108   003778  6ED9               	movwf	fsr2l,c
  3109   00377A  6ADA               	clrf	fsr2h,c
  3110   00377C  0E02               	movlw	2
  3111   00377E  26DF               	addwf	indf2,f,c
  3112   003780  5CDF               	subwf	indf2,w,c
  3113   003782  6ED9               	movwf	fsr2l,c
  3114   003784  6ADA               	clrf	fsr2h,c
  3115   003786  006F FF78  F091    	movff	postinc2,vfpfcnvrt@convarg
  3116   00378C  006F FF78  F092    	movff	postinc2,vfpfcnvrt@convarg+1
  3117   003792                     
  3118                           ; BSR set to: 0
  3119                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  3120   003792  518F               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3121   003794  6ED9               	movwf	fsr2l,c
  3122   003796  6ADA               	clrf	fsr2h,c
  3123   003798  2996               	incf	vfpfcnvrt@cp& (0+255),w,b
  3124   00379A  6EDF               	movwf	indf2,c
  3125   00379C                     
  3126                           ; BSR set to: 0
  3127                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  3128   00379C  C08E  F01B         	movff	vfpfcnvrt@fp,dtoa@fp
  3129   0037A0  C091  F01C         	movff	vfpfcnvrt@convarg,dtoa@d
  3130   0037A4  C092  F01D         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  3131   0037A8  EC8C  F01F         	call	_dtoa	;wreg free
  3132   0037AC  EF9D  F01C         	goto	l1040
  3133   0037B0                     l4308:
  3134                           
  3135                           ; BSR set to: 0
  3136                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  3137   0037B0  518F               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3138   0037B2  6ED9               	movwf	fsr2l,c
  3139   0037B4  6ADA               	clrf	fsr2h,c
  3140   0037B6  50DF               	movf	indf2,w,c
  3141   0037B8  6F96               	movwf	vfpfcnvrt@cp& (0+255),b
  3142   0037BA                     
  3143                           ; BSR set to: 0
  3144                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  3145   0037BA  0060  F25B  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  3146   0037C0                     	if	1	;There is more than 1 active tblptr byte
  3147   0037C0  0E20               	movlw	high __smallconst
  3148   0037C2  6EF7               	movwf	tblptrh,c
  3149   0037C4                     	endif
  3150   0037C4                     	if	0	;tblptru may be non-zero
  3151   0037C4                     	endif
  3152   0037C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3153   0037C4  0E00               	movlw	low (__smallconst shr (0+16))
  3154   0037C6  6EF8               	movwf	tblptru,c
  3155   0037C8                     	endif
  3156   0037C8  0008               	tblrd		*
  3157   0037CA  006F FFD4  F095    	movff	tablat,vfpfcnvrt@c
  3158                           
  3159                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  3160   0037D0  EFF4  F01B         	goto	l4318
  3161   0037D4                     l4312:
  3162                           
  3163                           ; BSR set to: 0
  3164                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  3165   0037D4  2B96               	incf	vfpfcnvrt@cp& (0+255),f,b
  3166                           
  3167                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1696:     break;
  3168   0037D6  EF03  F01C         	goto	l4320
  3169   0037DA                     l4314:
  3170                           
  3171                           ; BSR set to: 0
  3172                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  3173   0037DA  0E6C               	movlw	108
  3174   0037DC  6F95               	movwf	vfpfcnvrt@c& (0+255),b
  3175                           
  3176                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1722:     break;
  3177   0037DE  EF03  F01C         	goto	l4320
  3178   0037E2                     l1046:
  3179                           
  3180                           ; BSR set to: 0
  3181                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  3182   0037E2  6B95               	clrf	vfpfcnvrt@c& (0+255),b
  3183                           
  3184                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1725:     break;
  3185   0037E4  EF03  F01C         	goto	l4320
  3186   0037E8                     l4318:
  3187                           
  3188                           ; BSR set to: 0
  3189   0037E8  5195               	movf	vfpfcnvrt@c& (0+255),w,b
  3190                           
  3191                           ; Switch size 1, requested type "simple"
  3192                           ; Number of cases is 3, Range of values is 76 to 108
  3193                           ; switch strategies available:
  3194                           ; Name         Instructions Cycles
  3195                           ; simple_byte           10     6 (average)
  3196                           ;	Chosen strategy is simple_byte
  3197   0037EA  0A4C               	xorlw	76	; case 76
  3198   0037EC  B4D8               	btfsc	status,2,c
  3199   0037EE  EFEA  F01B         	goto	l4312
  3200   0037F2  0A2A               	xorlw	42	; case 102
  3201   0037F4  B4D8               	btfsc	status,2,c
  3202   0037F6  EFED  F01B         	goto	l4314
  3203   0037FA  0A0A               	xorlw	10	; case 108
  3204   0037FC  B4D8               	btfsc	status,2,c
  3205   0037FE  EFEA  F01B         	goto	l4312
  3206   003802  EFF1  F01B         	goto	l1046
  3207   003806                     l4320:
  3208                           
  3209                           ; BSR set to: 0
  3210   003806  0060  F25B  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  3211   00380C                     	if	1	;There is more than 1 active tblptr byte
  3212   00380C  0E20               	movlw	high __smallconst
  3213   00380E  6EF7               	movwf	tblptrh,c
  3214   003810                     	endif
  3215   003810                     	if	0	;tblptru may be non-zero
  3216   003810                     	endif
  3217   003810                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3218   003810  0E00               	movlw	low (__smallconst shr (0+16))
  3219   003812  6EF8               	movwf	tblptru,c
  3220   003814                     	endif
  3221   003814  0008               	tblrd		*
  3222   003816  50F5               	movf	tablat,w,c
  3223   003818  0A66               	xorlw	102
  3224   00381A  A4D8               	btfss	status,2,c
  3225   00381C  EF12  F01C         	goto	u4751
  3226   003820  EF14  F01C         	goto	u4750
  3227   003824                     u4751:
  3228   003824  EF82  F01C         	goto	l4340
  3229   003828                     u4750:
  3230   003828  EF48  F01C         	goto	l4328
  3231   00382C                     l4322:
  3232                           
  3233                           ; BSR set to: 0
  3234                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3235   00382C  5190               	movf	vfpfcnvrt@ap& (0+255),w,b
  3236   00382E  6ED9               	movwf	fsr2l,c
  3237   003830  6ADA               	clrf	fsr2h,c
  3238   003832  006F FF7C  F057    	movff	indf2,??_vfpfcnvrt
  3239   003838  0E04               	movlw	4
  3240   00383A  26DF               	addwf	indf2,f,c
  3241   00383C  5057               	movf	??_vfpfcnvrt^0,w,c
  3242   00383E  6ED9               	movwf	fsr2l,c
  3243   003840  6ADA               	clrf	fsr2h,c
  3244   003842  006F FF78  F091    	movff	postinc2,vfpfcnvrt@convarg
  3245   003848  006F FF78  F092    	movff	postinc2,vfpfcnvrt@convarg+1
  3246   00384E  006F FF78  F093    	movff	postinc2,vfpfcnvrt@convarg+2
  3247   003854  006F FF78  F094    	movff	postinc2,vfpfcnvrt@convarg+3
  3248                           
  3249                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1757:      break;
  3250   00385A  EF53  F01C         	goto	l4330
  3251   00385E                     l4324:
  3252                           
  3253                           ; BSR set to: 0
  3254                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3255   00385E  5190               	movf	vfpfcnvrt@ap& (0+255),w,b
  3256   003860  6ED9               	movwf	fsr2l,c
  3257   003862  6ADA               	clrf	fsr2h,c
  3258   003864  006F FF7C  F057    	movff	indf2,??_vfpfcnvrt
  3259   00386A  0E04               	movlw	4
  3260   00386C  26DF               	addwf	indf2,f,c
  3261   00386E  5057               	movf	??_vfpfcnvrt^0,w,c
  3262   003870  6ED9               	movwf	fsr2l,c
  3263   003872  6ADA               	clrf	fsr2h,c
  3264   003874  006F FF78  F091    	movff	postinc2,vfpfcnvrt@convarg
  3265   00387A  006F FF78  F092    	movff	postinc2,vfpfcnvrt@convarg+1
  3266   003880  006F FF78  F093    	movff	postinc2,vfpfcnvrt@convarg+2
  3267   003886  006F FF78  F094    	movff	postinc2,vfpfcnvrt@convarg+3
  3268                           
  3269                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1760:      break;
  3270   00388C  EF53  F01C         	goto	l4330
  3271   003890                     l4328:
  3272                           
  3273                           ; BSR set to: 0
  3274   003890  5195               	movf	vfpfcnvrt@c& (0+255),w,b
  3275                           
  3276                           ; Switch size 1, requested type "simple"
  3277                           ; Number of cases is 2, Range of values is 76 to 108
  3278                           ; switch strategies available:
  3279                           ; Name         Instructions Cycles
  3280                           ; simple_byte            7     4 (average)
  3281                           ;	Chosen strategy is simple_byte
  3282   003892  0A4C               	xorlw	76	; case 76
  3283   003894  B4D8               	btfsc	status,2,c
  3284   003896  EF2F  F01C         	goto	l4324
  3285   00389A  0A20               	xorlw	32	; case 108
  3286   00389C  B4D8               	btfsc	status,2,c
  3287   00389E  EF16  F01C         	goto	l4322
  3288   0038A2  EF53  F01C         	goto	l4330
  3289   0038A6                     l4330:
  3290                           
  3291                           ; BSR set to: 0
  3292                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  3293   0038A6  518F               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3294   0038A8  6ED9               	movwf	fsr2l,c
  3295   0038AA  6ADA               	clrf	fsr2h,c
  3296   0038AC  2996               	incf	vfpfcnvrt@cp& (0+255),w,b
  3297   0038AE  6EDF               	movwf	indf2,c
  3298                           
  3299                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  3300   0038B0  EF73  F01C         	goto	l4338
  3301   0038B4                     l4332:
  3302                           
  3303                           ; BSR set to: 0
  3304                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  3305   0038B4  C08E  F051         	movff	vfpfcnvrt@fp,efgtoa@fp
  3306   0038B8  C091  F052         	movff	vfpfcnvrt@convarg,efgtoa@f
  3307   0038BC  C092  F053         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  3308   0038C0  C093  F054         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  3309   0038C4  C094  F055         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  3310   0038C8  0060  F25B  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  3311   0038CE                     	if	1	;There is more than 1 active tblptr byte
  3312   0038CE  0E20               	movlw	high __smallconst
  3313   0038D0  6EF7               	movwf	tblptrh,c
  3314   0038D2                     	endif
  3315   0038D2                     	if	0	;tblptru may be non-zero
  3316   0038D2                     	endif
  3317   0038D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3318   0038D2  0E00               	movlw	low (__smallconst shr (0+16))
  3319   0038D4  6EF8               	movwf	tblptru,c
  3320   0038D6                     	endif
  3321   0038D6  0008               	tblrd		*
  3322   0038D8  006F FFD4  F056    	movff	tablat,efgtoa@c
  3323   0038DE  EC15  F010         	call	_efgtoa	;wreg free
  3324   0038E2  EF9D  F01C         	goto	l1040
  3325   0038E6                     l4338:
  3326                           
  3327                           ; BSR set to: 0
  3328   0038E6  0060  F25B  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  3329   0038EC                     	if	1	;There is more than 1 active tblptr byte
  3330   0038EC  0E20               	movlw	high __smallconst
  3331   0038EE  6EF7               	movwf	tblptrh,c
  3332   0038F0                     	endif
  3333   0038F0                     	if	0	;tblptru may be non-zero
  3334   0038F0                     	endif
  3335   0038F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3336   0038F0  0E00               	movlw	low (__smallconst shr (0+16))
  3337   0038F2  6EF8               	movwf	tblptru,c
  3338   0038F4                     	endif
  3339   0038F4  0008               	tblrd		*
  3340   0038F6  50F5               	movf	tablat,w,c
  3341                           
  3342                           ; Switch size 1, requested type "simple"
  3343                           ; Number of cases is 1, Range of values is 102 to 102
  3344                           ; switch strategies available:
  3345                           ; Name         Instructions Cycles
  3346                           ; simple_byte            4     3 (average)
  3347                           ;	Chosen strategy is simple_byte
  3348   0038F8  0A66               	xorlw	102	; case 102
  3349   0038FA  B4D8               	btfsc	status,2,c
  3350   0038FC  EF5A  F01C         	goto	l4332
  3351   003900  EF82  F01C         	goto	l4340
  3352   003904                     l4340:
  3353                           
  3354                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3355   003904  0100               	movlb	0	; () banked
  3356   003906  518F               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3357   003908  6ED9               	movwf	fsr2l,c
  3358   00390A  6ADA               	clrf	fsr2h,c
  3359   00390C  2ADF               	incf	indf2,f,c
  3360   00390E  EF9D  F01C         	goto	l1040
  3361   003912                     l4344:
  3362                           
  3363                           ; BSR set to: 0
  3364                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3365   003912  518F               	movf	vfpfcnvrt@fmt& (0+255),w,b
  3366   003914  6ED9               	movwf	fsr2l,c
  3367   003916  6ADA               	clrf	fsr2h,c
  3368   003918  006F FF7F FFF6     	movff	indf2,tblptrl
  3369   00391E                     	if	1	;There is more than 1 active tblptr byte
  3370   00391E  0E20               	movlw	high __smallconst
  3371   003920  6EF7               	movwf	tblptrh,c
  3372   003922                     	endif
  3373   003922                     	if	0	;tblptru may be non-zero
  3374   003922                     	endif
  3375   003922                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3376   003922  0E00               	movlw	low (__smallconst shr (0+16))
  3377   003924  6EF8               	movwf	tblptru,c
  3378   003926                     	endif
  3379   003926  0008               	tblrd		*
  3380   003928  50F5               	movf	tablat,w,c
  3381   00392A  6E05               	movwf	fputc@c^0,c
  3382   00392C  6A06               	clrf	(fputc@c+1)^0,c
  3383   00392E  C08E  F007         	movff	vfpfcnvrt@fp,fputc@fp
  3384   003932  EC78  F023         	call	_fputc	;wreg free
  3385   003936  EF82  F01C         	goto	l4340
  3386   00393A                     l1040:
  3387   00393A  0012               	return		;funcret
  3388   00393C                     __end_of_vfpfcnvrt:
  3389                           	callstack 0
  3390                           
  3391 ;; *************** function _read_prec_or_width *****************
  3392 ;; Defined at:
  3393 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;  fmt             1    4[COMRAM] PTR PTR const unsigned c
  3396 ;;		 -> vfprintf@cfmt(1), 
  3397 ;;  ap              1    5[COMRAM] PTR PTR void [1]
  3398 ;;		 -> sprintf@ap(1), 
  3399 ;; Auto vars:     Size  Location     Type
  3400 ;;  c               1    8[COMRAM] unsigned char 
  3401 ;;  n               2    9[COMRAM] int 
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  2    4[COMRAM] int 
  3404 ;; Registers used:
  3405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3411 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3412 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3413 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3414 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3415 ;;Total ram usage:        7 bytes
  3416 ;; Hardware stack levels used: 1
  3417 ;; Hardware stack levels required when called: 1
  3418 ;; This function calls:
  3419 ;;		Nothing
  3420 ;; This function is called by:
  3421 ;;		_vfpfcnvrt
  3422 ;; This function uses a non-reentrant model
  3423 ;;
  3424                           
  3425                           	psect	text8
  3426   00458A                     __ptext8:
  3427                           	callstack 0
  3428   00458A                     _read_prec_or_width:
  3429                           	callstack 25
  3430   00458A                     
  3431                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  3432   00458A  0E00               	movlw	0
  3433   00458C  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  3434   00458E  0E00               	movlw	0
  3435   004590  6E0A               	movwf	read_prec_or_width@n^0,c
  3436   004592                     
  3437                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  3438   004592  5005               	movf	read_prec_or_width@fmt^0,w,c
  3439   004594  6ED9               	movwf	fsr2l,c
  3440   004596  6ADA               	clrf	fsr2h,c
  3441   004598  006F FF7F FFF6     	movff	indf2,tblptrl
  3442   00459E                     	if	1	;There is more than 1 active tblptr byte
  3443   00459E  0E20               	movlw	high __smallconst
  3444   0045A0  6EF7               	movwf	tblptrh,c
  3445   0045A2                     	endif
  3446   0045A2                     	if	0	;tblptru may be non-zero
  3447   0045A2                     	endif
  3448   0045A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3449   0045A2  0E00               	movlw	low (__smallconst shr (0+16))
  3450   0045A4  6EF8               	movwf	tblptru,c
  3451   0045A6                     	endif
  3452   0045A6  0008               	tblrd		*
  3453   0045A8  50F5               	movf	tablat,w,c
  3454   0045AA  0A2A               	xorlw	42
  3455   0045AC  A4D8               	btfss	status,2,c
  3456   0045AE  EFDB  F022         	goto	u4021
  3457   0045B2  EFDD  F022         	goto	u4020
  3458   0045B6                     u4021:
  3459   0045B6  EF06  F023         	goto	l3686
  3460   0045BA                     u4020:
  3461   0045BA                     
  3462                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  3463   0045BA  5005               	movf	read_prec_or_width@fmt^0,w,c
  3464   0045BC  6ED9               	movwf	fsr2l,c
  3465   0045BE  6ADA               	clrf	fsr2h,c
  3466   0045C0  2ADF               	incf	indf2,f,c
  3467   0045C2                     
  3468                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  3469   0045C2  5006               	movf	read_prec_or_width@ap^0,w,c
  3470   0045C4  6ED9               	movwf	fsr2l,c
  3471   0045C6  6ADA               	clrf	fsr2h,c
  3472   0045C8  0E02               	movlw	2
  3473   0045CA  26DF               	addwf	indf2,f,c
  3474   0045CC  5CDF               	subwf	indf2,w,c
  3475   0045CE  6ED9               	movwf	fsr2l,c
  3476   0045D0  6ADA               	clrf	fsr2h,c
  3477   0045D2  006F FF78  F00A    	movff	postinc2,read_prec_or_width@n
  3478   0045D8  006F FF78  F00B    	movff	postinc2,read_prec_or_width@n+1
  3479                           
  3480                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  3481   0045DE  EF1C  F023         	goto	l1028
  3482   0045E2                     l3682:
  3483                           
  3484                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  3485   0045E2  0E0A               	movlw	10
  3486   0045E4  020A               	mulwf	read_prec_or_width@n^0,c
  3487   0045E6  006F FFCC  F007    	movff	prodl,??_read_prec_or_width
  3488   0045EC  006F FFD0  F008    	movff	prodh,??_read_prec_or_width+1
  3489   0045F2  020B               	mulwf	(read_prec_or_width@n+1)^0,c
  3490   0045F4  50F3               	movf	prodl,w,c
  3491   0045F6  2608               	addwf	(??_read_prec_or_width+1)^0,f,c
  3492   0045F8  5009               	movf	read_prec_or_width@c^0,w,c
  3493   0045FA  2407               	addwf	??_read_prec_or_width^0,w,c
  3494   0045FC  6E0A               	movwf	read_prec_or_width@n^0,c
  3495   0045FE  0E00               	movlw	0
  3496   004600  2008               	addwfc	(??_read_prec_or_width+1)^0,w,c
  3497   004602  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  3498   004604                     
  3499                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  3500   004604  5005               	movf	read_prec_or_width@fmt^0,w,c
  3501   004606  6ED9               	movwf	fsr2l,c
  3502   004608  6ADA               	clrf	fsr2h,c
  3503   00460A  2ADF               	incf	indf2,f,c
  3504   00460C                     l3686:
  3505                           
  3506                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  3507   00460C  5005               	movf	read_prec_or_width@fmt^0,w,c
  3508   00460E  6ED9               	movwf	fsr2l,c
  3509   004610  6ADA               	clrf	fsr2h,c
  3510   004612  006F FF7F FFF6     	movff	indf2,tblptrl
  3511   004618                     	if	1	;There is more than 1 active tblptr byte
  3512   004618  0E20               	movlw	high __smallconst
  3513   00461A  6EF7               	movwf	tblptrh,c
  3514   00461C                     	endif
  3515   00461C                     	if	0	;tblptru may be non-zero
  3516   00461C                     	endif
  3517   00461C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3518   00461C  0E00               	movlw	low (__smallconst shr (0+16))
  3519   00461E  6EF8               	movwf	tblptru,c
  3520   004620                     	endif
  3521   004620  0008               	tblrd		*
  3522   004622  50F5               	movf	tablat,w,c
  3523   004624  0FD0               	addlw	208
  3524   004626  6E09               	movwf	read_prec_or_width@c^0,c
  3525   004628  0E09               	movlw	9
  3526   00462A  6409               	cpfsgt	read_prec_or_width@c^0,c
  3527   00462C  EF1A  F023         	goto	u4031
  3528   004630  EF1C  F023         	goto	u4030
  3529   004634                     u4031:
  3530   004634  EFF1  F022         	goto	l3682
  3531   004638                     u4030:
  3532   004638                     l1028:
  3533                           
  3534                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  3535   004638  C00A  F005         	movff	read_prec_or_width@n,?_read_prec_or_width
  3536   00463C  C00B  F006         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  3537   004640  0012               	return		;funcret
  3538   004642                     __end_of_read_prec_or_width:
  3539                           	callstack 0
  3540                           
  3541 ;; *************** function _efgtoa *****************
  3542 ;; Defined at:
  3543 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;  fp              1   80[COMRAM] PTR struct _IO_FILE
  3546 ;;		 -> sprintf@f(11), 
  3547 ;;  f               4   81[COMRAM] PTR struct _IO_FILE
  3548 ;;  c               1   85[COMRAM] unsigned char 
  3549 ;; Auto vars:     Size  Location     Type
  3550 ;;  u               4   42[BANK0 ] struct flui
  3551 ;;  g               4   36[BANK0 ] struct flui
  3552 ;;  l               4   31[BANK0 ] struct flui
  3553 ;;  h               4   27[BANK0 ] struct flui
  3554 ;;  ou              4   21[BANK0 ] struct flui
  3555 ;;  n               2   40[BANK0 ] int 
  3556 ;;  i               2   25[BANK0 ] int 
  3557 ;;  w               2   19[BANK0 ] int 
  3558 ;;  e               2   17[BANK0 ] int 
  3559 ;;  m               2   15[BANK0 ] int 
  3560 ;;  d               2   13[BANK0 ] int 
  3561 ;;  t               2    6[BANK0 ] int 
  3562 ;;  p               2    4[BANK0 ] int 
  3563 ;;  ne              2    2[BANK0 ] int 
  3564 ;;  sign            1   35[BANK0 ] unsigned char 
  3565 ;;  nmode           1   12[BANK0 ] unsigned char 
  3566 ;;  mode            1   11[BANK0 ] unsigned char 
  3567 ;;  pp              1   10[BANK0 ] unsigned char 
  3568 ;;  esign           1    0        unsigned char 
  3569 ;; Return value:  Size  Location     Type
  3570 ;;                  1    wreg      void 
  3571 ;; Registers used:
  3572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3578 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3579 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3580 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3581 ;;      Totals:         6      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3582 ;;Total ram usage:       52 bytes
  3583 ;; Hardware stack levels used: 1
  3584 ;; Hardware stack levels required when called: 5
  3585 ;; This function calls:
  3586 ;;		___fladd
  3587 ;;		___fldiv
  3588 ;;		___fleq
  3589 ;;		___flge
  3590 ;;		___flmul
  3591 ;;		___flneg
  3592 ;;		___flsub
  3593 ;;		___fltol
  3594 ;;		___fpclassifyf
  3595 ;;		_floorf
  3596 ;;		_labs
  3597 ;;		_memcpy
  3598 ;;		_pad
  3599 ;;		_strcpy
  3600 ;; This function is called by:
  3601 ;;		_vfpfcnvrt
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604                           
  3605                           	psect	text9
  3606   00202A                     __ptext9:
  3607                           	callstack 0
  3608   00202A                     _efgtoa:
  3609                           	callstack 21
  3610   00202A                     
  3611                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v3.00\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v3
      +                          .00\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  3612   00202A  0100               	movlb	0	; () banked
  3613   00202C  6B83               	clrf	efgtoa@sign& (0+255),b
  3614                           
  3615                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  3616   00202E  C052  F084         	movff	efgtoa@f,efgtoa@g
  3617   002032  C053  F085         	movff	efgtoa@f+1,efgtoa@g+1
  3618   002036  C054  F086         	movff	efgtoa@f+2,efgtoa@g+2
  3619   00203A  C055  F087         	movff	efgtoa@f+3,efgtoa@g+3
  3620   00203E                     
  3621                           ; BSR set to: 0
  3622                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  3623   00203E  BF87               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3624   002040  EF26  F010         	goto	u4390
  3625   002044  EF24  F010         	goto	u4391
  3626   002048                     u4391:
  3627   002048  EF3A  F010         	goto	l4068
  3628   00204C                     u4390:
  3629   00204C                     
  3630                           ; BSR set to: 0
  3631                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  3632   00204C  0E01               	movlw	1
  3633   00204E  6F83               	movwf	efgtoa@sign& (0+255),b
  3634   002050                     
  3635                           ; BSR set to: 0
  3636                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  3637   002050  C084  F005         	movff	efgtoa@g,___flneg@f1
  3638   002054  C085  F006         	movff	efgtoa@g+1,___flneg@f1+1
  3639   002058  C086  F007         	movff	efgtoa@g+2,___flneg@f1+2
  3640   00205C  C087  F008         	movff	efgtoa@g+3,___flneg@f1+3
  3641   002060  EC31  F027         	call	___flneg	;wreg free
  3642   002064  C005  F084         	movff	?___flneg,efgtoa@g
  3643   002068  C006  F085         	movff	?___flneg+1,efgtoa@g+1
  3644   00206C  C007  F086         	movff	?___flneg+2,efgtoa@g+2
  3645   002070  C008  F087         	movff	?___flneg+3,efgtoa@g+3
  3646   002074                     l4068:
  3647                           
  3648                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  3649   002074  0E00               	movlw	0
  3650   002076  0100               	movlb	0	; () banked
  3651   002078  6F89               	movwf	(efgtoa@n+1)& (0+255),b
  3652   00207A  0E00               	movlw	0
  3653   00207C  6F88               	movwf	efgtoa@n& (0+255),b
  3654   00207E                     
  3655                           ; BSR set to: 0
  3656                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  3657   00207E  C0F2  F073         	movff	_width,efgtoa@w
  3658   002082  C0F3  F074         	movff	_width+1,efgtoa@w+1
  3659   002086                     
  3660                           ; BSR set to: 0
  3661                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 605:     if (sign
  3662   002086  5183               	movf	efgtoa@sign& (0+255),w,b
  3663   002088  B4D8               	btfsc	status,2,c
  3664   00208A  EF49  F010         	goto	u4401
  3665   00208E  EF4B  F010         	goto	u4400
  3666   002092                     u4401:
  3667   002092  EF5F  F010         	goto	l4082
  3668   002096                     u4400:
  3669   002096                     
  3670                           ; BSR set to: 0
  3671                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  3672   002096  5183               	movf	efgtoa@sign& (0+255),w,b
  3673   002098  A4D8               	btfss	status,2,c
  3674   00209A  EF51  F010         	goto	u4411
  3675   00209E  EF53  F010         	goto	u4410
  3676   0020A2                     u4411:
  3677   0020A2  EF59  F010         	goto	l4078
  3678   0020A6                     u4410:
  3679   0020A6                     
  3680                           ; BSR set to: 0
  3681   0020A6  0E00               	movlw	0
  3682   0020A8  6F69               	movwf	(_efgtoa$1337+1)& (0+255),b
  3683   0020AA  0E2B               	movlw	43
  3684   0020AC  6F68               	movwf	_efgtoa$1337& (0+255),b
  3685   0020AE  EF5D  F010         	goto	l4080
  3686   0020B2                     l4078:
  3687                           
  3688                           ; BSR set to: 0
  3689   0020B2  0E00               	movlw	0
  3690   0020B4  6F69               	movwf	(_efgtoa$1337+1)& (0+255),b
  3691   0020B6  0E2D               	movlw	45
  3692   0020B8  6F68               	movwf	_efgtoa$1337& (0+255),b
  3693   0020BA                     l4080:
  3694                           
  3695                           ; BSR set to: 0
  3696   0020BA  C068  F083         	movff	_efgtoa$1337,efgtoa@sign
  3697   0020BE                     l4082:
  3698                           
  3699                           ; BSR set to: 0
  3700                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3701   0020BE  C084  F005         	movff	efgtoa@g,___fpclassifyf@x
  3702   0020C2  C085  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3703   0020C6  C086  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3704   0020CA  C087  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3705   0020CE  ECE5  F021         	call	___fpclassifyf	;wreg free
  3706   0020D2  0405               	decf	?___fpclassifyf^0,w,c
  3707   0020D4  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  3708   0020D6  A4D8               	btfss	status,2,c
  3709   0020D8  EF70  F010         	goto	u4421
  3710   0020DC  EF72  F010         	goto	u4420
  3711   0020E0                     u4421:
  3712   0020E0  EFA1  F010         	goto	l4100
  3713   0020E4                     u4420:
  3714   0020E4                     
  3715                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  3716   0020E4  0100               	movlb	0	; () banked
  3717   0020E6  5183               	movf	efgtoa@sign& (0+255),w,b
  3718   0020E8  B4D8               	btfsc	status,2,c
  3719   0020EA  EF79  F010         	goto	u4431
  3720   0020EE  EF7B  F010         	goto	u4430
  3721   0020F2                     u4431:
  3722   0020F2  EF84  F010         	goto	l4092
  3723   0020F6                     u4430:
  3724   0020F6                     
  3725                           ; BSR set to: 0
  3726                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  3727   0020F6  C083  F100         	movff	efgtoa@sign,_dbuf
  3728   0020FA                     
  3729                           ; BSR set to: 0
  3730                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 622:    w--;
  3731   0020FA  0773               	decf	efgtoa@w& (0+255),f,b
  3732   0020FC  A0D8               	btfss	status,0,c
  3733   0020FE  0774               	decf	(efgtoa@w+1)& (0+255),f,b
  3734   002100                     
  3735                           ; BSR set to: 0
  3736                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  3737   002100  0E00               	movlw	0
  3738   002102  6F89               	movwf	(efgtoa@n+1)& (0+255),b
  3739   002104  0E01               	movlw	1
  3740   002106  6F88               	movwf	efgtoa@n& (0+255),b
  3741   002108                     l4092:
  3742                           
  3743                           ; BSR set to: 0
  3744                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  3745   002108  0E00               	movlw	low _dbuf
  3746   00210A  2588               	addwf	efgtoa@n& (0+255),w,b
  3747   00210C  6E05               	movwf	strcpy@dest^0,c
  3748   00210E  0E01               	movlw	high _dbuf
  3749   002110  2189               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3750   002112  6E06               	movwf	(strcpy@dest+1)^0,c
  3751   002114  0E1B               	movlw	low STR_7
  3752   002116  6E07               	movwf	strcpy@src^0,c
  3753   002118  EC6C  F026         	call	_strcpy	;wreg free
  3754   00211C                     l4094:
  3755                           
  3756                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3757   00211C  0100               	movlb	0	; () banked
  3758   00211E  0EFD               	movlw	253
  3759   002120  2773               	addwf	efgtoa@w& (0+255),f,b
  3760   002122  0EFF               	movlw	255
  3761   002124  2374               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3762   002126                     
  3763                           ; BSR set to: 0
  3764                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3765   002126  C051  F013         	movff	efgtoa@fp,pad@fp
  3766   00212A  0E00               	movlw	low _dbuf
  3767   00212C  6E14               	movwf	pad@buf^0,c
  3768   00212E  0E01               	movlw	high _dbuf
  3769   002130  6E15               	movwf	(pad@buf+1)^0,c
  3770   002132  C073  F016         	movff	efgtoa@w,pad@p
  3771   002136  C074  F017         	movff	efgtoa@w+1,pad@p+1
  3772   00213A  EC19  F025         	call	_pad	;wreg free
  3773   00213E  EF07  F015         	goto	l983
  3774   002142                     l4100:
  3775                           
  3776                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3777   002142  C084  F005         	movff	efgtoa@g,___fpclassifyf@x
  3778   002146  C085  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3779   00214A  C086  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3780   00214E  C087  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3781   002152  ECE5  F021         	call	___fpclassifyf	;wreg free
  3782   002156  5005               	movf	?___fpclassifyf^0,w,c
  3783   002158  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  3784   00215A  A4D8               	btfss	status,2,c
  3785   00215C  EFB2  F010         	goto	u4441
  3786   002160  EFB4  F010         	goto	u4440
  3787   002164                     u4441:
  3788   002164  EFD2  F010         	goto	l4118
  3789   002168                     u4440:
  3790   002168                     
  3791                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  3792   002168  0100               	movlb	0	; () banked
  3793   00216A  5183               	movf	efgtoa@sign& (0+255),w,b
  3794   00216C  B4D8               	btfsc	status,2,c
  3795   00216E  EFBB  F010         	goto	u4451
  3796   002172  EFBD  F010         	goto	u4450
  3797   002176                     u4451:
  3798   002176  EFC6  F010         	goto	l4110
  3799   00217A                     u4450:
  3800   00217A                     
  3801                           ; BSR set to: 0
  3802                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  3803   00217A  C083  F100         	movff	efgtoa@sign,_dbuf
  3804   00217E                     
  3805                           ; BSR set to: 0
  3806                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 640:    w--;
  3807   00217E  0773               	decf	efgtoa@w& (0+255),f,b
  3808   002180  A0D8               	btfss	status,0,c
  3809   002182  0774               	decf	(efgtoa@w+1)& (0+255),f,b
  3810   002184                     
  3811                           ; BSR set to: 0
  3812                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  3813   002184  0E00               	movlw	0
  3814   002186  6F89               	movwf	(efgtoa@n+1)& (0+255),b
  3815   002188  0E01               	movlw	1
  3816   00218A  6F88               	movwf	efgtoa@n& (0+255),b
  3817   00218C                     l4110:
  3818                           
  3819                           ; BSR set to: 0
  3820                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  3821   00218C  0E00               	movlw	low _dbuf
  3822   00218E  2588               	addwf	efgtoa@n& (0+255),w,b
  3823   002190  6E05               	movwf	strcpy@dest^0,c
  3824   002192  0E01               	movlw	high _dbuf
  3825   002194  2189               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3826   002196  6E06               	movwf	(strcpy@dest+1)^0,c
  3827   002198  0E1F               	movlw	low STR_10
  3828   00219A  6E07               	movwf	strcpy@src^0,c
  3829   00219C  EC6C  F026         	call	_strcpy	;wreg free
  3830   0021A0  EF8E  F010         	goto	l4094
  3831   0021A4                     l4118:
  3832                           
  3833                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  3834   0021A4  0E00               	movlw	0
  3835   0021A6  0100               	movlb	0	; () banked
  3836   0021A8  6F8A               	movwf	efgtoa@u& (0+255),b
  3837   0021AA  0E00               	movlw	0
  3838   0021AC  6F8B               	movwf	(efgtoa@u+1)& (0+255),b
  3839   0021AE  0E80               	movlw	128
  3840   0021B0  6F8C               	movwf	(efgtoa@u+2)& (0+255),b
  3841   0021B2  0E3F               	movlw	63
  3842   0021B4  6F8D               	movwf	(efgtoa@u+3)& (0+255),b
  3843                           
  3844                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  3845   0021B6  0E00               	movlw	0
  3846   0021B8  6F72               	movwf	(efgtoa@e+1)& (0+255),b
  3847   0021BA  0E00               	movlw	0
  3848   0021BC  6F71               	movwf	efgtoa@e& (0+255),b
  3849   0021BE                     
  3850                           ; BSR set to: 0
  3851                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  3852   0021BE  C084  F005         	movff	efgtoa@g,___fleq@ff1
  3853   0021C2  C085  F006         	movff	efgtoa@g+1,___fleq@ff1+1
  3854   0021C6  C086  F007         	movff	efgtoa@g+2,___fleq@ff1+2
  3855   0021CA  C087  F008         	movff	efgtoa@g+3,___fleq@ff1+3
  3856   0021CE  0E00               	movlw	0
  3857   0021D0  6E09               	movwf	___fleq@ff2^0,c
  3858   0021D2  0E00               	movlw	0
  3859   0021D4  6E0A               	movwf	(___fleq@ff2+1)^0,c
  3860   0021D6  0E00               	movlw	0
  3861   0021D8  6E0B               	movwf	(___fleq@ff2+2)^0,c
  3862   0021DA  0E00               	movlw	0
  3863   0021DC  6E0C               	movwf	(___fleq@ff2+3)^0,c
  3864   0021DE  ECCE  F023         	call	___fleq	;wreg free
  3865   0021E2  B0D8               	btfsc	status,0,c
  3866   0021E4  EFF6  F010         	goto	u4461
  3867   0021E8  EFF8  F010         	goto	u4460
  3868   0021EC                     u4461:
  3869   0021EC  EFD7  F011         	goto	l986
  3870   0021F0                     u4460:
  3871   0021F0  EF05  F011         	goto	l4126
  3872   0021F4                     l988:
  3873                           
  3874                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  3875   0021F4  C075  F08A         	movff	efgtoa@ou,efgtoa@u
  3876   0021F8  C076  F08B         	movff	efgtoa@ou+1,efgtoa@u+1
  3877   0021FC  C077  F08C         	movff	efgtoa@ou+2,efgtoa@u+2
  3878   002200  C078  F08D         	movff	efgtoa@ou+3,efgtoa@u+3
  3879   002204                     
  3880                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 662:    ++e;
  3881   002204  0100               	movlb	0	; () banked
  3882   002206  4B71               	infsnz	efgtoa@e& (0+255),f,b
  3883   002208  2B72               	incf	(efgtoa@e+1)& (0+255),f,b
  3884   00220A                     l4126:
  3885                           
  3886                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3887   00220A  C08A  F02C         	movff	efgtoa@u,___flmul@b
  3888   00220E  C08B  F02D         	movff	efgtoa@u+1,___flmul@b+1
  3889   002212  C08C  F02E         	movff	efgtoa@u+2,___flmul@b+2
  3890   002216  C08D  F02F         	movff	efgtoa@u+3,___flmul@b+3
  3891   00221A  0E00               	movlw	0
  3892   00221C  6E30               	movwf	___flmul@a^0,c
  3893   00221E  0E00               	movlw	0
  3894   002220  6E31               	movwf	(___flmul@a+1)^0,c
  3895   002222  0E20               	movlw	32
  3896   002224  6E32               	movwf	(___flmul@a+2)^0,c
  3897   002226  0E41               	movlw	65
  3898   002228  6E33               	movwf	(___flmul@a+3)^0,c
  3899   00222A  EC63  F017         	call	___flmul	;wreg free
  3900   00222E  C02C  F075         	movff	?___flmul,efgtoa@ou
  3901   002232  C02D  F076         	movff	?___flmul+1,efgtoa@ou+1
  3902   002236  C02E  F077         	movff	?___flmul+2,efgtoa@ou+2
  3903   00223A  C02F  F078         	movff	?___flmul+3,efgtoa@ou+3
  3904   00223E  0100               	movlb	0	; () banked
  3905   002240  5175               	movf	efgtoa@ou& (0+255),w,b
  3906   002242  5D84               	subwf	efgtoa@g& (0+255),w,b
  3907   002244  6E05               	movwf	labs@a^0,c
  3908   002246  5176               	movf	(efgtoa@ou+1)& (0+255),w,b
  3909   002248  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3910   00224A  6E06               	movwf	(labs@a+1)^0,c
  3911   00224C  5177               	movf	(efgtoa@ou+2)& (0+255),w,b
  3912   00224E  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3913   002250  6E07               	movwf	(labs@a+2)^0,c
  3914   002252  5178               	movf	(efgtoa@ou+3)& (0+255),w,b
  3915   002254  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3916   002256  6E08               	movwf	(labs@a+3)^0,c
  3917   002258  ECAA  F025         	call	_labs	;wreg free
  3918   00225C  BE08               	btfsc	(?_labs+3)^0,7,c
  3919   00225E  EF3C  F011         	goto	u4471
  3920   002262  5008               	movf	(?_labs+3)^0,w,c
  3921   002264  1007               	iorwf	(?_labs+2)^0,w,c
  3922   002266  1006               	iorwf	(?_labs+1)^0,w,c
  3923   002268  E109               	bnz	u4470
  3924   00226A  0E02               	movlw	2
  3925   00226C  5C05               	subwf	?_labs^0,w,c
  3926   00226E  A0D8               	btfss	status,0,c
  3927   002270  EF3C  F011         	goto	u4471
  3928   002274  EF3E  F011         	goto	u4470
  3929   002278                     u4471:
  3930   002278  EFFA  F010         	goto	l988
  3931   00227C                     u4470:
  3932   00227C  C075  F045         	movff	efgtoa@ou,___flge@ff1
  3933   002280  C076  F046         	movff	efgtoa@ou+1,___flge@ff1+1
  3934   002284  C077  F047         	movff	efgtoa@ou+2,___flge@ff1+2
  3935   002288  C078  F048         	movff	efgtoa@ou+3,___flge@ff1+3
  3936   00228C  C084  F049         	movff	efgtoa@g,___flge@ff2
  3937   002290  C085  F04A         	movff	efgtoa@g+1,___flge@ff2+1
  3938   002294  C086  F04B         	movff	efgtoa@g+2,___flge@ff2+2
  3939   002298  C087  F04C         	movff	efgtoa@g+3,___flge@ff2+3
  3940   00229C  EC63  F021         	call	___flge	;wreg free
  3941   0022A0  A0D8               	btfss	status,0,c
  3942   0022A2  EF55  F011         	goto	u4481
  3943   0022A6  EF57  F011         	goto	u4480
  3944   0022AA                     u4481:
  3945   0022AA  EFFA  F010         	goto	l988
  3946   0022AE                     u4480:
  3947   0022AE                     
  3948                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3949   0022AE  0100               	movlb	0	; () banked
  3950   0022B0  518A               	movf	efgtoa@u& (0+255),w,b
  3951   0022B2  5D84               	subwf	efgtoa@g& (0+255),w,b
  3952   0022B4  6E05               	movwf	labs@a^0,c
  3953   0022B6  518B               	movf	(efgtoa@u+1)& (0+255),w,b
  3954   0022B8  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3955   0022BA  6E06               	movwf	(labs@a+1)^0,c
  3956   0022BC  518C               	movf	(efgtoa@u+2)& (0+255),w,b
  3957   0022BE  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3958   0022C0  6E07               	movwf	(labs@a+2)^0,c
  3959   0022C2  518D               	movf	(efgtoa@u+3)& (0+255),w,b
  3960   0022C4  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3961   0022C6  6E08               	movwf	(labs@a+3)^0,c
  3962   0022C8  ECAA  F025         	call	_labs	;wreg free
  3963   0022CC  BE08               	btfsc	(?_labs+3)^0,7,c
  3964   0022CE  EF76  F011         	goto	u4490
  3965   0022D2  5008               	movf	(?_labs+3)^0,w,c
  3966   0022D4  1007               	iorwf	(?_labs+2)^0,w,c
  3967   0022D6  1006               	iorwf	(?_labs+1)^0,w,c
  3968   0022D8  E107               	bnz	u4491
  3969   0022DA  0E02               	movlw	2
  3970   0022DC  5C05               	subwf	?_labs^0,w,c
  3971   0022DE  B0D8               	btfsc	status,0,c
  3972   0022E0  EF74  F011         	goto	u4491
  3973   0022E4  EF76  F011         	goto	u4490
  3974   0022E8                     u4491:
  3975   0022E8  EFBE  F011         	goto	l4144
  3976   0022EC                     u4490:
  3977   0022EC                     l4134:
  3978                           
  3979                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 665:    g = u;
  3980   0022EC  C08A  F084         	movff	efgtoa@u,efgtoa@g
  3981   0022F0  C08B  F085         	movff	efgtoa@u+1,efgtoa@g+1
  3982   0022F4  C08C  F086         	movff	efgtoa@u+2,efgtoa@g+2
  3983   0022F8  C08D  F087         	movff	efgtoa@u+3,efgtoa@g+3
  3984                           
  3985                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 666:   }
  3986   0022FC  EFD7  F011         	goto	l986
  3987   002300                     l4136:
  3988                           
  3989                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  3990   002300  C08A  F013         	movff	efgtoa@u,___fldiv@b
  3991   002304  C08B  F014         	movff	efgtoa@u+1,___fldiv@b+1
  3992   002308  C08C  F015         	movff	efgtoa@u+2,___fldiv@b+2
  3993   00230C  C08D  F016         	movff	efgtoa@u+3,___fldiv@b+3
  3994   002310  0E00               	movlw	0
  3995   002312  6E17               	movwf	___fldiv@a^0,c
  3996   002314  0E00               	movlw	0
  3997   002316  6E18               	movwf	(___fldiv@a+1)^0,c
  3998   002318  0E20               	movlw	32
  3999   00231A  6E19               	movwf	(___fldiv@a+2)^0,c
  4000   00231C  0E41               	movlw	65
  4001   00231E  6E1A               	movwf	(___fldiv@a+3)^0,c
  4002   002320  EC88  F019         	call	___fldiv	;wreg free
  4003   002324  C013  F08A         	movff	?___fldiv,efgtoa@u
  4004   002328  C014  F08B         	movff	?___fldiv+1,efgtoa@u+1
  4005   00232C  C015  F08C         	movff	?___fldiv+2,efgtoa@u+2
  4006   002330  C016  F08D         	movff	?___fldiv+3,efgtoa@u+3
  4007   002334                     
  4008                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 670:     --e;
  4009   002334  0100               	movlb	0	; () banked
  4010   002336  0771               	decf	efgtoa@e& (0+255),f,b
  4011   002338  A0D8               	btfss	status,0,c
  4012   00233A  0772               	decf	(efgtoa@e+1)& (0+255),f,b
  4013   00233C                     
  4014                           ; BSR set to: 0
  4015                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  4016   00233C  518A               	movf	efgtoa@u& (0+255),w,b
  4017   00233E  5D84               	subwf	efgtoa@g& (0+255),w,b
  4018   002340  6E05               	movwf	labs@a^0,c
  4019   002342  518B               	movf	(efgtoa@u+1)& (0+255),w,b
  4020   002344  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  4021   002346  6E06               	movwf	(labs@a+1)^0,c
  4022   002348  518C               	movf	(efgtoa@u+2)& (0+255),w,b
  4023   00234A  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4024   00234C  6E07               	movwf	(labs@a+2)^0,c
  4025   00234E  518D               	movf	(efgtoa@u+3)& (0+255),w,b
  4026   002350  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4027   002352  6E08               	movwf	(labs@a+3)^0,c
  4028   002354  ECAA  F025         	call	_labs	;wreg free
  4029   002358  BE08               	btfsc	(?_labs+3)^0,7,c
  4030   00235A  EFBC  F011         	goto	u4500
  4031   00235E  5008               	movf	(?_labs+3)^0,w,c
  4032   002360  1007               	iorwf	(?_labs+2)^0,w,c
  4033   002362  1006               	iorwf	(?_labs+1)^0,w,c
  4034   002364  E107               	bnz	u4501
  4035   002366  0E02               	movlw	2
  4036   002368  5C05               	subwf	?_labs^0,w,c
  4037   00236A  B0D8               	btfsc	status,0,c
  4038   00236C  EFBA  F011         	goto	u4501
  4039   002370  EFBC  F011         	goto	u4500
  4040   002374                     u4501:
  4041   002374  EFBE  F011         	goto	l4144
  4042   002378                     u4500:
  4043   002378  EF76  F011         	goto	l4134
  4044   00237C                     l4144:
  4045                           
  4046                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  4047   00237C  C084  F045         	movff	efgtoa@g,___flge@ff1
  4048   002380  C085  F046         	movff	efgtoa@g+1,___flge@ff1+1
  4049   002384  C086  F047         	movff	efgtoa@g+2,___flge@ff1+2
  4050   002388  C087  F048         	movff	efgtoa@g+3,___flge@ff1+3
  4051   00238C  C08A  F049         	movff	efgtoa@u,___flge@ff2
  4052   002390  C08B  F04A         	movff	efgtoa@u+1,___flge@ff2+1
  4053   002394  C08C  F04B         	movff	efgtoa@u+2,___flge@ff2+2
  4054   002398  C08D  F04C         	movff	efgtoa@u+3,___flge@ff2+3
  4055   00239C  EC63  F021         	call	___flge	;wreg free
  4056   0023A0  A0D8               	btfss	status,0,c
  4057   0023A2  EFD5  F011         	goto	u4511
  4058   0023A6  EFD7  F011         	goto	u4510
  4059   0023AA                     u4511:
  4060   0023AA  EF80  F011         	goto	l4136
  4061   0023AE                     u4510:
  4062   0023AE                     l986:
  4063                           
  4064                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  4065   0023AE  C056  F06B         	movff	efgtoa@c,efgtoa@mode
  4066                           
  4067                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  4068   0023B2  C06B  F06C         	movff	efgtoa@mode,efgtoa@nmode
  4069   0023B6                     
  4070                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  4071   0023B6  0100               	movlb	0	; () banked
  4072   0023B8  BFF5               	btfsc	(_prec+1)& (0+255),7,b
  4073   0023BA  EFE1  F011         	goto	u4521
  4074   0023BE  EFE3  F011         	goto	u4520
  4075   0023C2                     u4521:
  4076   0023C2  EFE9  F011         	goto	l4150
  4077   0023C6                     u4520:
  4078   0023C6                     
  4079                           ; BSR set to: 0
  4080   0023C6  C0F4  F064         	movff	_prec,efgtoa@p
  4081   0023CA  C0F5  F065         	movff	_prec+1,efgtoa@p+1
  4082   0023CE  EFED  F011         	goto	l4152
  4083   0023D2                     l4150:
  4084                           
  4085                           ; BSR set to: 0
  4086   0023D2  0E00               	movlw	0
  4087   0023D4  6F65               	movwf	(efgtoa@p+1)& (0+255),b
  4088   0023D6  0E06               	movlw	6
  4089   0023D8  6F64               	movwf	efgtoa@p& (0+255),b
  4090   0023DA                     l4152:
  4091                           
  4092                           ; BSR set to: 0
  4093                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 711:     m = p;
  4094   0023DA  C064  F06F         	movff	efgtoa@p,efgtoa@m
  4095   0023DE  C065  F070         	movff	efgtoa@p+1,efgtoa@m+1
  4096   0023E2                     
  4097                           ; BSR set to: 0
  4098                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 716:         ++m;
  4099   0023E2  4B6F               	infsnz	efgtoa@m& (0+255),f,b
  4100   0023E4  2B70               	incf	(efgtoa@m+1)& (0+255),f,b
  4101   0023E6                     
  4102                           ; BSR set to: 0
  4103                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  4104   0023E6  0E66               	movlw	102
  4105   0023E8  196C               	xorwf	efgtoa@nmode& (0+255),w,b
  4106   0023EA  A4D8               	btfss	status,2,c
  4107   0023EC  EFFA  F011         	goto	u4531
  4108   0023F0  EFFC  F011         	goto	u4530
  4109   0023F4                     u4531:
  4110   0023F4  EF1C  F012         	goto	l4166
  4111   0023F8                     u4530:
  4112   0023F8                     
  4113                           ; BSR set to: 0
  4114                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  4115   0023F8  BF72               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4116   0023FA  EF03  F012         	goto	u4540
  4117   0023FE  EF01  F012         	goto	u4541
  4118   002402                     u4541:
  4119   002402  EF0F  F012         	goto	l4162
  4120   002406                     u4540:
  4121   002406                     
  4122                           ; BSR set to: 0
  4123                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  4124   002406  0E00               	movlw	0
  4125   002408  6F8A               	movwf	efgtoa@u& (0+255),b
  4126   00240A  0E00               	movlw	0
  4127   00240C  6F8B               	movwf	(efgtoa@u+1)& (0+255),b
  4128   00240E  0E80               	movlw	128
  4129   002410  6F8C               	movwf	(efgtoa@u+2)& (0+255),b
  4130   002412  0E3F               	movlw	63
  4131   002414  6F8D               	movwf	(efgtoa@u+3)& (0+255),b
  4132                           
  4133                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  4134   002416  0E00               	movlw	0
  4135   002418  6F72               	movwf	(efgtoa@e+1)& (0+255),b
  4136   00241A  0E00               	movlw	0
  4137   00241C  6F71               	movwf	efgtoa@e& (0+255),b
  4138   00241E                     l4162:
  4139                           
  4140                           ; BSR set to: 0
  4141                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  4142   00241E  0E67               	movlw	103
  4143   002420  196B               	xorwf	efgtoa@mode& (0+255),w,b
  4144   002422  B4D8               	btfsc	status,2,c
  4145   002424  EF16  F012         	goto	u4551
  4146   002428  EF18  F012         	goto	u4550
  4147   00242C                     u4551:
  4148   00242C  EF1C  F012         	goto	l4166
  4149   002430                     u4550:
  4150   002430                     
  4151                           ; BSR set to: 0
  4152                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  4153   002430  5171               	movf	efgtoa@e& (0+255),w,b
  4154   002432  276F               	addwf	efgtoa@m& (0+255),f,b
  4155   002434  5172               	movf	(efgtoa@e+1)& (0+255),w,b
  4156   002436  2370               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4157   002438                     l4166:
  4158                           
  4159                           ; BSR set to: 0
  4160                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  4161   002438  0E00               	movlw	0
  4162   00243A  6F7A               	movwf	(efgtoa@i+1)& (0+255),b
  4163   00243C  0E00               	movlw	0
  4164   00243E  6F79               	movwf	efgtoa@i& (0+255),b
  4165   002440                     
  4166                           ; BSR set to: 0
  4167                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  4168   002440  C084  F07B         	movff	efgtoa@g,efgtoa@h
  4169   002444  C085  F07C         	movff	efgtoa@g+1,efgtoa@h+1
  4170   002448  C086  F07D         	movff	efgtoa@g+2,efgtoa@h+2
  4171   00244C  C087  F07E         	movff	efgtoa@g+3,efgtoa@h+3
  4172   002450                     
  4173                           ; BSR set to: 0
  4174                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  4175   002450  C08A  F075         	movff	efgtoa@u,efgtoa@ou
  4176   002454  C08B  F076         	movff	efgtoa@u+1,efgtoa@ou+1
  4177   002458  C08C  F077         	movff	efgtoa@u+2,efgtoa@ou+2
  4178   00245C  C08D  F078         	movff	efgtoa@u+3,efgtoa@ou+3
  4179                           
  4180                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  4181   002460  EFAD  F012         	goto	l4180
  4182   002464                     l4172:
  4183                           
  4184                           ; BSR set to: 0
  4185                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  4186   002464  C07B  F013         	movff	efgtoa@h,___fldiv@b
  4187   002468  C07C  F014         	movff	efgtoa@h+1,___fldiv@b+1
  4188   00246C  C07D  F015         	movff	efgtoa@h+2,___fldiv@b+2
  4189   002470  C07E  F016         	movff	efgtoa@h+3,___fldiv@b+3
  4190   002474  C08A  F017         	movff	efgtoa@u,___fldiv@a
  4191   002478  C08B  F018         	movff	efgtoa@u+1,___fldiv@a+1
  4192   00247C  C08C  F019         	movff	efgtoa@u+2,___fldiv@a+2
  4193   002480  C08D  F01A         	movff	efgtoa@u+3,___fldiv@a+3
  4194   002484  EC88  F019         	call	___fldiv	;wreg free
  4195   002488  C013  F02C         	movff	?___fldiv,floorf@x
  4196   00248C  C014  F02D         	movff	?___fldiv+1,floorf@x+1
  4197   002490  C015  F02E         	movff	?___fldiv+2,floorf@x+2
  4198   002494  C016  F02F         	movff	?___fldiv+3,floorf@x+3
  4199   002498  ECA9  F01D         	call	_floorf	;wreg free
  4200   00249C  C02C  F07F         	movff	?_floorf,efgtoa@l
  4201   0024A0  C02D  F080         	movff	?_floorf+1,efgtoa@l+1
  4202   0024A4  C02E  F081         	movff	?_floorf+2,efgtoa@l+2
  4203   0024A8  C02F  F082         	movff	?_floorf+3,efgtoa@l+3
  4204                           
  4205                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  4206   0024AC  C07F  F005         	movff	efgtoa@l,___fltol@f1
  4207   0024B0  C080  F006         	movff	efgtoa@l+1,___fltol@f1+1
  4208   0024B4  C081  F007         	movff	efgtoa@l+2,___fltol@f1+2
  4209   0024B8  C082  F008         	movff	efgtoa@l+3,___fltol@f1+3
  4210   0024BC  ECE0  F020         	call	___fltol	;wreg free
  4211   0024C0  C005  F06D         	movff	?___fltol,efgtoa@d
  4212   0024C4  C006  F06E         	movff	?___fltol+1,efgtoa@d+1
  4213   0024C8                     
  4214                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  4215   0024C8  C07B  F045         	movff	efgtoa@h,___flsub@b
  4216   0024CC  C07C  F046         	movff	efgtoa@h+1,___flsub@b+1
  4217   0024D0  C07D  F047         	movff	efgtoa@h+2,___flsub@b+2
  4218   0024D4  C07E  F048         	movff	efgtoa@h+3,___flsub@b+3
  4219   0024D8  C07F  F030         	movff	efgtoa@l,___flmul@a
  4220   0024DC  C080  F031         	movff	efgtoa@l+1,___flmul@a+1
  4221   0024E0  C081  F032         	movff	efgtoa@l+2,___flmul@a+2
  4222   0024E4  C082  F033         	movff	efgtoa@l+3,___flmul@a+3
  4223   0024E8  C08A  F02C         	movff	efgtoa@u,___flmul@b
  4224   0024EC  C08B  F02D         	movff	efgtoa@u+1,___flmul@b+1
  4225   0024F0  C08C  F02E         	movff	efgtoa@u+2,___flmul@b+2
  4226   0024F4  C08D  F02F         	movff	efgtoa@u+3,___flmul@b+3
  4227   0024F8  EC63  F017         	call	___flmul	;wreg free
  4228   0024FC  C02C  F049         	movff	?___flmul,___flsub@a
  4229   002500  C02D  F04A         	movff	?___flmul+1,___flsub@a+1
  4230   002504  C02E  F04B         	movff	?___flmul+2,___flsub@a+2
  4231   002508  C02F  F04C         	movff	?___flmul+3,___flsub@a+3
  4232   00250C  EC8F  F026         	call	___flsub	;wreg free
  4233   002510  C045  F07B         	movff	?___flsub,efgtoa@h
  4234   002514  C046  F07C         	movff	?___flsub+1,efgtoa@h+1
  4235   002518  C047  F07D         	movff	?___flsub+2,efgtoa@h+2
  4236   00251C  C048  F07E         	movff	?___flsub+3,efgtoa@h+3
  4237   002520                     
  4238                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  4239   002520  C08A  F013         	movff	efgtoa@u,___fldiv@b
  4240   002524  C08B  F014         	movff	efgtoa@u+1,___fldiv@b+1
  4241   002528  C08C  F015         	movff	efgtoa@u+2,___fldiv@b+2
  4242   00252C  C08D  F016         	movff	efgtoa@u+3,___fldiv@b+3
  4243   002530  0E00               	movlw	0
  4244   002532  6E17               	movwf	___fldiv@a^0,c
  4245   002534  0E00               	movlw	0
  4246   002536  6E18               	movwf	(___fldiv@a+1)^0,c
  4247   002538  0E20               	movlw	32
  4248   00253A  6E19               	movwf	(___fldiv@a+2)^0,c
  4249   00253C  0E41               	movlw	65
  4250   00253E  6E1A               	movwf	(___fldiv@a+3)^0,c
  4251   002540  EC88  F019         	call	___fldiv	;wreg free
  4252   002544  C013  F08A         	movff	?___fldiv,efgtoa@u
  4253   002548  C014  F08B         	movff	?___fldiv+1,efgtoa@u+1
  4254   00254C  C015  F08C         	movff	?___fldiv+2,efgtoa@u+2
  4255   002550  C016  F08D         	movff	?___fldiv+3,efgtoa@u+3
  4256   002554                     
  4257                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 741:         ++i;
  4258   002554  0100               	movlb	0	; () banked
  4259   002556  4B79               	infsnz	efgtoa@i& (0+255),f,b
  4260   002558  2B7A               	incf	(efgtoa@i+1)& (0+255),f,b
  4261   00255A                     l4180:
  4262                           
  4263                           ; BSR set to: 0
  4264                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  4265   00255A  516F               	movf	efgtoa@m& (0+255),w,b
  4266   00255C  5D79               	subwf	efgtoa@i& (0+255),w,b
  4267   00255E  517A               	movf	(efgtoa@i+1)& (0+255),w,b
  4268   002560  0A80               	xorlw	128
  4269   002562  6F60               	movwf	??_efgtoa& (0+255),b
  4270   002564  5170               	movf	(efgtoa@m+1)& (0+255),w,b
  4271   002566  0A80               	xorlw	128
  4272   002568  5960               	subwfb	??_efgtoa& (0+255),w,b
  4273   00256A  A0D8               	btfss	status,0,c
  4274   00256C  EFBA  F012         	goto	u4561
  4275   002570  EFBC  F012         	goto	u4560
  4276   002574                     u4561:
  4277   002574  EF32  F012         	goto	l4172
  4278   002578                     u4560:
  4279   002578                     
  4280                           ; BSR set to: 0
  4281                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  4282   002578  C08A  F02C         	movff	efgtoa@u,___flmul@b
  4283   00257C  C08B  F02D         	movff	efgtoa@u+1,___flmul@b+1
  4284   002580  C08C  F02E         	movff	efgtoa@u+2,___flmul@b+2
  4285   002584  C08D  F02F         	movff	efgtoa@u+3,___flmul@b+3
  4286   002588  0E00               	movlw	0
  4287   00258A  6E30               	movwf	___flmul@a^0,c
  4288   00258C  0E00               	movlw	0
  4289   00258E  6E31               	movwf	(___flmul@a+1)^0,c
  4290   002590  0EA0               	movlw	160
  4291   002592  6E32               	movwf	(___flmul@a+2)^0,c
  4292   002594  0E40               	movlw	64
  4293   002596  6E33               	movwf	(___flmul@a+3)^0,c
  4294   002598  EC63  F017         	call	___flmul	;wreg free
  4295   00259C  C02C  F07F         	movff	?___flmul,efgtoa@l
  4296   0025A0  C02D  F080         	movff	?___flmul+1,efgtoa@l+1
  4297   0025A4  C02E  F081         	movff	?___flmul+2,efgtoa@l+2
  4298   0025A8  C02F  F082         	movff	?___flmul+3,efgtoa@l+3
  4299   0025AC                     
  4300                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  4301   0025AC  C07B  F045         	movff	efgtoa@h,___flge@ff1
  4302   0025B0  C07C  F046         	movff	efgtoa@h+1,___flge@ff1+1
  4303   0025B4  C07D  F047         	movff	efgtoa@h+2,___flge@ff1+2
  4304   0025B8  C07E  F048         	movff	efgtoa@h+3,___flge@ff1+3
  4305   0025BC  C07F  F049         	movff	efgtoa@l,___flge@ff2
  4306   0025C0  C080  F04A         	movff	efgtoa@l+1,___flge@ff2+1
  4307   0025C4  C081  F04B         	movff	efgtoa@l+2,___flge@ff2+2
  4308   0025C8  C082  F04C         	movff	efgtoa@l+3,___flge@ff2+3
  4309   0025CC  EC63  F021         	call	___flge	;wreg free
  4310   0025D0  B0D8               	btfsc	status,0,c
  4311   0025D2  EFED  F012         	goto	u4571
  4312   0025D6  EFEF  F012         	goto	u4570
  4313   0025DA                     u4571:
  4314   0025DA  EFFA  F012         	goto	l4188
  4315   0025DE                     u4570:
  4316   0025DE                     
  4317                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  4318   0025DE  0E00               	movlw	0
  4319   0025E0  0100               	movlb	0	; () banked
  4320   0025E2  6F7F               	movwf	efgtoa@l& (0+255),b
  4321   0025E4  0E00               	movlw	0
  4322   0025E6  6F80               	movwf	(efgtoa@l+1)& (0+255),b
  4323   0025E8  0E00               	movlw	0
  4324   0025EA  6F81               	movwf	(efgtoa@l+2)& (0+255),b
  4325   0025EC  0E00               	movlw	0
  4326   0025EE  6F82               	movwf	(efgtoa@l+3)& (0+255),b
  4327                           
  4328                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 748:     } else {
  4329   0025F0  EF23  F013         	goto	l4194
  4330   0025F4                     l4188:
  4331                           
  4332                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  4333   0025F4  C07B  F005         	movff	efgtoa@h,___fleq@ff1
  4334   0025F8  C07C  F006         	movff	efgtoa@h+1,___fleq@ff1+1
  4335   0025FC  C07D  F007         	movff	efgtoa@h+2,___fleq@ff1+2
  4336   002600  C07E  F008         	movff	efgtoa@h+3,___fleq@ff1+3
  4337   002604  C07F  F009         	movff	efgtoa@l,___fleq@ff2
  4338   002608  C080  F00A         	movff	efgtoa@l+1,___fleq@ff2+1
  4339   00260C  C081  F00B         	movff	efgtoa@l+2,___fleq@ff2+2
  4340   002610  C082  F00C         	movff	efgtoa@l+3,___fleq@ff2+3
  4341   002614  ECCE  F023         	call	___fleq	;wreg free
  4342   002618  A0D8               	btfss	status,0,c
  4343   00261A  EF11  F013         	goto	u4581
  4344   00261E  EF13  F013         	goto	u4580
  4345   002622                     u4581:
  4346   002622  EF23  F013         	goto	l4194
  4347   002626                     u4580:
  4348   002626  0100               	movlb	0	; () banked
  4349   002628  B16D               	btfsc	efgtoa@d& (0+255),0,b
  4350   00262A  EF19  F013         	goto	u4591
  4351   00262E  EF1B  F013         	goto	u4590
  4352   002632                     u4591:
  4353   002632  EF23  F013         	goto	l4194
  4354   002636                     u4590:
  4355   002636                     
  4356                           ; BSR set to: 0
  4357                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  4358   002636  0E00               	movlw	0
  4359   002638  6F7F               	movwf	efgtoa@l& (0+255),b
  4360   00263A  0E00               	movlw	0
  4361   00263C  6F80               	movwf	(efgtoa@l+1)& (0+255),b
  4362   00263E  0E00               	movlw	0
  4363   002640  6F81               	movwf	(efgtoa@l+2)& (0+255),b
  4364   002642  0E00               	movlw	0
  4365   002644  6F82               	movwf	(efgtoa@l+3)& (0+255),b
  4366   002646                     l4194:
  4367                           
  4368                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  4369   002646  C084  F005         	movff	efgtoa@g,___fladd@b
  4370   00264A  C085  F006         	movff	efgtoa@g+1,___fladd@b+1
  4371   00264E  C086  F007         	movff	efgtoa@g+2,___fladd@b+2
  4372   002652  C087  F008         	movff	efgtoa@g+3,___fladd@b+3
  4373   002656  C07F  F009         	movff	efgtoa@l,___fladd@a
  4374   00265A  C080  F00A         	movff	efgtoa@l+1,___fladd@a+1
  4375   00265E  C081  F00B         	movff	efgtoa@l+2,___fladd@a+2
  4376   002662  C082  F00C         	movff	efgtoa@l+3,___fladd@a+3
  4377   002666  EC08  F015         	call	___fladd	;wreg free
  4378   00266A  C005  F07B         	movff	?___fladd,efgtoa@h
  4379   00266E  C006  F07C         	movff	?___fladd+1,efgtoa@h+1
  4380   002672  C007  F07D         	movff	?___fladd+2,efgtoa@h+2
  4381   002676  C008  F07E         	movff	?___fladd+3,efgtoa@h+3
  4382   00267A                     
  4383                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  4384   00267A  C07B  F045         	movff	efgtoa@h,___flge@ff1
  4385   00267E  C07C  F046         	movff	efgtoa@h+1,___flge@ff1+1
  4386   002682  C07D  F047         	movff	efgtoa@h+2,___flge@ff1+2
  4387   002686  C07E  F048         	movff	efgtoa@h+3,___flge@ff1+3
  4388   00268A  0E00               	movlw	0
  4389   00268C  6E30               	movwf	___flmul@a^0,c
  4390   00268E  0E00               	movlw	0
  4391   002690  6E31               	movwf	(___flmul@a+1)^0,c
  4392   002692  0E20               	movlw	32
  4393   002694  6E32               	movwf	(___flmul@a+2)^0,c
  4394   002696  0E41               	movlw	65
  4395   002698  6E33               	movwf	(___flmul@a+3)^0,c
  4396   00269A  C075  F02C         	movff	efgtoa@ou,___flmul@b
  4397   00269E  C076  F02D         	movff	efgtoa@ou+1,___flmul@b+1
  4398   0026A2  C077  F02E         	movff	efgtoa@ou+2,___flmul@b+2
  4399   0026A6  C078  F02F         	movff	efgtoa@ou+3,___flmul@b+3
  4400   0026AA  EC63  F017         	call	___flmul	;wreg free
  4401   0026AE  C02C  F049         	movff	?___flmul,___flge@ff2
  4402   0026B2  C02D  F04A         	movff	?___flmul+1,___flge@ff2+1
  4403   0026B6  C02E  F04B         	movff	?___flmul+2,___flge@ff2+2
  4404   0026BA  C02F  F04C         	movff	?___flmul+3,___flge@ff2+3
  4405   0026BE  EC63  F021         	call	___flge	;wreg free
  4406   0026C2  A0D8               	btfss	status,0,c
  4407   0026C4  EF66  F013         	goto	u4601
  4408   0026C8  EF68  F013         	goto	u4600
  4409   0026CC                     u4601:
  4410   0026CC  EF91  F013         	goto	l4206
  4411   0026D0                     u4600:
  4412   0026D0                     
  4413                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 759:   e++;
  4414   0026D0  0100               	movlb	0	; () banked
  4415   0026D2  4B71               	infsnz	efgtoa@e& (0+255),f,b
  4416   0026D4  2B72               	incf	(efgtoa@e+1)& (0+255),f,b
  4417   0026D6                     
  4418                           ; BSR set to: 0
  4419                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  4420   0026D6  C075  F02C         	movff	efgtoa@ou,___flmul@b
  4421   0026DA  C076  F02D         	movff	efgtoa@ou+1,___flmul@b+1
  4422   0026DE  C077  F02E         	movff	efgtoa@ou+2,___flmul@b+2
  4423   0026E2  C078  F02F         	movff	efgtoa@ou+3,___flmul@b+3
  4424   0026E6  0E00               	movlw	0
  4425   0026E8  6E30               	movwf	___flmul@a^0,c
  4426   0026EA  0E00               	movlw	0
  4427   0026EC  6E31               	movwf	(___flmul@a+1)^0,c
  4428   0026EE  0E20               	movlw	32
  4429   0026F0  6E32               	movwf	(___flmul@a+2)^0,c
  4430   0026F2  0E41               	movlw	65
  4431   0026F4  6E33               	movwf	(___flmul@a+3)^0,c
  4432   0026F6  EC63  F017         	call	___flmul	;wreg free
  4433   0026FA  C02C  F075         	movff	?___flmul,efgtoa@ou
  4434   0026FE  C02D  F076         	movff	?___flmul+1,efgtoa@ou+1
  4435   002702  C02E  F077         	movff	?___flmul+2,efgtoa@ou+2
  4436   002706  C02F  F078         	movff	?___flmul+3,efgtoa@ou+3
  4437   00270A                     
  4438                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  4439   00270A  0E66               	movlw	102
  4440   00270C  0100               	movlb	0	; () banked
  4441   00270E  196C               	xorwf	efgtoa@nmode& (0+255),w,b
  4442   002710  A4D8               	btfss	status,2,c
  4443   002712  EF8D  F013         	goto	u4611
  4444   002716  EF8F  F013         	goto	u4610
  4445   00271A                     u4611:
  4446   00271A  EF91  F013         	goto	l4206
  4447   00271E                     u4610:
  4448   00271E                     
  4449                           ; BSR set to: 0
  4450                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 764:    m++;
  4451   00271E  4B6F               	infsnz	efgtoa@m& (0+255),f,b
  4452   002720  2B70               	incf	(efgtoa@m+1)& (0+255),f,b
  4453   002722                     l4206:
  4454                           
  4455                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  4456   002722  C075  F08A         	movff	efgtoa@ou,efgtoa@u
  4457   002726  C076  F08B         	movff	efgtoa@ou+1,efgtoa@u+1
  4458   00272A  C077  F08C         	movff	efgtoa@ou+2,efgtoa@u+2
  4459   00272E  C078  F08D         	movff	efgtoa@ou+3,efgtoa@u+3
  4460   002732                     
  4461                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  4462   002732  C071  F062         	movff	efgtoa@e,efgtoa@ne
  4463   002736  C072  F063         	movff	efgtoa@e+1,efgtoa@ne+1
  4464   00273A                     
  4465                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  4466   00273A  0100               	movlb	0	; () banked
  4467   00273C  6B6A               	clrf	efgtoa@pp& (0+255),b
  4468   00273E                     
  4469                           ; BSR set to: 0
  4470                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  4471   00273E  0E00               	movlw	0
  4472   002740  6F67               	movwf	(efgtoa@t+1)& (0+255),b
  4473   002742  0E00               	movlw	0
  4474   002744  6F66               	movwf	efgtoa@t& (0+255),b
  4475   002746                     
  4476                           ; BSR set to: 0
  4477                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  4478   002746  0E00               	movlw	0
  4479   002748  6F7A               	movwf	(efgtoa@i+1)& (0+255),b
  4480   00274A  0E00               	movlw	0
  4481   00274C  6F79               	movwf	efgtoa@i& (0+255),b
  4482                           
  4483                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4484   00274E  EF8E  F014         	goto	l4256
  4485   002752                     l4216:
  4486                           
  4487                           ; BSR set to: 0
  4488                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  4489   002752  C07B  F013         	movff	efgtoa@h,___fldiv@b
  4490   002756  C07C  F014         	movff	efgtoa@h+1,___fldiv@b+1
  4491   00275A  C07D  F015         	movff	efgtoa@h+2,___fldiv@b+2
  4492   00275E  C07E  F016         	movff	efgtoa@h+3,___fldiv@b+3
  4493   002762  C08A  F017         	movff	efgtoa@u,___fldiv@a
  4494   002766  C08B  F018         	movff	efgtoa@u+1,___fldiv@a+1
  4495   00276A  C08C  F019         	movff	efgtoa@u+2,___fldiv@a+2
  4496   00276E  C08D  F01A         	movff	efgtoa@u+3,___fldiv@a+3
  4497   002772  EC88  F019         	call	___fldiv	;wreg free
  4498   002776  C013  F02C         	movff	?___fldiv,floorf@x
  4499   00277A  C014  F02D         	movff	?___fldiv+1,floorf@x+1
  4500   00277E  C015  F02E         	movff	?___fldiv+2,floorf@x+2
  4501   002782  C016  F02F         	movff	?___fldiv+3,floorf@x+3
  4502   002786  ECA9  F01D         	call	_floorf	;wreg free
  4503   00278A  C02C  F07F         	movff	?_floorf,efgtoa@l
  4504   00278E  C02D  F080         	movff	?_floorf+1,efgtoa@l+1
  4505   002792  C02E  F081         	movff	?_floorf+2,efgtoa@l+2
  4506   002796  C02F  F082         	movff	?_floorf+3,efgtoa@l+3
  4507                           
  4508                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  4509   00279A  C07F  F005         	movff	efgtoa@l,___fltol@f1
  4510   00279E  C080  F006         	movff	efgtoa@l+1,___fltol@f1+1
  4511   0027A2  C081  F007         	movff	efgtoa@l+2,___fltol@f1+2
  4512   0027A6  C082  F008         	movff	efgtoa@l+3,___fltol@f1+3
  4513   0027AA  ECE0  F020         	call	___fltol	;wreg free
  4514   0027AE  BE06               	btfsc	(?___fltol+1)^0,7,c
  4515   0027B0  EFE5  F013         	goto	u4620
  4516   0027B4  5006               	movf	(?___fltol+1)^0,w,c
  4517   0027B6  E107               	bnz	u4621
  4518   0027B8  0E0A               	movlw	10
  4519   0027BA  5C05               	subwf	?___fltol^0,w,c
  4520   0027BC  B0D8               	btfsc	status,0,c
  4521   0027BE  EFE3  F013         	goto	u4621
  4522   0027C2  EFE5  F013         	goto	u4620
  4523   0027C6                     u4621:
  4524   0027C6  EFF5  F013         	goto	l4220
  4525   0027CA                     u4620:
  4526   0027CA  C07F  F005         	movff	efgtoa@l,___fltol@f1
  4527   0027CE  C080  F006         	movff	efgtoa@l+1,___fltol@f1+1
  4528   0027D2  C081  F007         	movff	efgtoa@l+2,___fltol@f1+2
  4529   0027D6  C082  F008         	movff	efgtoa@l+3,___fltol@f1+3
  4530   0027DA  ECE0  F020         	call	___fltol	;wreg free
  4531   0027DE  C005  F06D         	movff	?___fltol,efgtoa@d
  4532   0027E2  C006  F06E         	movff	?___fltol+1,efgtoa@d+1
  4533   0027E6  EFFA  F013         	goto	l1016
  4534   0027EA                     l4220:
  4535   0027EA  0E00               	movlw	0
  4536   0027EC  0100               	movlb	0	; () banked
  4537   0027EE  6F6E               	movwf	(efgtoa@d+1)& (0+255),b
  4538   0027F0  0E09               	movlw	9
  4539   0027F2  6F6D               	movwf	efgtoa@d& (0+255),b
  4540   0027F4                     l1016:
  4541                           
  4542                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  4543   0027F4  0100               	movlb	0	; () banked
  4544   0027F6  516A               	movf	efgtoa@pp& (0+255),w,b
  4545   0027F8  A4D8               	btfss	status,2,c
  4546   0027FA  EF01  F014         	goto	u4631
  4547   0027FE  EF03  F014         	goto	u4630
  4548   002802                     u4631:
  4549   002802  EF2B  F014         	goto	l4240
  4550   002806                     u4630:
  4551   002806                     
  4552                           ; BSR set to: 0
  4553   002806  BF63               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4554   002808  EF0A  F014         	goto	u4640
  4555   00280C  EF08  F014         	goto	u4641
  4556   002810                     u4641:
  4557   002810  EF2B  F014         	goto	l4240
  4558   002814                     u4640:
  4559   002814                     
  4560                           ; BSR set to: 0
  4561                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  4562   002814  0E00               	movlw	low _dbuf
  4563   002816  2588               	addwf	efgtoa@n& (0+255),w,b
  4564   002818  6ED9               	movwf	fsr2l,c
  4565   00281A  0E01               	movlw	high _dbuf
  4566   00281C  2189               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4567   00281E  6EDA               	movwf	fsr2h,c
  4568   002820  0E2E               	movlw	46
  4569   002822  6EDF               	movwf	indf2,c
  4570   002824                     
  4571                           ; BSR set to: 0
  4572   002824  4B88               	infsnz	efgtoa@n& (0+255),f,b
  4573   002826  2B89               	incf	(efgtoa@n+1)& (0+255),f,b
  4574   002828                     
  4575                           ; BSR set to: 0
  4576                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  4577   002828  0773               	decf	efgtoa@w& (0+255),f,b
  4578   00282A  A0D8               	btfss	status,0,c
  4579   00282C  0774               	decf	(efgtoa@w+1)& (0+255),f,b
  4580   00282E                     
  4581                           ; BSR set to: 0
  4582                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  4583   00282E  0E01               	movlw	1
  4584   002830  6F6A               	movwf	efgtoa@pp& (0+255),b
  4585   002832  EF2B  F014         	goto	l4240
  4586   002836                     l4232:
  4587                           
  4588                           ; BSR set to: 0
  4589                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  4590   002836  0E00               	movlw	low _dbuf
  4591   002838  2588               	addwf	efgtoa@n& (0+255),w,b
  4592   00283A  6ED9               	movwf	fsr2l,c
  4593   00283C  0E01               	movlw	high _dbuf
  4594   00283E  2189               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4595   002840  6EDA               	movwf	fsr2h,c
  4596   002842  0E30               	movlw	48
  4597   002844  6EDF               	movwf	indf2,c
  4598   002846                     
  4599                           ; BSR set to: 0
  4600   002846  4B88               	infsnz	efgtoa@n& (0+255),f,b
  4601   002848  2B89               	incf	(efgtoa@n+1)& (0+255),f,b
  4602   00284A                     
  4603                           ; BSR set to: 0
  4604                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  4605   00284A  0773               	decf	efgtoa@w& (0+255),f,b
  4606   00284C  A0D8               	btfss	status,0,c
  4607   00284E  0774               	decf	(efgtoa@w+1)& (0+255),f,b
  4608   002850                     
  4609                           ; BSR set to: 0
  4610                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  4611   002850  0766               	decf	efgtoa@t& (0+255),f,b
  4612   002852  A0D8               	btfss	status,0,c
  4613   002854  0767               	decf	(efgtoa@t+1)& (0+255),f,b
  4614   002856                     l4240:
  4615                           
  4616                           ; BSR set to: 0
  4617                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  4618   002856  5166               	movf	efgtoa@t& (0+255),w,b
  4619   002858  1167               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4620   00285A  A4D8               	btfss	status,2,c
  4621   00285C  EF32  F014         	goto	u4651
  4622   002860  EF34  F014         	goto	u4650
  4623   002864                     u4651:
  4624   002864  EF1B  F014         	goto	l4232
  4625   002868                     u4650:
  4626   002868                     
  4627                           ; BSR set to: 0
  4628                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4629   002868  0E00               	movlw	low _dbuf
  4630   00286A  2588               	addwf	efgtoa@n& (0+255),w,b
  4631   00286C  6ED9               	movwf	fsr2l,c
  4632   00286E  0E01               	movlw	high _dbuf
  4633   002870  2189               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4634   002872  6EDA               	movwf	fsr2h,c
  4635   002874  516D               	movf	efgtoa@d& (0+255),w,b
  4636   002876  0F30               	addlw	48
  4637   002878  6EDF               	movwf	indf2,c
  4638   00287A                     
  4639                           ; BSR set to: 0
  4640   00287A  4B88               	infsnz	efgtoa@n& (0+255),f,b
  4641   00287C  2B89               	incf	(efgtoa@n+1)& (0+255),f,b
  4642   00287E                     
  4643                           ; BSR set to: 0
  4644                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  4645   00287E  0773               	decf	efgtoa@w& (0+255),f,b
  4646   002880  A0D8               	btfss	status,0,c
  4647   002882  0774               	decf	(efgtoa@w+1)& (0+255),f,b
  4648   002884                     
  4649                           ; BSR set to: 0
  4650                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  4651   002884  C07B  F045         	movff	efgtoa@h,___flsub@b
  4652   002888  C07C  F046         	movff	efgtoa@h+1,___flsub@b+1
  4653   00288C  C07D  F047         	movff	efgtoa@h+2,___flsub@b+2
  4654   002890  C07E  F048         	movff	efgtoa@h+3,___flsub@b+3
  4655   002894  C07F  F030         	movff	efgtoa@l,___flmul@a
  4656   002898  C080  F031         	movff	efgtoa@l+1,___flmul@a+1
  4657   00289C  C081  F032         	movff	efgtoa@l+2,___flmul@a+2
  4658   0028A0  C082  F033         	movff	efgtoa@l+3,___flmul@a+3
  4659   0028A4  C08A  F02C         	movff	efgtoa@u,___flmul@b
  4660   0028A8  C08B  F02D         	movff	efgtoa@u+1,___flmul@b+1
  4661   0028AC  C08C  F02E         	movff	efgtoa@u+2,___flmul@b+2
  4662   0028B0  C08D  F02F         	movff	efgtoa@u+3,___flmul@b+3
  4663   0028B4  EC63  F017         	call	___flmul	;wreg free
  4664   0028B8  C02C  F049         	movff	?___flmul,___flsub@a
  4665   0028BC  C02D  F04A         	movff	?___flmul+1,___flsub@a+1
  4666   0028C0  C02E  F04B         	movff	?___flmul+2,___flsub@a+2
  4667   0028C4  C02F  F04C         	movff	?___flmul+3,___flsub@a+3
  4668   0028C8  EC8F  F026         	call	___flsub	;wreg free
  4669   0028CC  C045  F07B         	movff	?___flsub,efgtoa@h
  4670   0028D0  C046  F07C         	movff	?___flsub+1,efgtoa@h+1
  4671   0028D4  C047  F07D         	movff	?___flsub+2,efgtoa@h+2
  4672   0028D8  C048  F07E         	movff	?___flsub+3,efgtoa@h+3
  4673   0028DC                     
  4674                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  4675   0028DC  C08A  F013         	movff	efgtoa@u,___fldiv@b
  4676   0028E0  C08B  F014         	movff	efgtoa@u+1,___fldiv@b+1
  4677   0028E4  C08C  F015         	movff	efgtoa@u+2,___fldiv@b+2
  4678   0028E8  C08D  F016         	movff	efgtoa@u+3,___fldiv@b+3
  4679   0028EC  0E00               	movlw	0
  4680   0028EE  6E17               	movwf	___fldiv@a^0,c
  4681   0028F0  0E00               	movlw	0
  4682   0028F2  6E18               	movwf	(___fldiv@a+1)^0,c
  4683   0028F4  0E20               	movlw	32
  4684   0028F6  6E19               	movwf	(___fldiv@a+2)^0,c
  4685   0028F8  0E41               	movlw	65
  4686   0028FA  6E1A               	movwf	(___fldiv@a+3)^0,c
  4687   0028FC  EC88  F019         	call	___fldiv	;wreg free
  4688   002900  C013  F08A         	movff	?___fldiv,efgtoa@u
  4689   002904  C014  F08B         	movff	?___fldiv+1,efgtoa@u+1
  4690   002908  C015  F08C         	movff	?___fldiv+2,efgtoa@u+2
  4691   00290C  C016  F08D         	movff	?___fldiv+3,efgtoa@u+3
  4692   002910                     
  4693                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  4694   002910  0100               	movlb	0	; () banked
  4695   002912  0762               	decf	efgtoa@ne& (0+255),f,b
  4696   002914  A0D8               	btfss	status,0,c
  4697   002916  0763               	decf	(efgtoa@ne+1)& (0+255),f,b
  4698   002918                     
  4699                           ; BSR set to: 0
  4700                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 809:         ++i;
  4701   002918  4B79               	infsnz	efgtoa@i& (0+255),f,b
  4702   00291A  2B7A               	incf	(efgtoa@i+1)& (0+255),f,b
  4703   00291C                     l4256:
  4704                           
  4705                           ; BSR set to: 0
  4706                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4707   00291C  516F               	movf	efgtoa@m& (0+255),w,b
  4708   00291E  5D79               	subwf	efgtoa@i& (0+255),w,b
  4709   002920  517A               	movf	(efgtoa@i+1)& (0+255),w,b
  4710   002922  0A80               	xorlw	128
  4711   002924  6F60               	movwf	??_efgtoa& (0+255),b
  4712   002926  5170               	movf	(efgtoa@m+1)& (0+255),w,b
  4713   002928  0A80               	xorlw	128
  4714   00292A  5960               	subwfb	??_efgtoa& (0+255),w,b
  4715   00292C  B0D8               	btfsc	status,0,c
  4716   00292E  EF9B  F014         	goto	u4661
  4717   002932  EF9D  F014         	goto	u4660
  4718   002936                     u4661:
  4719   002936  EFAB  F014         	goto	l4260
  4720   00293A                     u4660:
  4721   00293A                     
  4722                           ; BSR set to: 0
  4723   00293A  BF89               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4724   00293C  EFA9  F014         	goto	u4671
  4725   002940  5189               	movf	(efgtoa@n+1)& (0+255),w,b
  4726   002942  E109               	bnz	u4670
  4727   002944  0E4B               	movlw	75
  4728   002946  5D88               	subwf	efgtoa@n& (0+255),w,b
  4729   002948  A0D8               	btfss	status,0,c
  4730   00294A  EFA9  F014         	goto	u4671
  4731   00294E  EFAB  F014         	goto	u4670
  4732   002952                     u4671:
  4733   002952  EFA9  F013         	goto	l4216
  4734   002956                     u4670:
  4735   002956                     l4260:
  4736                           
  4737                           ; BSR set to: 0
  4738                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  4739   002956  0E00               	movlw	0
  4740   002958  6F7A               	movwf	(efgtoa@i+1)& (0+255),b
  4741   00295A  0E4F               	movlw	79
  4742   00295C  6F79               	movwf	efgtoa@i& (0+255),b
  4743   00295E                     
  4744                           ; BSR set to: 0
  4745                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  4746   00295E  0E00               	movlw	low _dbuf
  4747   002960  2579               	addwf	efgtoa@i& (0+255),w,b
  4748   002962  6ED9               	movwf	fsr2l,c
  4749   002964  0E01               	movlw	high _dbuf
  4750   002966  217A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4751   002968  6EDA               	movwf	fsr2h,c
  4752   00296A  6ADF               	clrf	indf2,c
  4753   00296C                     
  4754                           ; BSR set to: 0
  4755                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4756   00296C  0E00               	movlw	low _dbuf
  4757   00296E  6F60               	movwf	??_efgtoa& (0+255),b
  4758   002970  0E01               	movlw	high _dbuf
  4759   002972  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  4760   002974  5188               	movf	efgtoa@n& (0+255),w,b
  4761   002976  5F60               	subwf	??_efgtoa& (0+255),f,b
  4762   002978  5189               	movf	(efgtoa@n+1)& (0+255),w,b
  4763   00297A  5B61               	subwfb	(??_efgtoa+1)& (0+255),f,b
  4764   00297C  5179               	movf	efgtoa@i& (0+255),w,b
  4765   00297E  2560               	addwf	??_efgtoa& (0+255),w,b
  4766   002980  6E05               	movwf	memcpy@d1^0,c
  4767   002982  517A               	movf	(efgtoa@i+1)& (0+255),w,b
  4768   002984  2161               	addwfc	(??_efgtoa+1)& (0+255),w,b
  4769   002986  6E06               	movwf	(memcpy@d1+1)^0,c
  4770   002988  0E00               	movlw	low _dbuf
  4771   00298A  6E07               	movwf	memcpy@s1^0,c
  4772   00298C  0E01               	movlw	high _dbuf
  4773   00298E  6E08               	movwf	(memcpy@s1+1)^0,c
  4774   002990  C088  F009         	movff	efgtoa@n,memcpy@n
  4775   002994  C089  F00A         	movff	efgtoa@n+1,memcpy@n+1
  4776   002998  EC7D  F025         	call	_memcpy	;wreg free
  4777   00299C                     
  4778                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  4779   00299C  0100               	movlb	0	; () banked
  4780   00299E  5188               	movf	efgtoa@n& (0+255),w,b
  4781   0029A0  5D79               	subwf	efgtoa@i& (0+255),w,b
  4782   0029A2  6F88               	movwf	efgtoa@n& (0+255),b
  4783   0029A4  5189               	movf	(efgtoa@n+1)& (0+255),w,b
  4784   0029A6  597A               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4785   0029A8  6F89               	movwf	(efgtoa@n+1)& (0+255),b
  4786   0029AA                     
  4787                           ; BSR set to: 0
  4788                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  4789   0029AA  5183               	movf	efgtoa@sign& (0+255),w,b
  4790   0029AC  A4D8               	btfss	status,2,c
  4791   0029AE  EFDB  F014         	goto	u4681
  4792   0029B2  EFDE  F014         	goto	u4680
  4793   0029B6                     u4681:
  4794   0029B6  0E01               	movlw	1
  4795   0029B8  EFDF  F014         	goto	u4690
  4796   0029BC                     u4680:
  4797   0029BC  0E00               	movlw	0
  4798   0029BE                     u4690:
  4799   0029BE  6F79               	movwf	efgtoa@i& (0+255),b
  4800   0029C0  6B7A               	clrf	(efgtoa@i+1)& (0+255),b
  4801   0029C2                     
  4802                           ; BSR set to: 0
  4803                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  4804   0029C2  5183               	movf	efgtoa@sign& (0+255),w,b
  4805   0029C4  B4D8               	btfsc	status,2,c
  4806   0029C6  EFE7  F014         	goto	u4701
  4807   0029CA  EFE9  F014         	goto	u4700
  4808   0029CE                     u4701:
  4809   0029CE  EFF5  F014         	goto	l4274
  4810   0029D2                     u4700:
  4811   0029D2                     
  4812                           ; BSR set to: 0
  4813                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  4814   0029D2  0788               	decf	efgtoa@n& (0+255),f,b
  4815   0029D4  A0D8               	btfss	status,0,c
  4816   0029D6  0789               	decf	(efgtoa@n+1)& (0+255),f,b
  4817   0029D8  0E00               	movlw	low _dbuf
  4818   0029DA  2588               	addwf	efgtoa@n& (0+255),w,b
  4819   0029DC  6ED9               	movwf	fsr2l,c
  4820   0029DE  0E01               	movlw	high _dbuf
  4821   0029E0  2189               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4822   0029E2  6EDA               	movwf	fsr2h,c
  4823   0029E4  0060  F20F  FFDF   	movff	efgtoa@sign,indf2
  4824   0029EA                     l4274:
  4825                           
  4826                           ; BSR set to: 0
  4827                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  4828   0029EA  5179               	movf	efgtoa@i& (0+255),w,b
  4829   0029EC  5F73               	subwf	efgtoa@w& (0+255),f,b
  4830   0029EE  517A               	movf	(efgtoa@i+1)& (0+255),w,b
  4831   0029F0  5B74               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4832   0029F2                     
  4833                           ; BSR set to: 0
  4834                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4835   0029F2  C051  F013         	movff	efgtoa@fp,pad@fp
  4836   0029F6  0E00               	movlw	low _dbuf
  4837   0029F8  2588               	addwf	efgtoa@n& (0+255),w,b
  4838   0029FA  6E14               	movwf	pad@buf^0,c
  4839   0029FC  0E01               	movlw	high _dbuf
  4840   0029FE  2189               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4841   002A00  6E15               	movwf	(pad@buf+1)^0,c
  4842   002A02  C073  F016         	movff	efgtoa@w,pad@p
  4843   002A06  C074  F017         	movff	efgtoa@w+1,pad@p+1
  4844   002A0A  EC19  F025         	call	_pad	;wreg free
  4845   002A0E                     l983:
  4846   002A0E  0012               	return		;funcret
  4847   002A10                     __end_of_efgtoa:
  4848                           	callstack 0
  4849                           
  4850 ;; *************** function _strcpy *****************
  4851 ;; Defined at:
  4852 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcpy.c"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;  dest            2    4[COMRAM] PTR unsigned char 
  4855 ;;		 -> dbuf(80), 
  4856 ;;  src             1    6[COMRAM] PTR const unsigned char 
  4857 ;;		 -> STR_10(4), STR_7(4), 
  4858 ;; Auto vars:     Size  Location     Type
  4859 ;;  d               2    8[COMRAM] PTR unsigned char 
  4860 ;;		 -> dbuf(80), 
  4861 ;; Return value:  Size  Location     Type
  4862 ;;                  2    4[COMRAM] PTR unsigned char 
  4863 ;; Registers used:
  4864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4865 ;; Tracked objects:
  4866 ;;		On entry : 0/0
  4867 ;;		On exit  : 0/0
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4870 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4871 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4872 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4873 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4874 ;;Total ram usage:        6 bytes
  4875 ;; Hardware stack levels used: 1
  4876 ;; Hardware stack levels required when called: 1
  4877 ;; This function calls:
  4878 ;;		Nothing
  4879 ;; This function is called by:
  4880 ;;		_efgtoa
  4881 ;; This function uses a non-reentrant model
  4882 ;;
  4883                           
  4884                           	psect	text10
  4885   004CD8                     __ptext10:
  4886                           	callstack 0
  4887   004CD8                     _strcpy:
  4888                           	callstack 24
  4889   004CD8  C005  F009         	movff	strcpy@dest,strcpy@d
  4890   004CDC  C006  F00A         	movff	strcpy@dest+1,strcpy@d+1
  4891   004CE0                     l3344:
  4892   004CE0  2A07               	incf	strcpy@src^0,f,c
  4893   004CE2  0407               	decf	strcpy@src^0,w,c
  4894   004CE4  6E08               	movwf	??_strcpy^0,c
  4895   004CE6  0060  F023  FFF6   	movff	??_strcpy,tblptrl
  4896   004CEC                     	if	1	;There is more than 1 active tblptr byte
  4897   004CEC  0E20               	movlw	high __smallconst
  4898   004CEE  6EF7               	movwf	tblptrh,c
  4899   004CF0                     	endif
  4900   004CF0                     	if	0	;tblptru may be non-zero
  4901   004CF0                     	endif
  4902   004CF0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4903   004CF0  0E00               	movlw	low (__smallconst shr (0+16))
  4904   004CF2  6EF8               	movwf	tblptru,c
  4905   004CF4                     	endif
  4906   004CF4  0060  F027  FFD9   	movff	strcpy@d,fsr2l
  4907   004CFA  0060  F02B  FFDA   	movff	strcpy@d+1,fsr2h
  4908   004D00  4A09               	infsnz	strcpy@d^0,f,c
  4909   004D02  2A0A               	incf	(strcpy@d+1)^0,f,c
  4910   004D04  0008               	tblrd		*
  4911   004D06  006F FFD7 FFDF     	movff	tablat,indf2
  4912   004D0C  50DF               	movf	indf2,w,c
  4913   004D0E  A4D8               	btfss	status,2,c
  4914   004D10  EF8C  F026         	goto	u3461
  4915   004D14  EF8E  F026         	goto	u3460
  4916   004D18                     u3461:
  4917   004D18  EF70  F026         	goto	l3344
  4918   004D1C                     u3460:
  4919   004D1C  0012               	return		;funcret
  4920   004D1E                     __end_of_strcpy:
  4921                           	callstack 0
  4922                           
  4923 ;; *************** function _memcpy *****************
  4924 ;; Defined at:
  4925 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
  4926 ;; Parameters:    Size  Location     Type
  4927 ;;  d1              2    4[COMRAM] PTR void 
  4928 ;;		 -> dbuf(80), 
  4929 ;;  s1              2    6[COMRAM] PTR const void 
  4930 ;;		 -> dbuf(80), 
  4931 ;;  n               2    8[COMRAM] unsigned int 
  4932 ;; Auto vars:     Size  Location     Type
  4933 ;;  s               2   12[COMRAM] PTR const unsigned char 
  4934 ;;		 -> dbuf(80), 
  4935 ;;  d               2   10[COMRAM] PTR unsigned char 
  4936 ;;		 -> dbuf(80), 
  4937 ;;  tmp             1   14[COMRAM] unsigned char 
  4938 ;; Return value:  Size  Location     Type
  4939 ;;                  2    4[COMRAM] PTR void 
  4940 ;; Registers used:
  4941 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4942 ;; Tracked objects:
  4943 ;;		On entry : 0/0
  4944 ;;		On exit  : 0/0
  4945 ;;		Unchanged: 0/0
  4946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4947 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4948 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4950 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4951 ;;Total ram usage:       11 bytes
  4952 ;; Hardware stack levels used: 1
  4953 ;; Hardware stack levels required when called: 1
  4954 ;; This function calls:
  4955 ;;		Nothing
  4956 ;; This function is called by:
  4957 ;;		_efgtoa
  4958 ;; This function uses a non-reentrant model
  4959 ;;
  4960                           
  4961                           	psect	text11
  4962   004AFA                     __ptext11:
  4963                           	callstack 0
  4964   004AFA                     _memcpy:
  4965                           	callstack 24
  4966   004AFA  C007  F00D         	movff	memcpy@s1,memcpy@s
  4967   004AFE  C008  F00E         	movff	memcpy@s1+1,memcpy@s+1
  4968   004B02  C005  F00B         	movff	memcpy@d1,memcpy@d
  4969   004B06  C006  F00C         	movff	memcpy@d1+1,memcpy@d+1
  4970   004B0A  EF9C  F025         	goto	l3392
  4971   004B0E                     l3384:
  4972   004B0E  0060  F037  FFD9   	movff	memcpy@s,fsr2l
  4973   004B14  0060  F03B  FFDA   	movff	memcpy@s+1,fsr2h
  4974   004B1A  50DF               	movf	indf2,w,c
  4975   004B1C  6E0F               	movwf	memcpy@tmp^0,c
  4976   004B1E  4A0D               	infsnz	memcpy@s^0,f,c
  4977   004B20  2A0E               	incf	(memcpy@s+1)^0,f,c
  4978   004B22  0060  F02F  FFD9   	movff	memcpy@d,fsr2l
  4979   004B28  0060  F033  FFDA   	movff	memcpy@d+1,fsr2h
  4980   004B2E  0060  F03F  FFDF   	movff	memcpy@tmp,indf2
  4981   004B34  4A0B               	infsnz	memcpy@d^0,f,c
  4982   004B36  2A0C               	incf	(memcpy@d+1)^0,f,c
  4983   004B38                     l3392:
  4984   004B38  0609               	decf	memcpy@n^0,f,c
  4985   004B3A  A0D8               	btfss	status,0,c
  4986   004B3C  060A               	decf	(memcpy@n+1)^0,f,c
  4987   004B3E  2809               	incf	memcpy@n^0,w,c
  4988   004B40  E106               	bnz	u3581
  4989   004B42  280A               	incf	(memcpy@n+1)^0,w,c
  4990   004B44  A4D8               	btfss	status,2,c
  4991   004B46  EFA7  F025         	goto	u3581
  4992   004B4A  EFA9  F025         	goto	u3580
  4993   004B4E                     u3581:
  4994   004B4E  EF87  F025         	goto	l3384
  4995   004B52                     u3580:
  4996   004B52  0012               	return		;funcret
  4997   004B54                     __end_of_memcpy:
  4998                           	callstack 0
  4999                           
  5000 ;; *************** function _labs *****************
  5001 ;; Defined at:
  5002 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\labs.c"
  5003 ;; Parameters:    Size  Location     Type
  5004 ;;  a               4    4[COMRAM] long 
  5005 ;; Auto vars:     Size  Location     Type
  5006 ;;		None
  5007 ;; Return value:  Size  Location     Type
  5008 ;;                  4    4[COMRAM] long 
  5009 ;; Registers used:
  5010 ;;		wreg, status,2, status,0
  5011 ;; Tracked objects:
  5012 ;;		On entry : 0/0
  5013 ;;		On exit  : 0/0
  5014 ;;		Unchanged: 0/0
  5015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5016 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5018 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5019 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5020 ;;Total ram usage:        8 bytes
  5021 ;; Hardware stack levels used: 1
  5022 ;; Hardware stack levels required when called: 1
  5023 ;; This function calls:
  5024 ;;		Nothing
  5025 ;; This function is called by:
  5026 ;;		_efgtoa
  5027 ;; This function uses a non-reentrant model
  5028 ;;
  5029                           
  5030                           	psect	text12
  5031   004B54                     __ptext12:
  5032                           	callstack 0
  5033   004B54                     _labs:
  5034                           	callstack 24
  5035   004B54  BE08               	btfsc	(labs@a+3)^0,7,c
  5036   004B56  EFAF  F025         	goto	u3471
  5037   004B5A  EFB1  F025         	goto	u3470
  5038   004B5E                     u3471:
  5039   004B5E  EFBB  F025         	goto	l3350
  5040   004B62                     u3470:
  5041   004B62  C005  F005         	movff	labs@a,?_labs
  5042   004B66  C006  F006         	movff	labs@a+1,?_labs+1
  5043   004B6A  C007  F007         	movff	labs@a+2,?_labs+2
  5044   004B6E  C008  F008         	movff	labs@a+3,?_labs+3
  5045   004B72  EFD4  F025         	goto	l1100
  5046   004B76                     l3350:
  5047   004B76  C005  F009         	movff	labs@a,??_labs
  5048   004B7A  C006  F00A         	movff	labs@a+1,??_labs+1
  5049   004B7E  C007  F00B         	movff	labs@a+2,??_labs+2
  5050   004B82  C008  F00C         	movff	labs@a+3,??_labs+3
  5051   004B86  1E09               	comf	??_labs^0,f,c
  5052   004B88  1E0A               	comf	(??_labs+1)^0,f,c
  5053   004B8A  1E0B               	comf	(??_labs+2)^0,f,c
  5054   004B8C  1E0C               	comf	(??_labs+3)^0,f,c
  5055   004B8E  2A09               	incf	??_labs^0,f,c
  5056   004B90  0E00               	movlw	0
  5057   004B92  220A               	addwfc	(??_labs+1)^0,f,c
  5058   004B94  220B               	addwfc	(??_labs+2)^0,f,c
  5059   004B96  220C               	addwfc	(??_labs+3)^0,f,c
  5060   004B98  C009  F005         	movff	??_labs,?_labs
  5061   004B9C  C00A  F006         	movff	??_labs+1,?_labs+1
  5062   004BA0  C00B  F007         	movff	??_labs+2,?_labs+2
  5063   004BA4  C00C  F008         	movff	??_labs+3,?_labs+3
  5064   004BA8                     l1100:
  5065   004BA8  0012               	return		;funcret
  5066   004BAA                     __end_of_labs:
  5067                           	callstack 0
  5068                           
  5069 ;; *************** function _floorf *****************
  5070 ;; Defined at:
  5071 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\floorf.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;  x               4   43[COMRAM] float 
  5074 ;; Auto vars:     Size  Location     Type
  5075 ;;  u               4   59[COMRAM] struct .
  5076 ;;  m               4   53[COMRAM] unsigned long 
  5077 ;;  e               2   57[COMRAM] int 
  5078 ;; Return value:  Size  Location     Type
  5079 ;;                  4   43[COMRAM] float 
  5080 ;; Registers used:
  5081 ;;		wreg, status,2, status,0
  5082 ;; Tracked objects:
  5083 ;;		On entry : 0/0
  5084 ;;		On exit  : 0/0
  5085 ;;		Unchanged: 0/0
  5086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5087 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5088 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5089 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5090 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5091 ;;Total ram usage:       20 bytes
  5092 ;; Hardware stack levels used: 1
  5093 ;; Hardware stack levels required when called: 1
  5094 ;; This function calls:
  5095 ;;		Nothing
  5096 ;; This function is called by:
  5097 ;;		_efgtoa
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           
  5101                           	psect	text13
  5102   003B52                     __ptext13:
  5103                           	callstack 0
  5104   003B52                     _floorf:
  5105                           	callstack 24
  5106   003B52  C0EE  F03C         	movff	floorf@F521,floorf@u
  5107   003B56  C0EF  F03D         	movff	floorf@F521+1,floorf@u+1
  5108   003B5A  C0F0  F03E         	movff	floorf@F521+2,floorf@u+2
  5109   003B5E  C0F1  F03F         	movff	floorf@F521+3,floorf@u+3
  5110   003B62  C02C  F03C         	movff	floorf@x,floorf@u
  5111   003B66  C02D  F03D         	movff	floorf@x+1,floorf@u+1
  5112   003B6A  C02E  F03E         	movff	floorf@x+2,floorf@u+2
  5113   003B6E  C02F  F03F         	movff	floorf@x+3,floorf@u+3
  5114   003B72  0E81               	movlw	129
  5115   003B74  6E30               	movwf	??_floorf^0,c
  5116   003B76  0EFF               	movlw	255
  5117   003B78  6E31               	movwf	(??_floorf+1)^0,c
  5118   003B7A  C03C  F032         	movff	floorf@u,??_floorf+2
  5119   003B7E  C03D  F033         	movff	floorf@u+1,??_floorf+3
  5120   003B82  C03E  F034         	movff	floorf@u+2,??_floorf+4
  5121   003B86  C03F  F035         	movff	floorf@u+3,??_floorf+5
  5122   003B8A  0E18               	movlw	24
  5123   003B8C  EFCD  F01D         	goto	u3480
  5124   003B90                     u3485:
  5125   003B90  90D8               	bcf	status,0,c
  5126   003B92  3235               	rrcf	(??_floorf+5)^0,f,c
  5127   003B94  3234               	rrcf	(??_floorf+4)^0,f,c
  5128   003B96  3233               	rrcf	(??_floorf+3)^0,f,c
  5129   003B98  3232               	rrcf	(??_floorf+2)^0,f,c
  5130   003B9A                     u3480:
  5131   003B9A  2EE8               	decfsz	wreg,f,c
  5132   003B9C  EFC8  F01D         	goto	u3485
  5133   003BA0  5032               	movf	(??_floorf+2)^0,w,c
  5134   003BA2  2430               	addwf	??_floorf^0,w,c
  5135   003BA4  6E3A               	movwf	floorf@e^0,c
  5136   003BA6  0E00               	movlw	0
  5137   003BA8  2031               	addwfc	(??_floorf+1)^0,w,c
  5138   003BAA  6E3B               	movwf	(floorf@e+1)^0,c
  5139   003BAC  BE3B               	btfsc	(floorf@e+1)^0,7,c
  5140   003BAE  EFE2  F01D         	goto	u3491
  5141   003BB2  503B               	movf	(floorf@e+1)^0,w,c
  5142   003BB4  E109               	bnz	u3490
  5143   003BB6  0E17               	movlw	23
  5144   003BB8  5C3A               	subwf	floorf@e^0,w,c
  5145   003BBA  A0D8               	btfss	status,0,c
  5146   003BBC  EFE2  F01D         	goto	u3491
  5147   003BC0  EFE4  F01D         	goto	u3490
  5148   003BC4                     u3491:
  5149   003BC4  EFEE  F01D         	goto	l3360
  5150   003BC8                     u3490:
  5151   003BC8                     l3358:
  5152   003BC8  C02C  F02C         	movff	floorf@x,?_floorf
  5153   003BCC  C02D  F02D         	movff	floorf@x+1,?_floorf+1
  5154   003BD0  C02E  F02E         	movff	floorf@x+2,?_floorf+2
  5155   003BD4  C02F  F02F         	movff	floorf@x+3,?_floorf+3
  5156   003BD8  EFB1  F01E         	goto	l1086
  5157   003BDC                     l3360:
  5158   003BDC  BE3B               	btfsc	(floorf@e+1)^0,7,c
  5159   003BDE  EFF3  F01D         	goto	u3501
  5160   003BE2  EFF5  F01D         	goto	u3500
  5161   003BE6                     u3501:
  5162   003BE6  EF65  F01E         	goto	l3370
  5163   003BEA                     u3500:
  5164   003BEA  C03A  F030         	movff	floorf@e,??_floorf
  5165   003BEE  0EFF               	movlw	255
  5166   003BF0  6E31               	movwf	(??_floorf+1)^0,c
  5167   003BF2  0EFF               	movlw	255
  5168   003BF4  6E32               	movwf	(??_floorf+2)^0,c
  5169   003BF6  0E7F               	movlw	127
  5170   003BF8  6E33               	movwf	(??_floorf+3)^0,c
  5171   003BFA  0E00               	movlw	0
  5172   003BFC  6E34               	movwf	(??_floorf+4)^0,c
  5173   003BFE                     u3515:
  5174   003BFE  6630               	tstfsz	??_floorf^0,c
  5175   003C00  EF04  F01E         	goto	u3516
  5176   003C04  EF0C  F01E         	goto	u3517
  5177   003C08                     u3516:
  5178   003C08  3434               	rlcf	(??_floorf+4)^0,w,c
  5179   003C0A  3234               	rrcf	(??_floorf+4)^0,f,c
  5180   003C0C  3233               	rrcf	(??_floorf+3)^0,f,c
  5181   003C0E  3232               	rrcf	(??_floorf+2)^0,f,c
  5182   003C10  3231               	rrcf	(??_floorf+1)^0,f,c
  5183   003C12  2E30               	decfsz	??_floorf^0,f,c
  5184   003C14  EFFF  F01D         	goto	u3515
  5185   003C18                     u3517:
  5186   003C18  C031  F036         	movff	??_floorf+1,floorf@m
  5187   003C1C  C032  F037         	movff	??_floorf+2,floorf@m+1
  5188   003C20  C033  F038         	movff	??_floorf+3,floorf@m+2
  5189   003C24  C034  F039         	movff	??_floorf+4,floorf@m+3
  5190   003C28  5036               	movf	floorf@m^0,w,c
  5191   003C2A  143C               	andwf	floorf@u^0,w,c
  5192   003C2C  6E30               	movwf	??_floorf^0,c
  5193   003C2E  5037               	movf	(floorf@m+1)^0,w,c
  5194   003C30  143D               	andwf	(floorf@u+1)^0,w,c
  5195   003C32  6E31               	movwf	(??_floorf+1)^0,c
  5196   003C34  5038               	movf	(floorf@m+2)^0,w,c
  5197   003C36  143E               	andwf	(floorf@u+2)^0,w,c
  5198   003C38  6E32               	movwf	(??_floorf+2)^0,c
  5199   003C3A  5039               	movf	(floorf@m+3)^0,w,c
  5200   003C3C  143F               	andwf	(floorf@u+3)^0,w,c
  5201   003C3E  6E33               	movwf	(??_floorf+3)^0,c
  5202   003C40  5030               	movf	??_floorf^0,w,c
  5203   003C42  1031               	iorwf	(??_floorf+1)^0,w,c
  5204   003C44  1032               	iorwf	(??_floorf+2)^0,w,c
  5205   003C46  1033               	iorwf	(??_floorf+3)^0,w,c
  5206   003C48  A4D8               	btfss	status,2,c
  5207   003C4A  EF29  F01E         	goto	u3521
  5208   003C4E  EF2B  F01E         	goto	u3520
  5209   003C52                     u3521:
  5210   003C52  EF2D  F01E         	goto	l3366
  5211   003C56                     u3520:
  5212   003C56  EFE4  F01D         	goto	l3358
  5213   003C5A                     l3366:
  5214   003C5A  C03C  F030         	movff	floorf@u,??_floorf
  5215   003C5E  C03D  F031         	movff	floorf@u+1,??_floorf+1
  5216   003C62  C03E  F032         	movff	floorf@u+2,??_floorf+2
  5217   003C66  C03F  F033         	movff	floorf@u+3,??_floorf+3
  5218   003C6A  0E20               	movlw	32
  5219   003C6C  EF3D  F01E         	goto	u3530
  5220   003C70                     u3535:
  5221   003C70  90D8               	bcf	status,0,c
  5222   003C72  3233               	rrcf	(??_floorf+3)^0,f,c
  5223   003C74  3232               	rrcf	(??_floorf+2)^0,f,c
  5224   003C76  3231               	rrcf	(??_floorf+1)^0,f,c
  5225   003C78  3230               	rrcf	??_floorf^0,f,c
  5226   003C7A                     u3530:
  5227   003C7A  2EE8               	decfsz	wreg,f,c
  5228   003C7C  EF38  F01E         	goto	u3535
  5229   003C80  5030               	movf	??_floorf^0,w,c
  5230   003C82  1031               	iorwf	(??_floorf+1)^0,w,c
  5231   003C84  1032               	iorwf	(??_floorf+2)^0,w,c
  5232   003C86  1033               	iorwf	(??_floorf+3)^0,w,c
  5233   003C88  B4D8               	btfsc	status,2,c
  5234   003C8A  EF49  F01E         	goto	u3541
  5235   003C8E  EF4B  F01E         	goto	u3540
  5236   003C92                     u3541:
  5237   003C92  EF53  F01E         	goto	l1089
  5238   003C96                     u3540:
  5239   003C96  5036               	movf	floorf@m^0,w,c
  5240   003C98  263C               	addwf	floorf@u^0,f,c
  5241   003C9A  5037               	movf	(floorf@m+1)^0,w,c
  5242   003C9C  223D               	addwfc	(floorf@u+1)^0,f,c
  5243   003C9E  5038               	movf	(floorf@m+2)^0,w,c
  5244   003CA0  223E               	addwfc	(floorf@u+2)^0,f,c
  5245   003CA2  5039               	movf	(floorf@m+3)^0,w,c
  5246   003CA4  223F               	addwfc	(floorf@u+3)^0,f,c
  5247   003CA6                     l1089:
  5248   003CA6  1C36               	comf	floorf@m^0,w,c
  5249   003CA8  6E30               	movwf	??_floorf^0,c
  5250   003CAA  1C37               	comf	(floorf@m+1)^0,w,c
  5251   003CAC  6E31               	movwf	(??_floorf+1)^0,c
  5252   003CAE  1C38               	comf	(floorf@m+2)^0,w,c
  5253   003CB0  6E32               	movwf	(??_floorf+2)^0,c
  5254   003CB2  1C39               	comf	(floorf@m+3)^0,w,c
  5255   003CB4  6E33               	movwf	(??_floorf+3)^0,c
  5256   003CB6  5030               	movf	??_floorf^0,w,c
  5257   003CB8  163C               	andwf	floorf@u^0,f,c
  5258   003CBA  5031               	movf	(??_floorf+1)^0,w,c
  5259   003CBC  163D               	andwf	(floorf@u+1)^0,f,c
  5260   003CBE  5032               	movf	(??_floorf+2)^0,w,c
  5261   003CC0  163E               	andwf	(floorf@u+2)^0,f,c
  5262   003CC2  5033               	movf	(??_floorf+3)^0,w,c
  5263   003CC4  163F               	andwf	(floorf@u+3)^0,f,c
  5264   003CC6  EFA9  F01E         	goto	l3378
  5265   003CCA                     l3370:
  5266   003CCA  C03C  F030         	movff	floorf@u,??_floorf
  5267   003CCE  C03D  F031         	movff	floorf@u+1,??_floorf+1
  5268   003CD2  C03E  F032         	movff	floorf@u+2,??_floorf+2
  5269   003CD6  C03F  F033         	movff	floorf@u+3,??_floorf+3
  5270   003CDA  0E20               	movlw	32
  5271   003CDC  EF75  F01E         	goto	u3550
  5272   003CE0                     u3555:
  5273   003CE0  90D8               	bcf	status,0,c
  5274   003CE2  3233               	rrcf	(??_floorf+3)^0,f,c
  5275   003CE4  3232               	rrcf	(??_floorf+2)^0,f,c
  5276   003CE6  3231               	rrcf	(??_floorf+1)^0,f,c
  5277   003CE8  3230               	rrcf	??_floorf^0,f,c
  5278   003CEA                     u3550:
  5279   003CEA  2EE8               	decfsz	wreg,f,c
  5280   003CEC  EF70  F01E         	goto	u3555
  5281   003CF0  5030               	movf	??_floorf^0,w,c
  5282   003CF2  1031               	iorwf	(??_floorf+1)^0,w,c
  5283   003CF4  1032               	iorwf	(??_floorf+2)^0,w,c
  5284   003CF6  1033               	iorwf	(??_floorf+3)^0,w,c
  5285   003CF8  A4D8               	btfss	status,2,c
  5286   003CFA  EF81  F01E         	goto	u3561
  5287   003CFE  EF83  F01E         	goto	u3560
  5288   003D02                     u3561:
  5289   003D02  EF8D  F01E         	goto	l3374
  5290   003D06                     u3560:
  5291   003D06  0E00               	movlw	0
  5292   003D08  6E3C               	movwf	floorf@u^0,c
  5293   003D0A  0E00               	movlw	0
  5294   003D0C  6E3D               	movwf	(floorf@u+1)^0,c
  5295   003D0E  0E00               	movlw	0
  5296   003D10  6E3E               	movwf	(floorf@u+2)^0,c
  5297   003D12  0E00               	movlw	0
  5298   003D14  6E3F               	movwf	(floorf@u+3)^0,c
  5299   003D16  EFA9  F01E         	goto	l3378
  5300   003D1A                     l3374:
  5301   003D1A  90D8               	bcf	status,0,c
  5302   003D1C  343C               	rlcf	floorf@u^0,w,c
  5303   003D1E  6E30               	movwf	??_floorf^0,c
  5304   003D20  343D               	rlcf	(floorf@u+1)^0,w,c
  5305   003D22  6E31               	movwf	(??_floorf+1)^0,c
  5306   003D24  343E               	rlcf	(floorf@u+2)^0,w,c
  5307   003D26  6E32               	movwf	(??_floorf+2)^0,c
  5308   003D28  343F               	rlcf	(floorf@u+3)^0,w,c
  5309   003D2A  6E33               	movwf	(??_floorf+3)^0,c
  5310   003D2C  5030               	movf	??_floorf^0,w,c
  5311   003D2E  1031               	iorwf	(??_floorf+1)^0,w,c
  5312   003D30  1032               	iorwf	(??_floorf+2)^0,w,c
  5313   003D32  1033               	iorwf	(??_floorf+3)^0,w,c
  5314   003D34  B4D8               	btfsc	status,2,c
  5315   003D36  EF9F  F01E         	goto	u3571
  5316   003D3A  EFA1  F01E         	goto	u3570
  5317   003D3E                     u3571:
  5318   003D3E  EFA9  F01E         	goto	l3378
  5319   003D42                     u3570:
  5320   003D42  0E00               	movlw	0
  5321   003D44  6E3C               	movwf	floorf@u^0,c
  5322   003D46  0E00               	movlw	0
  5323   003D48  6E3D               	movwf	(floorf@u+1)^0,c
  5324   003D4A  0E80               	movlw	128
  5325   003D4C  6E3E               	movwf	(floorf@u+2)^0,c
  5326   003D4E  0EBF               	movlw	191
  5327   003D50  6E3F               	movwf	(floorf@u+3)^0,c
  5328   003D52                     l3378:
  5329   003D52  C03C  F02C         	movff	floorf@u,?_floorf
  5330   003D56  C03D  F02D         	movff	floorf@u+1,?_floorf+1
  5331   003D5A  C03E  F02E         	movff	floorf@u+2,?_floorf+2
  5332   003D5E  C03F  F02F         	movff	floorf@u+3,?_floorf+3
  5333   003D62                     l1086:
  5334   003D62  0012               	return		;funcret
  5335   003D64                     __end_of_floorf:
  5336                           	callstack 0
  5337                           
  5338 ;; *************** function ___fpclassifyf *****************
  5339 ;; Defined at:
  5340 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__fpclassifyf.c"
  5341 ;; Parameters:    Size  Location     Type
  5342 ;;  x               4    4[COMRAM] float 
  5343 ;; Auto vars:     Size  Location     Type
  5344 ;;  u               4   14[COMRAM] struct .
  5345 ;;  e               2   12[COMRAM] int 
  5346 ;; Return value:  Size  Location     Type
  5347 ;;                  2    4[COMRAM] int 
  5348 ;; Registers used:
  5349 ;;		wreg, status,2, status,0
  5350 ;; Tracked objects:
  5351 ;;		On entry : 0/0
  5352 ;;		On exit  : 0/0
  5353 ;;		Unchanged: 0/0
  5354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5355 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5356 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5357 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5358 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5359 ;;Total ram usage:       14 bytes
  5360 ;; Hardware stack levels used: 1
  5361 ;; Hardware stack levels required when called: 1
  5362 ;; This function calls:
  5363 ;;		Nothing
  5364 ;; This function is called by:
  5365 ;;		_efgtoa
  5366 ;; This function uses a non-reentrant model
  5367 ;;
  5368                           
  5369                           	psect	text14
  5370   0043CA                     __ptext14:
  5371                           	callstack 0
  5372   0043CA                     ___fpclassifyf:
  5373                           	callstack 24
  5374   0043CA  C058  F00F         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5375   0043CE  C059  F010         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5376   0043D2  C05A  F011         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5377   0043D6  C05B  F012         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5378   0043DA  C005  F00F         	movff	___fpclassifyf@x,___fpclassifyf@u
  5379   0043DE  C006  F010         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5380   0043E2  C007  F011         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5381   0043E6  C008  F012         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5382   0043EA  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  5383   0043EE  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5384   0043F2  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5385   0043F6  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5386   0043FA  0E18               	movlw	24
  5387   0043FC  EF05  F022         	goto	u3390
  5388   004400                     u3395:
  5389   004400  90D8               	bcf	status,0,c
  5390   004402  320C               	rrcf	(??___fpclassifyf+3)^0,f,c
  5391   004404  320B               	rrcf	(??___fpclassifyf+2)^0,f,c
  5392   004406  320A               	rrcf	(??___fpclassifyf+1)^0,f,c
  5393   004408  3209               	rrcf	??___fpclassifyf^0,f,c
  5394   00440A                     u3390:
  5395   00440A  2EE8               	decfsz	wreg,f,c
  5396   00440C  EF00  F022         	goto	u3395
  5397   004410  5009               	movf	??___fpclassifyf^0,w,c
  5398   004412  6E0D               	movwf	___fpclassifyf@e^0,c
  5399   004414  6A0E               	clrf	(___fpclassifyf@e+1)^0,c
  5400   004416  500D               	movf	___fpclassifyf@e^0,w,c
  5401   004418  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5402   00441A  A4D8               	btfss	status,2,c
  5403   00441C  EF12  F022         	goto	u3401
  5404   004420  EF14  F022         	goto	u3400
  5405   004424                     u3401:
  5406   004424  EF34  F022         	goto	l3332
  5407   004428                     u3400:
  5408   004428  90D8               	bcf	status,0,c
  5409   00442A  340F               	rlcf	___fpclassifyf@u^0,w,c
  5410   00442C  6E09               	movwf	??___fpclassifyf^0,c
  5411   00442E  3410               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5412   004430  6E0A               	movwf	(??___fpclassifyf+1)^0,c
  5413   004432  3411               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5414   004434  6E0B               	movwf	(??___fpclassifyf+2)^0,c
  5415   004436  3412               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5416   004438  6E0C               	movwf	(??___fpclassifyf+3)^0,c
  5417   00443A  5009               	movf	??___fpclassifyf^0,w,c
  5418   00443C  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  5419   00443E  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  5420   004440  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  5421   004442  A4D8               	btfss	status,2,c
  5422   004444  EF26  F022         	goto	u3411
  5423   004448  EF28  F022         	goto	u3410
  5424   00444C                     u3411:
  5425   00444C  EF2E  F022         	goto	l3328
  5426   004450                     u3410:
  5427   004450  0E00               	movlw	0
  5428   004452  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5429   004454  0E02               	movlw	2
  5430   004456  6E05               	movwf	?___fpclassifyf^0,c
  5431   004458  EF63  F022         	goto	l1072
  5432   00445C                     l3328:
  5433   00445C  0E00               	movlw	0
  5434   00445E  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5435   004460  0E03               	movlw	3
  5436   004462  6E05               	movwf	?___fpclassifyf^0,c
  5437   004464  EF63  F022         	goto	l1072
  5438   004468                     l3332:
  5439   004468  280D               	incf	___fpclassifyf@e^0,w,c
  5440   00446A  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5441   00446C  A4D8               	btfss	status,2,c
  5442   00446E  EF3B  F022         	goto	u3421
  5443   004472  EF3D  F022         	goto	u3420
  5444   004476                     u3421:
  5445   004476  EF5F  F022         	goto	l3338
  5446   00447A                     u3420:
  5447   00447A  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  5448   00447E  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5449   004482  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5450   004486  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5451   00448A  0E09               	movlw	9
  5452   00448C                     u3435:
  5453   00448C  90D8               	bcf	status,0,c
  5454   00448E  3609               	rlcf	??___fpclassifyf^0,f,c
  5455   004490  360A               	rlcf	(??___fpclassifyf+1)^0,f,c
  5456   004492  360B               	rlcf	(??___fpclassifyf+2)^0,f,c
  5457   004494  360C               	rlcf	(??___fpclassifyf+3)^0,f,c
  5458   004496  2EE8               	decfsz	wreg,f,c
  5459   004498  EF46  F022         	goto	u3435
  5460   00449C  5009               	movf	??___fpclassifyf^0,w,c
  5461   00449E  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  5462   0044A0  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  5463   0044A2  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  5464   0044A4  B4D8               	btfsc	status,2,c
  5465   0044A6  EF57  F022         	goto	u3441
  5466   0044AA  EF5A  F022         	goto	u3440
  5467   0044AE                     u3441:
  5468   0044AE  0E01               	movlw	1
  5469   0044B0  EF5B  F022         	goto	u3450
  5470   0044B4                     u3440:
  5471   0044B4  0E00               	movlw	0
  5472   0044B6                     u3450:
  5473   0044B6  6E05               	movwf	?___fpclassifyf^0,c
  5474   0044B8  6A06               	clrf	(?___fpclassifyf+1)^0,c
  5475   0044BA  EF63  F022         	goto	l1072
  5476   0044BE                     l3338:
  5477   0044BE  0E00               	movlw	0
  5478   0044C0  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5479   0044C2  0E04               	movlw	4
  5480   0044C4  6E05               	movwf	?___fpclassifyf^0,c
  5481   0044C6                     l1072:
  5482   0044C6  0012               	return		;funcret
  5483   0044C8                     __end_of___fpclassifyf:
  5484                           	callstack 0
  5485                           
  5486 ;; *************** function ___fltol *****************
  5487 ;; Defined at:
  5488 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
  5489 ;; Parameters:    Size  Location     Type
  5490 ;;  f1              4    4[COMRAM] int 
  5491 ;; Auto vars:     Size  Location     Type
  5492 ;;  exp1            1   13[COMRAM] unsigned char 
  5493 ;;  sign1           1   12[COMRAM] unsigned char 
  5494 ;; Return value:  Size  Location     Type
  5495 ;;                  4    4[COMRAM] long 
  5496 ;; Registers used:
  5497 ;;		wreg, status,2, status,0
  5498 ;; Tracked objects:
  5499 ;;		On entry : 0/0
  5500 ;;		On exit  : 0/0
  5501 ;;		Unchanged: 0/0
  5502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5503 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5504 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5505 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5506 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5507 ;;Total ram usage:       10 bytes
  5508 ;; Hardware stack levels used: 1
  5509 ;; Hardware stack levels required when called: 1
  5510 ;; This function calls:
  5511 ;;		Nothing
  5512 ;; This function is called by:
  5513 ;;		_efgtoa
  5514 ;; This function uses a non-reentrant model
  5515 ;;
  5516                           
  5517                           	psect	text15
  5518   0041C0                     __ptext15:
  5519                           	callstack 0
  5520   0041C0                     ___fltol:
  5521                           	callstack 24
  5522   0041C0  3407               	rlcf	(___fltol@f1+2)^0,w,c
  5523   0041C2  3408               	rlcf	(___fltol@f1+3)^0,w,c
  5524   0041C4  6E0E               	movwf	___fltol@exp1^0,c
  5525   0041C6  500E               	movf	___fltol@exp1^0,w,c
  5526   0041C8  A4D8               	btfss	status,2,c
  5527   0041CA  EFE9  F020         	goto	u3291
  5528   0041CE  EFEB  F020         	goto	u3290
  5529   0041D2                     u3291:
  5530   0041D2  EFF5  F020         	goto	l3266
  5531   0041D6                     u3290:
  5532   0041D6                     l3262:
  5533   0041D6  0E00               	movlw	0
  5534   0041D8  6E05               	movwf	?___fltol^0,c
  5535   0041DA  0E00               	movlw	0
  5536   0041DC  6E06               	movwf	(?___fltol+1)^0,c
  5537   0041DE  0E00               	movlw	0
  5538   0041E0  6E07               	movwf	(?___fltol+2)^0,c
  5539   0041E2  0E00               	movlw	0
  5540   0041E4  6E08               	movwf	(?___fltol+3)^0,c
  5541   0041E6  EF62  F021         	goto	l540
  5542   0041EA                     l3266:
  5543   0041EA  C005  F009         	movff	___fltol@f1,??___fltol
  5544   0041EE  C006  F00A         	movff	___fltol@f1+1,??___fltol+1
  5545   0041F2  C007  F00B         	movff	___fltol@f1+2,??___fltol+2
  5546   0041F6  C008  F00C         	movff	___fltol@f1+3,??___fltol+3
  5547   0041FA  0E20               	movlw	32
  5548   0041FC  EF05  F021         	goto	u3300
  5549   004200                     u3305:
  5550   004200  90D8               	bcf	status,0,c
  5551   004202  320C               	rrcf	(??___fltol+3)^0,f,c
  5552   004204  320B               	rrcf	(??___fltol+2)^0,f,c
  5553   004206  320A               	rrcf	(??___fltol+1)^0,f,c
  5554   004208  3209               	rrcf	??___fltol^0,f,c
  5555   00420A                     u3300:
  5556   00420A  2EE8               	decfsz	wreg,f,c
  5557   00420C  EF00  F021         	goto	u3305
  5558   004210  5009               	movf	??___fltol^0,w,c
  5559   004212  6E0D               	movwf	___fltol@sign1^0,c
  5560   004214  8E07               	bsf	(___fltol@f1+2)^0,7,c
  5561   004216  0EFF               	movlw	255
  5562   004218  1605               	andwf	___fltol@f1^0,f,c
  5563   00421A  0EFF               	movlw	255
  5564   00421C  1606               	andwf	(___fltol@f1+1)^0,f,c
  5565   00421E  0EFF               	movlw	255
  5566   004220  1607               	andwf	(___fltol@f1+2)^0,f,c
  5567   004222  0E00               	movlw	0
  5568   004224  1608               	andwf	(___fltol@f1+3)^0,f,c
  5569   004226  0E96               	movlw	150
  5570   004228  5E0E               	subwf	___fltol@exp1^0,f,c
  5571   00422A  BE0E               	btfsc	___fltol@exp1^0,7,c
  5572   00422C  EF1C  F021         	goto	u3310
  5573   004230  EF1A  F021         	goto	u3311
  5574   004234                     u3311:
  5575   004234  EF32  F021         	goto	l3286
  5576   004238                     u3310:
  5577   004238  500E               	movf	___fltol@exp1^0,w,c
  5578   00423A  0A80               	xorlw	128
  5579   00423C  0F97               	addlw	151
  5580   00423E  B0D8               	btfsc	status,0,c
  5581   004240  EF24  F021         	goto	u3321
  5582   004244  EF26  F021         	goto	u3320
  5583   004248                     u3321:
  5584   004248  EF28  F021         	goto	l3282
  5585   00424C                     u3320:
  5586   00424C  EFEB  F020         	goto	l3262
  5587   004250                     l3282:
  5588   004250  90D8               	bcf	status,0,c
  5589   004252  3208               	rrcf	(___fltol@f1+3)^0,f,c
  5590   004254  3207               	rrcf	(___fltol@f1+2)^0,f,c
  5591   004256  3206               	rrcf	(___fltol@f1+1)^0,f,c
  5592   004258  3205               	rrcf	___fltol@f1^0,f,c
  5593   00425A  3E0E               	incfsz	___fltol@exp1^0,f,c
  5594   00425C  EF28  F021         	goto	l3282
  5595   004260  EF4A  F021         	goto	l3296
  5596   004264                     l3286:
  5597   004264  0E1F               	movlw	31
  5598   004266  640E               	cpfsgt	___fltol@exp1^0,c
  5599   004268  EF38  F021         	goto	u3331
  5600   00426C  EF3A  F021         	goto	u3330
  5601   004270                     u3331:
  5602   004270  EF42  F021         	goto	l3294
  5603   004274                     u3330:
  5604   004274  EFEB  F020         	goto	l3262
  5605   004278                     l3292:
  5606   004278  90D8               	bcf	status,0,c
  5607   00427A  3605               	rlcf	___fltol@f1^0,f,c
  5608   00427C  3606               	rlcf	(___fltol@f1+1)^0,f,c
  5609   00427E  3607               	rlcf	(___fltol@f1+2)^0,f,c
  5610   004280  3608               	rlcf	(___fltol@f1+3)^0,f,c
  5611   004282  060E               	decf	___fltol@exp1^0,f,c
  5612   004284                     l3294:
  5613   004284  500E               	movf	___fltol@exp1^0,w,c
  5614   004286  A4D8               	btfss	status,2,c
  5615   004288  EF48  F021         	goto	u3341
  5616   00428C  EF4A  F021         	goto	u3340
  5617   004290                     u3341:
  5618   004290  EF3C  F021         	goto	l3292
  5619   004294                     u3340:
  5620   004294                     l3296:
  5621   004294  500D               	movf	___fltol@sign1^0,w,c
  5622   004296  B4D8               	btfsc	status,2,c
  5623   004298  EF50  F021         	goto	u3351
  5624   00429C  EF52  F021         	goto	u3350
  5625   0042A0                     u3351:
  5626   0042A0  EF5A  F021         	goto	l3300
  5627   0042A4                     u3350:
  5628   0042A4  1E08               	comf	(___fltol@f1+3)^0,f,c
  5629   0042A6  1E07               	comf	(___fltol@f1+2)^0,f,c
  5630   0042A8  1E06               	comf	(___fltol@f1+1)^0,f,c
  5631   0042AA  6C05               	negf	___fltol@f1^0,c
  5632   0042AC  0E00               	movlw	0
  5633   0042AE  2206               	addwfc	(___fltol@f1+1)^0,f,c
  5634   0042B0  2207               	addwfc	(___fltol@f1+2)^0,f,c
  5635   0042B2  2208               	addwfc	(___fltol@f1+3)^0,f,c
  5636   0042B4                     l3300:
  5637   0042B4  C005  F005         	movff	___fltol@f1,?___fltol
  5638   0042B8  C006  F006         	movff	___fltol@f1+1,?___fltol+1
  5639   0042BC  C007  F007         	movff	___fltol@f1+2,?___fltol+2
  5640   0042C0  C008  F008         	movff	___fltol@f1+3,?___fltol+3
  5641   0042C4                     l540:
  5642   0042C4  0012               	return		;funcret
  5643   0042C6                     __end_of___fltol:
  5644                           	callstack 0
  5645                           
  5646 ;; *************** function ___flsub *****************
  5647 ;; Defined at:
  5648 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  5649 ;; Parameters:    Size  Location     Type
  5650 ;;  b               4   68[COMRAM] long 
  5651 ;;  a               4   72[COMRAM] long 
  5652 ;; Auto vars:     Size  Location     Type
  5653 ;;		None
  5654 ;; Return value:  Size  Location     Type
  5655 ;;                  4   68[COMRAM] long 
  5656 ;; Registers used:
  5657 ;;		wreg, status,2, status,0, cstack
  5658 ;; Tracked objects:
  5659 ;;		On entry : 0/0
  5660 ;;		On exit  : 0/0
  5661 ;;		Unchanged: 0/0
  5662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5663 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5666 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5667 ;;Total ram usage:        8 bytes
  5668 ;; Hardware stack levels used: 1
  5669 ;; Hardware stack levels required when called: 2
  5670 ;; This function calls:
  5671 ;;		___fladd
  5672 ;; This function is called by:
  5673 ;;		_efgtoa
  5674 ;; This function uses a non-reentrant model
  5675 ;;
  5676                           
  5677                           	psect	text16
  5678   004D1E                     __ptext16:
  5679                           	callstack 0
  5680   004D1E                     ___flsub:
  5681                           	callstack 23
  5682   004D1E  0E00               	movlw	0
  5683   004D20  1A49               	xorwf	___flsub@a^0,f,c
  5684   004D22  0E00               	movlw	0
  5685   004D24  1A4A               	xorwf	(___flsub@a+1)^0,f,c
  5686   004D26  0E00               	movlw	0
  5687   004D28  1A4B               	xorwf	(___flsub@a+2)^0,f,c
  5688   004D2A  0E80               	movlw	128
  5689   004D2C  1A4C               	xorwf	(___flsub@a+3)^0,f,c
  5690   004D2E  C045  F005         	movff	___flsub@b,___fladd@b
  5691   004D32  C046  F006         	movff	___flsub@b+1,___fladd@b+1
  5692   004D36  C047  F007         	movff	___flsub@b+2,___fladd@b+2
  5693   004D3A  C048  F008         	movff	___flsub@b+3,___fladd@b+3
  5694   004D3E  C049  F009         	movff	___flsub@a,___fladd@a
  5695   004D42  C04A  F00A         	movff	___flsub@a+1,___fladd@a+1
  5696   004D46  C04B  F00B         	movff	___flsub@a+2,___fladd@a+2
  5697   004D4A  C04C  F00C         	movff	___flsub@a+3,___fladd@a+3
  5698   004D4E  EC08  F015         	call	___fladd	;wreg free
  5699   004D52  C005  F045         	movff	?___fladd,?___flsub
  5700   004D56  C006  F046         	movff	?___fladd+1,?___flsub+1
  5701   004D5A  C007  F047         	movff	?___fladd+2,?___flsub+2
  5702   004D5E  C008  F048         	movff	?___fladd+3,?___flsub+3
  5703   004D62  0012               	return		;funcret
  5704   004D64                     __end_of___flsub:
  5705                           	callstack 0
  5706                           
  5707 ;; *************** function ___fladd *****************
  5708 ;; Defined at:
  5709 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  5710 ;; Parameters:    Size  Location     Type
  5711 ;;  b               4    4[COMRAM] long 
  5712 ;;  a               4    8[COMRAM] long 
  5713 ;; Auto vars:     Size  Location     Type
  5714 ;;  grs             1   19[COMRAM] unsigned char 
  5715 ;;  bexp            1   18[COMRAM] unsigned char 
  5716 ;;  aexp            1   17[COMRAM] unsigned char 
  5717 ;;  signs           1   16[COMRAM] unsigned char 
  5718 ;; Return value:  Size  Location     Type
  5719 ;;                  4    4[COMRAM] unsigned char 
  5720 ;; Registers used:
  5721 ;;		wreg, status,2, status,0
  5722 ;; Tracked objects:
  5723 ;;		On entry : 0/0
  5724 ;;		On exit  : 0/0
  5725 ;;		Unchanged: 0/0
  5726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5727 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5728 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5729 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5730 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5731 ;;Total ram usage:       16 bytes
  5732 ;; Hardware stack levels used: 1
  5733 ;; Hardware stack levels required when called: 1
  5734 ;; This function calls:
  5735 ;;		Nothing
  5736 ;; This function is called by:
  5737 ;;		___flsub
  5738 ;;		_efgtoa
  5739 ;; This function uses a non-reentrant model
  5740 ;;
  5741                           
  5742                           	psect	text17
  5743   002A10                     __ptext17:
  5744                           	callstack 0
  5745   002A10                     ___fladd:
  5746                           	callstack 23
  5747   002A10  5008               	movf	(___fladd@b+3)^0,w,c
  5748   002A12  0B80               	andlw	128
  5749   002A14  6E11               	movwf	___fladd@signs^0,c
  5750   002A16  5008               	movf	(___fladd@b+3)^0,w,c
  5751   002A18  2408               	addwf	(___fladd@b+3)^0,w,c
  5752   002A1A  6E13               	movwf	___fladd@bexp^0,c
  5753   002A1C  AE07               	btfss	(___fladd@b+2)^0,7,c
  5754   002A1E  EF13  F015         	goto	u2261
  5755   002A22  EF15  F015         	goto	u2260
  5756   002A26                     u2261:
  5757   002A26  EF16  F015         	goto	l2668
  5758   002A2A                     u2260:
  5759   002A2A  8013               	bsf	___fladd@bexp^0,0,c
  5760   002A2C                     l2668:
  5761   002A2C  5013               	movf	___fladd@bexp^0,w,c
  5762   002A2E  B4D8               	btfsc	status,2,c
  5763   002A30  EF1C  F015         	goto	u2271
  5764   002A34  EF1E  F015         	goto	u2270
  5765   002A38                     u2271:
  5766   002A38  EF32  F015         	goto	l2678
  5767   002A3C                     u2270:
  5768   002A3C  2813               	incf	___fladd@bexp^0,w,c
  5769   002A3E  A4D8               	btfss	status,2,c
  5770   002A40  EF24  F015         	goto	u2281
  5771   002A44  EF26  F015         	goto	u2280
  5772   002A48                     u2281:
  5773   002A48  EF2E  F015         	goto	l2674
  5774   002A4C                     u2280:
  5775   002A4C  0E00               	movlw	0
  5776   002A4E  6E05               	movwf	___fladd@b^0,c
  5777   002A50  0E00               	movlw	0
  5778   002A52  6E06               	movwf	(___fladd@b+1)^0,c
  5779   002A54  0E00               	movlw	0
  5780   002A56  6E07               	movwf	(___fladd@b+2)^0,c
  5781   002A58  0E00               	movlw	0
  5782   002A5A  6E08               	movwf	(___fladd@b+3)^0,c
  5783   002A5C                     l2674:
  5784   002A5C  8E07               	bsf	(___fladd@b+2)^0,7,c
  5785   002A5E  6A08               	clrf	(___fladd@b+3)^0,c
  5786   002A60  EF3A  F015         	goto	l2680
  5787   002A64                     l2678:
  5788   002A64  0E00               	movlw	0
  5789   002A66  6E05               	movwf	___fladd@b^0,c
  5790   002A68  0E00               	movlw	0
  5791   002A6A  6E06               	movwf	(___fladd@b+1)^0,c
  5792   002A6C  0E00               	movlw	0
  5793   002A6E  6E07               	movwf	(___fladd@b+2)^0,c
  5794   002A70  0E00               	movlw	0
  5795   002A72  6E08               	movwf	(___fladd@b+3)^0,c
  5796   002A74                     l2680:
  5797   002A74  500C               	movf	(___fladd@a+3)^0,w,c
  5798   002A76  0B80               	andlw	128
  5799   002A78  6E12               	movwf	___fladd@aexp^0,c
  5800   002A7A  5011               	movf	___fladd@signs^0,w,c
  5801   002A7C  1812               	xorwf	___fladd@aexp^0,w,c
  5802   002A7E  B4D8               	btfsc	status,2,c
  5803   002A80  EF44  F015         	goto	u2291
  5804   002A84  EF46  F015         	goto	u2290
  5805   002A88                     u2291:
  5806   002A88  EF47  F015         	goto	l2686
  5807   002A8C                     u2290:
  5808   002A8C  8C11               	bsf	___fladd@signs^0,6,c
  5809   002A8E                     l2686:
  5810   002A8E  500C               	movf	(___fladd@a+3)^0,w,c
  5811   002A90  240C               	addwf	(___fladd@a+3)^0,w,c
  5812   002A92  6E12               	movwf	___fladd@aexp^0,c
  5813   002A94  AE0B               	btfss	(___fladd@a+2)^0,7,c
  5814   002A96  EF4F  F015         	goto	u2301
  5815   002A9A  EF51  F015         	goto	u2300
  5816   002A9E                     u2301:
  5817   002A9E  EF52  F015         	goto	l2692
  5818   002AA2                     u2300:
  5819   002AA2  8012               	bsf	___fladd@aexp^0,0,c
  5820   002AA4                     l2692:
  5821   002AA4  5012               	movf	___fladd@aexp^0,w,c
  5822   002AA6  B4D8               	btfsc	status,2,c
  5823   002AA8  EF58  F015         	goto	u2311
  5824   002AAC  EF5A  F015         	goto	u2310
  5825   002AB0                     u2311:
  5826   002AB0  EF6E  F015         	goto	l2702
  5827   002AB4                     u2310:
  5828   002AB4  2812               	incf	___fladd@aexp^0,w,c
  5829   002AB6  A4D8               	btfss	status,2,c
  5830   002AB8  EF60  F015         	goto	u2321
  5831   002ABC  EF62  F015         	goto	u2320
  5832   002AC0                     u2321:
  5833   002AC0  EF6A  F015         	goto	l2698
  5834   002AC4                     u2320:
  5835   002AC4  0E00               	movlw	0
  5836   002AC6  6E09               	movwf	___fladd@a^0,c
  5837   002AC8  0E00               	movlw	0
  5838   002ACA  6E0A               	movwf	(___fladd@a+1)^0,c
  5839   002ACC  0E00               	movlw	0
  5840   002ACE  6E0B               	movwf	(___fladd@a+2)^0,c
  5841   002AD0  0E00               	movlw	0
  5842   002AD2  6E0C               	movwf	(___fladd@a+3)^0,c
  5843   002AD4                     l2698:
  5844   002AD4  8E0B               	bsf	(___fladd@a+2)^0,7,c
  5845   002AD6  6A0C               	clrf	(___fladd@a+3)^0,c
  5846   002AD8  EF76  F015         	goto	l2704
  5847   002ADC                     l2702:
  5848   002ADC  0E00               	movlw	0
  5849   002ADE  6E09               	movwf	___fladd@a^0,c
  5850   002AE0  0E00               	movlw	0
  5851   002AE2  6E0A               	movwf	(___fladd@a+1)^0,c
  5852   002AE4  0E00               	movlw	0
  5853   002AE6  6E0B               	movwf	(___fladd@a+2)^0,c
  5854   002AE8  0E00               	movlw	0
  5855   002AEA  6E0C               	movwf	(___fladd@a+3)^0,c
  5856   002AEC                     l2704:
  5857   002AEC  5013               	movf	___fladd@bexp^0,w,c
  5858   002AEE  5C12               	subwf	___fladd@aexp^0,w,c
  5859   002AF0  B0D8               	btfsc	status,0,c
  5860   002AF2  EF7D  F015         	goto	u2331
  5861   002AF6  EF7F  F015         	goto	u2330
  5862   002AFA                     u2331:
  5863   002AFA  EFA6  F015         	goto	l2740
  5864   002AFE                     u2330:
  5865   002AFE  AC11               	btfss	___fladd@signs^0,6,c
  5866   002B00  EF84  F015         	goto	u2341
  5867   002B04  EF86  F015         	goto	u2340
  5868   002B08                     u2341:
  5869   002B08  EF88  F015         	goto	l2710
  5870   002B0C                     u2340:
  5871   002B0C  0E80               	movlw	128
  5872   002B0E  1A11               	xorwf	___fladd@signs^0,f,c
  5873   002B10                     l2710:
  5874   002B10  C013  F014         	movff	___fladd@bexp,___fladd@grs
  5875   002B14  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  5876   002B18  C014  F012         	movff	___fladd@grs,___fladd@aexp
  5877   002B1C  C005  F014         	movff	___fladd@b,___fladd@grs
  5878   002B20  C009  F005         	movff	___fladd@a,___fladd@b
  5879   002B24  C014  F009         	movff	___fladd@grs,___fladd@a
  5880   002B28  C006  F014         	movff	___fladd@b+1,___fladd@grs
  5881   002B2C  C00A  F006         	movff	___fladd@a+1,___fladd@b+1
  5882   002B30  C014  F00A         	movff	___fladd@grs,___fladd@a+1
  5883   002B34  C007  F014         	movff	___fladd@b+2,___fladd@grs
  5884   002B38  C00B  F007         	movff	___fladd@a+2,___fladd@b+2
  5885   002B3C  C014  F00B         	movff	___fladd@grs,___fladd@a+2
  5886   002B40  C008  F014         	movff	___fladd@b+3,___fladd@grs
  5887   002B44  C00C  F008         	movff	___fladd@a+3,___fladd@b+3
  5888   002B48  C014  F00C         	movff	___fladd@grs,___fladd@a+3
  5889   002B4C                     l2740:
  5890   002B4C  6A14               	clrf	___fladd@grs^0,c
  5891   002B4E  5013               	movf	___fladd@bexp^0,w,c
  5892   002B50  C012  F00D         	movff	___fladd@aexp,??___fladd
  5893   002B54  6A0E               	clrf	(??___fladd+1)^0,c
  5894   002B56  5E0D               	subwf	??___fladd^0,f,c
  5895   002B58  0E00               	movlw	0
  5896   002B5A  5A0E               	subwfb	(??___fladd+1)^0,f,c
  5897   002B5C  BE0E               	btfsc	(??___fladd+1)^0,7,c
  5898   002B5E  EFBA  F015         	goto	u2351
  5899   002B62  500E               	movf	(??___fladd+1)^0,w,c
  5900   002B64  E109               	bnz	u2350
  5901   002B66  0E1A               	movlw	26
  5902   002B68  5C0D               	subwf	??___fladd^0,w,c
  5903   002B6A  A0D8               	btfss	status,0,c
  5904   002B6C  EFBA  F015         	goto	u2351
  5905   002B70  EFBC  F015         	goto	u2350
  5906   002B74                     u2351:
  5907   002B74  EFF3  F015         	goto	l772
  5908   002B78                     u2350:
  5909   002B78  5005               	movf	___fladd@b^0,w,c
  5910   002B7A  1006               	iorwf	(___fladd@b+1)^0,w,c
  5911   002B7C  1007               	iorwf	(___fladd@b+2)^0,w,c
  5912   002B7E  1008               	iorwf	(___fladd@b+3)^0,w,c
  5913   002B80  A4D8               	btfss	status,2,c
  5914   002B82  EFC5  F015         	goto	u2361
  5915   002B86  EFC8  F015         	goto	u2360
  5916   002B8A                     u2361:
  5917   002B8A  0E01               	movlw	1
  5918   002B8C  EFC9  F015         	goto	u2370
  5919   002B90                     u2360:
  5920   002B90  0E00               	movlw	0
  5921   002B92                     u2370:
  5922   002B92  6E14               	movwf	___fladd@grs^0,c
  5923   002B94  0E00               	movlw	0
  5924   002B96  6E05               	movwf	___fladd@b^0,c
  5925   002B98  0E00               	movlw	0
  5926   002B9A  6E06               	movwf	(___fladd@b+1)^0,c
  5927   002B9C  0E00               	movlw	0
  5928   002B9E  6E07               	movwf	(___fladd@b+2)^0,c
  5929   002BA0  0E00               	movlw	0
  5930   002BA2  6E08               	movwf	(___fladd@b+3)^0,c
  5931   002BA4  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  5932   002BA8  EFFC  F015         	goto	l771
  5933   002BAC                     l773:
  5934   002BAC  A014               	btfss	___fladd@grs^0,0,c
  5935   002BAE  EFDB  F015         	goto	u2381
  5936   002BB2  EFDD  F015         	goto	u2380
  5937   002BB6                     u2381:
  5938   002BB6  EFE3  F015         	goto	l2750
  5939   002BBA                     u2380:
  5940   002BBA  90D8               	bcf	status,0,c
  5941   002BBC  3014               	rrcf	___fladd@grs^0,w,c
  5942   002BBE  0901               	iorlw	1
  5943   002BC0  6E14               	movwf	___fladd@grs^0,c
  5944   002BC2  EFE5  F015         	goto	l2752
  5945   002BC6                     l2750:
  5946   002BC6  90D8               	bcf	status,0,c
  5947   002BC8  3214               	rrcf	___fladd@grs^0,f,c
  5948   002BCA                     l2752:
  5949   002BCA  A005               	btfss	___fladd@b^0,0,c
  5950   002BCC  EFEA  F015         	goto	u2391
  5951   002BD0  EFEC  F015         	goto	u2390
  5952   002BD4                     u2391:
  5953   002BD4  EFED  F015         	goto	l2756
  5954   002BD8                     u2390:
  5955   002BD8  8E14               	bsf	___fladd@grs^0,7,c
  5956   002BDA                     l2756:
  5957   002BDA  3408               	rlcf	(___fladd@b+3)^0,w,c
  5958   002BDC  3208               	rrcf	(___fladd@b+3)^0,f,c
  5959   002BDE  3207               	rrcf	(___fladd@b+2)^0,f,c
  5960   002BE0  3206               	rrcf	(___fladd@b+1)^0,f,c
  5961   002BE2  3205               	rrcf	___fladd@b^0,f,c
  5962   002BE4  2A13               	incf	___fladd@bexp^0,f,c
  5963   002BE6                     l772:
  5964   002BE6  5012               	movf	___fladd@aexp^0,w,c
  5965   002BE8  5C13               	subwf	___fladd@bexp^0,w,c
  5966   002BEA  A0D8               	btfss	status,0,c
  5967   002BEC  EFFA  F015         	goto	u2401
  5968   002BF0  EFFC  F015         	goto	u2400
  5969   002BF4                     u2401:
  5970   002BF4  EFD6  F015         	goto	l773
  5971   002BF8                     u2400:
  5972   002BF8                     l771:
  5973   002BF8  BC11               	btfsc	___fladd@signs^0,6,c
  5974   002BFA  EF01  F016         	goto	u2411
  5975   002BFE  EF03  F016         	goto	u2410
  5976   002C02                     u2411:
  5977   002C02  EF43  F016         	goto	l2784
  5978   002C06                     u2410:
  5979   002C06  5013               	movf	___fladd@bexp^0,w,c
  5980   002C08  A4D8               	btfss	status,2,c
  5981   002C0A  EF09  F016         	goto	u2421
  5982   002C0E  EF0B  F016         	goto	u2420
  5983   002C12                     u2421:
  5984   002C12  EF15  F016         	goto	l2766
  5985   002C16                     u2420:
  5986   002C16  0E00               	movlw	0
  5987   002C18  6E05               	movwf	?___fladd^0,c
  5988   002C1A  0E00               	movlw	0
  5989   002C1C  6E06               	movwf	(?___fladd+1)^0,c
  5990   002C1E  0E00               	movlw	0
  5991   002C20  6E07               	movwf	(?___fladd+2)^0,c
  5992   002C22  0E00               	movlw	0
  5993   002C24  6E08               	movwf	(?___fladd+3)^0,c
  5994   002C26  EF62  F017         	goto	l780
  5995   002C2A                     l2766:
  5996   002C2A  5009               	movf	___fladd@a^0,w,c
  5997   002C2C  2605               	addwf	___fladd@b^0,f,c
  5998   002C2E  500A               	movf	(___fladd@a+1)^0,w,c
  5999   002C30  2206               	addwfc	(___fladd@b+1)^0,f,c
  6000   002C32  500B               	movf	(___fladd@a+2)^0,w,c
  6001   002C34  2207               	addwfc	(___fladd@b+2)^0,f,c
  6002   002C36  500C               	movf	(___fladd@a+3)^0,w,c
  6003   002C38  2208               	addwfc	(___fladd@b+3)^0,f,c
  6004   002C3A  A008               	btfss	(___fladd@b+3)^0,0,c
  6005   002C3C  EF22  F016         	goto	u2431
  6006   002C40  EF24  F016         	goto	u2430
  6007   002C44                     u2431:
  6008   002C44  EFD0  F016         	goto	l785
  6009   002C48                     u2430:
  6010   002C48  A014               	btfss	___fladd@grs^0,0,c
  6011   002C4A  EF29  F016         	goto	u2441
  6012   002C4E  EF2B  F016         	goto	u2440
  6013   002C52                     u2441:
  6014   002C52  EF31  F016         	goto	l2774
  6015   002C56                     u2440:
  6016   002C56  90D8               	bcf	status,0,c
  6017   002C58  3014               	rrcf	___fladd@grs^0,w,c
  6018   002C5A  0901               	iorlw	1
  6019   002C5C  6E14               	movwf	___fladd@grs^0,c
  6020   002C5E  EF33  F016         	goto	l2776
  6021   002C62                     l2774:
  6022   002C62  90D8               	bcf	status,0,c
  6023   002C64  3214               	rrcf	___fladd@grs^0,f,c
  6024   002C66                     l2776:
  6025   002C66  A005               	btfss	___fladd@b^0,0,c
  6026   002C68  EF38  F016         	goto	u2451
  6027   002C6C  EF3A  F016         	goto	u2450
  6028   002C70                     u2451:
  6029   002C70  EF3B  F016         	goto	l2780
  6030   002C74                     u2450:
  6031   002C74  8E14               	bsf	___fladd@grs^0,7,c
  6032   002C76                     l2780:
  6033   002C76  3408               	rlcf	(___fladd@b+3)^0,w,c
  6034   002C78  3208               	rrcf	(___fladd@b+3)^0,f,c
  6035   002C7A  3207               	rrcf	(___fladd@b+2)^0,f,c
  6036   002C7C  3206               	rrcf	(___fladd@b+1)^0,f,c
  6037   002C7E  3205               	rrcf	___fladd@b^0,f,c
  6038   002C80  2A13               	incf	___fladd@bexp^0,f,c
  6039   002C82  EFD0  F016         	goto	l785
  6040   002C86                     l2784:
  6041   002C86  5009               	movf	___fladd@a^0,w,c
  6042   002C88  5C05               	subwf	___fladd@b^0,w,c
  6043   002C8A  500A               	movf	(___fladd@a+1)^0,w,c
  6044   002C8C  5806               	subwfb	(___fladd@b+1)^0,w,c
  6045   002C8E  500B               	movf	(___fladd@a+2)^0,w,c
  6046   002C90  5807               	subwfb	(___fladd@b+2)^0,w,c
  6047   002C92  5008               	movf	(___fladd@b+3)^0,w,c
  6048   002C94  0A80               	xorlw	128
  6049   002C96  6E0D               	movwf	??___fladd^0,c
  6050   002C98  500C               	movf	(___fladd@a+3)^0,w,c
  6051   002C9A  0A80               	xorlw	128
  6052   002C9C  580D               	subwfb	??___fladd^0,w,c
  6053   002C9E  B0D8               	btfsc	status,0,c
  6054   002CA0  EF54  F016         	goto	u2461
  6055   002CA4  EF56  F016         	goto	u2460
  6056   002CA8                     u2461:
  6057   002CA8  EF81  F016         	goto	l2794
  6058   002CAC                     u2460:
  6059   002CAC  5005               	movf	___fladd@b^0,w,c
  6060   002CAE  5C09               	subwf	___fladd@a^0,w,c
  6061   002CB0  6E0D               	movwf	??___fladd^0,c
  6062   002CB2  5006               	movf	(___fladd@b+1)^0,w,c
  6063   002CB4  580A               	subwfb	(___fladd@a+1)^0,w,c
  6064   002CB6  6E0E               	movwf	(??___fladd+1)^0,c
  6065   002CB8  5007               	movf	(___fladd@b+2)^0,w,c
  6066   002CBA  580B               	subwfb	(___fladd@a+2)^0,w,c
  6067   002CBC  6E0F               	movwf	(??___fladd+2)^0,c
  6068   002CBE  5008               	movf	(___fladd@b+3)^0,w,c
  6069   002CC0  580C               	subwfb	(___fladd@a+3)^0,w,c
  6070   002CC2  6E10               	movwf	(??___fladd+3)^0,c
  6071   002CC4  0EFF               	movlw	255
  6072   002CC6  240D               	addwf	??___fladd^0,w,c
  6073   002CC8  6E05               	movwf	___fladd@b^0,c
  6074   002CCA  0EFF               	movlw	255
  6075   002CCC  200E               	addwfc	(??___fladd+1)^0,w,c
  6076   002CCE  6E06               	movwf	(___fladd@b+1)^0,c
  6077   002CD0  0EFF               	movlw	255
  6078   002CD2  200F               	addwfc	(??___fladd+2)^0,w,c
  6079   002CD4  6E07               	movwf	(___fladd@b+2)^0,c
  6080   002CD6  0EFF               	movlw	255
  6081   002CD8  2010               	addwfc	(??___fladd+3)^0,w,c
  6082   002CDA  6E08               	movwf	(___fladd@b+3)^0,c
  6083   002CDC  0E80               	movlw	128
  6084   002CDE  1A11               	xorwf	___fladd@signs^0,f,c
  6085   002CE0  6C14               	negf	___fladd@grs^0,c
  6086   002CE2  5014               	movf	___fladd@grs^0,w,c
  6087   002CE4  A4D8               	btfss	status,2,c
  6088   002CE6  EF77  F016         	goto	u2471
  6089   002CEA  EF79  F016         	goto	u2470
  6090   002CEE                     u2471:
  6091   002CEE  EF89  F016         	goto	l788
  6092   002CF2                     u2470:
  6093   002CF2  0E01               	movlw	1
  6094   002CF4  2605               	addwf	___fladd@b^0,f,c
  6095   002CF6  0E00               	movlw	0
  6096   002CF8  2206               	addwfc	(___fladd@b+1)^0,f,c
  6097   002CFA  2207               	addwfc	(___fladd@b+2)^0,f,c
  6098   002CFC  2208               	addwfc	(___fladd@b+3)^0,f,c
  6099   002CFE  EF89  F016         	goto	l788
  6100   002D02                     l2794:
  6101   002D02  5009               	movf	___fladd@a^0,w,c
  6102   002D04  5E05               	subwf	___fladd@b^0,f,c
  6103   002D06  500A               	movf	(___fladd@a+1)^0,w,c
  6104   002D08  5A06               	subwfb	(___fladd@b+1)^0,f,c
  6105   002D0A  500B               	movf	(___fladd@a+2)^0,w,c
  6106   002D0C  5A07               	subwfb	(___fladd@b+2)^0,f,c
  6107   002D0E  500C               	movf	(___fladd@a+3)^0,w,c
  6108   002D10  5A08               	subwfb	(___fladd@b+3)^0,f,c
  6109   002D12                     l788:
  6110   002D12  5005               	movf	___fladd@b^0,w,c
  6111   002D14  1006               	iorwf	(___fladd@b+1)^0,w,c
  6112   002D16  1007               	iorwf	(___fladd@b+2)^0,w,c
  6113   002D18  1008               	iorwf	(___fladd@b+3)^0,w,c
  6114   002D1A  A4D8               	btfss	status,2,c
  6115   002D1C  EF92  F016         	goto	u2481
  6116   002D20  EF94  F016         	goto	u2480
  6117   002D24                     u2481:
  6118   002D24  EFC9  F016         	goto	l2818
  6119   002D28                     u2480:
  6120   002D28  5014               	movf	___fladd@grs^0,w,c
  6121   002D2A  A4D8               	btfss	status,2,c
  6122   002D2C  EF9A  F016         	goto	u2491
  6123   002D30  EF9C  F016         	goto	u2490
  6124   002D34                     u2491:
  6125   002D34  EFC9  F016         	goto	l2818
  6126   002D38                     u2490:
  6127   002D38  0E00               	movlw	0
  6128   002D3A  6E05               	movwf	?___fladd^0,c
  6129   002D3C  0E00               	movlw	0
  6130   002D3E  6E06               	movwf	(?___fladd+1)^0,c
  6131   002D40  0E00               	movlw	0
  6132   002D42  6E07               	movwf	(?___fladd+2)^0,c
  6133   002D44  0E00               	movlw	0
  6134   002D46  6E08               	movwf	(?___fladd+3)^0,c
  6135   002D48  EF62  F017         	goto	l780
  6136   002D4C                     l2802:
  6137   002D4C  90D8               	bcf	status,0,c
  6138   002D4E  3605               	rlcf	___fladd@b^0,f,c
  6139   002D50  3606               	rlcf	(___fladd@b+1)^0,f,c
  6140   002D52  3607               	rlcf	(___fladd@b+2)^0,f,c
  6141   002D54  3608               	rlcf	(___fladd@b+3)^0,f,c
  6142   002D56  AE14               	btfss	___fladd@grs^0,7,c
  6143   002D58  EFB0  F016         	goto	u2501
  6144   002D5C  EFB2  F016         	goto	u2500
  6145   002D60                     u2501:
  6146   002D60  EFB3  F016         	goto	l2808
  6147   002D64                     u2500:
  6148   002D64  8005               	bsf	___fladd@b^0,0,c
  6149   002D66                     l2808:
  6150   002D66  A014               	btfss	___fladd@grs^0,0,c
  6151   002D68  EFB8  F016         	goto	u2511
  6152   002D6C  EFBA  F016         	goto	u2510
  6153   002D70                     u2511:
  6154   002D70  EFBE  F016         	goto	l2812
  6155   002D74                     u2510:
  6156   002D74  80D8               	bsf	status,0,c
  6157   002D76  3614               	rlcf	___fladd@grs^0,f,c
  6158   002D78  EFC0  F016         	goto	l2814
  6159   002D7C                     l2812:
  6160   002D7C  90D8               	bcf	status,0,c
  6161   002D7E  3614               	rlcf	___fladd@grs^0,f,c
  6162   002D80                     l2814:
  6163   002D80  5013               	movf	___fladd@bexp^0,w,c
  6164   002D82  B4D8               	btfsc	status,2,c
  6165   002D84  EFC6  F016         	goto	u2521
  6166   002D88  EFC8  F016         	goto	u2520
  6167   002D8C                     u2521:
  6168   002D8C  EFC9  F016         	goto	l2818
  6169   002D90                     u2520:
  6170   002D90  0613               	decf	___fladd@bexp^0,f,c
  6171   002D92                     l2818:
  6172   002D92  AE07               	btfss	(___fladd@b+2)^0,7,c
  6173   002D94  EFCE  F016         	goto	u2531
  6174   002D98  EFD0  F016         	goto	u2530
  6175   002D9C                     u2531:
  6176   002D9C  EFA6  F016         	goto	l2802
  6177   002DA0                     u2530:
  6178   002DA0                     l785:
  6179   002DA0  6A12               	clrf	___fladd@aexp^0,c
  6180   002DA2  AE14               	btfss	___fladd@grs^0,7,c
  6181   002DA4  EFD6  F016         	goto	u2541
  6182   002DA8  EFD8  F016         	goto	u2540
  6183   002DAC                     u2541:
  6184   002DAC  EFF0  F016         	goto	l797
  6185   002DB0                     u2540:
  6186   002DB0  C014  F00D         	movff	___fladd@grs,??___fladd
  6187   002DB4  0E7F               	movlw	127
  6188   002DB6  160D               	andwf	??___fladd^0,f,c
  6189   002DB8  B4D8               	btfsc	status,2,c
  6190   002DBA  EFE1  F016         	goto	u2551
  6191   002DBE  EFE3  F016         	goto	u2550
  6192   002DC2                     u2551:
  6193   002DC2  EFE7  F016         	goto	l798
  6194   002DC6                     u2550:
  6195   002DC6                     l2822:
  6196   002DC6  0E01               	movlw	1
  6197   002DC8  6E12               	movwf	___fladd@aexp^0,c
  6198   002DCA  EFF0  F016         	goto	l797
  6199   002DCE                     l798:
  6200   002DCE  A005               	btfss	___fladd@b^0,0,c
  6201   002DD0  EFEC  F016         	goto	u2561
  6202   002DD4  EFEE  F016         	goto	u2560
  6203   002DD8                     u2561:
  6204   002DD8  EFF0  F016         	goto	l797
  6205   002DDC                     u2560:
  6206   002DDC  EFE3  F016         	goto	l2822
  6207   002DE0                     l797:
  6208   002DE0  5012               	movf	___fladd@aexp^0,w,c
  6209   002DE2  B4D8               	btfsc	status,2,c
  6210   002DE4  EFF6  F016         	goto	u2571
  6211   002DE8  EFF8  F016         	goto	u2570
  6212   002DEC                     u2571:
  6213   002DEC  EF23  F017         	goto	l2834
  6214   002DF0                     u2570:
  6215   002DF0  0E01               	movlw	1
  6216   002DF2  2605               	addwf	___fladd@b^0,f,c
  6217   002DF4  0E00               	movlw	0
  6218   002DF6  2206               	addwfc	(___fladd@b+1)^0,f,c
  6219   002DF8  2207               	addwfc	(___fladd@b+2)^0,f,c
  6220   002DFA  2208               	addwfc	(___fladd@b+3)^0,f,c
  6221   002DFC  A008               	btfss	(___fladd@b+3)^0,0,c
  6222   002DFE  EF03  F017         	goto	u2581
  6223   002E02  EF05  F017         	goto	u2580
  6224   002E06                     u2581:
  6225   002E06  EF23  F017         	goto	l2834
  6226   002E0A                     u2580:
  6227   002E0A  C005  F00D         	movff	___fladd@b,??___fladd
  6228   002E0E  C006  F00E         	movff	___fladd@b+1,??___fladd+1
  6229   002E12  C007  F00F         	movff	___fladd@b+2,??___fladd+2
  6230   002E16  C008  F010         	movff	___fladd@b+3,??___fladd+3
  6231   002E1A  3410               	rlcf	(??___fladd+3)^0,w,c
  6232   002E1C  3210               	rrcf	(??___fladd+3)^0,f,c
  6233   002E1E  320F               	rrcf	(??___fladd+2)^0,f,c
  6234   002E20  320E               	rrcf	(??___fladd+1)^0,f,c
  6235   002E22  320D               	rrcf	??___fladd^0,f,c
  6236   002E24  C00D  F005         	movff	??___fladd,___fladd@b
  6237   002E28  C00E  F006         	movff	??___fladd+1,___fladd@b+1
  6238   002E2C  C00F  F007         	movff	??___fladd+2,___fladd@b+2
  6239   002E30  C010  F008         	movff	??___fladd+3,___fladd@b+3
  6240   002E34  2813               	incf	___fladd@bexp^0,w,c
  6241   002E36  B4D8               	btfsc	status,2,c
  6242   002E38  EF20  F017         	goto	u2591
  6243   002E3C  EF22  F017         	goto	u2590
  6244   002E40                     u2591:
  6245   002E40  EF23  F017         	goto	l2834
  6246   002E44                     u2590:
  6247   002E44  2A13               	incf	___fladd@bexp^0,f,c
  6248   002E46                     l2834:
  6249   002E46  2813               	incf	___fladd@bexp^0,w,c
  6250   002E48  B4D8               	btfsc	status,2,c
  6251   002E4A  EF29  F017         	goto	u2601
  6252   002E4E  EF2B  F017         	goto	u2600
  6253   002E52                     u2601:
  6254   002E52  EF33  F017         	goto	l2838
  6255   002E56                     u2600:
  6256   002E56  5013               	movf	___fladd@bexp^0,w,c
  6257   002E58  A4D8               	btfss	status,2,c
  6258   002E5A  EF31  F017         	goto	u2611
  6259   002E5E  EF33  F017         	goto	u2610
  6260   002E62                     u2611:
  6261   002E62  EF44  F017         	goto	l804
  6262   002E66                     u2610:
  6263   002E66                     l2838:
  6264   002E66  0E00               	movlw	0
  6265   002E68  6E05               	movwf	___fladd@b^0,c
  6266   002E6A  0E00               	movlw	0
  6267   002E6C  6E06               	movwf	(___fladd@b+1)^0,c
  6268   002E6E  0E00               	movlw	0
  6269   002E70  6E07               	movwf	(___fladd@b+2)^0,c
  6270   002E72  0E00               	movlw	0
  6271   002E74  6E08               	movwf	(___fladd@b+3)^0,c
  6272   002E76  5013               	movf	___fladd@bexp^0,w,c
  6273   002E78  A4D8               	btfss	status,2,c
  6274   002E7A  EF41  F017         	goto	u2621
  6275   002E7E  EF43  F017         	goto	u2620
  6276   002E82                     u2621:
  6277   002E82  EF44  F017         	goto	l804
  6278   002E86                     u2620:
  6279   002E86  6A11               	clrf	___fladd@signs^0,c
  6280   002E88                     l804:
  6281   002E88  A013               	btfss	___fladd@bexp^0,0,c
  6282   002E8A  EF49  F017         	goto	u2631
  6283   002E8E  EF4B  F017         	goto	u2630
  6284   002E92                     u2631:
  6285   002E92  EF4E  F017         	goto	l2844
  6286   002E96                     u2630:
  6287   002E96  8E07               	bsf	(___fladd@b+2)^0,7,c
  6288   002E98  EF4F  F017         	goto	l2846
  6289   002E9C                     l2844:
  6290   002E9C  9E07               	bcf	(___fladd@b+2)^0,7,c
  6291   002E9E                     l2846:
  6292   002E9E  90D8               	bcf	status,0,c
  6293   002EA0  3013               	rrcf	___fladd@bexp^0,w,c
  6294   002EA2  6E08               	movwf	(___fladd@b+3)^0,c
  6295   002EA4  AE11               	btfss	___fladd@signs^0,7,c
  6296   002EA6  EF57  F017         	goto	u2641
  6297   002EAA  EF59  F017         	goto	u2640
  6298   002EAE                     u2641:
  6299   002EAE  EF5A  F017         	goto	l2852
  6300   002EB2                     u2640:
  6301   002EB2  8E08               	bsf	(___fladd@b+3)^0,7,c
  6302   002EB4                     l2852:
  6303   002EB4  C005  F005         	movff	___fladd@b,?___fladd
  6304   002EB8  C006  F006         	movff	___fladd@b+1,?___fladd+1
  6305   002EBC  C007  F007         	movff	___fladd@b+2,?___fladd+2
  6306   002EC0  C008  F008         	movff	___fladd@b+3,?___fladd+3
  6307   002EC4                     l780:
  6308   002EC4  0012               	return		;funcret
  6309   002EC6                     __end_of___fladd:
  6310                           	callstack 0
  6311                           
  6312 ;; *************** function ___flneg *****************
  6313 ;; Defined at:
  6314 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flneg.c"
  6315 ;; Parameters:    Size  Location     Type
  6316 ;;  f1              4    4[COMRAM] unsigned char 
  6317 ;; Auto vars:     Size  Location     Type
  6318 ;;		None
  6319 ;; Return value:  Size  Location     Type
  6320 ;;                  4    4[COMRAM] unsigned char 
  6321 ;; Registers used:
  6322 ;;		wreg, status,2, status,0
  6323 ;; Tracked objects:
  6324 ;;		On entry : 0/0
  6325 ;;		On exit  : 0/0
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6328 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6331 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6332 ;;Total ram usage:        4 bytes
  6333 ;; Hardware stack levels used: 1
  6334 ;; Hardware stack levels required when called: 1
  6335 ;; This function calls:
  6336 ;;		Nothing
  6337 ;; This function is called by:
  6338 ;;		_efgtoa
  6339 ;; This function uses a non-reentrant model
  6340 ;;
  6341                           
  6342                           	psect	text18
  6343   004E62                     __ptext18:
  6344                           	callstack 0
  6345   004E62                     ___flneg:
  6346                           	callstack 24
  6347   004E62  5005               	movf	___flneg@f1^0,w,c
  6348   004E64  1006               	iorwf	(___flneg@f1+1)^0,w,c
  6349   004E66  1007               	iorwf	(___flneg@f1+2)^0,w,c
  6350   004E68  1008               	iorwf	(___flneg@f1+3)^0,w,c
  6351   004E6A  B4D8               	btfsc	status,2,c
  6352   004E6C  EF3A  F027         	goto	u3281
  6353   004E70  EF3C  F027         	goto	u3280
  6354   004E74                     u3281:
  6355   004E74  EF44  F027         	goto	l3256
  6356   004E78                     u3280:
  6357   004E78  0E00               	movlw	0
  6358   004E7A  1A05               	xorwf	___flneg@f1^0,f,c
  6359   004E7C  0E00               	movlw	0
  6360   004E7E  1A06               	xorwf	(___flneg@f1+1)^0,f,c
  6361   004E80  0E00               	movlw	0
  6362   004E82  1A07               	xorwf	(___flneg@f1+2)^0,f,c
  6363   004E84  0E80               	movlw	128
  6364   004E86  1A08               	xorwf	(___flneg@f1+3)^0,f,c
  6365   004E88                     l3256:
  6366   004E88  C005  F005         	movff	___flneg@f1,?___flneg
  6367   004E8C  C006  F006         	movff	___flneg@f1+1,?___flneg+1
  6368   004E90  C007  F007         	movff	___flneg@f1+2,?___flneg+2
  6369   004E94  C008  F008         	movff	___flneg@f1+3,?___flneg+3
  6370   004E98  0012               	return		;funcret
  6371   004E9A                     __end_of___flneg:
  6372                           	callstack 0
  6373                           
  6374 ;; *************** function ___flmul *****************
  6375 ;; Defined at:
  6376 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
  6377 ;; Parameters:    Size  Location     Type
  6378 ;;  b               4   43[COMRAM] unsigned char 
  6379 ;;  a               4   47[COMRAM] unsigned char 
  6380 ;; Auto vars:     Size  Location     Type
  6381 ;;  prod            4   62[COMRAM] struct .
  6382 ;;  grs             4   56[COMRAM] unsigned long 
  6383 ;;  temp            2   66[COMRAM] struct .
  6384 ;;  bexp            1   61[COMRAM] unsigned char 
  6385 ;;  aexp            1   60[COMRAM] unsigned char 
  6386 ;;  sign            1   55[COMRAM] unsigned char 
  6387 ;; Return value:  Size  Location     Type
  6388 ;;                  4   43[COMRAM] unsigned char 
  6389 ;; Registers used:
  6390 ;;		wreg, status,2, status,0, prodl, prodh
  6391 ;; Tracked objects:
  6392 ;;		On entry : 0/0
  6393 ;;		On exit  : 0/0
  6394 ;;		Unchanged: 0/0
  6395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6396 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6397 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6398 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6399 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6400 ;;Total ram usage:       25 bytes
  6401 ;; Hardware stack levels used: 1
  6402 ;; Hardware stack levels required when called: 1
  6403 ;; This function calls:
  6404 ;;		Nothing
  6405 ;; This function is called by:
  6406 ;;		_readADC
  6407 ;;		_efgtoa
  6408 ;; This function uses a non-reentrant model
  6409 ;;
  6410                           
  6411                           	psect	text19
  6412   002EC6                     __ptext19:
  6413                           	callstack 0
  6414   002EC6                     ___flmul:
  6415                           	callstack 24
  6416   002EC6  502F               	movf	(___flmul@b+3)^0,w,c
  6417   002EC8  0B80               	andlw	128
  6418   002ECA  6E38               	movwf	___flmul@sign^0,c
  6419   002ECC  502F               	movf	(___flmul@b+3)^0,w,c
  6420   002ECE  242F               	addwf	(___flmul@b+3)^0,w,c
  6421   002ED0  6E3E               	movwf	___flmul@bexp^0,c
  6422   002ED2  AE2E               	btfss	(___flmul@b+2)^0,7,c
  6423   002ED4  EF6E  F017         	goto	u2891
  6424   002ED8  EF70  F017         	goto	u2890
  6425   002EDC                     u2891:
  6426   002EDC  EF71  F017         	goto	l3006
  6427   002EE0                     u2890:
  6428   002EE0  803E               	bsf	___flmul@bexp^0,0,c
  6429   002EE2                     l3006:
  6430   002EE2  503E               	movf	___flmul@bexp^0,w,c
  6431   002EE4  B4D8               	btfsc	status,2,c
  6432   002EE6  EF77  F017         	goto	u2901
  6433   002EEA  EF79  F017         	goto	u2900
  6434   002EEE                     u2901:
  6435   002EEE  EF8C  F017         	goto	l3014
  6436   002EF2                     u2900:
  6437   002EF2  283E               	incf	___flmul@bexp^0,w,c
  6438   002EF4  A4D8               	btfss	status,2,c
  6439   002EF6  EF7F  F017         	goto	u2911
  6440   002EFA  EF81  F017         	goto	u2910
  6441   002EFE                     u2911:
  6442   002EFE  EF89  F017         	goto	l3012
  6443   002F02                     u2910:
  6444   002F02  0E00               	movlw	0
  6445   002F04  6E2C               	movwf	___flmul@b^0,c
  6446   002F06  0E00               	movlw	0
  6447   002F08  6E2D               	movwf	(___flmul@b+1)^0,c
  6448   002F0A  0E00               	movlw	0
  6449   002F0C  6E2E               	movwf	(___flmul@b+2)^0,c
  6450   002F0E  0E00               	movlw	0
  6451   002F10  6E2F               	movwf	(___flmul@b+3)^0,c
  6452   002F12                     l3012:
  6453   002F12  8E2E               	bsf	(___flmul@b+2)^0,7,c
  6454   002F14  EF94  F017         	goto	l3016
  6455   002F18                     l3014:
  6456   002F18  0E00               	movlw	0
  6457   002F1A  6E2C               	movwf	___flmul@b^0,c
  6458   002F1C  0E00               	movlw	0
  6459   002F1E  6E2D               	movwf	(___flmul@b+1)^0,c
  6460   002F20  0E00               	movlw	0
  6461   002F22  6E2E               	movwf	(___flmul@b+2)^0,c
  6462   002F24  0E00               	movlw	0
  6463   002F26  6E2F               	movwf	(___flmul@b+3)^0,c
  6464   002F28                     l3016:
  6465   002F28  5033               	movf	(___flmul@a+3)^0,w,c
  6466   002F2A  0B80               	andlw	128
  6467   002F2C  1A38               	xorwf	___flmul@sign^0,f,c
  6468   002F2E  5033               	movf	(___flmul@a+3)^0,w,c
  6469   002F30  2433               	addwf	(___flmul@a+3)^0,w,c
  6470   002F32  6E3D               	movwf	___flmul@aexp^0,c
  6471   002F34  AE32               	btfss	(___flmul@a+2)^0,7,c
  6472   002F36  EF9F  F017         	goto	u2921
  6473   002F3A  EFA1  F017         	goto	u2920
  6474   002F3E                     u2921:
  6475   002F3E  EFA2  F017         	goto	l3024
  6476   002F42                     u2920:
  6477   002F42  803D               	bsf	___flmul@aexp^0,0,c
  6478   002F44                     l3024:
  6479   002F44  503D               	movf	___flmul@aexp^0,w,c
  6480   002F46  B4D8               	btfsc	status,2,c
  6481   002F48  EFA8  F017         	goto	u2931
  6482   002F4C  EFAA  F017         	goto	u2930
  6483   002F50                     u2931:
  6484   002F50  EFBD  F017         	goto	l3032
  6485   002F54                     u2930:
  6486   002F54  283D               	incf	___flmul@aexp^0,w,c
  6487   002F56  A4D8               	btfss	status,2,c
  6488   002F58  EFB0  F017         	goto	u2941
  6489   002F5C  EFB2  F017         	goto	u2940
  6490   002F60                     u2941:
  6491   002F60  EFBA  F017         	goto	l3030
  6492   002F64                     u2940:
  6493   002F64  0E00               	movlw	0
  6494   002F66  6E30               	movwf	___flmul@a^0,c
  6495   002F68  0E00               	movlw	0
  6496   002F6A  6E31               	movwf	(___flmul@a+1)^0,c
  6497   002F6C  0E00               	movlw	0
  6498   002F6E  6E32               	movwf	(___flmul@a+2)^0,c
  6499   002F70  0E00               	movlw	0
  6500   002F72  6E33               	movwf	(___flmul@a+3)^0,c
  6501   002F74                     l3030:
  6502   002F74  8E32               	bsf	(___flmul@a+2)^0,7,c
  6503   002F76  EFC5  F017         	goto	l857
  6504   002F7A                     l3032:
  6505   002F7A  0E00               	movlw	0
  6506   002F7C  6E30               	movwf	___flmul@a^0,c
  6507   002F7E  0E00               	movlw	0
  6508   002F80  6E31               	movwf	(___flmul@a+1)^0,c
  6509   002F82  0E00               	movlw	0
  6510   002F84  6E32               	movwf	(___flmul@a+2)^0,c
  6511   002F86  0E00               	movlw	0
  6512   002F88  6E33               	movwf	(___flmul@a+3)^0,c
  6513   002F8A                     l857:
  6514   002F8A  503D               	movf	___flmul@aexp^0,w,c
  6515   002F8C  B4D8               	btfsc	status,2,c
  6516   002F8E  EFCB  F017         	goto	u2951
  6517   002F92  EFCD  F017         	goto	u2950
  6518   002F96                     u2951:
  6519   002F96  EFD5  F017         	goto	l3036
  6520   002F9A                     u2950:
  6521   002F9A  503E               	movf	___flmul@bexp^0,w,c
  6522   002F9C  A4D8               	btfss	status,2,c
  6523   002F9E  EFD3  F017         	goto	u2961
  6524   002FA2  EFD5  F017         	goto	u2960
  6525   002FA6                     u2961:
  6526   002FA6  EFDF  F017         	goto	l3040
  6527   002FAA                     u2960:
  6528   002FAA                     l3036:
  6529   002FAA  0E00               	movlw	0
  6530   002FAC  6E2C               	movwf	?___flmul^0,c
  6531   002FAE  0E00               	movlw	0
  6532   002FB0  6E2D               	movwf	(?___flmul+1)^0,c
  6533   002FB2  0E00               	movlw	0
  6534   002FB4  6E2E               	movwf	(?___flmul+2)^0,c
  6535   002FB6  0E00               	movlw	0
  6536   002FB8  6E2F               	movwf	(?___flmul+3)^0,c
  6537   002FBA  EF87  F019         	goto	l861
  6538   002FBE                     l3040:
  6539   002FBE  5032               	movf	(___flmul@a+2)^0,w,c
  6540   002FC0  022C               	mulwf	___flmul@b^0,c
  6541   002FC2  006F FFCC  F043    	movff	prodl,___flmul@temp
  6542   002FC8  006F FFD0  F044    	movff	prodh,___flmul@temp+1
  6543   002FCE  5043               	movf	___flmul@temp^0,w,c
  6544   002FD0  6E39               	movwf	___flmul@grs^0,c
  6545   002FD2  6A3A               	clrf	(___flmul@grs+1)^0,c
  6546   002FD4  6A3B               	clrf	(___flmul@grs+2)^0,c
  6547   002FD6  6A3C               	clrf	(___flmul@grs+3)^0,c
  6548   002FD8  5044               	movf	(___flmul@temp+1)^0,w,c
  6549   002FDA  6E3F               	movwf	___flmul@prod^0,c
  6550   002FDC  6A40               	clrf	(___flmul@prod+1)^0,c
  6551   002FDE  6A41               	clrf	(___flmul@prod+2)^0,c
  6552   002FE0  6A42               	clrf	(___flmul@prod+3)^0,c
  6553   002FE2  5031               	movf	(___flmul@a+1)^0,w,c
  6554   002FE4  022D               	mulwf	(___flmul@b+1)^0,c
  6555   002FE6  006F FFCC  F043    	movff	prodl,___flmul@temp
  6556   002FEC  006F FFD0  F044    	movff	prodh,___flmul@temp+1
  6557   002FF2  5043               	movf	___flmul@temp^0,w,c
  6558   002FF4  2639               	addwf	___flmul@grs^0,f,c
  6559   002FF6  0E00               	movlw	0
  6560   002FF8  223A               	addwfc	(___flmul@grs+1)^0,f,c
  6561   002FFA  223B               	addwfc	(___flmul@grs+2)^0,f,c
  6562   002FFC  223C               	addwfc	(___flmul@grs+3)^0,f,c
  6563   002FFE  5044               	movf	(___flmul@temp+1)^0,w,c
  6564   003000  263F               	addwf	___flmul@prod^0,f,c
  6565   003002  0E00               	movlw	0
  6566   003004  2240               	addwfc	(___flmul@prod+1)^0,f,c
  6567   003006  2241               	addwfc	(___flmul@prod+2)^0,f,c
  6568   003008  2242               	addwfc	(___flmul@prod+3)^0,f,c
  6569   00300A  5030               	movf	___flmul@a^0,w,c
  6570   00300C  022E               	mulwf	(___flmul@b+2)^0,c
  6571   00300E  006F FFCC  F043    	movff	prodl,___flmul@temp
  6572   003014  006F FFD0  F044    	movff	prodh,___flmul@temp+1
  6573   00301A  5043               	movf	___flmul@temp^0,w,c
  6574   00301C  2639               	addwf	___flmul@grs^0,f,c
  6575   00301E  0E00               	movlw	0
  6576   003020  223A               	addwfc	(___flmul@grs+1)^0,f,c
  6577   003022  223B               	addwfc	(___flmul@grs+2)^0,f,c
  6578   003024  223C               	addwfc	(___flmul@grs+3)^0,f,c
  6579   003026  5044               	movf	(___flmul@temp+1)^0,w,c
  6580   003028  263F               	addwf	___flmul@prod^0,f,c
  6581   00302A  0E00               	movlw	0
  6582   00302C  2240               	addwfc	(___flmul@prod+1)^0,f,c
  6583   00302E  2241               	addwfc	(___flmul@prod+2)^0,f,c
  6584   003030  2242               	addwfc	(___flmul@prod+3)^0,f,c
  6585   003032  C03B  F03C         	movff	___flmul@grs+2,___flmul@grs+3
  6586   003036  C03A  F03B         	movff	___flmul@grs+1,___flmul@grs+2
  6587   00303A  C039  F03A         	movff	___flmul@grs,___flmul@grs+1
  6588   00303E  6A39               	clrf	___flmul@grs^0,c
  6589   003040  5030               	movf	___flmul@a^0,w,c
  6590   003042  022D               	mulwf	(___flmul@b+1)^0,c
  6591   003044  006F FFCC  F043    	movff	prodl,___flmul@temp
  6592   00304A  006F FFD0  F044    	movff	prodh,___flmul@temp+1
  6593   003050  5043               	movf	___flmul@temp^0,w,c
  6594   003052  2639               	addwf	___flmul@grs^0,f,c
  6595   003054  5044               	movf	(___flmul@temp+1)^0,w,c
  6596   003056  223A               	addwfc	(___flmul@grs+1)^0,f,c
  6597   003058  0E00               	movlw	0
  6598   00305A  223B               	addwfc	(___flmul@grs+2)^0,f,c
  6599   00305C  0E00               	movlw	0
  6600   00305E  223C               	addwfc	(___flmul@grs+3)^0,f,c
  6601   003060  5031               	movf	(___flmul@a+1)^0,w,c
  6602   003062  022C               	mulwf	___flmul@b^0,c
  6603   003064  006F FFCC  F043    	movff	prodl,___flmul@temp
  6604   00306A  006F FFD0  F044    	movff	prodh,___flmul@temp+1
  6605   003070  5043               	movf	___flmul@temp^0,w,c
  6606   003072  2639               	addwf	___flmul@grs^0,f,c
  6607   003074  5044               	movf	(___flmul@temp+1)^0,w,c
  6608   003076  223A               	addwfc	(___flmul@grs+1)^0,f,c
  6609   003078  0E00               	movlw	0
  6610   00307A  223B               	addwfc	(___flmul@grs+2)^0,f,c
  6611   00307C  0E00               	movlw	0
  6612   00307E  223C               	addwfc	(___flmul@grs+3)^0,f,c
  6613   003080  C03B  F03C         	movff	___flmul@grs+2,___flmul@grs+3
  6614   003084  C03A  F03B         	movff	___flmul@grs+1,___flmul@grs+2
  6615   003088  C039  F03A         	movff	___flmul@grs,___flmul@grs+1
  6616   00308C  6A39               	clrf	___flmul@grs^0,c
  6617   00308E  5030               	movf	___flmul@a^0,w,c
  6618   003090  022C               	mulwf	___flmul@b^0,c
  6619   003092  006F FFCC  F043    	movff	prodl,___flmul@temp
  6620   003098  006F FFD0  F044    	movff	prodh,___flmul@temp+1
  6621   00309E  5043               	movf	___flmul@temp^0,w,c
  6622   0030A0  2639               	addwf	___flmul@grs^0,f,c
  6623   0030A2  5044               	movf	(___flmul@temp+1)^0,w,c
  6624   0030A4  223A               	addwfc	(___flmul@grs+1)^0,f,c
  6625   0030A6  0E00               	movlw	0
  6626   0030A8  223B               	addwfc	(___flmul@grs+2)^0,f,c
  6627   0030AA  0E00               	movlw	0
  6628   0030AC  223C               	addwfc	(___flmul@grs+3)^0,f,c
  6629   0030AE  5032               	movf	(___flmul@a+2)^0,w,c
  6630   0030B0  022D               	mulwf	(___flmul@b+1)^0,c
  6631   0030B2  006F FFCC  F043    	movff	prodl,___flmul@temp
  6632   0030B8  006F FFD0  F044    	movff	prodh,___flmul@temp+1
  6633   0030BE  5043               	movf	___flmul@temp^0,w,c
  6634   0030C0  263F               	addwf	___flmul@prod^0,f,c
  6635   0030C2  5044               	movf	(___flmul@temp+1)^0,w,c
  6636   0030C4  2240               	addwfc	(___flmul@prod+1)^0,f,c
  6637   0030C6  0E00               	movlw	0
  6638   0030C8  2241               	addwfc	(___flmul@prod+2)^0,f,c
  6639   0030CA  0E00               	movlw	0
  6640   0030CC  2242               	addwfc	(___flmul@prod+3)^0,f,c
  6641   0030CE  5031               	movf	(___flmul@a+1)^0,w,c
  6642   0030D0  022E               	mulwf	(___flmul@b+2)^0,c
  6643   0030D2  006F FFCC  F043    	movff	prodl,___flmul@temp
  6644   0030D8  006F FFD0  F044    	movff	prodh,___flmul@temp+1
  6645   0030DE  5043               	movf	___flmul@temp^0,w,c
  6646   0030E0  263F               	addwf	___flmul@prod^0,f,c
  6647   0030E2  5044               	movf	(___flmul@temp+1)^0,w,c
  6648   0030E4  2240               	addwfc	(___flmul@prod+1)^0,f,c
  6649   0030E6  0E00               	movlw	0
  6650   0030E8  2241               	addwfc	(___flmul@prod+2)^0,f,c
  6651   0030EA  0E00               	movlw	0
  6652   0030EC  2242               	addwfc	(___flmul@prod+3)^0,f,c
  6653   0030EE  5032               	movf	(___flmul@a+2)^0,w,c
  6654   0030F0  022E               	mulwf	(___flmul@b+2)^0,c
  6655   0030F2  006F FFCC  F043    	movff	prodl,___flmul@temp
  6656   0030F8  006F FFD0  F044    	movff	prodh,___flmul@temp+1
  6657   0030FE  5043               	movf	___flmul@temp^0,w,c
  6658   003100  6E34               	movwf	??___flmul^0,c
  6659   003102  5044               	movf	(___flmul@temp+1)^0,w,c
  6660   003104  6E35               	movwf	(??___flmul+1)^0,c
  6661   003106  6A36               	clrf	(??___flmul+2)^0,c
  6662   003108  6A37               	clrf	(??___flmul+3)^0,c
  6663   00310A  C036  F037         	movff	??___flmul+2,??___flmul+3
  6664   00310E  C035  F036         	movff	??___flmul+1,??___flmul+2
  6665   003112  C034  F035         	movff	??___flmul,??___flmul+1
  6666   003116  6A34               	clrf	??___flmul^0,c
  6667   003118  5034               	movf	??___flmul^0,w,c
  6668   00311A  263F               	addwf	___flmul@prod^0,f,c
  6669   00311C  5035               	movf	(??___flmul+1)^0,w,c
  6670   00311E  2240               	addwfc	(___flmul@prod+1)^0,f,c
  6671   003120  5036               	movf	(??___flmul+2)^0,w,c
  6672   003122  2241               	addwfc	(___flmul@prod+2)^0,f,c
  6673   003124  5037               	movf	(??___flmul+3)^0,w,c
  6674   003126  2242               	addwfc	(___flmul@prod+3)^0,f,c
  6675   003128  C039  F034         	movff	___flmul@grs,??___flmul
  6676   00312C  C03A  F035         	movff	___flmul@grs+1,??___flmul+1
  6677   003130  C03B  F036         	movff	___flmul@grs+2,??___flmul+2
  6678   003134  C03C  F037         	movff	___flmul@grs+3,??___flmul+3
  6679   003138  0E19               	movlw	25
  6680   00313A  EFA4  F018         	goto	u2970
  6681   00313E                     u2975:
  6682   00313E  90D8               	bcf	status,0,c
  6683   003140  3237               	rrcf	(??___flmul+3)^0,f,c
  6684   003142  3236               	rrcf	(??___flmul+2)^0,f,c
  6685   003144  3235               	rrcf	(??___flmul+1)^0,f,c
  6686   003146  3234               	rrcf	??___flmul^0,f,c
  6687   003148                     u2970:
  6688   003148  2EE8               	decfsz	wreg,f,c
  6689   00314A  EF9F  F018         	goto	u2975
  6690   00314E  5034               	movf	??___flmul^0,w,c
  6691   003150  263F               	addwf	___flmul@prod^0,f,c
  6692   003152  5035               	movf	(??___flmul+1)^0,w,c
  6693   003154  2240               	addwfc	(___flmul@prod+1)^0,f,c
  6694   003156  5036               	movf	(??___flmul+2)^0,w,c
  6695   003158  2241               	addwfc	(___flmul@prod+2)^0,f,c
  6696   00315A  5037               	movf	(??___flmul+3)^0,w,c
  6697   00315C  2242               	addwfc	(___flmul@prod+3)^0,f,c
  6698   00315E  C03B  F03C         	movff	___flmul@grs+2,___flmul@grs+3
  6699   003162  C03A  F03B         	movff	___flmul@grs+1,___flmul@grs+2
  6700   003166  C039  F03A         	movff	___flmul@grs,___flmul@grs+1
  6701   00316A  6A39               	clrf	___flmul@grs^0,c
  6702   00316C  503D               	movf	___flmul@aexp^0,w,c
  6703   00316E  C03E  F034         	movff	___flmul@bexp,??___flmul
  6704   003172  6A35               	clrf	(??___flmul+1)^0,c
  6705   003174  2634               	addwf	??___flmul^0,f,c
  6706   003176  0E00               	movlw	0
  6707   003178  2235               	addwfc	(??___flmul+1)^0,f,c
  6708   00317A  0E82               	movlw	130
  6709   00317C  2434               	addwf	??___flmul^0,w,c
  6710   00317E  6E43               	movwf	___flmul@temp^0,c
  6711   003180  0EFF               	movlw	255
  6712   003182  2035               	addwfc	(??___flmul+1)^0,w,c
  6713   003184  6E44               	movwf	(___flmul@temp+1)^0,c
  6714   003186  EFDA  F018         	goto	l3088
  6715   00318A                     l3082:
  6716   00318A  90D8               	bcf	status,0,c
  6717   00318C  363F               	rlcf	___flmul@prod^0,f,c
  6718   00318E  3640               	rlcf	(___flmul@prod+1)^0,f,c
  6719   003190  3641               	rlcf	(___flmul@prod+2)^0,f,c
  6720   003192  3642               	rlcf	(___flmul@prod+3)^0,f,c
  6721   003194  AE3C               	btfss	(___flmul@grs+3)^0,7,c
  6722   003196  EFCF  F018         	goto	u2981
  6723   00319A  EFD1  F018         	goto	u2980
  6724   00319E                     u2981:
  6725   00319E  EFD2  F018         	goto	l864
  6726   0031A2                     u2980:
  6727   0031A2  803F               	bsf	___flmul@prod^0,0,c
  6728   0031A4                     l864:
  6729   0031A4  90D8               	bcf	status,0,c
  6730   0031A6  3639               	rlcf	___flmul@grs^0,f,c
  6731   0031A8  363A               	rlcf	(___flmul@grs+1)^0,f,c
  6732   0031AA  363B               	rlcf	(___flmul@grs+2)^0,f,c
  6733   0031AC  363C               	rlcf	(___flmul@grs+3)^0,f,c
  6734   0031AE  0643               	decf	___flmul@temp^0,f,c
  6735   0031B0  A0D8               	btfss	status,0,c
  6736   0031B2  0644               	decf	(___flmul@temp+1)^0,f,c
  6737   0031B4                     l3088:
  6738   0031B4  AE41               	btfss	(___flmul@prod+2)^0,7,c
  6739   0031B6  EFDF  F018         	goto	u2991
  6740   0031BA  EFE1  F018         	goto	u2990
  6741   0031BE                     u2991:
  6742   0031BE  EFC5  F018         	goto	l3082
  6743   0031C2                     u2990:
  6744   0031C2  6A3D               	clrf	___flmul@aexp^0,c
  6745   0031C4  AE3C               	btfss	(___flmul@grs+3)^0,7,c
  6746   0031C6  EFE7  F018         	goto	u3001
  6747   0031CA  EFE9  F018         	goto	u3000
  6748   0031CE                     u3001:
  6749   0031CE  EF0D  F019         	goto	l866
  6750   0031D2                     u3000:
  6751   0031D2  0EFF               	movlw	255
  6752   0031D4  1439               	andwf	___flmul@grs^0,w,c
  6753   0031D6  6E34               	movwf	??___flmul^0,c
  6754   0031D8  0EFF               	movlw	255
  6755   0031DA  143A               	andwf	(___flmul@grs+1)^0,w,c
  6756   0031DC  6E35               	movwf	(??___flmul+1)^0,c
  6757   0031DE  0EFF               	movlw	255
  6758   0031E0  143B               	andwf	(___flmul@grs+2)^0,w,c
  6759   0031E2  6E36               	movwf	(??___flmul+2)^0,c
  6760   0031E4  0E7F               	movlw	127
  6761   0031E6  143C               	andwf	(___flmul@grs+3)^0,w,c
  6762   0031E8  6E37               	movwf	(??___flmul+3)^0,c
  6763   0031EA  5034               	movf	??___flmul^0,w,c
  6764   0031EC  1035               	iorwf	(??___flmul+1)^0,w,c
  6765   0031EE  1036               	iorwf	(??___flmul+2)^0,w,c
  6766   0031F0  1037               	iorwf	(??___flmul+3)^0,w,c
  6767   0031F2  B4D8               	btfsc	status,2,c
  6768   0031F4  EFFE  F018         	goto	u3011
  6769   0031F8  EF00  F019         	goto	u3010
  6770   0031FC                     u3011:
  6771   0031FC  EF04  F019         	goto	l867
  6772   003200                     u3010:
  6773   003200                     l3092:
  6774   003200  0E01               	movlw	1
  6775   003202  6E3D               	movwf	___flmul@aexp^0,c
  6776   003204  EF0D  F019         	goto	l866
  6777   003208                     l867:
  6778   003208  A03F               	btfss	___flmul@prod^0,0,c
  6779   00320A  EF09  F019         	goto	u3021
  6780   00320E  EF0B  F019         	goto	u3020
  6781   003212                     u3021:
  6782   003212  EF0D  F019         	goto	l866
  6783   003216                     u3020:
  6784   003216  EF00  F019         	goto	l3092
  6785   00321A                     l866:
  6786   00321A  503D               	movf	___flmul@aexp^0,w,c
  6787   00321C  B4D8               	btfsc	status,2,c
  6788   00321E  EF13  F019         	goto	u3031
  6789   003222  EF15  F019         	goto	u3030
  6790   003226                     u3031:
  6791   003226  EF39  F019         	goto	l3104
  6792   00322A                     u3030:
  6793   00322A  0E01               	movlw	1
  6794   00322C  263F               	addwf	___flmul@prod^0,f,c
  6795   00322E  0E00               	movlw	0
  6796   003230  2240               	addwfc	(___flmul@prod+1)^0,f,c
  6797   003232  2241               	addwfc	(___flmul@prod+2)^0,f,c
  6798   003234  2242               	addwfc	(___flmul@prod+3)^0,f,c
  6799   003236  A042               	btfss	(___flmul@prod+3)^0,0,c
  6800   003238  EF20  F019         	goto	u3041
  6801   00323C  EF22  F019         	goto	u3040
  6802   003240                     u3041:
  6803   003240  EF39  F019         	goto	l3104
  6804   003244                     u3040:
  6805   003244  C03F  F034         	movff	___flmul@prod,??___flmul
  6806   003248  C040  F035         	movff	___flmul@prod+1,??___flmul+1
  6807   00324C  C041  F036         	movff	___flmul@prod+2,??___flmul+2
  6808   003250  C042  F037         	movff	___flmul@prod+3,??___flmul+3
  6809   003254  3437               	rlcf	(??___flmul+3)^0,w,c
  6810   003256  3237               	rrcf	(??___flmul+3)^0,f,c
  6811   003258  3236               	rrcf	(??___flmul+2)^0,f,c
  6812   00325A  3235               	rrcf	(??___flmul+1)^0,f,c
  6813   00325C  3234               	rrcf	??___flmul^0,f,c
  6814   00325E  C034  F03F         	movff	??___flmul,___flmul@prod
  6815   003262  C035  F040         	movff	??___flmul+1,___flmul@prod+1
  6816   003266  C036  F041         	movff	??___flmul+2,___flmul@prod+2
  6817   00326A  C037  F042         	movff	??___flmul+3,___flmul@prod+3
  6818   00326E  4A43               	infsnz	___flmul@temp^0,f,c
  6819   003270  2A44               	incf	(___flmul@temp+1)^0,f,c
  6820   003272                     l3104:
  6821   003272  BE44               	btfsc	(___flmul@temp+1)^0,7,c
  6822   003274  EF44  F019         	goto	u3051
  6823   003278  5044               	movf	(___flmul@temp+1)^0,w,c
  6824   00327A  E108               	bnz	u3050
  6825   00327C  2843               	incf	___flmul@temp^0,w,c
  6826   00327E  A0D8               	btfss	status,0,c
  6827   003280  EF44  F019         	goto	u3051
  6828   003284  EF46  F019         	goto	u3050
  6829   003288                     u3051:
  6830   003288  EF50  F019         	goto	l3108
  6831   00328C                     u3050:
  6832   00328C  0E00               	movlw	0
  6833   00328E  6E3F               	movwf	___flmul@prod^0,c
  6834   003290  0E00               	movlw	0
  6835   003292  6E40               	movwf	(___flmul@prod+1)^0,c
  6836   003294  0E80               	movlw	128
  6837   003296  6E41               	movwf	(___flmul@prod+2)^0,c
  6838   003298  0E7F               	movlw	127
  6839   00329A  6E42               	movwf	(___flmul@prod+3)^0,c
  6840   00329C  EF7D  F019         	goto	l3122
  6841   0032A0                     l3108:
  6842   0032A0  BE44               	btfsc	(___flmul@temp+1)^0,7,c
  6843   0032A2  EF5D  F019         	goto	u3060
  6844   0032A6  5044               	movf	(___flmul@temp+1)^0,w,c
  6845   0032A8  E106               	bnz	u3061
  6846   0032AA  0443               	decf	___flmul@temp^0,w,c
  6847   0032AC  B0D8               	btfsc	status,0,c
  6848   0032AE  EF5B  F019         	goto	u3061
  6849   0032B2  EF5D  F019         	goto	u3060
  6850   0032B6                     u3061:
  6851   0032B6  EF68  F019         	goto	l874
  6852   0032BA                     u3060:
  6853   0032BA  0E00               	movlw	0
  6854   0032BC  6E3F               	movwf	___flmul@prod^0,c
  6855   0032BE  0E00               	movlw	0
  6856   0032C0  6E40               	movwf	(___flmul@prod+1)^0,c
  6857   0032C2  0E00               	movlw	0
  6858   0032C4  6E41               	movwf	(___flmul@prod+2)^0,c
  6859   0032C6  0E00               	movlw	0
  6860   0032C8  6E42               	movwf	(___flmul@prod+3)^0,c
  6861   0032CA  6A38               	clrf	___flmul@sign^0,c
  6862   0032CC  EF7D  F019         	goto	l3122
  6863   0032D0                     l874:
  6864   0032D0  C043  F03E         	movff	___flmul@temp,___flmul@bexp
  6865   0032D4  0EFF               	movlw	255
  6866   0032D6  163F               	andwf	___flmul@prod^0,f,c
  6867   0032D8  0EFF               	movlw	255
  6868   0032DA  1640               	andwf	(___flmul@prod+1)^0,f,c
  6869   0032DC  0E7F               	movlw	127
  6870   0032DE  1641               	andwf	(___flmul@prod+2)^0,f,c
  6871   0032E0  0E00               	movlw	0
  6872   0032E2  1642               	andwf	(___flmul@prod+3)^0,f,c
  6873   0032E4  A03E               	btfss	___flmul@bexp^0,0,c
  6874   0032E6  EF77  F019         	goto	u3071
  6875   0032EA  EF79  F019         	goto	u3070
  6876   0032EE                     u3071:
  6877   0032EE  EF7A  F019         	goto	l3120
  6878   0032F2                     u3070:
  6879   0032F2  8E41               	bsf	(___flmul@prod+2)^0,7,c
  6880   0032F4                     l3120:
  6881   0032F4  90D8               	bcf	status,0,c
  6882   0032F6  303E               	rrcf	___flmul@bexp^0,w,c
  6883   0032F8  6E42               	movwf	(___flmul@prod+3)^0,c
  6884   0032FA                     l3122:
  6885   0032FA  5038               	movf	___flmul@sign^0,w,c
  6886   0032FC  1242               	iorwf	(___flmul@prod+3)^0,f,c
  6887   0032FE  C03F  F02C         	movff	___flmul@prod,?___flmul
  6888   003302  C040  F02D         	movff	___flmul@prod+1,?___flmul+1
  6889   003306  C041  F02E         	movff	___flmul@prod+2,?___flmul+2
  6890   00330A  C042  F02F         	movff	___flmul@prod+3,?___flmul+3
  6891   00330E                     l861:
  6892   00330E  0012               	return		;funcret
  6893   003310                     __end_of___flmul:
  6894                           	callstack 0
  6895                           
  6896 ;; *************** function ___flge *****************
  6897 ;; Defined at:
  6898 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flge.c"
  6899 ;; Parameters:    Size  Location     Type
  6900 ;;  ff1             4   68[COMRAM] unsigned char 
  6901 ;;  ff2             4   72[COMRAM] unsigned char 
  6902 ;; Auto vars:     Size  Location     Type
  6903 ;;		None
  6904 ;; Return value:  Size  Location     Type
  6905 ;;		None               void
  6906 ;; Registers used:
  6907 ;;		wreg, status,2, status,0
  6908 ;; Tracked objects:
  6909 ;;		On entry : 0/0
  6910 ;;		On exit  : 0/0
  6911 ;;		Unchanged: 0/0
  6912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6913 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6915 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6916 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6917 ;;Total ram usage:       12 bytes
  6918 ;; Hardware stack levels used: 1
  6919 ;; Hardware stack levels required when called: 1
  6920 ;; This function calls:
  6921 ;;		Nothing
  6922 ;; This function is called by:
  6923 ;;		_efgtoa
  6924 ;; This function uses a non-reentrant model
  6925 ;;
  6926                           
  6927                           	psect	text20
  6928   0042C6                     __ptext20:
  6929                           	callstack 0
  6930   0042C6                     ___flge:
  6931                           	callstack 24
  6932   0042C6  0E00               	movlw	0
  6933   0042C8  1445               	andwf	___flge@ff1^0,w,c
  6934   0042CA  6E4D               	movwf	??___flge^0,c
  6935   0042CC  0E00               	movlw	0
  6936   0042CE  1446               	andwf	(___flge@ff1+1)^0,w,c
  6937   0042D0  6E4E               	movwf	(??___flge+1)^0,c
  6938   0042D2  0E80               	movlw	128
  6939   0042D4  1447               	andwf	(___flge@ff1+2)^0,w,c
  6940   0042D6  6E4F               	movwf	(??___flge+2)^0,c
  6941   0042D8  0E7F               	movlw	127
  6942   0042DA  1448               	andwf	(___flge@ff1+3)^0,w,c
  6943   0042DC  6E50               	movwf	(??___flge+3)^0,c
  6944   0042DE  504D               	movf	??___flge^0,w,c
  6945   0042E0  104E               	iorwf	(??___flge+1)^0,w,c
  6946   0042E2  104F               	iorwf	(??___flge+2)^0,w,c
  6947   0042E4  1050               	iorwf	(??___flge+3)^0,w,c
  6948   0042E6  A4D8               	btfss	status,2,c
  6949   0042E8  EF78  F021         	goto	u3231
  6950   0042EC  EF7A  F021         	goto	u3230
  6951   0042F0                     u3231:
  6952   0042F0  EF82  F021         	goto	l3234
  6953   0042F4                     u3230:
  6954   0042F4  0E00               	movlw	0
  6955   0042F6  6E45               	movwf	___flge@ff1^0,c
  6956   0042F8  0E00               	movlw	0
  6957   0042FA  6E46               	movwf	(___flge@ff1+1)^0,c
  6958   0042FC  0E00               	movlw	0
  6959   0042FE  6E47               	movwf	(___flge@ff1+2)^0,c
  6960   004300  0E00               	movlw	0
  6961   004302  6E48               	movwf	(___flge@ff1+3)^0,c
  6962   004304                     l3234:
  6963   004304  0E00               	movlw	0
  6964   004306  1449               	andwf	___flge@ff2^0,w,c
  6965   004308  6E4D               	movwf	??___flge^0,c
  6966   00430A  0E00               	movlw	0
  6967   00430C  144A               	andwf	(___flge@ff2+1)^0,w,c
  6968   00430E  6E4E               	movwf	(??___flge+1)^0,c
  6969   004310  0E80               	movlw	128
  6970   004312  144B               	andwf	(___flge@ff2+2)^0,w,c
  6971   004314  6E4F               	movwf	(??___flge+2)^0,c
  6972   004316  0E7F               	movlw	127
  6973   004318  144C               	andwf	(___flge@ff2+3)^0,w,c
  6974   00431A  6E50               	movwf	(??___flge+3)^0,c
  6975   00431C  504D               	movf	??___flge^0,w,c
  6976   00431E  104E               	iorwf	(??___flge+1)^0,w,c
  6977   004320  104F               	iorwf	(??___flge+2)^0,w,c
  6978   004322  1050               	iorwf	(??___flge+3)^0,w,c
  6979   004324  A4D8               	btfss	status,2,c
  6980   004326  EF97  F021         	goto	u3241
  6981   00432A  EF99  F021         	goto	u3240
  6982   00432E                     u3241:
  6983   00432E  EFA1  F021         	goto	l3238
  6984   004332                     u3240:
  6985   004332  0E00               	movlw	0
  6986   004334  6E49               	movwf	___flge@ff2^0,c
  6987   004336  0E00               	movlw	0
  6988   004338  6E4A               	movwf	(___flge@ff2+1)^0,c
  6989   00433A  0E00               	movlw	0
  6990   00433C  6E4B               	movwf	(___flge@ff2+2)^0,c
  6991   00433E  0E00               	movlw	0
  6992   004340  6E4C               	movwf	(___flge@ff2+3)^0,c
  6993   004342                     l3238:
  6994   004342  AE48               	btfss	(___flge@ff1+3)^0,7,c
  6995   004344  EFA6  F021         	goto	u3251
  6996   004348  EFA8  F021         	goto	u3250
  6997   00434C                     u3251:
  6998   00434C  EFB1  F021         	goto	l3242
  6999   004350                     u3250:
  7000   004350  6C45               	negf	___flge@ff1^0,c
  7001   004352  1E46               	comf	(___flge@ff1+1)^0,f,c
  7002   004354  B0D8               	btfsc	status,0,c
  7003   004356  2A46               	incf	(___flge@ff1+1)^0,f,c
  7004   004358  1E47               	comf	(___flge@ff1+2)^0,f,c
  7005   00435A  B0D8               	btfsc	status,0,c
  7006   00435C  2A47               	incf	(___flge@ff1+2)^0,f,c
  7007   00435E  0E80               	movlw	128
  7008   004360  5648               	subfwb	(___flge@ff1+3)^0,f,c
  7009   004362                     l3242:
  7010   004362  AE4C               	btfss	(___flge@ff2+3)^0,7,c
  7011   004364  EFB6  F021         	goto	u3261
  7012   004368  EFB8  F021         	goto	u3260
  7013   00436C                     u3261:
  7014   00436C  EFC1  F021         	goto	l508
  7015   004370                     u3260:
  7016   004370  6C49               	negf	___flge@ff2^0,c
  7017   004372  1E4A               	comf	(___flge@ff2+1)^0,f,c
  7018   004374  B0D8               	btfsc	status,0,c
  7019   004376  2A4A               	incf	(___flge@ff2+1)^0,f,c
  7020   004378  1E4B               	comf	(___flge@ff2+2)^0,f,c
  7021   00437A  B0D8               	btfsc	status,0,c
  7022   00437C  2A4B               	incf	(___flge@ff2+2)^0,f,c
  7023   00437E  0E80               	movlw	128
  7024   004380  564C               	subfwb	(___flge@ff2+3)^0,f,c
  7025   004382                     l508:
  7026   004382  0E00               	movlw	0
  7027   004384  1A45               	xorwf	___flge@ff1^0,f,c
  7028   004386  0E00               	movlw	0
  7029   004388  1A46               	xorwf	(___flge@ff1+1)^0,f,c
  7030   00438A  0E00               	movlw	0
  7031   00438C  1A47               	xorwf	(___flge@ff1+2)^0,f,c
  7032   00438E  0E80               	movlw	128
  7033   004390  1A48               	xorwf	(___flge@ff1+3)^0,f,c
  7034   004392  0E00               	movlw	0
  7035   004394  1A49               	xorwf	___flge@ff2^0,f,c
  7036   004396  0E00               	movlw	0
  7037   004398  1A4A               	xorwf	(___flge@ff2+1)^0,f,c
  7038   00439A  0E00               	movlw	0
  7039   00439C  1A4B               	xorwf	(___flge@ff2+2)^0,f,c
  7040   00439E  0E80               	movlw	128
  7041   0043A0  1A4C               	xorwf	(___flge@ff2+3)^0,f,c
  7042   0043A2  5049               	movf	___flge@ff2^0,w,c
  7043   0043A4  5C45               	subwf	___flge@ff1^0,w,c
  7044   0043A6  504A               	movf	(___flge@ff2+1)^0,w,c
  7045   0043A8  5846               	subwfb	(___flge@ff1+1)^0,w,c
  7046   0043AA  504B               	movf	(___flge@ff2+2)^0,w,c
  7047   0043AC  5847               	subwfb	(___flge@ff1+2)^0,w,c
  7048   0043AE  504C               	movf	(___flge@ff2+3)^0,w,c
  7049   0043B0  5848               	subwfb	(___flge@ff1+3)^0,w,c
  7050   0043B2  B0D8               	btfsc	status,0,c
  7051   0043B4  EFDE  F021         	goto	u3271
  7052   0043B8  EFE0  F021         	goto	u3270
  7053   0043BC                     u3271:
  7054   0043BC  EFE3  F021         	goto	l3248
  7055   0043C0                     u3270:
  7056   0043C0  90D8               	bcf	status,0,c
  7057   0043C2  EFE4  F021         	goto	l513
  7058   0043C6                     l3248:
  7059   0043C6  80D8               	bsf	status,0,c
  7060   0043C8                     l513:
  7061   0043C8  0012               	return		;funcret
  7062   0043CA                     __end_of___flge:
  7063                           	callstack 0
  7064                           
  7065 ;; *************** function ___fleq *****************
  7066 ;; Defined at:
  7067 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fleq.c"
  7068 ;; Parameters:    Size  Location     Type
  7069 ;;  ff1             4    4[COMRAM] unsigned char 
  7070 ;;  ff2             4    8[COMRAM] unsigned char 
  7071 ;; Auto vars:     Size  Location     Type
  7072 ;;		None
  7073 ;; Return value:  Size  Location     Type
  7074 ;;		None               void
  7075 ;; Registers used:
  7076 ;;		wreg, status,2, status,0
  7077 ;; Tracked objects:
  7078 ;;		On entry : 0/0
  7079 ;;		On exit  : 0/0
  7080 ;;		Unchanged: 0/0
  7081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7082 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7084 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7085 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7086 ;;Total ram usage:       12 bytes
  7087 ;; Hardware stack levels used: 1
  7088 ;; Hardware stack levels required when called: 1
  7089 ;; This function calls:
  7090 ;;		Nothing
  7091 ;; This function is called by:
  7092 ;;		_efgtoa
  7093 ;; This function uses a non-reentrant model
  7094 ;;
  7095                           
  7096                           	psect	text21
  7097   00479C                     __ptext21:
  7098                           	callstack 0
  7099   00479C                     ___fleq:
  7100                           	callstack 24
  7101   00479C  0E00               	movlw	0
  7102   00479E  1405               	andwf	___fleq@ff1^0,w,c
  7103   0047A0  6E0D               	movwf	??___fleq^0,c
  7104   0047A2  0E00               	movlw	0
  7105   0047A4  1406               	andwf	(___fleq@ff1+1)^0,w,c
  7106   0047A6  6E0E               	movwf	(??___fleq+1)^0,c
  7107   0047A8  0E80               	movlw	128
  7108   0047AA  1407               	andwf	(___fleq@ff1+2)^0,w,c
  7109   0047AC  6E0F               	movwf	(??___fleq+2)^0,c
  7110   0047AE  0E7F               	movlw	127
  7111   0047B0  1408               	andwf	(___fleq@ff1+3)^0,w,c
  7112   0047B2  6E10               	movwf	(??___fleq+3)^0,c
  7113   0047B4  500D               	movf	??___fleq^0,w,c
  7114   0047B6  100E               	iorwf	(??___fleq+1)^0,w,c
  7115   0047B8  100F               	iorwf	(??___fleq+2)^0,w,c
  7116   0047BA  1010               	iorwf	(??___fleq+3)^0,w,c
  7117   0047BC  A4D8               	btfss	status,2,c
  7118   0047BE  EFE3  F023         	goto	u3201
  7119   0047C2  EFE5  F023         	goto	u3200
  7120   0047C6                     u3201:
  7121   0047C6  EFED  F023         	goto	l3218
  7122   0047CA                     u3200:
  7123   0047CA  0E00               	movlw	0
  7124   0047CC  6E05               	movwf	___fleq@ff1^0,c
  7125   0047CE  0E00               	movlw	0
  7126   0047D0  6E06               	movwf	(___fleq@ff1+1)^0,c
  7127   0047D2  0E00               	movlw	0
  7128   0047D4  6E07               	movwf	(___fleq@ff1+2)^0,c
  7129   0047D6  0E00               	movlw	0
  7130   0047D8  6E08               	movwf	(___fleq@ff1+3)^0,c
  7131   0047DA                     l3218:
  7132   0047DA  0E00               	movlw	0
  7133   0047DC  1409               	andwf	___fleq@ff2^0,w,c
  7134   0047DE  6E0D               	movwf	??___fleq^0,c
  7135   0047E0  0E00               	movlw	0
  7136   0047E2  140A               	andwf	(___fleq@ff2+1)^0,w,c
  7137   0047E4  6E0E               	movwf	(??___fleq+1)^0,c
  7138   0047E6  0E80               	movlw	128
  7139   0047E8  140B               	andwf	(___fleq@ff2+2)^0,w,c
  7140   0047EA  6E0F               	movwf	(??___fleq+2)^0,c
  7141   0047EC  0E7F               	movlw	127
  7142   0047EE  140C               	andwf	(___fleq@ff2+3)^0,w,c
  7143   0047F0  6E10               	movwf	(??___fleq+3)^0,c
  7144   0047F2  500D               	movf	??___fleq^0,w,c
  7145   0047F4  100E               	iorwf	(??___fleq+1)^0,w,c
  7146   0047F6  100F               	iorwf	(??___fleq+2)^0,w,c
  7147   0047F8  1010               	iorwf	(??___fleq+3)^0,w,c
  7148   0047FA  A4D8               	btfss	status,2,c
  7149   0047FC  EF02  F024         	goto	u3211
  7150   004800  EF04  F024         	goto	u3210
  7151   004804                     u3211:
  7152   004804  EF0C  F024         	goto	l3222
  7153   004808                     u3210:
  7154   004808  0E00               	movlw	0
  7155   00480A  6E09               	movwf	___fleq@ff2^0,c
  7156   00480C  0E00               	movlw	0
  7157   00480E  6E0A               	movwf	(___fleq@ff2+1)^0,c
  7158   004810  0E00               	movlw	0
  7159   004812  6E0B               	movwf	(___fleq@ff2+2)^0,c
  7160   004814  0E00               	movlw	0
  7161   004816  6E0C               	movwf	(___fleq@ff2+3)^0,c
  7162   004818                     l3222:
  7163   004818  5009               	movf	___fleq@ff2^0,w,c
  7164   00481A  1805               	xorwf	___fleq@ff1^0,w,c
  7165   00481C  E10F               	bnz	u3220
  7166   00481E  500A               	movf	(___fleq@ff2+1)^0,w,c
  7167   004820  1806               	xorwf	(___fleq@ff1+1)^0,w,c
  7168   004822  E10C               	bnz	u3220
  7169   004824  500B               	movf	(___fleq@ff2+2)^0,w,c
  7170   004826  1807               	xorwf	(___fleq@ff1+2)^0,w,c
  7171   004828  E109               	bnz	u3220
  7172   00482A  500C               	movf	(___fleq@ff2+3)^0,w,c
  7173   00482C  1808               	xorwf	(___fleq@ff1+3)^0,w,c
  7174   00482E  B4D8               	btfsc	status,2,c
  7175   004830  EF1C  F024         	goto	u3221
  7176   004834  EF1E  F024         	goto	u3220
  7177   004838                     u3221:
  7178   004838  EF21  F024         	goto	l3226
  7179   00483C                     u3220:
  7180   00483C  90D8               	bcf	status,0,c
  7181   00483E  EF22  F024         	goto	l502
  7182   004842                     l3226:
  7183   004842  80D8               	bsf	status,0,c
  7184   004844                     l502:
  7185   004844  0012               	return		;funcret
  7186   004846                     __end_of___fleq:
  7187                           	callstack 0
  7188                           
  7189 ;; *************** function ___fldiv *****************
  7190 ;; Defined at:
  7191 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
  7192 ;; Parameters:    Size  Location     Type
  7193 ;;  b               4   18[COMRAM] unsigned char 
  7194 ;;  a               4   22[COMRAM] unsigned char 
  7195 ;; Auto vars:     Size  Location     Type
  7196 ;;  grs             4   37[COMRAM] unsigned long 
  7197 ;;  rem             4   30[COMRAM] unsigned long 
  7198 ;;  new_exp         2   35[COMRAM] short 
  7199 ;;  aexp            1   42[COMRAM] unsigned char 
  7200 ;;  bexp            1   41[COMRAM] unsigned char 
  7201 ;;  sign            1   34[COMRAM] unsigned char 
  7202 ;; Return value:  Size  Location     Type
  7203 ;;                  4   18[COMRAM] unsigned char 
  7204 ;; Registers used:
  7205 ;;		wreg, status,2, status,0
  7206 ;; Tracked objects:
  7207 ;;		On entry : 0/0
  7208 ;;		On exit  : 0/0
  7209 ;;		Unchanged: 0/0
  7210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7211 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7212 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7213 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7214 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7215 ;;Total ram usage:       25 bytes
  7216 ;; Hardware stack levels used: 1
  7217 ;; Hardware stack levels required when called: 1
  7218 ;; This function calls:
  7219 ;;		Nothing
  7220 ;; This function is called by:
  7221 ;;		_readADC
  7222 ;;		_efgtoa
  7223 ;; This function uses a non-reentrant model
  7224 ;;
  7225                           
  7226                           	psect	text22
  7227   003310                     __ptext22:
  7228                           	callstack 0
  7229   003310                     ___fldiv:
  7230                           	callstack 24
  7231   003310  5016               	movf	(___fldiv@b+3)^0,w,c
  7232   003312  0B80               	andlw	128
  7233   003314  6E23               	movwf	___fldiv@sign^0,c
  7234   003316  5016               	movf	(___fldiv@b+3)^0,w,c
  7235   003318  2416               	addwf	(___fldiv@b+3)^0,w,c
  7236   00331A  6E2A               	movwf	___fldiv@bexp^0,c
  7237   00331C  AE15               	btfss	(___fldiv@b+2)^0,7,c
  7238   00331E  EF93  F019         	goto	u2661
  7239   003322  EF95  F019         	goto	u2660
  7240   003326                     u2661:
  7241   003326  EF96  F019         	goto	l2870
  7242   00332A                     u2660:
  7243   00332A  802A               	bsf	___fldiv@bexp^0,0,c
  7244   00332C                     l2870:
  7245   00332C  502A               	movf	___fldiv@bexp^0,w,c
  7246   00332E  B4D8               	btfsc	status,2,c
  7247   003330  EF9C  F019         	goto	u2671
  7248   003334  EF9E  F019         	goto	u2670
  7249   003338                     u2671:
  7250   003338  EFB2  F019         	goto	l2880
  7251   00333C                     u2670:
  7252   00333C  282A               	incf	___fldiv@bexp^0,w,c
  7253   00333E  A4D8               	btfss	status,2,c
  7254   003340  EFA4  F019         	goto	u2681
  7255   003344  EFA6  F019         	goto	u2680
  7256   003348                     u2681:
  7257   003348  EFAE  F019         	goto	l2876
  7258   00334C                     u2680:
  7259   00334C  0E00               	movlw	0
  7260   00334E  6E13               	movwf	___fldiv@b^0,c
  7261   003350  0E00               	movlw	0
  7262   003352  6E14               	movwf	(___fldiv@b+1)^0,c
  7263   003354  0E00               	movlw	0
  7264   003356  6E15               	movwf	(___fldiv@b+2)^0,c
  7265   003358  0E00               	movlw	0
  7266   00335A  6E16               	movwf	(___fldiv@b+3)^0,c
  7267   00335C                     l2876:
  7268   00335C  8E15               	bsf	(___fldiv@b+2)^0,7,c
  7269   00335E  6A16               	clrf	(___fldiv@b+3)^0,c
  7270   003360  EFBA  F019         	goto	l2882
  7271   003364                     l2880:
  7272   003364  0E00               	movlw	0
  7273   003366  6E13               	movwf	___fldiv@b^0,c
  7274   003368  0E00               	movlw	0
  7275   00336A  6E14               	movwf	(___fldiv@b+1)^0,c
  7276   00336C  0E00               	movlw	0
  7277   00336E  6E15               	movwf	(___fldiv@b+2)^0,c
  7278   003370  0E00               	movlw	0
  7279   003372  6E16               	movwf	(___fldiv@b+3)^0,c
  7280   003374                     l2882:
  7281   003374  501A               	movf	(___fldiv@a+3)^0,w,c
  7282   003376  0B80               	andlw	128
  7283   003378  1A23               	xorwf	___fldiv@sign^0,f,c
  7284   00337A  501A               	movf	(___fldiv@a+3)^0,w,c
  7285   00337C  241A               	addwf	(___fldiv@a+3)^0,w,c
  7286   00337E  6E2B               	movwf	___fldiv@aexp^0,c
  7287   003380  AE19               	btfss	(___fldiv@a+2)^0,7,c
  7288   003382  EFC5  F019         	goto	u2691
  7289   003386  EFC7  F019         	goto	u2690
  7290   00338A                     u2691:
  7291   00338A  EFC8  F019         	goto	l2890
  7292   00338E                     u2690:
  7293   00338E  802B               	bsf	___fldiv@aexp^0,0,c
  7294   003390                     l2890:
  7295   003390  502B               	movf	___fldiv@aexp^0,w,c
  7296   003392  B4D8               	btfsc	status,2,c
  7297   003394  EFCE  F019         	goto	u2701
  7298   003398  EFD0  F019         	goto	u2700
  7299   00339C                     u2701:
  7300   00339C  EFE4  F019         	goto	l2900
  7301   0033A0                     u2700:
  7302   0033A0  282B               	incf	___fldiv@aexp^0,w,c
  7303   0033A2  A4D8               	btfss	status,2,c
  7304   0033A4  EFD6  F019         	goto	u2711
  7305   0033A8  EFD8  F019         	goto	u2710
  7306   0033AC                     u2711:
  7307   0033AC  EFE0  F019         	goto	l2896
  7308   0033B0                     u2710:
  7309   0033B0  0E00               	movlw	0
  7310   0033B2  6E17               	movwf	___fldiv@a^0,c
  7311   0033B4  0E00               	movlw	0
  7312   0033B6  6E18               	movwf	(___fldiv@a+1)^0,c
  7313   0033B8  0E00               	movlw	0
  7314   0033BA  6E19               	movwf	(___fldiv@a+2)^0,c
  7315   0033BC  0E00               	movlw	0
  7316   0033BE  6E1A               	movwf	(___fldiv@a+3)^0,c
  7317   0033C0                     l2896:
  7318   0033C0  8E19               	bsf	(___fldiv@a+2)^0,7,c
  7319   0033C2  6A1A               	clrf	(___fldiv@a+3)^0,c
  7320   0033C4  EFEC  F019         	goto	l2902
  7321   0033C8                     l2900:
  7322   0033C8  0E00               	movlw	0
  7323   0033CA  6E17               	movwf	___fldiv@a^0,c
  7324   0033CC  0E00               	movlw	0
  7325   0033CE  6E18               	movwf	(___fldiv@a+1)^0,c
  7326   0033D0  0E00               	movlw	0
  7327   0033D2  6E19               	movwf	(___fldiv@a+2)^0,c
  7328   0033D4  0E00               	movlw	0
  7329   0033D6  6E1A               	movwf	(___fldiv@a+3)^0,c
  7330   0033D8                     l2902:
  7331   0033D8  5017               	movf	___fldiv@a^0,w,c
  7332   0033DA  1018               	iorwf	(___fldiv@a+1)^0,w,c
  7333   0033DC  1019               	iorwf	(___fldiv@a+2)^0,w,c
  7334   0033DE  101A               	iorwf	(___fldiv@a+3)^0,w,c
  7335   0033E0  A4D8               	btfss	status,2,c
  7336   0033E2  EFF5  F019         	goto	u2721
  7337   0033E6  EFF7  F019         	goto	u2720
  7338   0033EA                     u2721:
  7339   0033EA  EF0F  F01A         	goto	l2914
  7340   0033EE                     u2720:
  7341   0033EE  0E00               	movlw	0
  7342   0033F0  6E13               	movwf	___fldiv@b^0,c
  7343   0033F2  0E00               	movlw	0
  7344   0033F4  6E14               	movwf	(___fldiv@b+1)^0,c
  7345   0033F6  0E00               	movlw	0
  7346   0033F8  6E15               	movwf	(___fldiv@b+2)^0,c
  7347   0033FA  0E00               	movlw	0
  7348   0033FC  6E16               	movwf	(___fldiv@b+3)^0,c
  7349   0033FE  0E80               	movlw	128
  7350   003400  1215               	iorwf	(___fldiv@b+2)^0,f,c
  7351   003402  0E7F               	movlw	127
  7352   003404  1216               	iorwf	(___fldiv@b+3)^0,f,c
  7353   003406                     l2908:
  7354   003406  5023               	movf	___fldiv@sign^0,w,c
  7355   003408  1216               	iorwf	(___fldiv@b+3)^0,f,c
  7356   00340A  C013  F013         	movff	___fldiv@b,?___fldiv
  7357   00340E  C014  F014         	movff	___fldiv@b+1,?___fldiv+1
  7358   003412  C015  F015         	movff	___fldiv@b+2,?___fldiv+2
  7359   003416  C016  F016         	movff	___fldiv@b+3,?___fldiv+3
  7360   00341A  EF4F  F01B         	goto	l825
  7361   00341E                     l2914:
  7362   00341E  502A               	movf	___fldiv@bexp^0,w,c
  7363   003420  A4D8               	btfss	status,2,c
  7364   003422  EF15  F01A         	goto	u2731
  7365   003426  EF17  F01A         	goto	u2730
  7366   00342A                     u2731:
  7367   00342A  EF21  F01A         	goto	l2922
  7368   00342E                     u2730:
  7369   00342E  0E00               	movlw	0
  7370   003430  6E13               	movwf	?___fldiv^0,c
  7371   003432  0E00               	movlw	0
  7372   003434  6E14               	movwf	(?___fldiv+1)^0,c
  7373   003436  0E00               	movlw	0
  7374   003438  6E15               	movwf	(?___fldiv+2)^0,c
  7375   00343A  0E00               	movlw	0
  7376   00343C  6E16               	movwf	(?___fldiv+3)^0,c
  7377   00343E  EF4F  F01B         	goto	l825
  7378   003442                     l2922:
  7379   003442  502B               	movf	___fldiv@aexp^0,w,c
  7380   003444  C02A  F01B         	movff	___fldiv@bexp,??___fldiv
  7381   003448  6A1C               	clrf	(??___fldiv+1)^0,c
  7382   00344A  5E1B               	subwf	??___fldiv^0,f,c
  7383   00344C  0E00               	movlw	0
  7384   00344E  5A1C               	subwfb	(??___fldiv+1)^0,f,c
  7385   003450  0E7F               	movlw	127
  7386   003452  241B               	addwf	??___fldiv^0,w,c
  7387   003454  6E24               	movwf	___fldiv@new_exp^0,c
  7388   003456  0E00               	movlw	0
  7389   003458  201C               	addwfc	(??___fldiv+1)^0,w,c
  7390   00345A  6E25               	movwf	(___fldiv@new_exp+1)^0,c
  7391   00345C  C013  F01F         	movff	___fldiv@b,___fldiv@rem
  7392   003460  C014  F020         	movff	___fldiv@b+1,___fldiv@rem+1
  7393   003464  C015  F021         	movff	___fldiv@b+2,___fldiv@rem+2
  7394   003468  C016  F022         	movff	___fldiv@b+3,___fldiv@rem+3
  7395   00346C  0E00               	movlw	0
  7396   00346E  6E13               	movwf	___fldiv@b^0,c
  7397   003470  0E00               	movlw	0
  7398   003472  6E14               	movwf	(___fldiv@b+1)^0,c
  7399   003474  0E00               	movlw	0
  7400   003476  6E15               	movwf	(___fldiv@b+2)^0,c
  7401   003478  0E00               	movlw	0
  7402   00347A  6E16               	movwf	(___fldiv@b+3)^0,c
  7403   00347C  0E00               	movlw	0
  7404   00347E  6E26               	movwf	___fldiv@grs^0,c
  7405   003480  0E00               	movlw	0
  7406   003482  6E27               	movwf	(___fldiv@grs+1)^0,c
  7407   003484  0E00               	movlw	0
  7408   003486  6E28               	movwf	(___fldiv@grs+2)^0,c
  7409   003488  0E00               	movlw	0
  7410   00348A  6E29               	movwf	(___fldiv@grs+3)^0,c
  7411   00348C  6A2B               	clrf	___fldiv@aexp^0,c
  7412   00348E  EF81  F01A         	goto	l827
  7413   003492                     l2932:
  7414   003492  502B               	movf	___fldiv@aexp^0,w,c
  7415   003494  B4D8               	btfsc	status,2,c
  7416   003496  EF4F  F01A         	goto	u2741
  7417   00349A  EF51  F01A         	goto	u2740
  7418   00349E                     u2741:
  7419   00349E  EF68  F01A         	goto	l2940
  7420   0034A2                     u2740:
  7421   0034A2  90D8               	bcf	status,0,c
  7422   0034A4  361F               	rlcf	___fldiv@rem^0,f,c
  7423   0034A6  3620               	rlcf	(___fldiv@rem+1)^0,f,c
  7424   0034A8  3621               	rlcf	(___fldiv@rem+2)^0,f,c
  7425   0034AA  3622               	rlcf	(___fldiv@rem+3)^0,f,c
  7426   0034AC  90D8               	bcf	status,0,c
  7427   0034AE  3613               	rlcf	___fldiv@b^0,f,c
  7428   0034B0  3614               	rlcf	(___fldiv@b+1)^0,f,c
  7429   0034B2  3615               	rlcf	(___fldiv@b+2)^0,f,c
  7430   0034B4  3616               	rlcf	(___fldiv@b+3)^0,f,c
  7431   0034B6  AE29               	btfss	(___fldiv@grs+3)^0,7,c
  7432   0034B8  EF60  F01A         	goto	u2751
  7433   0034BC  EF62  F01A         	goto	u2750
  7434   0034C0                     u2751:
  7435   0034C0  EF63  F01A         	goto	l830
  7436   0034C4                     u2750:
  7437   0034C4  8013               	bsf	___fldiv@b^0,0,c
  7438   0034C6                     l830:
  7439   0034C6  90D8               	bcf	status,0,c
  7440   0034C8  3626               	rlcf	___fldiv@grs^0,f,c
  7441   0034CA  3627               	rlcf	(___fldiv@grs+1)^0,f,c
  7442   0034CC  3628               	rlcf	(___fldiv@grs+2)^0,f,c
  7443   0034CE  3629               	rlcf	(___fldiv@grs+3)^0,f,c
  7444   0034D0                     l2940:
  7445   0034D0  5017               	movf	___fldiv@a^0,w,c
  7446   0034D2  5C1F               	subwf	___fldiv@rem^0,w,c
  7447   0034D4  5018               	movf	(___fldiv@a+1)^0,w,c
  7448   0034D6  5820               	subwfb	(___fldiv@rem+1)^0,w,c
  7449   0034D8  5019               	movf	(___fldiv@a+2)^0,w,c
  7450   0034DA  5821               	subwfb	(___fldiv@rem+2)^0,w,c
  7451   0034DC  501A               	movf	(___fldiv@a+3)^0,w,c
  7452   0034DE  5822               	subwfb	(___fldiv@rem+3)^0,w,c
  7453   0034E0  A0D8               	btfss	status,0,c
  7454   0034E2  EF75  F01A         	goto	u2761
  7455   0034E6  EF77  F01A         	goto	u2760
  7456   0034EA                     u2761:
  7457   0034EA  EF80  F01A         	goto	l2946
  7458   0034EE                     u2760:
  7459   0034EE  8C29               	bsf	(___fldiv@grs+3)^0,6,c
  7460   0034F0  5017               	movf	___fldiv@a^0,w,c
  7461   0034F2  5E1F               	subwf	___fldiv@rem^0,f,c
  7462   0034F4  5018               	movf	(___fldiv@a+1)^0,w,c
  7463   0034F6  5A20               	subwfb	(___fldiv@rem+1)^0,f,c
  7464   0034F8  5019               	movf	(___fldiv@a+2)^0,w,c
  7465   0034FA  5A21               	subwfb	(___fldiv@rem+2)^0,f,c
  7466   0034FC  501A               	movf	(___fldiv@a+3)^0,w,c
  7467   0034FE  5A22               	subwfb	(___fldiv@rem+3)^0,f,c
  7468   003500                     l2946:
  7469   003500  2A2B               	incf	___fldiv@aexp^0,f,c
  7470   003502                     l827:
  7471   003502  0E19               	movlw	25
  7472   003504  642B               	cpfsgt	___fldiv@aexp^0,c
  7473   003506  EF87  F01A         	goto	u2771
  7474   00350A  EF89  F01A         	goto	u2770
  7475   00350E                     u2771:
  7476   00350E  EF49  F01A         	goto	l2932
  7477   003512                     u2770:
  7478   003512  501F               	movf	___fldiv@rem^0,w,c
  7479   003514  1020               	iorwf	(___fldiv@rem+1)^0,w,c
  7480   003516  1021               	iorwf	(___fldiv@rem+2)^0,w,c
  7481   003518  1022               	iorwf	(___fldiv@rem+3)^0,w,c
  7482   00351A  B4D8               	btfsc	status,2,c
  7483   00351C  EF92  F01A         	goto	u2781
  7484   003520  EF94  F01A         	goto	u2780
  7485   003524                     u2781:
  7486   003524  EFAC  F01A         	goto	l2958
  7487   003528                     u2780:
  7488   003528  8026               	bsf	___fldiv@grs^0,0,c
  7489   00352A  EFAC  F01A         	goto	l2958
  7490   00352E                     l2952:
  7491   00352E  90D8               	bcf	status,0,c
  7492   003530  3613               	rlcf	___fldiv@b^0,f,c
  7493   003532  3614               	rlcf	(___fldiv@b+1)^0,f,c
  7494   003534  3615               	rlcf	(___fldiv@b+2)^0,f,c
  7495   003536  3616               	rlcf	(___fldiv@b+3)^0,f,c
  7496   003538  AE29               	btfss	(___fldiv@grs+3)^0,7,c
  7497   00353A  EFA1  F01A         	goto	u2791
  7498   00353E  EFA3  F01A         	goto	u2790
  7499   003542                     u2791:
  7500   003542  EFA4  F01A         	goto	l836
  7501   003546                     u2790:
  7502   003546  8013               	bsf	___fldiv@b^0,0,c
  7503   003548                     l836:
  7504   003548  90D8               	bcf	status,0,c
  7505   00354A  3626               	rlcf	___fldiv@grs^0,f,c
  7506   00354C  3627               	rlcf	(___fldiv@grs+1)^0,f,c
  7507   00354E  3628               	rlcf	(___fldiv@grs+2)^0,f,c
  7508   003550  3629               	rlcf	(___fldiv@grs+3)^0,f,c
  7509   003552  0624               	decf	___fldiv@new_exp^0,f,c
  7510   003554  A0D8               	btfss	status,0,c
  7511   003556  0625               	decf	(___fldiv@new_exp+1)^0,f,c
  7512   003558                     l2958:
  7513   003558  AE15               	btfss	(___fldiv@b+2)^0,7,c
  7514   00355A  EFB1  F01A         	goto	u2801
  7515   00355E  EFB3  F01A         	goto	u2800
  7516   003562                     u2801:
  7517   003562  EF97  F01A         	goto	l2952
  7518   003566                     u2800:
  7519   003566  6A2B               	clrf	___fldiv@aexp^0,c
  7520   003568  AE29               	btfss	(___fldiv@grs+3)^0,7,c
  7521   00356A  EFB9  F01A         	goto	u2811
  7522   00356E  EFBB  F01A         	goto	u2810
  7523   003572                     u2811:
  7524   003572  EFDF  F01A         	goto	l838
  7525   003576                     u2810:
  7526   003576  0EFF               	movlw	255
  7527   003578  1426               	andwf	___fldiv@grs^0,w,c
  7528   00357A  6E1B               	movwf	??___fldiv^0,c
  7529   00357C  0EFF               	movlw	255
  7530   00357E  1427               	andwf	(___fldiv@grs+1)^0,w,c
  7531   003580  6E1C               	movwf	(??___fldiv+1)^0,c
  7532   003582  0EFF               	movlw	255
  7533   003584  1428               	andwf	(___fldiv@grs+2)^0,w,c
  7534   003586  6E1D               	movwf	(??___fldiv+2)^0,c
  7535   003588  0E7F               	movlw	127
  7536   00358A  1429               	andwf	(___fldiv@grs+3)^0,w,c
  7537   00358C  6E1E               	movwf	(??___fldiv+3)^0,c
  7538   00358E  501B               	movf	??___fldiv^0,w,c
  7539   003590  101C               	iorwf	(??___fldiv+1)^0,w,c
  7540   003592  101D               	iorwf	(??___fldiv+2)^0,w,c
  7541   003594  101E               	iorwf	(??___fldiv+3)^0,w,c
  7542   003596  B4D8               	btfsc	status,2,c
  7543   003598  EFD0  F01A         	goto	u2821
  7544   00359C  EFD2  F01A         	goto	u2820
  7545   0035A0                     u2821:
  7546   0035A0  EFD6  F01A         	goto	l839
  7547   0035A4                     u2820:
  7548   0035A4                     l2962:
  7549   0035A4  0E01               	movlw	1
  7550   0035A6  6E2B               	movwf	___fldiv@aexp^0,c
  7551   0035A8  EFDF  F01A         	goto	l838
  7552   0035AC                     l839:
  7553   0035AC  A013               	btfss	___fldiv@b^0,0,c
  7554   0035AE  EFDB  F01A         	goto	u2831
  7555   0035B2  EFDD  F01A         	goto	u2830
  7556   0035B6                     u2831:
  7557   0035B6  EFDF  F01A         	goto	l838
  7558   0035BA                     u2830:
  7559   0035BA  EFD2  F01A         	goto	l2962
  7560   0035BE                     l838:
  7561   0035BE  502B               	movf	___fldiv@aexp^0,w,c
  7562   0035C0  B4D8               	btfsc	status,2,c
  7563   0035C2  EFE5  F01A         	goto	u2841
  7564   0035C6  EFE7  F01A         	goto	u2840
  7565   0035CA                     u2841:
  7566   0035CA  EF0B  F01B         	goto	l2974
  7567   0035CE                     u2840:
  7568   0035CE  0E01               	movlw	1
  7569   0035D0  2613               	addwf	___fldiv@b^0,f,c
  7570   0035D2  0E00               	movlw	0
  7571   0035D4  2214               	addwfc	(___fldiv@b+1)^0,f,c
  7572   0035D6  2215               	addwfc	(___fldiv@b+2)^0,f,c
  7573   0035D8  2216               	addwfc	(___fldiv@b+3)^0,f,c
  7574   0035DA  A016               	btfss	(___fldiv@b+3)^0,0,c
  7575   0035DC  EFF2  F01A         	goto	u2851
  7576   0035E0  EFF4  F01A         	goto	u2850
  7577   0035E4                     u2851:
  7578   0035E4  EF0B  F01B         	goto	l2974
  7579   0035E8                     u2850:
  7580   0035E8  C013  F01B         	movff	___fldiv@b,??___fldiv
  7581   0035EC  C014  F01C         	movff	___fldiv@b+1,??___fldiv+1
  7582   0035F0  C015  F01D         	movff	___fldiv@b+2,??___fldiv+2
  7583   0035F4  C016  F01E         	movff	___fldiv@b+3,??___fldiv+3
  7584   0035F8  341E               	rlcf	(??___fldiv+3)^0,w,c
  7585   0035FA  321E               	rrcf	(??___fldiv+3)^0,f,c
  7586   0035FC  321D               	rrcf	(??___fldiv+2)^0,f,c
  7587   0035FE  321C               	rrcf	(??___fldiv+1)^0,f,c
  7588   003600  321B               	rrcf	??___fldiv^0,f,c
  7589   003602  C01B  F013         	movff	??___fldiv,___fldiv@b
  7590   003606  C01C  F014         	movff	??___fldiv+1,___fldiv@b+1
  7591   00360A  C01D  F015         	movff	??___fldiv+2,___fldiv@b+2
  7592   00360E  C01E  F016         	movff	??___fldiv+3,___fldiv@b+3
  7593   003612  4A24               	infsnz	___fldiv@new_exp^0,f,c
  7594   003614  2A25               	incf	(___fldiv@new_exp+1)^0,f,c
  7595   003616                     l2974:
  7596   003616  BE25               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7597   003618  EF16  F01B         	goto	u2861
  7598   00361C  5025               	movf	(___fldiv@new_exp+1)^0,w,c
  7599   00361E  E108               	bnz	u2860
  7600   003620  2824               	incf	___fldiv@new_exp^0,w,c
  7601   003622  A0D8               	btfss	status,0,c
  7602   003624  EF16  F01B         	goto	u2861
  7603   003628  EF18  F01B         	goto	u2860
  7604   00362C                     u2861:
  7605   00362C  EF23  F01B         	goto	l2978
  7606   003630                     u2860:
  7607   003630  0E00               	movlw	0
  7608   003632  6E25               	movwf	(___fldiv@new_exp+1)^0,c
  7609   003634  6824               	setf	___fldiv@new_exp^0,c
  7610   003636  0E00               	movlw	0
  7611   003638  6E13               	movwf	___fldiv@b^0,c
  7612   00363A  0E00               	movlw	0
  7613   00363C  6E14               	movwf	(___fldiv@b+1)^0,c
  7614   00363E  0E00               	movlw	0
  7615   003640  6E15               	movwf	(___fldiv@b+2)^0,c
  7616   003642  0E00               	movlw	0
  7617   003644  6E16               	movwf	(___fldiv@b+3)^0,c
  7618   003646                     l2978:
  7619   003646  BE25               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7620   003648  EF30  F01B         	goto	u2870
  7621   00364C  5025               	movf	(___fldiv@new_exp+1)^0,w,c
  7622   00364E  E106               	bnz	u2871
  7623   003650  0424               	decf	___fldiv@new_exp^0,w,c
  7624   003652  B0D8               	btfsc	status,0,c
  7625   003654  EF2E  F01B         	goto	u2871
  7626   003658  EF30  F01B         	goto	u2870
  7627   00365C                     u2871:
  7628   00365C  EF3D  F01B         	goto	l2984
  7629   003660                     u2870:
  7630   003660  0E00               	movlw	0
  7631   003662  6E25               	movwf	(___fldiv@new_exp+1)^0,c
  7632   003664  0E00               	movlw	0
  7633   003666  6E24               	movwf	___fldiv@new_exp^0,c
  7634   003668  0E00               	movlw	0
  7635   00366A  6E13               	movwf	___fldiv@b^0,c
  7636   00366C  0E00               	movlw	0
  7637   00366E  6E14               	movwf	(___fldiv@b+1)^0,c
  7638   003670  0E00               	movlw	0
  7639   003672  6E15               	movwf	(___fldiv@b+2)^0,c
  7640   003674  0E00               	movlw	0
  7641   003676  6E16               	movwf	(___fldiv@b+3)^0,c
  7642   003678  6A23               	clrf	___fldiv@sign^0,c
  7643   00367A                     l2984:
  7644   00367A  C024  F02A         	movff	___fldiv@new_exp,___fldiv@bexp
  7645   00367E  A02A               	btfss	___fldiv@bexp^0,0,c
  7646   003680  EF44  F01B         	goto	u2881
  7647   003684  EF46  F01B         	goto	u2880
  7648   003688                     u2881:
  7649   003688  EF49  F01B         	goto	l2990
  7650   00368C                     u2880:
  7651   00368C  8E15               	bsf	(___fldiv@b+2)^0,7,c
  7652   00368E  EF4A  F01B         	goto	l2992
  7653   003692                     l2990:
  7654   003692  9E15               	bcf	(___fldiv@b+2)^0,7,c
  7655   003694                     l2992:
  7656   003694  90D8               	bcf	status,0,c
  7657   003696  302A               	rrcf	___fldiv@bexp^0,w,c
  7658   003698  6E16               	movwf	(___fldiv@b+3)^0,c
  7659   00369A  EF03  F01A         	goto	l2908
  7660   00369E                     l825:
  7661   00369E  0012               	return		;funcret
  7662   0036A0                     __end_of___fldiv:
  7663                           	callstack 0
  7664                           
  7665 ;; *************** function _dtoa *****************
  7666 ;; Defined at:
  7667 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  7668 ;; Parameters:    Size  Location     Type
  7669 ;;  fp              1   26[COMRAM] PTR struct _IO_FILE
  7670 ;;		 -> sprintf@f(11), 
  7671 ;;  d               2   27[COMRAM] int 
  7672 ;; Auto vars:     Size  Location     Type
  7673 ;;  i               2   36[COMRAM] int 
  7674 ;;  p               2   33[COMRAM] int 
  7675 ;;  w               2   31[COMRAM] int 
  7676 ;;  s               1   35[COMRAM] unsigned char 
  7677 ;; Return value:  Size  Location     Type
  7678 ;;                  1    wreg      void 
  7679 ;; Registers used:
  7680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7681 ;; Tracked objects:
  7682 ;;		On entry : 0/0
  7683 ;;		On exit  : 0/0
  7684 ;;		Unchanged: 0/0
  7685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7686 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7687 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7689 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7690 ;;Total ram usage:       12 bytes
  7691 ;; Hardware stack levels used: 1
  7692 ;; Hardware stack levels required when called: 5
  7693 ;; This function calls:
  7694 ;;		___awdiv
  7695 ;;		___awmod
  7696 ;;		_abs
  7697 ;;		_pad
  7698 ;; This function is called by:
  7699 ;;		_vfpfcnvrt
  7700 ;; This function uses a non-reentrant model
  7701 ;;
  7702                           
  7703                           	psect	text23
  7704   003F18                     __ptext23:
  7705                           	callstack 0
  7706   003F18                     _dtoa:
  7707                           	callstack 21
  7708   003F18                     
  7709                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
  7710   003F18  BE1D               	btfsc	(dtoa@d+1)^0,7,c
  7711   003F1A  EF91  F01F         	goto	u3611
  7712   003F1E  EF94  F01F         	goto	u3610
  7713   003F22                     u3611:
  7714   003F22  0E01               	movlw	1
  7715   003F24  EF95  F01F         	goto	u3620
  7716   003F28                     u3610:
  7717   003F28  0E00               	movlw	0
  7718   003F2A                     u3620:
  7719   003F2A  6E24               	movwf	dtoa@s^0,c
  7720                           
  7721                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
  7722   003F2C  0100               	movlb	0	; () banked
  7723   003F2E  BFF5               	btfsc	(_prec+1)& (0+255),7,b
  7724   003F30  EF9E  F01F         	goto	u3630
  7725   003F34  EF9C  F01F         	goto	u3631
  7726   003F38                     u3631:
  7727   003F38  EFA4  F01F         	goto	l958
  7728   003F3C                     u3630:
  7729   003F3C                     
  7730                           ; BSR set to: 0
  7731   003F3C  0E00               	movlw	0
  7732   003F3E  6E23               	movwf	(dtoa@p+1)^0,c
  7733   003F40  0E01               	movlw	1
  7734   003F42  6E22               	movwf	dtoa@p^0,c
  7735   003F44  EFA8  F01F         	goto	l960
  7736   003F48                     l958:
  7737                           
  7738                           ; BSR set to: 0
  7739   003F48  C0F4  F022         	movff	_prec,dtoa@p
  7740   003F4C  C0F5  F023         	movff	_prec+1,dtoa@p+1
  7741   003F50                     l960:
  7742                           
  7743                           ; BSR set to: 0
  7744                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  7745   003F50  C0F2  F020         	movff	_width,dtoa@w
  7746   003F54  C0F3  F021         	movff	_width+1,dtoa@w+1
  7747   003F58                     
  7748                           ; BSR set to: 0
  7749                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 536:     if (s
  7750   003F58  5024               	movf	dtoa@s^0,w,c
  7751   003F5A  B4D8               	btfsc	status,2,c
  7752   003F5C  EFB2  F01F         	goto	u3641
  7753   003F60  EFB4  F01F         	goto	u3640
  7754   003F64                     u3641:
  7755   003F64  EFCB  F01F         	goto	l961
  7756   003F68                     u3640:
  7757   003F68                     
  7758                           ; BSR set to: 0
  7759                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 541:         --w;
  7760   003F68  0620               	decf	dtoa@w^0,f,c
  7761   003F6A  A0D8               	btfss	status,0,c
  7762   003F6C  0621               	decf	(dtoa@w+1)^0,f,c
  7763   003F6E                     
  7764                           ; BSR set to: 0
  7765                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  7766   003F6E  5024               	movf	dtoa@s^0,w,c
  7767   003F70  A4D8               	btfss	status,2,c
  7768   003F72  EFBD  F01F         	goto	u3651
  7769   003F76  EFBF  F01F         	goto	u3650
  7770   003F7A                     u3651:
  7771   003F7A  EFC5  F01F         	goto	l3422
  7772   003F7E                     u3650:
  7773   003F7E                     
  7774                           ; BSR set to: 0
  7775   003F7E  0E00               	movlw	0
  7776   003F80  6E1F               	movwf	(_dtoa$1306+1)^0,c
  7777   003F82  0E2B               	movlw	43
  7778   003F84  6E1E               	movwf	_dtoa$1306^0,c
  7779   003F86  EFC9  F01F         	goto	l3424
  7780   003F8A                     l3422:
  7781                           
  7782                           ; BSR set to: 0
  7783   003F8A  0E00               	movlw	0
  7784   003F8C  6E1F               	movwf	(_dtoa$1306+1)^0,c
  7785   003F8E  0E2D               	movlw	45
  7786   003F90  6E1E               	movwf	_dtoa$1306^0,c
  7787   003F92                     l3424:
  7788                           
  7789                           ; BSR set to: 0
  7790   003F92  C01E  F024         	movff	_dtoa$1306,dtoa@s
  7791   003F96                     l961:
  7792                           
  7793                           ; BSR set to: 0
  7794                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  7795   003F96  0E00               	movlw	0
  7796   003F98  6E26               	movwf	(dtoa@i+1)^0,c
  7797   003F9A  0E4F               	movlw	79
  7798   003F9C  6E25               	movwf	dtoa@i^0,c
  7799   003F9E                     
  7800                           ; BSR set to: 0
  7801                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  7802   003F9E  0101               	movlb	1	; () banked
  7803   003FA0  6B4F               	clrf	(_dbuf+79)& (0+255),b
  7804                           
  7805                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  7806   003FA2  EF03  F020         	goto	l3438
  7807   003FA6                     l3428:
  7808                           
  7809                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 564:         --i;
  7810   003FA6  0625               	decf	dtoa@i^0,f,c
  7811   003FA8  A0D8               	btfss	status,0,c
  7812   003FAA  0626               	decf	(dtoa@i+1)^0,f,c
  7813   003FAC                     
  7814                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  7815   003FAC  0E00               	movlw	low _dbuf
  7816   003FAE  2425               	addwf	dtoa@i^0,w,c
  7817   003FB0  6ED9               	movwf	fsr2l,c
  7818   003FB2  0E01               	movlw	high _dbuf
  7819   003FB4  2026               	addwfc	(dtoa@i+1)^0,w,c
  7820   003FB6  6EDA               	movwf	fsr2h,c
  7821   003FB8  C01C  F005         	movff	dtoa@d,___awmod@dividend
  7822   003FBC  C01D  F006         	movff	dtoa@d+1,___awmod@dividend+1
  7823   003FC0  0E00               	movlw	0
  7824   003FC2  6E08               	movwf	(___awmod@divisor+1)^0,c
  7825   003FC4  0E0A               	movlw	10
  7826   003FC6  6E07               	movwf	___awmod@divisor^0,c
  7827   003FC8  EC21  F023         	call	___awmod	;wreg free
  7828   003FCC  C005  F00B         	movff	?___awmod,abs@a
  7829   003FD0  C006  F00C         	movff	?___awmod+1,abs@a+1
  7830   003FD4  EC4D  F027         	call	_abs	;wreg free
  7831   003FD8  500B               	movf	?_abs^0,w,c
  7832   003FDA  0F30               	addlw	48
  7833   003FDC  6EDF               	movwf	indf2,c
  7834   003FDE                     
  7835                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 567:         --p;
  7836   003FDE  0622               	decf	dtoa@p^0,f,c
  7837   003FE0  A0D8               	btfss	status,0,c
  7838   003FE2  0623               	decf	(dtoa@p+1)^0,f,c
  7839   003FE4                     
  7840                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 571:         --w;
  7841   003FE4  0620               	decf	dtoa@w^0,f,c
  7842   003FE6  A0D8               	btfss	status,0,c
  7843   003FE8  0621               	decf	(dtoa@w+1)^0,f,c
  7844   003FEA                     
  7845                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  7846   003FEA  C01C  F005         	movff	dtoa@d,___awdiv@dividend
  7847   003FEE  C01D  F006         	movff	dtoa@d+1,___awdiv@dividend+1
  7848   003FF2  0E00               	movlw	0
  7849   003FF4  6E08               	movwf	(___awdiv@divisor+1)^0,c
  7850   003FF6  0E0A               	movlw	10
  7851   003FF8  6E07               	movwf	___awdiv@divisor^0,c
  7852   003FFA  EC64  F022         	call	___awdiv	;wreg free
  7853   003FFE  C005  F01C         	movff	?___awdiv,dtoa@d
  7854   004002  C006  F01D         	movff	?___awdiv+1,dtoa@d+1
  7855   004006                     l3438:
  7856                           
  7857                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  7858   004006  BE26               	btfsc	(dtoa@i+1)^0,7,c
  7859   004008  EF0E  F020         	goto	u3661
  7860   00400C  5026               	movf	(dtoa@i+1)^0,w,c
  7861   00400E  E108               	bnz	u3660
  7862   004010  0425               	decf	dtoa@i^0,w,c
  7863   004012  A0D8               	btfss	status,0,c
  7864   004014  EF0E  F020         	goto	u3661
  7865   004018  EF10  F020         	goto	u3660
  7866   00401C                     u3661:
  7867   00401C  EF26  F020         	goto	l3444
  7868   004020                     u3660:
  7869   004020  501C               	movf	dtoa@d^0,w,c
  7870   004022  101D               	iorwf	(dtoa@d+1)^0,w,c
  7871   004024  A4D8               	btfss	status,2,c
  7872   004026  EF17  F020         	goto	u3671
  7873   00402A  EF19  F020         	goto	u3670
  7874   00402E                     u3671:
  7875   00402E  EFD3  F01F         	goto	l3428
  7876   004032                     u3670:
  7877   004032  BE23               	btfsc	(dtoa@p+1)^0,7,c
  7878   004034  EF26  F020         	goto	u3680
  7879   004038  5023               	movf	(dtoa@p+1)^0,w,c
  7880   00403A  E106               	bnz	u3681
  7881   00403C  0422               	decf	dtoa@p^0,w,c
  7882   00403E  B0D8               	btfsc	status,0,c
  7883   004040  EF24  F020         	goto	u3681
  7884   004044  EF26  F020         	goto	u3680
  7885   004048                     u3681:
  7886   004048  EFD3  F01F         	goto	l3428
  7887   00404C                     u3680:
  7888   00404C                     l3444:
  7889                           
  7890                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  7891   00404C  5024               	movf	dtoa@s^0,w,c
  7892   00404E  B4D8               	btfsc	status,2,c
  7893   004050  EF2C  F020         	goto	u3691
  7894   004054  EF2E  F020         	goto	u3690
  7895   004058                     u3691:
  7896   004058  EF3A  F020         	goto	l3450
  7897   00405C                     u3690:
  7898   00405C                     
  7899                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 577:         --i;
  7900   00405C  0625               	decf	dtoa@i^0,f,c
  7901   00405E  A0D8               	btfss	status,0,c
  7902   004060  0626               	decf	(dtoa@i+1)^0,f,c
  7903   004062                     
  7904                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  7905   004062  0E00               	movlw	low _dbuf
  7906   004064  2425               	addwf	dtoa@i^0,w,c
  7907   004066  6ED9               	movwf	fsr2l,c
  7908   004068  0E01               	movlw	high _dbuf
  7909   00406A  2026               	addwfc	(dtoa@i+1)^0,w,c
  7910   00406C  6EDA               	movwf	fsr2h,c
  7911   00406E  0060  F093  FFDF   	movff	dtoa@s,indf2
  7912   004074                     l3450:
  7913                           
  7914                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  7915   004074  C01B  F013         	movff	dtoa@fp,pad@fp
  7916   004078  0E00               	movlw	low _dbuf
  7917   00407A  2425               	addwf	dtoa@i^0,w,c
  7918   00407C  6E14               	movwf	pad@buf^0,c
  7919   00407E  0E01               	movlw	high _dbuf
  7920   004080  2026               	addwfc	(dtoa@i+1)^0,w,c
  7921   004082  6E15               	movwf	(pad@buf+1)^0,c
  7922   004084  C020  F016         	movff	dtoa@w,pad@p
  7923   004088  C021  F017         	movff	dtoa@w+1,pad@p+1
  7924   00408C  EC19  F025         	call	_pad	;wreg free
  7925   004090  0012               	return		;funcret
  7926   004092                     __end_of_dtoa:
  7927                           	callstack 0
  7928                           
  7929 ;; *************** function _pad *****************
  7930 ;; Defined at:
  7931 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  7932 ;; Parameters:    Size  Location     Type
  7933 ;;  fp              1   18[COMRAM] PTR struct _IO_FILE
  7934 ;;		 -> sprintf@f(11), 
  7935 ;;  buf             2   19[COMRAM] PTR unsigned char 
  7936 ;;		 -> dbuf(80), 
  7937 ;;  p               2   21[COMRAM] int 
  7938 ;; Auto vars:     Size  Location     Type
  7939 ;;  i               2   24[COMRAM] int 
  7940 ;; Return value:  Size  Location     Type
  7941 ;;                  1    wreg      void 
  7942 ;; Registers used:
  7943 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7944 ;; Tracked objects:
  7945 ;;		On entry : 0/0
  7946 ;;		On exit  : 0/0
  7947 ;;		Unchanged: 0/0
  7948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7949 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7950 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7951 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7952 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7953 ;;Total ram usage:        8 bytes
  7954 ;; Hardware stack levels used: 1
  7955 ;; Hardware stack levels required when called: 4
  7956 ;; This function calls:
  7957 ;;		_fputc
  7958 ;;		_fputs
  7959 ;; This function is called by:
  7960 ;;		_dtoa
  7961 ;;		_efgtoa
  7962 ;; This function uses a non-reentrant model
  7963 ;;
  7964                           
  7965                           	psect	text24
  7966   004A32                     __ptext24:
  7967                           	callstack 0
  7968   004A32                     _pad:
  7969                           	callstack 21
  7970   004A32                     
  7971                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  7972   004A32  BE17               	btfsc	(pad@p+1)^0,7,c
  7973   004A34  EF20  F025         	goto	u3360
  7974   004A38  EF1E  F025         	goto	u3361
  7975   004A3C                     u3361:
  7976   004A3C  EF24  F025         	goto	l950
  7977   004A40                     u3360:
  7978   004A40                     
  7979                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  7980   004A40  0E00               	movlw	0
  7981   004A42  6E17               	movwf	(pad@p+1)^0,c
  7982   004A44  0E00               	movlw	0
  7983   004A46  6E16               	movwf	pad@p^0,c
  7984   004A48                     l950:
  7985                           
  7986                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  7987   004A48  0E00               	movlw	0
  7988   004A4A  6E1A               	movwf	(pad@i+1)^0,c
  7989   004A4C  0E00               	movlw	0
  7990   004A4E  6E19               	movwf	pad@i^0,c
  7991                           
  7992                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  7993   004A50  EF34  F025         	goto	l3312
  7994   004A54                     l3308:
  7995                           
  7996                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  7997   004A54  0E00               	movlw	0
  7998   004A56  6E06               	movwf	(fputc@c+1)^0,c
  7999   004A58  0E20               	movlw	32
  8000   004A5A  6E05               	movwf	fputc@c^0,c
  8001   004A5C  C013  F007         	movff	pad@fp,fputc@fp
  8002   004A60  EC78  F023         	call	_fputc	;wreg free
  8003   004A64                     
  8004                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
  8005   004A64  4A19               	infsnz	pad@i^0,f,c
  8006   004A66  2A1A               	incf	(pad@i+1)^0,f,c
  8007   004A68                     l3312:
  8008                           
  8009                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  8010   004A68  5016               	movf	pad@p^0,w,c
  8011   004A6A  5C19               	subwf	pad@i^0,w,c
  8012   004A6C  501A               	movf	(pad@i+1)^0,w,c
  8013   004A6E  0A80               	xorlw	128
  8014   004A70  6E18               	movwf	??_pad^0,c
  8015   004A72  5017               	movf	(pad@p+1)^0,w,c
  8016   004A74  0A80               	xorlw	128
  8017   004A76  5818               	subwfb	??_pad^0,w,c
  8018   004A78  A0D8               	btfss	status,0,c
  8019   004A7A  EF41  F025         	goto	u3371
  8020   004A7E  EF43  F025         	goto	u3370
  8021   004A82                     u3371:
  8022   004A82  EF2A  F025         	goto	l3308
  8023   004A86                     u3370:
  8024   004A86                     
  8025                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  8026   004A86  C014  F00D         	movff	pad@buf,fputs@s
  8027   004A8A  C015  F00E         	movff	pad@buf+1,fputs@s+1
  8028   004A8E  C013  F00F         	movff	pad@fp,fputs@fp
  8029   004A92  ECD5  F026         	call	_fputs	;wreg free
  8030   004A96  0012               	return		;funcret
  8031   004A98                     __end_of_pad:
  8032                           	callstack 0
  8033                           
  8034 ;; *************** function _fputs *****************
  8035 ;; Defined at:
  8036 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
  8037 ;; Parameters:    Size  Location     Type
  8038 ;;  s               2   12[COMRAM] PTR const unsigned char 
  8039 ;;		 -> dbuf(80), 
  8040 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  8041 ;;		 -> sprintf@f(11), 
  8042 ;; Auto vars:     Size  Location     Type
  8043 ;;  i               2   16[COMRAM] int 
  8044 ;;  c               1   15[COMRAM] unsigned char 
  8045 ;; Return value:  Size  Location     Type
  8046 ;;                  2   12[COMRAM] int 
  8047 ;; Registers used:
  8048 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8049 ;; Tracked objects:
  8050 ;;		On entry : 0/0
  8051 ;;		On exit  : 0/0
  8052 ;;		Unchanged: 0/0
  8053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8054 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8055 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8057 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8058 ;;Total ram usage:        6 bytes
  8059 ;; Hardware stack levels used: 1
  8060 ;; Hardware stack levels required when called: 3
  8061 ;; This function calls:
  8062 ;;		_fputc
  8063 ;; This function is called by:
  8064 ;;		_pad
  8065 ;; This function uses a non-reentrant model
  8066 ;;
  8067                           
  8068                           	psect	text25
  8069   004DAA                     __ptext25:
  8070                           	callstack 0
  8071   004DAA                     _fputs:
  8072                           	callstack 21
  8073   004DAA  0E00               	movlw	0
  8074   004DAC  6E12               	movwf	(fputs@i+1)^0,c
  8075   004DAE  0E00               	movlw	0
  8076   004DB0  6E11               	movwf	fputs@i^0,c
  8077   004DB2  EFE4  F026         	goto	l2862
  8078   004DB6                     l2858:
  8079   004DB6  C010  F005         	movff	fputs@c,fputc@c
  8080   004DBA  6A06               	clrf	(fputc@c+1)^0,c
  8081   004DBC  C00F  F007         	movff	fputs@fp,fputc@fp
  8082   004DC0  EC78  F023         	call	_fputc	;wreg free
  8083   004DC4  4A11               	infsnz	fputs@i^0,f,c
  8084   004DC6  2A12               	incf	(fputs@i+1)^0,f,c
  8085   004DC8                     l2862:
  8086   004DC8  5011               	movf	fputs@i^0,w,c
  8087   004DCA  240D               	addwf	fputs@s^0,w,c
  8088   004DCC  6ED9               	movwf	fsr2l,c
  8089   004DCE  5012               	movf	(fputs@i+1)^0,w,c
  8090   004DD0  200E               	addwfc	(fputs@s+1)^0,w,c
  8091   004DD2  6EDA               	movwf	fsr2h,c
  8092   004DD4  50DF               	movf	indf2,w,c
  8093   004DD6  6E10               	movwf	fputs@c^0,c
  8094   004DD8  5010               	movf	fputs@c^0,w,c
  8095   004DDA  A4D8               	btfss	status,2,c
  8096   004DDC  EFF2  F026         	goto	u2651
  8097   004DE0  EFF4  F026         	goto	u2650
  8098   004DE4                     u2651:
  8099   004DE4  EFDB  F026         	goto	l2858
  8100   004DE8                     u2650:
  8101   004DE8  0012               	return		;funcret
  8102   004DEA                     __end_of_fputs:
  8103                           	callstack 0
  8104                           
  8105 ;; *************** function _fputc *****************
  8106 ;; Defined at:
  8107 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  8108 ;; Parameters:    Size  Location     Type
  8109 ;;  c               2    4[COMRAM] int 
  8110 ;;  fp              1    6[COMRAM] PTR struct _IO_FILE
  8111 ;;		 -> sprintf@f(11), 
  8112 ;; Auto vars:     Size  Location     Type
  8113 ;;		None
  8114 ;; Return value:  Size  Location     Type
  8115 ;;                  2    4[COMRAM] int 
  8116 ;; Registers used:
  8117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8118 ;; Tracked objects:
  8119 ;;		On entry : 0/0
  8120 ;;		On exit  : 0/0
  8121 ;;		Unchanged: 0/0
  8122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8123 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8125 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8126 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8127 ;;Total ram usage:        8 bytes
  8128 ;; Hardware stack levels used: 1
  8129 ;; Hardware stack levels required when called: 2
  8130 ;; This function calls:
  8131 ;;		_putch
  8132 ;; This function is called by:
  8133 ;;		_pad
  8134 ;;		_vfpfcnvrt
  8135 ;;		_fputs
  8136 ;; This function uses a non-reentrant model
  8137 ;;
  8138                           
  8139                           	psect	text26
  8140   0046F0                     __ptext26:
  8141                           	callstack 0
  8142   0046F0                     _fputc:
  8143                           	callstack 24
  8144   0046F0  5007               	movf	fputc@fp^0,w,c
  8145   0046F2  B4D8               	btfsc	status,2,c
  8146   0046F4  EF7E  F023         	goto	u2221
  8147   0046F8  EF80  F023         	goto	u2220
  8148   0046FC                     u2221:
  8149   0046FC  EF88  F023         	goto	l2652
  8150   004700                     u2220:
  8151   004700  5007               	movf	fputc@fp^0,w,c
  8152   004702  A4D8               	btfss	status,2,c
  8153   004704  EF86  F023         	goto	u2231
  8154   004708  EF88  F023         	goto	u2230
  8155   00470C                     u2231:
  8156   00470C  EF8D  F023         	goto	l2654
  8157   004710                     u2230:
  8158   004710                     l2652:
  8159   004710  5005               	movf	fputc@c^0,w,c
  8160   004712  ECF7  F027         	call	_putch
  8161   004716  EFCD  F023         	goto	l1118
  8162   00471A                     l2654:
  8163   00471A  5007               	movf	fputc@fp^0,w,c
  8164   00471C  6ED9               	movwf	fsr2l,c
  8165   00471E  6ADA               	clrf	fsr2h,c
  8166   004720  0E09               	movlw	9
  8167   004722  26D9               	addwf	fsr2l,f,c
  8168   004724  50DE               	movf	postinc2,w,c
  8169   004726  10DE               	iorwf	postinc2,w,c
  8170   004728  B4D8               	btfsc	status,2,c
  8171   00472A  EF99  F023         	goto	u2241
  8172   00472E  EF9B  F023         	goto	u2240
  8173   004732                     u2241:
  8174   004732  EFB4  F023         	goto	l2658
  8175   004736                     u2240:
  8176   004736  5007               	movf	fputc@fp^0,w,c
  8177   004738  6ED9               	movwf	fsr2l,c
  8178   00473A  6ADA               	clrf	fsr2h,c
  8179   00473C  0E09               	movlw	9
  8180   00473E  26D9               	addwf	fsr2l,f,c
  8181   004740  5007               	movf	fputc@fp^0,w,c
  8182   004742  6EE1               	movwf	fsr1l,c
  8183   004744  6AE2               	clrf	fsr1h,c
  8184   004746  0E02               	movlw	2
  8185   004748  26E1               	addwf	fsr1l,f,c
  8186   00474A  50DE               	movf	postinc2,w,c
  8187   00474C  5CE6               	subwf	postinc1,w,c
  8188   00474E  50E6               	movf	postinc1,w,c
  8189   004750  0A80               	xorlw	128
  8190   004752  6E0C               	movwf	(??_fputc+4)^0,c
  8191   004754  50DE               	movf	postinc2,w,c
  8192   004756  0A80               	xorlw	128
  8193   004758  580C               	subwfb	(??_fputc+4)^0,w,c
  8194   00475A  B0D8               	btfsc	status,0,c
  8195   00475C  EFB2  F023         	goto	u2251
  8196   004760  EFB4  F023         	goto	u2250
  8197   004764                     u2251:
  8198   004764  EFCD  F023         	goto	l1118
  8199   004768                     u2250:
  8200   004768                     l2658:
  8201   004768  5007               	movf	fputc@fp^0,w,c
  8202   00476A  6ED9               	movwf	fsr2l,c
  8203   00476C  6ADA               	clrf	fsr2h,c
  8204   00476E  0E02               	movlw	2
  8205   004770  26D9               	addwf	fsr2l,f,c
  8206   004772  50DF               	movf	indf2,w,c
  8207   004774  6E08               	movwf	??_fputc^0,c
  8208   004776  5007               	movf	fputc@fp^0,w,c
  8209   004778  6ED9               	movwf	fsr2l,c
  8210   00477A  6ADA               	clrf	fsr2h,c
  8211   00477C  50DF               	movf	indf2,w,c
  8212   00477E  2408               	addwf	??_fputc^0,w,c
  8213   004780  6ED9               	movwf	fsr2l,c
  8214   004782  6ADA               	clrf	fsr2h,c
  8215   004784  0060  F017  FFDF   	movff	fputc@c,indf2
  8216   00478A  5007               	movf	fputc@fp^0,w,c
  8217   00478C  6ED9               	movwf	fsr2l,c
  8218   00478E  6ADA               	clrf	fsr2h,c
  8219   004790  0E02               	movlw	2
  8220   004792  26D9               	addwf	fsr2l,f,c
  8221   004794  2ADE               	incf	postinc2,f,c
  8222   004796  0E00               	movlw	0
  8223   004798  22DD               	addwfc	postdec2,f,c
  8224   00479A                     l1118:
  8225   00479A  0012               	return		;funcret
  8226   00479C                     __end_of_fputc:
  8227                           	callstack 0
  8228                           
  8229 ;; *************** function _putch *****************
  8230 ;; Defined at:
  8231 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  8232 ;; Parameters:    Size  Location     Type
  8233 ;;  c               1    wreg     unsigned char 
  8234 ;; Auto vars:     Size  Location     Type
  8235 ;;  c               1    0[COMRAM] unsigned char 
  8236 ;; Return value:  Size  Location     Type
  8237 ;;                  1    wreg      void 
  8238 ;; Registers used:
  8239 ;;		wreg
  8240 ;; Tracked objects:
  8241 ;;		On entry : 0/0
  8242 ;;		On exit  : 0/0
  8243 ;;		Unchanged: 0/0
  8244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8249 ;;Total ram usage:        0 bytes
  8250 ;; Hardware stack levels used: 1
  8251 ;; Hardware stack levels required when called: 1
  8252 ;; This function calls:
  8253 ;;		Nothing
  8254 ;; This function is called by:
  8255 ;;		_fputc
  8256 ;; This function uses a non-reentrant model
  8257 ;;
  8258                           
  8259                           	psect	text27
  8260   004FEE                     __ptext27:
  8261                           	callstack 0
  8262   004FEE                     _putch:
  8263                           	callstack 24
  8264   004FEE  0012               	return		;funcret
  8265   004FF0                     __end_of_putch:
  8266                           	callstack 0
  8267                           
  8268 ;; *************** function _abs *****************
  8269 ;; Defined at:
  8270 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
  8271 ;; Parameters:    Size  Location     Type
  8272 ;;  a               2   10[COMRAM] int 
  8273 ;; Auto vars:     Size  Location     Type
  8274 ;;		None
  8275 ;; Return value:  Size  Location     Type
  8276 ;;                  2   10[COMRAM] int 
  8277 ;; Registers used:
  8278 ;;		wreg, status,2, status,0
  8279 ;; Tracked objects:
  8280 ;;		On entry : 0/0
  8281 ;;		On exit  : 0/0
  8282 ;;		Unchanged: 0/0
  8283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8284 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8286 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8287 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8288 ;;Total ram usage:        4 bytes
  8289 ;; Hardware stack levels used: 1
  8290 ;; Hardware stack levels required when called: 1
  8291 ;; This function calls:
  8292 ;;		Nothing
  8293 ;; This function is called by:
  8294 ;;		_dtoa
  8295 ;; This function uses a non-reentrant model
  8296 ;;
  8297                           
  8298                           	psect	text28
  8299   004E9A                     __ptext28:
  8300                           	callstack 0
  8301   004E9A                     _abs:
  8302                           	callstack 24
  8303   004E9A  BE0C               	btfsc	(abs@a+1)^0,7,c
  8304   004E9C  EF52  F027         	goto	u3381
  8305   004EA0  EF54  F027         	goto	u3380
  8306   004EA4                     u3381:
  8307   004EA4  EF5A  F027         	goto	l1077
  8308   004EA8                     u3380:
  8309   004EA8  C00B  F00B         	movff	abs@a,?_abs
  8310   004EAC  C00C  F00C         	movff	abs@a+1,?_abs+1
  8311   004EB0  EF66  F027         	goto	l1080
  8312   004EB4                     l1077:
  8313   004EB4  C00B  F00D         	movff	abs@a,??_abs
  8314   004EB8  C00C  F00E         	movff	abs@a+1,??_abs+1
  8315   004EBC  1E0D               	comf	??_abs^0,f,c
  8316   004EBE  1E0E               	comf	(??_abs+1)^0,f,c
  8317   004EC0  4A0D               	infsnz	??_abs^0,f,c
  8318   004EC2  2A0E               	incf	(??_abs+1)^0,f,c
  8319   004EC4  C00D  F00B         	movff	??_abs,?_abs
  8320   004EC8  C00E  F00C         	movff	??_abs+1,?_abs+1
  8321   004ECC                     l1080:
  8322   004ECC  0012               	return		;funcret
  8323   004ECE                     __end_of_abs:
  8324                           	callstack 0
  8325                           
  8326 ;; *************** function ___awmod *****************
  8327 ;; Defined at:
  8328 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  8329 ;; Parameters:    Size  Location     Type
  8330 ;;  dividend        2    4[COMRAM] int 
  8331 ;;  divisor         2    6[COMRAM] int 
  8332 ;; Auto vars:     Size  Location     Type
  8333 ;;  sign            1    9[COMRAM] unsigned char 
  8334 ;;  counter         1    8[COMRAM] unsigned char 
  8335 ;; Return value:  Size  Location     Type
  8336 ;;                  2    4[COMRAM] int 
  8337 ;; Registers used:
  8338 ;;		wreg, status,2, status,0
  8339 ;; Tracked objects:
  8340 ;;		On entry : 0/0
  8341 ;;		On exit  : 0/0
  8342 ;;		Unchanged: 0/0
  8343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8344 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8345 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8347 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8348 ;;Total ram usage:        6 bytes
  8349 ;; Hardware stack levels used: 1
  8350 ;; Hardware stack levels required when called: 1
  8351 ;; This function calls:
  8352 ;;		Nothing
  8353 ;; This function is called by:
  8354 ;;		_dtoa
  8355 ;; This function uses a non-reentrant model
  8356 ;;
  8357                           
  8358                           	psect	text29
  8359   004642                     __ptext29:
  8360                           	callstack 0
  8361   004642                     ___awmod:
  8362                           	callstack 24
  8363   004642  6A0A               	clrf	___awmod@sign^0,c
  8364   004644  BE06               	btfsc	(___awmod@dividend+1)^0,7,c
  8365   004646  EF29  F023         	goto	u3140
  8366   00464A  EF27  F023         	goto	u3141
  8367   00464E                     u3141:
  8368   00464E  EF2F  F023         	goto	l3186
  8369   004652                     u3140:
  8370   004652  6C05               	negf	___awmod@dividend^0,c
  8371   004654  1E06               	comf	(___awmod@dividend+1)^0,f,c
  8372   004656  B0D8               	btfsc	status,0,c
  8373   004658  2A06               	incf	(___awmod@dividend+1)^0,f,c
  8374   00465A  0E01               	movlw	1
  8375   00465C  6E0A               	movwf	___awmod@sign^0,c
  8376   00465E                     l3186:
  8377   00465E  BE08               	btfsc	(___awmod@divisor+1)^0,7,c
  8378   004660  EF36  F023         	goto	u3150
  8379   004664  EF34  F023         	goto	u3151
  8380   004668                     u3151:
  8381   004668  EF3A  F023         	goto	l3190
  8382   00466C                     u3150:
  8383   00466C  6C07               	negf	___awmod@divisor^0,c
  8384   00466E  1E08               	comf	(___awmod@divisor+1)^0,f,c
  8385   004670  B0D8               	btfsc	status,0,c
  8386   004672  2A08               	incf	(___awmod@divisor+1)^0,f,c
  8387   004674                     l3190:
  8388   004674  5007               	movf	___awmod@divisor^0,w,c
  8389   004676  1008               	iorwf	(___awmod@divisor+1)^0,w,c
  8390   004678  B4D8               	btfsc	status,2,c
  8391   00467A  EF41  F023         	goto	u3161
  8392   00467E  EF43  F023         	goto	u3160
  8393   004682                     u3161:
  8394   004682  EF67  F023         	goto	l3206
  8395   004686                     u3160:
  8396   004686  0E01               	movlw	1
  8397   004688  6E09               	movwf	___awmod@counter^0,c
  8398   00468A  EF4B  F023         	goto	l3196
  8399   00468E                     l3194:
  8400   00468E  90D8               	bcf	status,0,c
  8401   004690  3607               	rlcf	___awmod@divisor^0,f,c
  8402   004692  3608               	rlcf	(___awmod@divisor+1)^0,f,c
  8403   004694  2A09               	incf	___awmod@counter^0,f,c
  8404   004696                     l3196:
  8405   004696  AE08               	btfss	(___awmod@divisor+1)^0,7,c
  8406   004698  EF50  F023         	goto	u3171
  8407   00469C  EF52  F023         	goto	u3170
  8408   0046A0                     u3171:
  8409   0046A0  EF47  F023         	goto	l3194
  8410   0046A4                     u3170:
  8411   0046A4                     l3198:
  8412   0046A4  5007               	movf	___awmod@divisor^0,w,c
  8413   0046A6  5C05               	subwf	___awmod@dividend^0,w,c
  8414   0046A8  5008               	movf	(___awmod@divisor+1)^0,w,c
  8415   0046AA  5806               	subwfb	(___awmod@dividend+1)^0,w,c
  8416   0046AC  A0D8               	btfss	status,0,c
  8417   0046AE  EF5B  F023         	goto	u3181
  8418   0046B2  EF5D  F023         	goto	u3180
  8419   0046B6                     u3181:
  8420   0046B6  EF61  F023         	goto	l3202
  8421   0046BA                     u3180:
  8422   0046BA  5007               	movf	___awmod@divisor^0,w,c
  8423   0046BC  5E05               	subwf	___awmod@dividend^0,f,c
  8424   0046BE  5008               	movf	(___awmod@divisor+1)^0,w,c
  8425   0046C0  5A06               	subwfb	(___awmod@dividend+1)^0,f,c
  8426   0046C2                     l3202:
  8427   0046C2  90D8               	bcf	status,0,c
  8428   0046C4  3208               	rrcf	(___awmod@divisor+1)^0,f,c
  8429   0046C6  3207               	rrcf	___awmod@divisor^0,f,c
  8430   0046C8  2E09               	decfsz	___awmod@counter^0,f,c
  8431   0046CA  EF52  F023         	goto	l3198
  8432   0046CE                     l3206:
  8433   0046CE  500A               	movf	___awmod@sign^0,w,c
  8434   0046D0  B4D8               	btfsc	status,2,c
  8435   0046D2  EF6D  F023         	goto	u3191
  8436   0046D6  EF6F  F023         	goto	u3190
  8437   0046DA                     u3191:
  8438   0046DA  EF73  F023         	goto	l3210
  8439   0046DE                     u3190:
  8440   0046DE  6C05               	negf	___awmod@dividend^0,c
  8441   0046E0  1E06               	comf	(___awmod@dividend+1)^0,f,c
  8442   0046E2  B0D8               	btfsc	status,0,c
  8443   0046E4  2A06               	incf	(___awmod@dividend+1)^0,f,c
  8444   0046E6                     l3210:
  8445   0046E6  C005  F005         	movff	___awmod@dividend,?___awmod
  8446   0046EA  C006  F006         	movff	___awmod@dividend+1,?___awmod+1
  8447   0046EE  0012               	return		;funcret
  8448   0046F0                     __end_of___awmod:
  8449                           	callstack 0
  8450                           
  8451 ;; *************** function ___awdiv *****************
  8452 ;; Defined at:
  8453 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  8454 ;; Parameters:    Size  Location     Type
  8455 ;;  dividend        2    4[COMRAM] int 
  8456 ;;  divisor         2    6[COMRAM] int 
  8457 ;; Auto vars:     Size  Location     Type
  8458 ;;  quotient        2   10[COMRAM] int 
  8459 ;;  sign            1    9[COMRAM] unsigned char 
  8460 ;;  counter         1    8[COMRAM] unsigned char 
  8461 ;; Return value:  Size  Location     Type
  8462 ;;                  2    4[COMRAM] int 
  8463 ;; Registers used:
  8464 ;;		wreg, status,2, status,0
  8465 ;; Tracked objects:
  8466 ;;		On entry : 0/0
  8467 ;;		On exit  : 0/0
  8468 ;;		Unchanged: 0/0
  8469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8470 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8471 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8473 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8474 ;;Total ram usage:        8 bytes
  8475 ;; Hardware stack levels used: 1
  8476 ;; Hardware stack levels required when called: 1
  8477 ;; This function calls:
  8478 ;;		Nothing
  8479 ;; This function is called by:
  8480 ;;		_dtoa
  8481 ;; This function uses a non-reentrant model
  8482 ;;
  8483                           
  8484                           	psect	text30
  8485   0044C8                     __ptext30:
  8486                           	callstack 0
  8487   0044C8                     ___awdiv:
  8488                           	callstack 24
  8489   0044C8  6A0A               	clrf	___awdiv@sign^0,c
  8490   0044CA  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  8491   0044CC  EF6C  F022         	goto	u3080
  8492   0044D0  EF6A  F022         	goto	u3081
  8493   0044D4                     u3081:
  8494   0044D4  EF72  F022         	goto	l3142
  8495   0044D8                     u3080:
  8496   0044D8  6C07               	negf	___awdiv@divisor^0,c
  8497   0044DA  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  8498   0044DC  B0D8               	btfsc	status,0,c
  8499   0044DE  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  8500   0044E0  0E01               	movlw	1
  8501   0044E2  6E0A               	movwf	___awdiv@sign^0,c
  8502   0044E4                     l3142:
  8503   0044E4  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  8504   0044E6  EF79  F022         	goto	u3090
  8505   0044EA  EF77  F022         	goto	u3091
  8506   0044EE                     u3091:
  8507   0044EE  EF7F  F022         	goto	l3148
  8508   0044F2                     u3090:
  8509   0044F2  6C05               	negf	___awdiv@dividend^0,c
  8510   0044F4  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  8511   0044F6  B0D8               	btfsc	status,0,c
  8512   0044F8  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  8513   0044FA  0E01               	movlw	1
  8514   0044FC  1A0A               	xorwf	___awdiv@sign^0,f,c
  8515   0044FE                     l3148:
  8516   0044FE  0E00               	movlw	0
  8517   004500  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  8518   004502  0E00               	movlw	0
  8519   004504  6E0B               	movwf	___awdiv@quotient^0,c
  8520   004506  5007               	movf	___awdiv@divisor^0,w,c
  8521   004508  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  8522   00450A  B4D8               	btfsc	status,2,c
  8523   00450C  EF8A  F022         	goto	u3101
  8524   004510  EF8C  F022         	goto	u3100
  8525   004514                     u3101:
  8526   004514  EFB4  F022         	goto	l3170
  8527   004518                     u3100:
  8528   004518  0E01               	movlw	1
  8529   00451A  6E09               	movwf	___awdiv@counter^0,c
  8530   00451C  EF94  F022         	goto	l3156
  8531   004520                     l3154:
  8532   004520  90D8               	bcf	status,0,c
  8533   004522  3607               	rlcf	___awdiv@divisor^0,f,c
  8534   004524  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  8535   004526  2A09               	incf	___awdiv@counter^0,f,c
  8536   004528                     l3156:
  8537   004528  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  8538   00452A  EF99  F022         	goto	u3111
  8539   00452E  EF9B  F022         	goto	u3110
  8540   004532                     u3111:
  8541   004532  EF90  F022         	goto	l3154
  8542   004536                     u3110:
  8543   004536                     l3158:
  8544   004536  90D8               	bcf	status,0,c
  8545   004538  360B               	rlcf	___awdiv@quotient^0,f,c
  8546   00453A  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  8547   00453C  5007               	movf	___awdiv@divisor^0,w,c
  8548   00453E  5C05               	subwf	___awdiv@dividend^0,w,c
  8549   004540  5008               	movf	(___awdiv@divisor+1)^0,w,c
  8550   004542  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  8551   004544  A0D8               	btfss	status,0,c
  8552   004546  EFA7  F022         	goto	u3121
  8553   00454A  EFA9  F022         	goto	u3120
  8554   00454E                     u3121:
  8555   00454E  EFAE  F022         	goto	l3166
  8556   004552                     u3120:
  8557   004552  5007               	movf	___awdiv@divisor^0,w,c
  8558   004554  5E05               	subwf	___awdiv@dividend^0,f,c
  8559   004556  5008               	movf	(___awdiv@divisor+1)^0,w,c
  8560   004558  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  8561   00455A  800B               	bsf	___awdiv@quotient^0,0,c
  8562   00455C                     l3166:
  8563   00455C  90D8               	bcf	status,0,c
  8564   00455E  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  8565   004560  3207               	rrcf	___awdiv@divisor^0,f,c
  8566   004562  2E09               	decfsz	___awdiv@counter^0,f,c
  8567   004564  EF9B  F022         	goto	l3158
  8568   004568                     l3170:
  8569   004568  500A               	movf	___awdiv@sign^0,w,c
  8570   00456A  B4D8               	btfsc	status,2,c
  8571   00456C  EFBA  F022         	goto	u3131
  8572   004570  EFBC  F022         	goto	u3130
  8573   004574                     u3131:
  8574   004574  EFC0  F022         	goto	l3174
  8575   004578                     u3130:
  8576   004578  6C0B               	negf	___awdiv@quotient^0,c
  8577   00457A  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  8578   00457C  B0D8               	btfsc	status,0,c
  8579   00457E  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  8580   004580                     l3174:
  8581   004580  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  8582   004584  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  8583   004588  0012               	return		;funcret
  8584   00458A                     __end_of___awdiv:
  8585                           	callstack 0
  8586                           
  8587 ;; *************** function ___lmul *****************
  8588 ;; Defined at:
  8589 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul32.c"
  8590 ;; Parameters:    Size  Location     Type
  8591 ;;  multiplier      4    4[COMRAM] unsigned long 
  8592 ;;  multiplicand    4    8[COMRAM] unsigned long 
  8593 ;; Auto vars:     Size  Location     Type
  8594 ;;  product         4   12[COMRAM] unsigned long 
  8595 ;; Return value:  Size  Location     Type
  8596 ;;                  4    4[COMRAM] unsigned long 
  8597 ;; Registers used:
  8598 ;;		wreg, status,2, status,0
  8599 ;; Tracked objects:
  8600 ;;		On entry : 0/0
  8601 ;;		On exit  : 0/0
  8602 ;;		Unchanged: 0/0
  8603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8604 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8605 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8607 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8608 ;;Total ram usage:       12 bytes
  8609 ;; Hardware stack levels used: 1
  8610 ;; Hardware stack levels required when called: 1
  8611 ;; This function calls:
  8612 ;;		Nothing
  8613 ;; This function is called by:
  8614 ;;		_PWM
  8615 ;; This function uses a non-reentrant model
  8616 ;;
  8617                           
  8618                           	psect	text31
  8619   00495C                     __ptext31:
  8620                           	callstack 0
  8621   00495C                     ___lmul:
  8622                           	callstack 28
  8623   00495C  0E00               	movlw	0
  8624   00495E  6E0D               	movwf	___lmul@product^0,c
  8625   004960  0E00               	movlw	0
  8626   004962  6E0E               	movwf	(___lmul@product+1)^0,c
  8627   004964  0E00               	movlw	0
  8628   004966  6E0F               	movwf	(___lmul@product+2)^0,c
  8629   004968  0E00               	movlw	0
  8630   00496A  6E10               	movwf	(___lmul@product+3)^0,c
  8631   00496C                     l3886:
  8632   00496C  A005               	btfss	___lmul@multiplier^0,0,c
  8633   00496E  EFBB  F024         	goto	u4191
  8634   004972  EFBD  F024         	goto	u4190
  8635   004976                     u4191:
  8636   004976  EFC5  F024         	goto	l3890
  8637   00497A                     u4190:
  8638   00497A  5009               	movf	___lmul@multiplicand^0,w,c
  8639   00497C  260D               	addwf	___lmul@product^0,f,c
  8640   00497E  500A               	movf	(___lmul@multiplicand+1)^0,w,c
  8641   004980  220E               	addwfc	(___lmul@product+1)^0,f,c
  8642   004982  500B               	movf	(___lmul@multiplicand+2)^0,w,c
  8643   004984  220F               	addwfc	(___lmul@product+2)^0,f,c
  8644   004986  500C               	movf	(___lmul@multiplicand+3)^0,w,c
  8645   004988  2210               	addwfc	(___lmul@product+3)^0,f,c
  8646   00498A                     l3890:
  8647   00498A  90D8               	bcf	status,0,c
  8648   00498C  3609               	rlcf	___lmul@multiplicand^0,f,c
  8649   00498E  360A               	rlcf	(___lmul@multiplicand+1)^0,f,c
  8650   004990  360B               	rlcf	(___lmul@multiplicand+2)^0,f,c
  8651   004992  360C               	rlcf	(___lmul@multiplicand+3)^0,f,c
  8652   004994  90D8               	bcf	status,0,c
  8653   004996  3208               	rrcf	(___lmul@multiplier+3)^0,f,c
  8654   004998  3207               	rrcf	(___lmul@multiplier+2)^0,f,c
  8655   00499A  3206               	rrcf	(___lmul@multiplier+1)^0,f,c
  8656   00499C  3205               	rrcf	___lmul@multiplier^0,f,c
  8657   00499E  5005               	movf	___lmul@multiplier^0,w,c
  8658   0049A0  1006               	iorwf	(___lmul@multiplier+1)^0,w,c
  8659   0049A2  1007               	iorwf	(___lmul@multiplier+2)^0,w,c
  8660   0049A4  1008               	iorwf	(___lmul@multiplier+3)^0,w,c
  8661   0049A6  A4D8               	btfss	status,2,c
  8662   0049A8  EFD8  F024         	goto	u4201
  8663   0049AC  EFDA  F024         	goto	u4200
  8664   0049B0                     u4201:
  8665   0049B0  EFB6  F024         	goto	l3886
  8666   0049B4                     u4200:
  8667   0049B4  C00D  F005         	movff	___lmul@product,?___lmul
  8668   0049B8  C00E  F006         	movff	___lmul@product+1,?___lmul+1
  8669   0049BC  C00F  F007         	movff	___lmul@product+2,?___lmul+2
  8670   0049C0  C010  F008         	movff	___lmul@product+3,?___lmul+3
  8671   0049C4  0012               	return		;funcret
  8672   0049C6                     __end_of___lmul:
  8673                           	callstack 0
  8674                           
  8675 ;; *************** function ___lldiv *****************
  8676 ;; Defined at:
  8677 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__lldiv.c"
  8678 ;; Parameters:    Size  Location     Type
  8679 ;;  dividend        4   16[COMRAM] unsigned long 
  8680 ;;  divisor         4   20[COMRAM] unsigned long 
  8681 ;; Auto vars:     Size  Location     Type
  8682 ;;  quotient        4   24[COMRAM] unsigned long 
  8683 ;;  counter         1   28[COMRAM] unsigned char 
  8684 ;; Return value:  Size  Location     Type
  8685 ;;                  4   16[COMRAM] unsigned long 
  8686 ;; Registers used:
  8687 ;;		wreg, status,2, status,0
  8688 ;; Tracked objects:
  8689 ;;		On entry : 0/0
  8690 ;;		On exit  : 0/0
  8691 ;;		Unchanged: 0/0
  8692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8693 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8694 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8696 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8697 ;;Total ram usage:       13 bytes
  8698 ;; Hardware stack levels used: 1
  8699 ;; Hardware stack levels required when called: 1
  8700 ;; This function calls:
  8701 ;;		Nothing
  8702 ;; This function is called by:
  8703 ;;		_PWM
  8704 ;; This function uses a non-reentrant model
  8705 ;;
  8706                           
  8707                           	psect	text32
  8708   004846                     __ptext32:
  8709                           	callstack 0
  8710   004846                     ___lldiv:
  8711                           	callstack 28
  8712   004846  0E00               	movlw	0
  8713   004848  6E19               	movwf	___lldiv@quotient^0,c
  8714   00484A  0E00               	movlw	0
  8715   00484C  6E1A               	movwf	(___lldiv@quotient+1)^0,c
  8716   00484E  0E00               	movlw	0
  8717   004850  6E1B               	movwf	(___lldiv@quotient+2)^0,c
  8718   004852  0E00               	movlw	0
  8719   004854  6E1C               	movwf	(___lldiv@quotient+3)^0,c
  8720   004856  5015               	movf	___lldiv@divisor^0,w,c
  8721   004858  1016               	iorwf	(___lldiv@divisor+1)^0,w,c
  8722   00485A  1017               	iorwf	(___lldiv@divisor+2)^0,w,c
  8723   00485C  1018               	iorwf	(___lldiv@divisor+3)^0,w,c
  8724   00485E  B4D8               	btfsc	status,2,c
  8725   004860  EF34  F024         	goto	u4211
  8726   004864  EF36  F024         	goto	u4210
  8727   004868                     u4211:
  8728   004868  EF6C  F024         	goto	l270
  8729   00486C                     u4210:
  8730   00486C  0E01               	movlw	1
  8731   00486E  6E1D               	movwf	___lldiv@counter^0,c
  8732   004870  EF40  F024         	goto	l3902
  8733   004874                     l3900:
  8734   004874  90D8               	bcf	status,0,c
  8735   004876  3615               	rlcf	___lldiv@divisor^0,f,c
  8736   004878  3616               	rlcf	(___lldiv@divisor+1)^0,f,c
  8737   00487A  3617               	rlcf	(___lldiv@divisor+2)^0,f,c
  8738   00487C  3618               	rlcf	(___lldiv@divisor+3)^0,f,c
  8739   00487E  2A1D               	incf	___lldiv@counter^0,f,c
  8740   004880                     l3902:
  8741   004880  AE18               	btfss	(___lldiv@divisor+3)^0,7,c
  8742   004882  EF45  F024         	goto	u4221
  8743   004886  EF47  F024         	goto	u4220
  8744   00488A                     u4221:
  8745   00488A  EF3A  F024         	goto	l3900
  8746   00488E                     u4220:
  8747   00488E                     l3904:
  8748   00488E  90D8               	bcf	status,0,c
  8749   004890  3619               	rlcf	___lldiv@quotient^0,f,c
  8750   004892  361A               	rlcf	(___lldiv@quotient+1)^0,f,c
  8751   004894  361B               	rlcf	(___lldiv@quotient+2)^0,f,c
  8752   004896  361C               	rlcf	(___lldiv@quotient+3)^0,f,c
  8753   004898  5015               	movf	___lldiv@divisor^0,w,c
  8754   00489A  5C11               	subwf	___lldiv@dividend^0,w,c
  8755   00489C  5016               	movf	(___lldiv@divisor+1)^0,w,c
  8756   00489E  5812               	subwfb	(___lldiv@dividend+1)^0,w,c
  8757   0048A0  5017               	movf	(___lldiv@divisor+2)^0,w,c
  8758   0048A2  5813               	subwfb	(___lldiv@dividend+2)^0,w,c
  8759   0048A4  5018               	movf	(___lldiv@divisor+3)^0,w,c
  8760   0048A6  5814               	subwfb	(___lldiv@dividend+3)^0,w,c
  8761   0048A8  A0D8               	btfss	status,0,c
  8762   0048AA  EF59  F024         	goto	u4231
  8763   0048AE  EF5B  F024         	goto	u4230
  8764   0048B2                     u4231:
  8765   0048B2  EF64  F024         	goto	l3912
  8766   0048B6                     u4230:
  8767   0048B6  5015               	movf	___lldiv@divisor^0,w,c
  8768   0048B8  5E11               	subwf	___lldiv@dividend^0,f,c
  8769   0048BA  5016               	movf	(___lldiv@divisor+1)^0,w,c
  8770   0048BC  5A12               	subwfb	(___lldiv@dividend+1)^0,f,c
  8771   0048BE  5017               	movf	(___lldiv@divisor+2)^0,w,c
  8772   0048C0  5A13               	subwfb	(___lldiv@dividend+2)^0,f,c
  8773   0048C2  5018               	movf	(___lldiv@divisor+3)^0,w,c
  8774   0048C4  5A14               	subwfb	(___lldiv@dividend+3)^0,f,c
  8775   0048C6  8019               	bsf	___lldiv@quotient^0,0,c
  8776   0048C8                     l3912:
  8777   0048C8  90D8               	bcf	status,0,c
  8778   0048CA  3218               	rrcf	(___lldiv@divisor+3)^0,f,c
  8779   0048CC  3217               	rrcf	(___lldiv@divisor+2)^0,f,c
  8780   0048CE  3216               	rrcf	(___lldiv@divisor+1)^0,f,c
  8781   0048D0  3215               	rrcf	___lldiv@divisor^0,f,c
  8782   0048D2  2E1D               	decfsz	___lldiv@counter^0,f,c
  8783   0048D4  EF47  F024         	goto	l3904
  8784   0048D8                     l270:
  8785   0048D8  C019  F011         	movff	___lldiv@quotient,?___lldiv
  8786   0048DC  C01A  F012         	movff	___lldiv@quotient+1,?___lldiv+1
  8787   0048E0  C01B  F013         	movff	___lldiv@quotient+2,?___lldiv+2
  8788   0048E4  C01C  F014         	movff	___lldiv@quotient+3,?___lldiv+3
  8789   0048E8  0012               	return		;funcret
  8790   0048EA                     __end_of___lldiv:
  8791                           	callstack 0
  8792                           
  8793 ;; *************** function _TMR2_StartTimer *****************
  8794 ;; Defined at:
  8795 ;;		line 55 in file "./PWM.h"
  8796 ;; Parameters:    Size  Location     Type
  8797 ;;		None
  8798 ;; Auto vars:     Size  Location     Type
  8799 ;;		None
  8800 ;; Return value:  Size  Location     Type
  8801 ;;                  1    wreg      void 
  8802 ;; Registers used:
  8803 ;;		cstack
  8804 ;; Tracked objects:
  8805 ;;		On entry : 0/0
  8806 ;;		On exit  : 0/0
  8807 ;;		Unchanged: 0/0
  8808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8813 ;;Total ram usage:        0 bytes
  8814 ;; Hardware stack levels used: 1
  8815 ;; Hardware stack levels required when called: 2
  8816 ;; This function calls:
  8817 ;;		_TMR2_Start
  8818 ;; This function is called by:
  8819 ;;		_PWM
  8820 ;; This function uses a non-reentrant model
  8821 ;;
  8822                           
  8823                           	psect	text33
  8824   004FE4                     __ptext33:
  8825                           	callstack 0
  8826   004FE4                     _TMR2_StartTimer:
  8827                           	callstack 27
  8828   004FE4                     
  8829                           ;./PWM.h: 57:     TMR2_Start();
  8830   004FE4  ECF5  F027         	call	_TMR2_Start	;wreg free
  8831   004FE8  0012               	return		;funcret
  8832   004FEA                     __end_of_TMR2_StartTimer:
  8833                           	callstack 0
  8834                           
  8835 ;; *************** function _TMR2_Start *****************
  8836 ;; Defined at:
  8837 ;;		line 49 in file "./PWM.h"
  8838 ;; Parameters:    Size  Location     Type
  8839 ;;		None
  8840 ;; Auto vars:     Size  Location     Type
  8841 ;;		None
  8842 ;; Return value:  Size  Location     Type
  8843 ;;                  1    wreg      void 
  8844 ;; Registers used:
  8845 ;;		None
  8846 ;; Tracked objects:
  8847 ;;		On entry : 0/0
  8848 ;;		On exit  : 0/0
  8849 ;;		Unchanged: 0/0
  8850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8855 ;;Total ram usage:        0 bytes
  8856 ;; Hardware stack levels used: 1
  8857 ;; Hardware stack levels required when called: 1
  8858 ;; This function calls:
  8859 ;;		Nothing
  8860 ;; This function is called by:
  8861 ;;		_TMR2_StartTimer
  8862 ;; This function uses a non-reentrant model
  8863 ;;
  8864                           
  8865                           	psect	text34
  8866   004FEA                     __ptext34:
  8867                           	callstack 0
  8868   004FEA                     _TMR2_Start:
  8869                           	callstack 27
  8870   004FEA                     
  8871                           ;./PWM.h: 52:     T2CONbits.TMR2ON = 1;
  8872   004FEA  8EAC               	bsf	172,7,c	;volatile
  8873   004FEC  0012               	return		;funcret
  8874   004FEE                     __end_of_TMR2_Start:
  8875                           	callstack 0
  8876                           
  8877 ;; *************** function _TMR2_Initialize *****************
  8878 ;; Defined at:
  8879 ;;		line 11 in file "./PWM.h"
  8880 ;; Parameters:    Size  Location     Type
  8881 ;;		None
  8882 ;; Auto vars:     Size  Location     Type
  8883 ;;		None
  8884 ;; Return value:  Size  Location     Type
  8885 ;;                  1    wreg      void 
  8886 ;; Registers used:
  8887 ;;		wreg, status,2
  8888 ;; Tracked objects:
  8889 ;;		On entry : 0/0
  8890 ;;		On exit  : 0/0
  8891 ;;		Unchanged: 0/0
  8892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8897 ;;Total ram usage:        0 bytes
  8898 ;; Hardware stack levels used: 1
  8899 ;; Hardware stack levels required when called: 1
  8900 ;; This function calls:
  8901 ;;		Nothing
  8902 ;; This function is called by:
  8903 ;;		_PWM
  8904 ;; This function uses a non-reentrant model
  8905 ;;
  8906                           
  8907                           	psect	text35
  8908   004F88                     __ptext35:
  8909                           	callstack 0
  8910   004F88                     _TMR2_Initialize:
  8911                           	callstack 28
  8912   004F88                     
  8913                           ;./PWM.h: 16:     T2CLKCON = 0x01;
  8914   004F88  0E01               	movlw	1
  8915   004F8A  6EAE               	movwf	174,c	;volatile
  8916   004F8C                     
  8917                           ;./PWM.h: 19:     T2HLT = 0x00;
  8918   004F8C  6AAD               	clrf	173,c	;volatile
  8919   004F8E                     
  8920                           ;./PWM.h: 22:     T2RST = 0x00;
  8921   004F8E  6AAF               	clrf	175,c	;volatile
  8922   004F90                     
  8923                           ;./PWM.h: 25:     T2PR = 0xFF;
  8924   004F90  68AB               	setf	171,c	;volatile
  8925   004F92                     
  8926                           ;./PWM.h: 28:     T2TMR = 0x00;
  8927   004F92  6AAA               	clrf	170,c	;volatile
  8928   004F94                     
  8929                           ;./PWM.h: 31:     PIR4bits.TMR2IF = 0;
  8930   004F94  0139               	movlb	57	; () banked
  8931   004F96  95A4               	bcf	164,2,b	;volatile
  8932                           
  8933                           ;./PWM.h: 34:     T2CON = 0xA0;
  8934   004F98  0EA0               	movlw	160
  8935   004F9A  6EAC               	movwf	172,c	;volatile
  8936   004F9C                     
  8937                           ; BSR set to: 57
  8938   004F9C  0012               	return		;funcret
  8939   004F9E                     __end_of_TMR2_Initialize:
  8940                           	callstack 0
  8941                           
  8942 ;; *************** function _PWM_Output_D8_Enable *****************
  8943 ;; Defined at:
  8944 ;;		line 123 in file "./PWM.h"
  8945 ;; Parameters:    Size  Location     Type
  8946 ;;		None
  8947 ;; Auto vars:     Size  Location     Type
  8948 ;;		None
  8949 ;; Return value:  Size  Location     Type
  8950 ;;                  1    wreg      void 
  8951 ;; Registers used:
  8952 ;;		wreg, status,2
  8953 ;; Tracked objects:
  8954 ;;		On entry : 0/0
  8955 ;;		On exit  : 0/0
  8956 ;;		Unchanged: 0/0
  8957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8962 ;;Total ram usage:        0 bytes
  8963 ;; Hardware stack levels used: 1
  8964 ;; Hardware stack levels required when called: 1
  8965 ;; This function calls:
  8966 ;;		Nothing
  8967 ;; This function is called by:
  8968 ;;		_PWM
  8969 ;; This function uses a non-reentrant model
  8970 ;;
  8971                           
  8972                           	psect	text36
  8973   004F6C                     __ptext36:
  8974                           	callstack 0
  8975   004F6C                     _PWM_Output_D8_Enable:
  8976                           	callstack 28
  8977   004F6C                     
  8978                           ;./PWM.h: 124:     PPSLOCK = 0x55;
  8979   004F6C  0E55               	movlw	85
  8980   004F6E  013A               	movlb	58	; () banked
  8981   004F70  6FBF               	movwf	191,b	;volsfr
  8982                           
  8983                           ;./PWM.h: 125:     PPSLOCK = 0xAA;
  8984   004F72  0EAA               	movlw	170
  8985   004F74  6FBF               	movwf	191,b	;volsfr
  8986   004F76                     
  8987                           ; BSR set to: 58
  8988                           ;./PWM.h: 126:     PPSLOCKbits.PPSLOCKED = 0x00;
  8989   004F76  91BF               	bcf	191,0,b	;volsfr
  8990                           
  8991                           ;./PWM.h: 129:     RB3PPS = 0x0A;
  8992   004F78  0E0A               	movlw	10
  8993   004F7A  6F0B               	movwf	11,b	;volatile
  8994                           
  8995                           ;./PWM.h: 131:     PPSLOCK = 0x55;
  8996   004F7C  0E55               	movlw	85
  8997   004F7E  6FBF               	movwf	191,b	;volsfr
  8998                           
  8999                           ;./PWM.h: 132:     PPSLOCK = 0xAA;
  9000   004F80  0EAA               	movlw	170
  9001   004F82  6FBF               	movwf	191,b	;volsfr
  9002   004F84                     
  9003                           ; BSR set to: 58
  9004                           ;./PWM.h: 133:     PPSLOCKbits.PPSLOCKED = 0x01;
  9005   004F84  81BF               	bsf	191,0,b	;volsfr
  9006   004F86                     
  9007                           ; BSR set to: 58
  9008   004F86  0012               	return		;funcret
  9009   004F88                     __end_of_PWM_Output_D8_Enable:
  9010                           	callstack 0
  9011                           
  9012 ;; *************** function _PWM2_OutputStatusGet *****************
  9013 ;; Defined at:
  9014 ;;		line 186 in file "./PWM.h"
  9015 ;; Parameters:    Size  Location     Type
  9016 ;;		None
  9017 ;; Auto vars:     Size  Location     Type
  9018 ;;		None
  9019 ;; Return value:  Size  Location     Type
  9020 ;;                  1    wreg      _Bool 
  9021 ;; Registers used:
  9022 ;;		wreg
  9023 ;; Tracked objects:
  9024 ;;		On entry : 0/0
  9025 ;;		On exit  : 0/0
  9026 ;;		Unchanged: 0/0
  9027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9032 ;;Total ram usage:        0 bytes
  9033 ;; Hardware stack levels used: 1
  9034 ;; Hardware stack levels required when called: 1
  9035 ;; This function calls:
  9036 ;;		Nothing
  9037 ;; This function is called by:
  9038 ;;		_PWM
  9039 ;; This function uses a non-reentrant model
  9040 ;;
  9041                           
  9042                           	psect	text37
  9043   004FC8                     __ptext37:
  9044                           	callstack 0
  9045   004FC8                     _PWM2_OutputStatusGet:
  9046                           	callstack 28
  9047   004FC8                     
  9048                           ;./PWM.h: 189:     return(CCP2CONbits.OUT);
  9049   004FC8  BA7A               	btfsc	122,5,c	;volatile
  9050   004FCA  EFE9  F027         	goto	u4161
  9051   004FCE  EFEC  F027         	goto	u4160
  9052   004FD2                     u4161:
  9053   004FD2  0E01               	movlw	1
  9054   004FD4  EFED  F027         	goto	u4166
  9055   004FD8                     u4160:
  9056   004FD8  0E00               	movlw	0
  9057   004FDA                     u4166:
  9058   004FDA  0012               	return		;funcret
  9059   004FDC                     __end_of_PWM2_OutputStatusGet:
  9060                           	callstack 0
  9061                           
  9062 ;; *************** function _PWM2_LoadDutyValue *****************
  9063 ;; Defined at:
  9064 ;;		line 168 in file "./PWM.h"
  9065 ;; Parameters:    Size  Location     Type
  9066 ;;  dutyValue       2    4[COMRAM] unsigned short 
  9067 ;; Auto vars:     Size  Location     Type
  9068 ;;		None
  9069 ;; Return value:  Size  Location     Type
  9070 ;;                  1    wreg      void 
  9071 ;; Registers used:
  9072 ;;		wreg, status,2, status,0
  9073 ;; Tracked objects:
  9074 ;;		On entry : 0/0
  9075 ;;		On exit  : 0/0
  9076 ;;		Unchanged: 0/0
  9077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9078 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9081 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9082 ;;Total ram usage:        2 bytes
  9083 ;; Hardware stack levels used: 1
  9084 ;; Hardware stack levels required when called: 1
  9085 ;; This function calls:
  9086 ;;		Nothing
  9087 ;; This function is called by:
  9088 ;;		_PWM
  9089 ;; This function uses a non-reentrant model
  9090 ;;
  9091                           
  9092                           	psect	text38
  9093   004ECE                     __ptext38:
  9094                           	callstack 0
  9095   004ECE                     _PWM2_LoadDutyValue:
  9096                           	callstack 28
  9097   004ECE                     
  9098                           ;./PWM.h: 168: void PWM2_LoadDutyValue(uint16_t dutyValue);./PWM.h: 169: {;./PWM.h: 170:
      +                               dutyValue &= 0x03FF;
  9099   004ECE  0EFF               	movlw	255
  9100   004ED0  1605               	andwf	PWM2_LoadDutyValue@dutyValue^0,f,c
  9101   004ED2  0E03               	movlw	3
  9102   004ED4  1606               	andwf	(PWM2_LoadDutyValue@dutyValue+1)^0,f,c
  9103   004ED6                     
  9104                           ;./PWM.h: 173:     if(CCP2CONbits.FMT)
  9105   004ED6  A87A               	btfss	122,4,c	;volatile
  9106   004ED8  EF70  F027         	goto	u4141
  9107   004EDC  EF72  F027         	goto	u4140
  9108   004EE0                     u4141:
  9109   004EE0  EF79  F027         	goto	l3850
  9110   004EE4                     u4140:
  9111   004EE4                     
  9112                           ;./PWM.h: 174:     {;./PWM.h: 175:         dutyValue <<= 6;
  9113   004EE4  0E06               	movlw	6
  9114   004EE6                     u4155:
  9115   004EE6  90D8               	bcf	status,0,c
  9116   004EE8  3605               	rlcf	PWM2_LoadDutyValue@dutyValue^0,f,c
  9117   004EEA  3606               	rlcf	(PWM2_LoadDutyValue@dutyValue+1)^0,f,c
  9118   004EEC  2EE8               	decfsz	wreg,f,c
  9119   004EEE  EF73  F027         	goto	u4155
  9120   004EF2                     l3850:
  9121                           
  9122                           ;./PWM.h: 176:         CCPR2H = dutyValue >> 8;
  9123   004EF2  5006               	movf	(PWM2_LoadDutyValue@dutyValue+1)^0,w,c
  9124   004EF4  6E79               	movwf	121,c	;volatile
  9125   004EF6                     
  9126                           ;./PWM.h: 177:         CCPR2L = dutyValue;
  9127   004EF6  0060  F017  FF78   	movff	PWM2_LoadDutyValue@dutyValue,16248	;volatile
  9128   004EFC  0012               	return		;funcret
  9129   004EFE                     __end_of_PWM2_LoadDutyValue:
  9130                           	callstack 0
  9131                           
  9132 ;; *************** function _PWM2_Initialize *****************
  9133 ;; Defined at:
  9134 ;;		line 151 in file "./PWM.h"
  9135 ;; Parameters:    Size  Location     Type
  9136 ;;		None
  9137 ;; Auto vars:     Size  Location     Type
  9138 ;;		None
  9139 ;; Return value:  Size  Location     Type
  9140 ;;                  1    wreg      void 
  9141 ;; Registers used:
  9142 ;;		wreg, status,2
  9143 ;; Tracked objects:
  9144 ;;		On entry : 0/0
  9145 ;;		On exit  : 0/0
  9146 ;;		Unchanged: 0/0
  9147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9152 ;;Total ram usage:        0 bytes
  9153 ;; Hardware stack levels used: 1
  9154 ;; Hardware stack levels required when called: 1
  9155 ;; This function calls:
  9156 ;;		Nothing
  9157 ;; This function is called by:
  9158 ;;		_PWM
  9159 ;; This function uses a non-reentrant model
  9160 ;;
  9161                           
  9162                           	psect	text39
  9163   004F9E                     __ptext39:
  9164                           	callstack 0
  9165   004F9E                     _PWM2_Initialize:
  9166                           	callstack 28
  9167   004F9E                     
  9168                           ;./PWM.h: 156:  CCP2CON = 0x8C;
  9169   004F9E  0E8C               	movlw	140
  9170   004FA0  6E7A               	movwf	122,c	;volatile
  9171   004FA2                     
  9172                           ;./PWM.h: 159:  CCPR2H = 0x0;
  9173   004FA2  6A79               	clrf	121,c	;volatile
  9174                           
  9175                           ;./PWM.h: 162:  CCPR2L = 0x0f;
  9176   004FA4  0E0F               	movlw	15
  9177   004FA6  6E78               	movwf	120,c	;volatile
  9178                           
  9179                           ;./PWM.h: 165:  CCPTMRS0bits.C2TSEL = 0x1;
  9180   004FA8  013F               	movlb	63	; () banked
  9181   004FAA  515E               	movf	94,w,b	;volatile
  9182   004FAC  0BF3               	andlw	-13
  9183   004FAE  0904               	iorlw	4
  9184   004FB0  6F5E               	movwf	94,b	;volatile
  9185   004FB2                     
  9186                           ; BSR set to: 63
  9187   004FB2  0012               	return		;funcret
  9188   004FB4                     __end_of_PWM2_Initialize:
  9189                           	callstack 0
  9190                           
  9191 ;; *************** function _LCD_String_xy *****************
  9192 ;; Defined at:
  9193 ;;		line 80 in file "./LCD.h"
  9194 ;; Parameters:    Size  Location     Type
  9195 ;;  row             1    wreg     unsigned char 
  9196 ;;  pos             1   13[COMRAM] unsigned char 
  9197 ;;  msg             2   14[COMRAM] PTR const unsigned char 
  9198 ;;		 -> PWM@percent(15), readADC@buffer(12), STR_2(15), STR_1(6), 
  9199 ;; Auto vars:     Size  Location     Type
  9200 ;;  row             1   16[COMRAM] unsigned char 
  9201 ;;  location        1   17[COMRAM] unsigned char 
  9202 ;; Return value:  Size  Location     Type
  9203 ;;                  1    wreg      void 
  9204 ;; Registers used:
  9205 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9206 ;; Tracked objects:
  9207 ;;		On entry : 0/0
  9208 ;;		On exit  : 0/0
  9209 ;;		Unchanged: 0/0
  9210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9211 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9212 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9214 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9215 ;;Total ram usage:        5 bytes
  9216 ;; Hardware stack levels used: 1
  9217 ;; Hardware stack levels required when called: 4
  9218 ;; This function calls:
  9219 ;;		_LCD_Command
  9220 ;;		_LCD_String
  9221 ;; This function is called by:
  9222 ;;		_main
  9223 ;;		_readADC
  9224 ;;		_PWM
  9225 ;; This function uses a non-reentrant model
  9226 ;;
  9227                           
  9228                           	psect	text40
  9229   004DEA                     __ptext40:
  9230                           	callstack 0
  9231   004DEA                     _LCD_String_xy:
  9232                           	callstack 25
  9233                           
  9234                           ; BSR set to: 63
  9235                           ;incstack = 0
  9236                           ;LCD_String_xy@row stored from wreg
  9237   004DEA  6E11               	movwf	LCD_String_xy@row^0,c
  9238   004DEC                     
  9239                           ;./LCD.h: 83:     if(row<=1)
  9240   004DEC  0E02               	movlw	2
  9241   004DEE  6011               	cpfslt	LCD_String_xy@row^0,c
  9242   004DF0  EFFC  F026         	goto	u4131
  9243   004DF4  EFFE  F026         	goto	u4130
  9244   004DF8                     u4131:
  9245   004DF8  EF07  F027         	goto	l3814
  9246   004DFC                     u4130:
  9247   004DFC                     
  9248                           ;./LCD.h: 84:     {;./LCD.h: 85:         location=(0x80) | ((pos) & 0x0f);
  9249   004DFC  500E               	movf	LCD_String_xy@pos^0,w,c
  9250   004DFE  0B0F               	andlw	15
  9251   004E00  0980               	iorlw	128
  9252   004E02  6E12               	movwf	LCD_String_xy@location^0,c
  9253   004E04                     
  9254                           ;./LCD.h: 86:         LCD_Command(location);
  9255   004E04  5012               	movf	LCD_String_xy@location^0,w,c
  9256   004E06  EC94  F027         	call	_LCD_Command
  9257                           
  9258                           ;./LCD.h: 87:     }
  9259   004E0A  EF0E  F027         	goto	l3818
  9260   004E0E                     l3814:
  9261                           
  9262                           ;./LCD.h: 89:     {;./LCD.h: 90:         location=(0xC0) | ((pos) & 0x0f);
  9263   004E0E  500E               	movf	LCD_String_xy@pos^0,w,c
  9264   004E10  0B0F               	andlw	15
  9265   004E12  09C0               	iorlw	192
  9266   004E14  6E12               	movwf	LCD_String_xy@location^0,c
  9267   004E16                     
  9268                           ;./LCD.h: 91:         LCD_Command(location);
  9269   004E16  5012               	movf	LCD_String_xy@location^0,w,c
  9270   004E18  EC94  F027         	call	_LCD_Command
  9271   004E1C                     l3818:
  9272                           
  9273                           ;./LCD.h: 93:     LCD_String(msg);
  9274   004E1C  C00F  F00C         	movff	LCD_String_xy@msg,LCD_String@msg
  9275   004E20  C010  F00D         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  9276   004E24  EC75  F024         	call	_LCD_String	;wreg free
  9277   004E28  0012               	return		;funcret
  9278   004E2A                     __end_of_LCD_String_xy:
  9279                           	callstack 0
  9280                           
  9281 ;; *************** function _LCD_String *****************
  9282 ;; Defined at:
  9283 ;;		line 71 in file "./LCD.h"
  9284 ;; Parameters:    Size  Location     Type
  9285 ;;  msg             2   11[COMRAM] PTR const unsigned char 
  9286 ;;		 -> PWM@percent(15), readADC@buffer(12), STR_2(15), STR_1(6), 
  9287 ;; Auto vars:     Size  Location     Type
  9288 ;;		None
  9289 ;; Return value:  Size  Location     Type
  9290 ;;                  1    wreg      void 
  9291 ;; Registers used:
  9292 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9293 ;; Tracked objects:
  9294 ;;		On entry : 0/0
  9295 ;;		On exit  : 0/0
  9296 ;;		Unchanged: 0/0
  9297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9298 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9301 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9302 ;;Total ram usage:        2 bytes
  9303 ;; Hardware stack levels used: 1
  9304 ;; Hardware stack levels required when called: 3
  9305 ;; This function calls:
  9306 ;;		_LCD_Char
  9307 ;; This function is called by:
  9308 ;;		_LCD_String_xy
  9309 ;; This function uses a non-reentrant model
  9310 ;;
  9311                           
  9312                           	psect	text41
  9313   0048EA                     __ptext41:
  9314                           	callstack 0
  9315   0048EA                     _LCD_String:
  9316                           	callstack 25
  9317   0048EA                     
  9318                           ;./LCD.h: 71: void LCD_String(const char *msg);./LCD.h: 72: {;./LCD.h: 73:     while((*m
      +                          sg)!=0)
  9319   0048EA  EF90  F024         	goto	l3790
  9320   0048EE                     l3786:
  9321                           
  9322                           ;./LCD.h: 74:     {;./LCD.h: 75:       LCD_Char(*msg);
  9323   0048EE  0060  F033  FFF6   	movff	LCD_String@msg,tblptrl
  9324   0048F4  0060  F037  FFF7   	movff	LCD_String@msg+1,tblptrh
  9325   0048FA  0E00               	movlw	low (__smallconst shr (0+16))
  9326   0048FC  6EF8               	movwf	tblptru,c
  9327   0048FE  0E1F               	movlw	(high __ramtop+-1)
  9328   004900  64F7               	cpfsgt	tblptrh,c
  9329   004902  D003               	bra	u4097
  9330   004904  0008               	tblrd		*
  9331   004906  50F5               	movf	tablat,w,c
  9332   004908  D007               	bra	u4090
  9333   00490A                     u4097:
  9334   00490A  006F FFDB FFE1     	movff	tblptrl,fsr1l
  9335   004910  006F FFDF FFE2     	movff	tblptrh,fsr1h
  9336   004916  50E7               	movf	indf1,w,c
  9337   004918                     u4090:
  9338   004918  ECA7  F027         	call	_LCD_Char
  9339   00491C                     
  9340                           ;./LCD.h: 76:       msg++;
  9341   00491C  4A0C               	infsnz	LCD_String@msg^0,f,c
  9342   00491E  2A0D               	incf	(LCD_String@msg+1)^0,f,c
  9343   004920                     l3790:
  9344                           
  9345                           ;./LCD.h: 73:     while((*msg)!=0)
  9346   004920  0060  F033  FFF6   	movff	LCD_String@msg,tblptrl
  9347   004926  0060  F037  FFF7   	movff	LCD_String@msg+1,tblptrh
  9348   00492C  0E00               	movlw	low (__smallconst shr (0+16))
  9349   00492E  6EF8               	movwf	tblptru,c
  9350   004930  0E1F               	movlw	(high __ramtop+-1)
  9351   004932  64F7               	cpfsgt	tblptrh,c
  9352   004934  D003               	bra	u4107
  9353   004936  0008               	tblrd		*
  9354   004938  50F5               	movf	tablat,w,c
  9355   00493A  D007               	bra	u4100
  9356   00493C                     u4107:
  9357   00493C  006F FFDB FFE1     	movff	tblptrl,fsr1l
  9358   004942  006F FFDF FFE2     	movff	tblptrh,fsr1h
  9359   004948  50E7               	movf	indf1,w,c
  9360   00494A                     u4100:
  9361   00494A  0900               	iorlw	0
  9362   00494C  A4D8               	btfss	status,2,c
  9363   00494E  EFAB  F024         	goto	u4111
  9364   004952  EFAD  F024         	goto	u4110
  9365   004956                     u4111:
  9366   004956  EF77  F024         	goto	l3786
  9367   00495A                     u4110:
  9368   00495A  0012               	return		;funcret
  9369   00495C                     __end_of_LCD_String:
  9370                           	callstack 0
  9371                           
  9372 ;; *************** function _LCD_Char *****************
  9373 ;; Defined at:
  9374 ;;		line 60 in file "./LCD.h"
  9375 ;; Parameters:    Size  Location     Type
  9376 ;;  dat             1    wreg     unsigned char 
  9377 ;; Auto vars:     Size  Location     Type
  9378 ;;  dat             1   10[COMRAM] unsigned char 
  9379 ;; Return value:  Size  Location     Type
  9380 ;;                  1    wreg      void 
  9381 ;; Registers used:
  9382 ;;		wreg, status,2, status,0, cstack
  9383 ;; Tracked objects:
  9384 ;;		On entry : 0/0
  9385 ;;		On exit  : 0/0
  9386 ;;		Unchanged: 0/0
  9387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9389 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9391 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9392 ;;Total ram usage:        1 bytes
  9393 ;; Hardware stack levels used: 1
  9394 ;; Hardware stack levels required when called: 2
  9395 ;; This function calls:
  9396 ;;		_MSdelay
  9397 ;; This function is called by:
  9398 ;;		_LCD_String
  9399 ;; This function uses a non-reentrant model
  9400 ;;
  9401                           
  9402                           	psect	text42
  9403   004F4E                     __ptext42:
  9404                           	callstack 0
  9405   004F4E                     _LCD_Char:
  9406                           	callstack 25
  9407                           
  9408                           ;incstack = 0
  9409                           ;LCD_Char@dat stored from wreg
  9410   004F4E  6E0B               	movwf	LCD_Char@dat^0,c
  9411   004F50                     
  9412                           ;./LCD.h: 60: void LCD_Char(char dat);./LCD.h: 61: {;./LCD.h: 62:     LATD= dat;
  9413   004F50  0060  F02F  FFBD   	movff	LCD_Char@dat,16317	;volatile
  9414   004F56                     
  9415                           ;./LCD.h: 63:     LATC3 = 1;
  9416   004F56  86BC               	bsf	16316,3,c	;volatile
  9417   004F58                     
  9418                           ;./LCD.h: 64:     LATC4=1;
  9419   004F58  88BC               	bsf	16316,4,c	;volatile
  9420   004F5A                     
  9421                           ;./LCD.h: 65:     __nop();
  9422   004F5A  0000               	nop	
  9423   004F5C                     
  9424                           ;./LCD.h: 66:     LATC4=0;
  9425   004F5C  98BC               	bcf	16316,4,c	;volatile
  9426   004F5E                     
  9427                           ;./LCD.h: 67:     MSdelay(1);
  9428   004F5E  0E00               	movlw	0
  9429   004F60  6E06               	movwf	(MSdelay@val+1)^0,c
  9430   004F62  0E01               	movlw	1
  9431   004F64  6E05               	movwf	MSdelay@val^0,c
  9432   004F66  ECFF  F025         	call	_MSdelay	;wreg free
  9433   004F6A  0012               	return		;funcret
  9434   004F6C                     __end_of_LCD_Char:
  9435                           	callstack 0
  9436                           
  9437 ;; *************** function _LCD_Clear *****************
  9438 ;; Defined at:
  9439 ;;		line 44 in file "./LCD.h"
  9440 ;; Parameters:    Size  Location     Type
  9441 ;;		None
  9442 ;; Auto vars:     Size  Location     Type
  9443 ;;		None
  9444 ;; Return value:  Size  Location     Type
  9445 ;;                  1    wreg      void 
  9446 ;; Registers used:
  9447 ;;		wreg, status,2, status,0, cstack
  9448 ;; Tracked objects:
  9449 ;;		On entry : 0/0
  9450 ;;		On exit  : 0/0
  9451 ;;		Unchanged: 0/0
  9452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9457 ;;Total ram usage:        0 bytes
  9458 ;; Hardware stack levels used: 1
  9459 ;; Hardware stack levels required when called: 3
  9460 ;; This function calls:
  9461 ;;		_LCD_Command
  9462 ;; This function is called by:
  9463 ;;		_main
  9464 ;;		_PWM
  9465 ;; This function uses a non-reentrant model
  9466 ;;
  9467                           
  9468                           	psect	text43
  9469   004FDC                     __ptext43:
  9470                           	callstack 0
  9471   004FDC                     _LCD_Clear:
  9472                           	callstack 26
  9473   004FDC                     
  9474                           ;./LCD.h: 46:         LCD_Command(0x01);
  9475   004FDC  0E01               	movlw	1
  9476   004FDE  EC94  F027         	call	_LCD_Command
  9477   004FE2  0012               	return		;funcret
  9478   004FE4                     __end_of_LCD_Clear:
  9479                           	callstack 0
  9480                           
  9481 ;; *************** function _LCD_Init *****************
  9482 ;; Defined at:
  9483 ;;		line 33 in file "./LCD.h"
  9484 ;; Parameters:    Size  Location     Type
  9485 ;;		None
  9486 ;; Auto vars:     Size  Location     Type
  9487 ;;		None
  9488 ;; Return value:  Size  Location     Type
  9489 ;;                  1    wreg      void 
  9490 ;; Registers used:
  9491 ;;		wreg, status,2, status,0, cstack
  9492 ;; Tracked objects:
  9493 ;;		On entry : 0/0
  9494 ;;		On exit  : 0/0
  9495 ;;		Unchanged: 0/0
  9496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9501 ;;Total ram usage:        0 bytes
  9502 ;; Hardware stack levels used: 1
  9503 ;; Hardware stack levels required when called: 3
  9504 ;; This function calls:
  9505 ;;		_LCD_Command
  9506 ;;		_MSdelay
  9507 ;; This function is called by:
  9508 ;;		_main
  9509 ;; This function uses a non-reentrant model
  9510 ;;
  9511                           
  9512                           	psect	text44
  9513   004EFE                     __ptext44:
  9514                           	callstack 0
  9515   004EFE                     _LCD_Init:
  9516                           	callstack 27
  9517   004EFE                     
  9518                           ;./LCD.h: 35:     MSdelay(15);
  9519   004EFE  0E00               	movlw	0
  9520   004F00  6E06               	movwf	(MSdelay@val+1)^0,c
  9521   004F02  0E0F               	movlw	15
  9522   004F04  6E05               	movwf	MSdelay@val^0,c
  9523   004F06  ECFF  F025         	call	_MSdelay	;wreg free
  9524   004F0A                     
  9525                           ;./LCD.h: 36:     TRISD = 0x00;
  9526   004F0A  6AC5               	clrf	197,c	;volatile
  9527   004F0C                     
  9528                           ;./LCD.h: 37:     TRISC = 0x00;
  9529   004F0C  6AC4               	clrf	196,c	;volatile
  9530                           
  9531                           ;./LCD.h: 38:     LCD_Command(0x01);
  9532   004F0E  0E01               	movlw	1
  9533   004F10  EC94  F027         	call	_LCD_Command
  9534                           
  9535                           ;./LCD.h: 39:     LCD_Command(0x38);
  9536   004F14  0E38               	movlw	56
  9537   004F16  EC94  F027         	call	_LCD_Command
  9538                           
  9539                           ;./LCD.h: 40:     LCD_Command(0x0c);
  9540   004F1A  0E0C               	movlw	12
  9541   004F1C  EC94  F027         	call	_LCD_Command
  9542                           
  9543                           ;./LCD.h: 41:     LCD_Command(0x06);
  9544   004F20  0E06               	movlw	6
  9545   004F22  EC94  F027         	call	_LCD_Command
  9546   004F26  0012               	return		;funcret
  9547   004F28                     __end_of_LCD_Init:
  9548                           	callstack 0
  9549                           
  9550 ;; *************** function _LCD_Command *****************
  9551 ;; Defined at:
  9552 ;;		line 49 in file "./LCD.h"
  9553 ;; Parameters:    Size  Location     Type
  9554 ;;  cmd             1    wreg     unsigned char 
  9555 ;; Auto vars:     Size  Location     Type
  9556 ;;  cmd             1   10[COMRAM] unsigned char 
  9557 ;; Return value:  Size  Location     Type
  9558 ;;                  1    wreg      void 
  9559 ;; Registers used:
  9560 ;;		wreg, status,2, status,0, cstack
  9561 ;; Tracked objects:
  9562 ;;		On entry : 0/0
  9563 ;;		On exit  : 0/0
  9564 ;;		Unchanged: 0/0
  9565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9567 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9569 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9570 ;;Total ram usage:        1 bytes
  9571 ;; Hardware stack levels used: 1
  9572 ;; Hardware stack levels required when called: 2
  9573 ;; This function calls:
  9574 ;;		_MSdelay
  9575 ;; This function is called by:
  9576 ;;		_LCD_Init
  9577 ;;		_LCD_Clear
  9578 ;;		_LCD_String_xy
  9579 ;; This function uses a non-reentrant model
  9580 ;;
  9581                           
  9582                           	psect	text45
  9583   004F28                     __ptext45:
  9584                           	callstack 0
  9585   004F28                     _LCD_Command:
  9586                           	callstack 26
  9587                           
  9588                           ;incstack = 0
  9589                           ;LCD_Command@cmd stored from wreg
  9590   004F28  6E0B               	movwf	LCD_Command@cmd^0,c
  9591   004F2A                     
  9592                           ;./LCD.h: 49: void LCD_Command(char cmd );./LCD.h: 50: {;./LCD.h: 51:     LATD= cmd;
  9593   004F2A  0060  F02F  FFBD   	movff	LCD_Command@cmd,16317	;volatile
  9594   004F30                     
  9595                           ;./LCD.h: 52:     _delay((unsigned long)((1)*(4000000/4000.0)));
  9596   004F30  0EC8               	movlw	200
  9597   004F32                     u4857:
  9598   004F32  D000               	nop2	
  9599   004F34  2EE8               	decfsz	wreg,f,c
  9600   004F36  D7FD               	bra	u4857
  9601   004F38                     
  9602                           ;./LCD.h: 53:     LATC3 = 0;
  9603   004F38  96BC               	bcf	16316,3,c	;volatile
  9604   004F3A                     
  9605                           ;./LCD.h: 54:     LATC4 = 1;
  9606   004F3A  88BC               	bsf	16316,4,c	;volatile
  9607   004F3C                     
  9608                           ;./LCD.h: 55:     __nop();
  9609   004F3C  0000               	nop	
  9610   004F3E                     
  9611                           ;./LCD.h: 56:     LATC4 = 0;
  9612   004F3E  98BC               	bcf	16316,4,c	;volatile
  9613   004F40                     
  9614                           ;./LCD.h: 57:     MSdelay(3);
  9615   004F40  0E00               	movlw	0
  9616   004F42  6E06               	movwf	(MSdelay@val+1)^0,c
  9617   004F44  0E03               	movlw	3
  9618   004F46  6E05               	movwf	MSdelay@val^0,c
  9619   004F48  ECFF  F025         	call	_MSdelay	;wreg free
  9620   004F4C  0012               	return		;funcret
  9621   004F4E                     __end_of_LCD_Command:
  9622                           	callstack 0
  9623                           
  9624 ;; *************** function _MSdelay *****************
  9625 ;; Defined at:
  9626 ;;		line 97 in file "./LCD.h"
  9627 ;; Parameters:    Size  Location     Type
  9628 ;;  val             2    4[COMRAM] unsigned int 
  9629 ;; Auto vars:     Size  Location     Type
  9630 ;;  j               2    8[COMRAM] unsigned int 
  9631 ;;  i               2    6[COMRAM] unsigned int 
  9632 ;; Return value:  Size  Location     Type
  9633 ;;                  1    wreg      void 
  9634 ;; Registers used:
  9635 ;;		wreg, status,2, status,0
  9636 ;; Tracked objects:
  9637 ;;		On entry : 0/0
  9638 ;;		On exit  : 0/0
  9639 ;;		Unchanged: 0/0
  9640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9641 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9642 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9644 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9645 ;;Total ram usage:        6 bytes
  9646 ;; Hardware stack levels used: 1
  9647 ;; Hardware stack levels required when called: 1
  9648 ;; This function calls:
  9649 ;;		Nothing
  9650 ;; This function is called by:
  9651 ;;		_LCD_Init
  9652 ;;		_LCD_Command
  9653 ;;		_LCD_Char
  9654 ;; This function uses a non-reentrant model
  9655 ;;
  9656                           
  9657                           	psect	text46
  9658   004BFE                     __ptext46:
  9659                           	callstack 0
  9660   004BFE                     _MSdelay:
  9661                           	callstack 25
  9662   004BFE                     
  9663                           ;./LCD.h: 97: void MSdelay(unsigned int val);./LCD.h: 98: {;./LCD.h: 99:      unsigned i
      +                          nt i,j;;./LCD.h: 100:         for(i=0;i<val;i++)
  9664   004BFE  0E00               	movlw	0
  9665   004C00  6E08               	movwf	(MSdelay@i+1)^0,c
  9666   004C02  0E00               	movlw	0
  9667   004C04  6E07               	movwf	MSdelay@i^0,c
  9668   004C06  EF18  F026         	goto	l3408
  9669   004C0A                     l3396:
  9670                           
  9671                           ;./LCD.h: 101:             for(j=0;j<165;j++);
  9672   004C0A  0E00               	movlw	0
  9673   004C0C  6E0A               	movwf	(MSdelay@j+1)^0,c
  9674   004C0E  0E00               	movlw	0
  9675   004C10  6E09               	movwf	MSdelay@j^0,c
  9676   004C12                     l3402:
  9677   004C12  4A09               	infsnz	MSdelay@j^0,f,c
  9678   004C14  2A0A               	incf	(MSdelay@j+1)^0,f,c
  9679   004C16  500A               	movf	(MSdelay@j+1)^0,w,c
  9680   004C18  E109               	bnz	u3590
  9681   004C1A  0EA5               	movlw	165
  9682   004C1C  5C09               	subwf	MSdelay@j^0,w,c
  9683   004C1E  A0D8               	btfss	status,0,c
  9684   004C20  EF14  F026         	goto	u3591
  9685   004C24  EF16  F026         	goto	u3590
  9686   004C28                     u3591:
  9687   004C28  EF09  F026         	goto	l3402
  9688   004C2C                     u3590:
  9689   004C2C  4A07               	infsnz	MSdelay@i^0,f,c
  9690   004C2E  2A08               	incf	(MSdelay@i+1)^0,f,c
  9691   004C30                     l3408:
  9692   004C30  5005               	movf	MSdelay@val^0,w,c
  9693   004C32  5C07               	subwf	MSdelay@i^0,w,c
  9694   004C34  5006               	movf	(MSdelay@val+1)^0,w,c
  9695   004C36  5808               	subwfb	(MSdelay@i+1)^0,w,c
  9696   004C38  A0D8               	btfss	status,0,c
  9697   004C3A  EF21  F026         	goto	u3601
  9698   004C3E  EF23  F026         	goto	u3600
  9699   004C42                     u3601:
  9700   004C42  EF05  F026         	goto	l3396
  9701   004C46                     u3600:
  9702   004C46  0012               	return		;funcret
  9703   004C48                     __end_of_MSdelay:
  9704                           	callstack 0
  9705                           
  9706 ;; *************** function _Initialize *****************
  9707 ;; Defined at:
  9708 ;;		line 11 in file "./init.h"
  9709 ;; Parameters:    Size  Location     Type
  9710 ;;		None
  9711 ;; Auto vars:     Size  Location     Type
  9712 ;;		None
  9713 ;; Return value:  Size  Location     Type
  9714 ;;                  1    wreg      void 
  9715 ;; Registers used:
  9716 ;;		wreg, status,2
  9717 ;; Tracked objects:
  9718 ;;		On entry : 0/0
  9719 ;;		On exit  : 0/0
  9720 ;;		Unchanged: 0/0
  9721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9726 ;;Total ram usage:        0 bytes
  9727 ;; Hardware stack levels used: 1
  9728 ;; Hardware stack levels required when called: 1
  9729 ;; This function calls:
  9730 ;;		Nothing
  9731 ;; This function is called by:
  9732 ;;		_main
  9733 ;; This function uses a non-reentrant model
  9734 ;;
  9735                           
  9736                           	psect	text47
  9737   004D64                     __ptext47:
  9738                           	callstack 0
  9739   004D64                     _Initialize:
  9740                           	callstack 29
  9741   004D64                     
  9742                           ;./init.h: 12:     TRISD = 0x00;
  9743   004D64  6AC5               	clrf	197,c	;volatile
  9744   004D66                     
  9745                           ;./init.h: 13:     TRISC = 0b11000111;
  9746   004D66  0EC7               	movlw	199
  9747   004D68  6EC4               	movwf	196,c	;volatile
  9748   004D6A                     
  9749                           ;./init.h: 14:     TRISE = 0xFF;
  9750   004D6A  68C6               	setf	198,c	;volatile
  9751   004D6C                     
  9752                           ;./init.h: 15:     ANSELE = 0x00;
  9753   004D6C  013A               	movlb	58	; () banked
  9754   004D6E  6B80               	clrf	128,b	;volatile
  9755   004D70                     
  9756                           ; BSR set to: 58
  9757                           ;./init.h: 16:     ANSELD = 0x00;
  9758   004D70  6B70               	clrf	112,b	;volatile
  9759   004D72                     
  9760                           ; BSR set to: 58
  9761                           ;./init.h: 17:     ANSELC = 0x00;
  9762   004D72  6B60               	clrf	96,b	;volatile
  9763   004D74                     
  9764                           ; BSR set to: 58
  9765                           ;./init.h: 19:     TRISAbits.TRISA0 = 1;
  9766   004D74  80C2               	bsf	194,0,c	;volatile
  9767   004D76                     
  9768                           ; BSR set to: 58
  9769                           ;./init.h: 20:     ANSELAbits.ANSELA0 = 1;
  9770   004D76  8140               	bsf	64,0,b	;volatile
  9771                           
  9772                           ;./init.h: 23:     ADCON0bits.FM = 1;
  9773   004D78  013E               	movlb	62	; () banked
  9774   004D7A  51F8               	movf	248,w,b	;volatile
  9775   004D7C  0BF3               	andlw	-13
  9776   004D7E  0904               	iorlw	4
  9777   004D80  6FF8               	movwf	248,b	;volatile
  9778   004D82                     
  9779                           ; BSR set to: 62
  9780                           ;./init.h: 24:     ADCON0bits.CS = 1;
  9781   004D82  89F8               	bsf	248,4,b	;volatile
  9782   004D84                     
  9783                           ; BSR set to: 62
  9784                           ;./init.h: 25:     ADCLK = 0x00;
  9785   004D84  6BFF               	clrf	255,b	;volatile
  9786   004D86                     
  9787                           ; BSR set to: 62
  9788                           ;./init.h: 26:     ADPCH = 0x00;
  9789   004D86  6BF1               	clrf	241,b	;volatile
  9790   004D88                     
  9791                           ; BSR set to: 62
  9792                           ;./init.h: 27:     ADCAP = 0x00;
  9793   004D88  6BF5               	clrf	245,b	;volatile
  9794   004D8A                     
  9795                           ; BSR set to: 62
  9796                           ;./init.h: 28:     ADREF = 0x00;
  9797   004D8A  6BFD               	clrf	253,b	;volatile
  9798   004D8C                     
  9799                           ; BSR set to: 62
  9800                           ;./init.h: 29:     ADPREL = 0x00;
  9801   004D8C  6BF6               	clrf	246,b	;volatile
  9802   004D8E                     
  9803                           ; BSR set to: 62
  9804                           ;./init.h: 30:     ADPREH = 0x00;
  9805   004D8E  6BF7               	clrf	247,b	;volatile
  9806   004D90                     
  9807                           ; BSR set to: 62
  9808                           ;./init.h: 31:     ADACQL = 0x00;
  9809   004D90  6BF3               	clrf	243,b	;volatile
  9810   004D92                     
  9811                           ; BSR set to: 62
  9812                           ;./init.h: 32:     ADACQH = 0x00;
  9813   004D92  6BF4               	clrf	244,b	;volatile
  9814   004D94                     
  9815                           ; BSR set to: 62
  9816                           ;./init.h: 33:     ADCON0bits.ON = 1;
  9817   004D94  8FF8               	bsf	248,7,b	;volatile
  9818   004D96                     
  9819                           ; BSR set to: 62
  9820                           ;./init.h: 37:     IOCCPbits.IOCCP2 = 1;
  9821   004D96  013A               	movlb	58	; () banked
  9822   004D98  8565               	bsf	101,2,b	;volatile
  9823   004D9A                     
  9824                           ; BSR set to: 58
  9825                           ;./init.h: 38:     PIE0bits.IOCIE = 1;
  9826   004D9A  0139               	movlb	57	; () banked
  9827   004D9C  8F90               	bsf	144,7,b	;volatile
  9828   004D9E                     
  9829                           ; BSR set to: 57
  9830                           ;./init.h: 39:     INTCON0bits.IPEN = 1;
  9831   004D9E  8AD2               	bsf	210,5,c	;volatile
  9832   004DA0                     
  9833                           ; BSR set to: 57
  9834                           ;./init.h: 40:     INTCON0bits.GIEH = 1;
  9835   004DA0  8ED2               	bsf	210,7,c	;volatile
  9836   004DA2                     
  9837                           ; BSR set to: 57
  9838                           ;./init.h: 41:     IOCCFbits.IOCCF2 = 0;
  9839   004DA2  013A               	movlb	58	; () banked
  9840   004DA4  9567               	bcf	103,2,b	;volatile
  9841   004DA6                     
  9842                           ; BSR set to: 58
  9843                           ;./init.h: 42:     WPUCbits.WPUC2 = 1;
  9844   004DA6  8561               	bsf	97,2,b	;volatile
  9845   004DA8                     
  9846                           ; BSR set to: 58
  9847   004DA8  0012               	return		;funcret
  9848   004DAA                     __end_of_Initialize:
  9849                           	callstack 0
  9850                           
  9851 ;; *************** function _ISR *****************
  9852 ;; Defined at:
  9853 ;;		line 45 in file "./init.h"
  9854 ;; Parameters:    Size  Location     Type
  9855 ;;		None
  9856 ;; Auto vars:     Size  Location     Type
  9857 ;;  i               2    2[COMRAM] int 
  9858 ;; Return value:  Size  Location     Type
  9859 ;;                  1    wreg      void 
  9860 ;; Registers used:
  9861 ;;		wreg, status,2, status,0
  9862 ;; Tracked objects:
  9863 ;;		On entry : 0/0
  9864 ;;		On exit  : 0/0
  9865 ;;		Unchanged: 0/0
  9866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9868 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9869 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9870 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9871 ;;Total ram usage:        4 bytes
  9872 ;; Hardware stack levels used: 1
  9873 ;; This function calls:
  9874 ;;		Nothing
  9875 ;; This function is called by:
  9876 ;;		Interrupt level 2
  9877 ;; This function uses a non-reentrant model
  9878 ;;
  9879                           
  9880                           	psect	text48
  9881   0049C8                     __ptext48:
  9882                           	callstack 0
  9883   0049C8                     _ISR:
  9884                           	callstack 21
  9885   0049C8                     
  9886                           ;./init.h: 46:     if (IOCCFbits.IOCCF2) {
  9887   0049C8  013A               	movlb	58	; () banked
  9888   0049CA  A567               	btfss	103,2,b	;volatile
  9889   0049CC  EFEA  F024         	goto	i2u218_41
  9890   0049D0  EFEC  F024         	goto	i2u218_40
  9891   0049D4                     i2u218_41:
  9892   0049D4  EF18  F025         	goto	i2l166
  9893   0049D8                     i2u218_40:
  9894   0049D8                     
  9895                           ; BSR set to: 58
  9896                           ;./init.h: 48:         for (int i = 0; i < 30; i++) {
  9897   0049D8  0E00               	movlw	0
  9898   0049DA  6E04               	movwf	(ISR@i+1)^0,c
  9899   0049DC  0E00               	movlw	0
  9900   0049DE  6E03               	movwf	ISR@i^0,c
  9901   0049E0                     i2l164:
  9902                           
  9903                           ;./init.h: 49:             LATC5 = ~LATC5;
  9904   0049E0  AABC               	btfss	16316,5,c	;volatile
  9905   0049E2  EFF5  F024         	goto	i2u219_41
  9906   0049E6  EFF8  F024         	goto	i2u219_40
  9907   0049EA                     i2u219_41:
  9908   0049EA  8ABC               	bsf	16316,5,c	;volatile
  9909   0049EC  EFF9  F024         	goto	i2u220_45
  9910   0049F0                     i2u219_40:
  9911   0049F0  9ABC               	bcf	16316,5,c	;volatile
  9912   0049F2                     i2u220_45:
  9913   0049F2                     
  9914                           ;./init.h: 50:             _delay((unsigned long)((300)*(4000000/4000.0)));
  9915   0049F2  0E02               	movlw	2
  9916   0049F4  6E02               	movwf	(??_ISR+1)^0,c
  9917   0049F6  0E86               	movlw	134
  9918   0049F8  6E01               	movwf	??_ISR^0,c
  9919   0049FA  0E99               	movlw	153
  9920   0049FC                     i2u486_47:
  9921   0049FC  2EE8               	decfsz	wreg,f,c
  9922   0049FE  D7FE               	bra	i2u486_47
  9923   004A00  2E01               	decfsz	??_ISR^0,f,c
  9924   004A02  D7FC               	bra	i2u486_47
  9925   004A04  2E02               	decfsz	(??_ISR+1)^0,f,c
  9926   004A06  D7FA               	bra	i2u486_47
  9927   004A08  0000               	nop	
  9928   004A0A                     
  9929                           ;./init.h: 51:         }
  9930   004A0A  4A03               	infsnz	ISR@i^0,f,c
  9931   004A0C  2A04               	incf	(ISR@i+1)^0,f,c
  9932   004A0E  BE04               	btfsc	(ISR@i+1)^0,7,c
  9933   004A10  EF13  F025         	goto	i2u221_41
  9934   004A14  5004               	movf	(ISR@i+1)^0,w,c
  9935   004A16  E109               	bnz	i2u221_40
  9936   004A18  0E1E               	movlw	30
  9937   004A1A  5C03               	subwf	ISR@i^0,w,c
  9938   004A1C  A0D8               	btfss	status,0,c
  9939   004A1E  EF13  F025         	goto	i2u221_41
  9940   004A22  EF15  F025         	goto	i2u221_40
  9941   004A26                     i2u221_41:
  9942   004A26  EFF0  F024         	goto	i2l164
  9943   004A2A                     i2u221_40:
  9944   004A2A                     
  9945                           ;./init.h: 52:         LATC5 = 0;
  9946   004A2A  9ABC               	bcf	16316,5,c	;volatile
  9947                           
  9948                           ;./init.h: 53:         IOCCFbits.IOCCF2 = 0;
  9949   004A2C  013A               	movlb	58	; () banked
  9950   004A2E  9567               	bcf	103,2,b	;volatile
  9951   004A30                     i2l166:
  9952                           
  9953                           ; BSR set to: 58
  9954   004A30  0011               	retfie		f
  9955   004A32                     __end_of_ISR:
  9956                           	callstack 0
  9957                           
  9958                           ;
  9959                           ; H/W Interrupt Vector Table @ 0x8
  9960                           ;
  9961                           
  9962                           	psect	ivt0x8
  9963   000008                     __pivt0x8:
  9964                           	callstack 0
  9965   000008                     ivt0x8_base:
  9966                           	callstack 0
  9967                           
  9968                           ; Vector 0 : SWINT
  9969   000008  002B               	dw	ivt0x8_undefint shr (0+2)
  9970                           
  9971                           ; Vector 1 : HLVD
  9972   00000A  002B               	dw	ivt0x8_undefint shr (0+2)
  9973                           
  9974                           ; Vector 2 : OSF
  9975   00000C  002B               	dw	ivt0x8_undefint shr (0+2)
  9976                           
  9977                           ; Vector 3 : CSW
  9978   00000E  002B               	dw	ivt0x8_undefint shr (0+2)
  9979                           
  9980                           ; Vector 4 : NVM
  9981   000010  002B               	dw	ivt0x8_undefint shr (0+2)
  9982                           
  9983                           ; Vector 5 : SCAN
  9984   000012  002B               	dw	ivt0x8_undefint shr (0+2)
  9985                           
  9986                           ; Vector 6 : CRC
  9987   000014  002B               	dw	ivt0x8_undefint shr (0+2)
  9988                           
  9989                           ; Vector 7 : IOC
  9990   000016  1272               	dw	_ISR shr (0+2)
  9991                           
  9992                           ; Vector 8 : INT0
  9993   000018  002B               	dw	ivt0x8_undefint shr (0+2)
  9994                           
  9995                           ; Vector 9 : ZCD
  9996   00001A  002B               	dw	ivt0x8_undefint shr (0+2)
  9997                           
  9998                           ; Vector 10 : AD
  9999   00001C  002B               	dw	ivt0x8_undefint shr (0+2)
 10000                           
 10001                           ; Vector 11 : ADT
 10002   00001E  002B               	dw	ivt0x8_undefint shr (0+2)
 10003                           
 10004                           ; Vector 12 : CMP1
 10005   000020  002B               	dw	ivt0x8_undefint shr (0+2)
 10006                           
 10007                           ; Vector 13 : SMT1
 10008   000022  002B               	dw	ivt0x8_undefint shr (0+2)
 10009                           
 10010                           ; Vector 14 : SMT1PRA
 10011   000024  002B               	dw	ivt0x8_undefint shr (0+2)
 10012                           
 10013                           ; Vector 15 : SMT1PRW
 10014   000026  002B               	dw	ivt0x8_undefint shr (0+2)
 10015                           
 10016                           ; Vector 16 : DMA1SCNT
 10017   000028  002B               	dw	ivt0x8_undefint shr (0+2)
 10018                           
 10019                           ; Vector 17 : DMA1DCNT
 10020   00002A  002B               	dw	ivt0x8_undefint shr (0+2)
 10021                           
 10022                           ; Vector 18 : DMA1OR
 10023   00002C  002B               	dw	ivt0x8_undefint shr (0+2)
 10024                           
 10025                           ; Vector 19 : DMA1A
 10026   00002E  002B               	dw	ivt0x8_undefint shr (0+2)
 10027                           
 10028                           ; Vector 20 : SPI1RX
 10029   000030  002B               	dw	ivt0x8_undefint shr (0+2)
 10030                           
 10031                           ; Vector 21 : SPI1TX
 10032   000032  002B               	dw	ivt0x8_undefint shr (0+2)
 10033                           
 10034                           ; Vector 22 : SPI1
 10035   000034  002B               	dw	ivt0x8_undefint shr (0+2)
 10036                           
 10037                           ; Vector 23 : I2C1RX
 10038   000036  002B               	dw	ivt0x8_undefint shr (0+2)
 10039                           
 10040                           ; Vector 24 : I2C1TX
 10041   000038  002B               	dw	ivt0x8_undefint shr (0+2)
 10042                           
 10043                           ; Vector 25 : I2C1
 10044   00003A  002B               	dw	ivt0x8_undefint shr (0+2)
 10045                           
 10046                           ; Vector 26 : I2C1E
 10047   00003C  002B               	dw	ivt0x8_undefint shr (0+2)
 10048                           
 10049                           ; Vector 27 : U1RX
 10050   00003E  002B               	dw	ivt0x8_undefint shr (0+2)
 10051                           
 10052                           ; Vector 28 : U1TX
 10053   000040  002B               	dw	ivt0x8_undefint shr (0+2)
 10054                           
 10055                           ; Vector 29 : U1E
 10056   000042  002B               	dw	ivt0x8_undefint shr (0+2)
 10057                           
 10058                           ; Vector 30 : U1
 10059   000044  002B               	dw	ivt0x8_undefint shr (0+2)
 10060                           
 10061                           ; Vector 31 : TMR0
 10062   000046  002B               	dw	ivt0x8_undefint shr (0+2)
 10063                           
 10064                           ; Vector 32 : TMR1
 10065   000048  002B               	dw	ivt0x8_undefint shr (0+2)
 10066                           
 10067                           ; Vector 33 : TMR1G
 10068   00004A  002B               	dw	ivt0x8_undefint shr (0+2)
 10069                           
 10070                           ; Vector 34 : TMR2
 10071   00004C  002B               	dw	ivt0x8_undefint shr (0+2)
 10072                           
 10073                           ; Vector 35 : CCP1
 10074   00004E  002B               	dw	ivt0x8_undefint shr (0+2)
 10075                           
 10076                           ; Vector 36 : Undefined
 10077   000050  002B               	dw	ivt0x8_undefint shr (0+2)
 10078                           
 10079                           ; Vector 37 : NCO1
 10080   000052  002B               	dw	ivt0x8_undefint shr (0+2)
 10081                           
 10082                           ; Vector 38 : CWG1
 10083   000054  002B               	dw	ivt0x8_undefint shr (0+2)
 10084                           
 10085                           ; Vector 39 : CLC1
 10086   000056  002B               	dw	ivt0x8_undefint shr (0+2)
 10087                           
 10088                           ; Vector 40 : INT1
 10089   000058  002B               	dw	ivt0x8_undefint shr (0+2)
 10090                           
 10091                           ; Vector 41 : CMP2
 10092   00005A  002B               	dw	ivt0x8_undefint shr (0+2)
 10093                           
 10094                           ; Vector 42 : DMA2SCNT
 10095   00005C  002B               	dw	ivt0x8_undefint shr (0+2)
 10096                           
 10097                           ; Vector 43 : DMA2DCNT
 10098   00005E  002B               	dw	ivt0x8_undefint shr (0+2)
 10099                           
 10100                           ; Vector 44 : DMA2OR
 10101   000060  002B               	dw	ivt0x8_undefint shr (0+2)
 10102                           
 10103                           ; Vector 45 : DMA2A
 10104   000062  002B               	dw	ivt0x8_undefint shr (0+2)
 10105                           
 10106                           ; Vector 46 : I2C2RX
 10107   000064  002B               	dw	ivt0x8_undefint shr (0+2)
 10108                           
 10109                           ; Vector 47 : I2C2TX
 10110   000066  002B               	dw	ivt0x8_undefint shr (0+2)
 10111                           
 10112                           ; Vector 48 : I2C2
 10113   000068  002B               	dw	ivt0x8_undefint shr (0+2)
 10114                           
 10115                           ; Vector 49 : I2C2E
 10116   00006A  002B               	dw	ivt0x8_undefint shr (0+2)
 10117                           
 10118                           ; Vector 50 : U2RX
 10119   00006C  002B               	dw	ivt0x8_undefint shr (0+2)
 10120                           
 10121                           ; Vector 51 : U2TX
 10122   00006E  002B               	dw	ivt0x8_undefint shr (0+2)
 10123                           
 10124                           ; Vector 52 : U2E
 10125   000070  002B               	dw	ivt0x8_undefint shr (0+2)
 10126                           
 10127                           ; Vector 53 : U2
 10128   000072  002B               	dw	ivt0x8_undefint shr (0+2)
 10129                           
 10130                           ; Vector 54 : TMR3
 10131   000074  002B               	dw	ivt0x8_undefint shr (0+2)
 10132                           
 10133                           ; Vector 55 : TMR3G
 10134   000076  002B               	dw	ivt0x8_undefint shr (0+2)
 10135                           
 10136                           ; Vector 56 : TMR4
 10137   000078  002B               	dw	ivt0x8_undefint shr (0+2)
 10138                           
 10139                           ; Vector 57 : CCP2
 10140   00007A  002B               	dw	ivt0x8_undefint shr (0+2)
 10141                           
 10142                           ; Vector 58 : Undefined
 10143   00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 10144                           
 10145                           ; Vector 59 : CWG2
 10146   00007E  002B               	dw	ivt0x8_undefint shr (0+2)
 10147                           
 10148                           ; Vector 60 : CLC2
 10149   000080  002B               	dw	ivt0x8_undefint shr (0+2)
 10150                           
 10151                           ; Vector 61 : INT2
 10152   000082  002B               	dw	ivt0x8_undefint shr (0+2)
 10153                           
 10154                           ; Vector 62 : Undefined
 10155   000084  002B               	dw	ivt0x8_undefint shr (0+2)
 10156                           
 10157                           ; Vector 63 : Undefined
 10158   000086  002B               	dw	ivt0x8_undefint shr (0+2)
 10159                           
 10160                           ; Vector 64 : Undefined
 10161   000088  002B               	dw	ivt0x8_undefint shr (0+2)
 10162                           
 10163                           ; Vector 65 : Undefined
 10164   00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 10165                           
 10166                           ; Vector 66 : Undefined
 10167   00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 10168                           
 10169                           ; Vector 67 : Undefined
 10170   00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 10171                           
 10172                           ; Vector 68 : Undefined
 10173   000090  002B               	dw	ivt0x8_undefint shr (0+2)
 10174                           
 10175                           ; Vector 69 : Undefined
 10176   000092  002B               	dw	ivt0x8_undefint shr (0+2)
 10177                           
 10178                           ; Vector 70 : TMR5
 10179   000094  002B               	dw	ivt0x8_undefint shr (0+2)
 10180                           
 10181                           ; Vector 71 : TMR5G
 10182   000096  002B               	dw	ivt0x8_undefint shr (0+2)
 10183                           
 10184                           ; Vector 72 : TMR6
 10185   000098  002B               	dw	ivt0x8_undefint shr (0+2)
 10186                           
 10187                           ; Vector 73 : CCP3
 10188   00009A  002B               	dw	ivt0x8_undefint shr (0+2)
 10189                           
 10190                           ; Vector 74 : CWG3
 10191   00009C  002B               	dw	ivt0x8_undefint shr (0+2)
 10192                           
 10193                           ; Vector 75 : CLC3
 10194   00009E  002B               	dw	ivt0x8_undefint shr (0+2)
 10195                           
 10196                           ; Vector 76 : Undefined
 10197   0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 10198                           
 10199                           ; Vector 77 : Undefined
 10200   0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 10201                           
 10202                           ; Vector 78 : Undefined
 10203   0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 10204                           
 10205                           ; Vector 79 : Undefined
 10206   0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 10207                           
 10208                           ; Vector 80 : CCP4
 10209   0000A8  002B               	dw	ivt0x8_undefint shr (0+2)
 10210                           
 10211                           ; Vector 81 : CLC4
 10212   0000AA  002B               	dw	ivt0x8_undefint shr (0+2)
 10213   0000AC                     ivt0x8_undefint:
 10214                           	callstack 0
 10215   0000AC  00FF               	reset	
 10216                           
 10217                           	psect	rparam
 10218   000001                     ___rparam_used  equ	1
 10219   000000                     ___param_bank   equ	0
 10220   000000                     __Lparam        equ	__Lrparam
 10221   000000                     __Hparam        equ	__Hrparam
 10222                           
 10223                           	psect	config
 10224                           
 10225                           ;Config register CONFIG1L @ 0x300000
 10226                           ;	External Oscillator Selection
 10227                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
 10228                           ;	Reset Oscillator Selection
 10229                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
 10230   300000                     	org	3145728
 10231   300000  F8                 	db	248
 10232                           
 10233                           ;Config register CONFIG1H @ 0x300001
 10234                           ;	Clock out Enable bit
 10235                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 10236                           ;	PRLOCKED One-Way Set Enable bit
 10237                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 10238                           ;	Clock Switch Enable bit
 10239                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 10240                           ;	Fail-Safe Clock Monitor Enable bit
 10241                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 10242   300001                     	org	3145729
 10243   300001  FF                 	db	255
 10244                           
 10245                           ;Config register CONFIG2L @ 0x300002
 10246                           ;	MCLR Enable bit
 10247                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 10248                           ;	Power-up timer selection bits
 10249                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 10250                           ;	Multi-vector enable bit
 10251                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 10252                           ;	IVTLOCK bit One-way set enable bit
 10253                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 10254                           ;	Low Power BOR Enable bit
 10255                           ;	LPBOREN = OFF, ULPBOR disabled
 10256                           ;	Brown-out Reset Enable bits
 10257                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 10258   300002                     	org	3145730
 10259   300002  FF                 	db	255
 10260                           
 10261                           ;Config register CONFIG2H @ 0x300003
 10262                           ;	Brown-out Reset Voltage Selection bits
 10263                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 10264                           ;	ZCD Disable bit
 10265                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 10266                           ;	PPSLOCK bit One-Way Set Enable bit
 10267                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 10268                           ;	Stack Full/Underflow Reset Enable bit
 10269                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10270                           ;	Debugger Enable bit
 10271                           ;	DEBUG = OFF, Background debugger disabled
 10272                           ;	Extended Instruction Set Enable bit
 10273                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 10274   300003                     	org	3145731
 10275   300003  FF                 	db	255
 10276                           
 10277                           ;Config register CONFIG3L @ 0x300004
 10278                           ;	WDT Period selection bits
 10279                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 10280                           ;	WDT operating mode
 10281                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 10282   300004                     	org	3145732
 10283   300004  9F                 	db	159
 10284                           
 10285                           ;Config register CONFIG3H @ 0x300005
 10286                           ;	WDT Window Select bits
 10287                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 10288                           ;	WDT input clock selector
 10289                           ;	WDTCCS = SC, Software Control
 10290   300005                     	org	3145733
 10291   300005  FF                 	db	255
 10292                           
 10293                           ;Config register CONFIG4L @ 0x300006
 10294                           ;	Boot Block Size selection bits
 10295                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 10296                           ;	Boot Block enable bit
 10297                           ;	BBEN = OFF, Boot block disabled
 10298                           ;	Storage Area Flash enable bit
 10299                           ;	SAFEN = OFF, SAF disabled
 10300                           ;	Application Block write protection bit
 10301                           ;	WRTAPP = OFF, Application Block not write protected
 10302   300006                     	org	3145734
 10303   300006  FF                 	db	255
 10304                           
 10305                           ;Config register CONFIG4H @ 0x300007
 10306                           ;	Boot Block Write Protection bit
 10307                           ;	WRTB = OFF, Boot Block not write-protected
 10308                           ;	Configuration Register Write Protection bit
 10309                           ;	WRTC = OFF, Configuration registers not write-protected
 10310                           ;	Data EEPROM Write Protection bit
 10311                           ;	WRTD = OFF, Data EEPROM not write-protected
 10312                           ;	SAF Write protection bit
 10313                           ;	WRTSAF = OFF, SAF not Write Protected
 10314                           ;	Low Voltage Programming Enable bit
 10315                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 10316   300007                     	org	3145735
 10317   300007  FF                 	db	255
 10318                           
 10319                           ;Config register CONFIG5L @ 0x300008
 10320                           ;	PFM and Data EEPROM Code Protection bit
 10321                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 10322   300008                     	org	3145736
 10323   300008  FF                 	db	255
 10324                           
 10325                           ;Config register CONFIG5H @ 0x300009
 10326                           ;	unspecified, using default values
 10327   300009                     	org	3145737
 10328   300009  FF                 	db	255
 10329                           tosu	equ	0x3FFF
 10330                           tosh	equ	0x3FFE
 10331                           tosl	equ	0x3FFD
 10332                           stkptr	equ	0x3FFC
 10333                           pclatu	equ	0x3FFB
 10334                           pclath	equ	0x3FFA
 10335                           pcl	equ	0x3FF9
 10336                           tblptru	equ	0x3FF8
 10337                           tblptrh	equ	0x3FF7
 10338                           tblptrl	equ	0x3FF6
 10339                           tablat	equ	0x3FF5
 10340                           prodh	equ	0x3FF4
 10341                           prodl	equ	0x3FF3
 10342                           indf0	equ	0x3FEF
 10343                           postinc0	equ	0x3FEE
 10344                           postdec0	equ	0x3FED
 10345                           preinc0	equ	0x3FEC
 10346                           plusw0	equ	0x3FEB
 10347                           fsr0h	equ	0x3FEA
 10348                           fsr0l	equ	0x3FE9
 10349                           wreg	equ	0x3FE8
 10350                           indf1	equ	0x3FE7
 10351                           postinc1	equ	0x3FE6
 10352                           postdec1	equ	0x3FE5
 10353                           preinc1	equ	0x3FE4
 10354                           plusw1	equ	0x3FE3
 10355                           fsr1h	equ	0x3FE2
 10356                           fsr1l	equ	0x3FE1
 10357                           bsr	equ	0x3FE0
 10358                           indf2	equ	0x3FDF
 10359                           postinc2	equ	0x3FDE
 10360                           postdec2	equ	0x3FDD
 10361                           preinc2	equ	0x3FDC
 10362                           plusw2	equ	0x3FDB
 10363                           fsr2h	equ	0x3FDA
 10364                           fsr2l	equ	0x3FD9
 10365                           status	equ	0x3FD8

Data Sizes:
    Strings     40
    Constant    0
    Data        20
    BSS         93
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     87      91
    BANK0           160    122     151
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[11]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[11]), 

    f$.$buffer	PTR unsigned char  size(1) Largest target is 15
		 -> PWM@percent(BANK0[15]), readADC@buffer(BANK0[12]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 15
		 -> PWM@percent(BANK0[15]), readADC@buffer(BANK0[12]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[11]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 15
		 -> PWM@percent(BANK0[15]), readADC@buffer(BANK0[12]), STR_1(CODE[6]), STR_2(CODE[15]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 15
		 -> PWM@percent(BANK0[15]), readADC@buffer(BANK0[12]), STR_1(CODE[6]), STR_2(CODE[15]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    S1196$buffer	PTR unsigned char  size(1) Largest target is 15
		 -> PWM@percent(BANK0[15]), readADC@buffer(BANK0[12]), 

    S1196$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 12
		 -> readADC@buffer(BANK0[12]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[5]), STR_5(CODE[3]), STR_6(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 15
		 -> PWM@percent(BANK0[15]), readADC@buffer(BANK0[12]), 

    strcat@dest	PTR unsigned char  size(1) Largest target is 12
		 -> readADC@buffer(BANK0[12]), 

    strcat@src	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_4(CODE[3]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_10(CODE[4]), STR_7(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[5]), STR_5(CODE[3]), STR_6(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[5]), STR_5(CODE[3]), STR_6(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[5]), STR_5(CODE[3]), STR_6(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___fldiv
    ___flge->___flmul
    ___fldiv->___xxtofl
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    ___lldiv->___lmul
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Clear->_LCD_Command
    _LCD_Init->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_PWM
    _readADC->_sprintf
    _PWM->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   37400
                                            120 BANK0      2     2      0
                         _Initialize
                          _LCD_Clear
                           _LCD_Init
                      _LCD_String_xy
                                _PWM
                            _readADC
 ---------------------------------------------------------------------------------
 (1) _readADC                                             22    22      0   19439
                                             77 BANK0     22    22      0
                      _LCD_String_xy
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (2) _strcat                                               4     2      2     122
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     338
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _PWM                                                 45    45      0   17172
                                             77 BANK0     43    43      0
                          _LCD_Clear
                      _LCD_String_xy
                    _PWM2_Initialize
                 _PWM2_LoadDutyValue
               _PWM2_OutputStatusGet
               _PWM_Output_D8_Enable
                    _TMR2_Initialize
                    _TMR2_StartTimer
                            ___lldiv
                             ___lmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    14      6   15698
                                             59 BANK0     18    12      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3   15356
                                             55 BANK0      4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           11     8      3   15120
                                             86 COMRAM     1     1      0
                                             46 BANK0      9     6      3
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   7     5      2     182
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              53    47      6   11942
                                             80 COMRAM     6     0      6
                                              0 BANK0     46    46      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     3      3      77
                                              4 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     146
                                              4 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4      69
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     340
                                             43 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     137
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     232
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2037
                                             68 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    1988
                                              4 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4      46
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    1480
                                             43 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     190
                                             68 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8      94
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    1133
                                             18 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                12     9      3    1767
                                             26 COMRAM    12     9      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  8     3      5     710
                                             18 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                6     3      3     331
                                             12 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     232
                                              4 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2      67
                                             10 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     298
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     302
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8      96
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     166
                                             16 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _TMR2_StartTimer                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (3) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Output_D8_Enable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_OutputStatusGet                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_LoadDutyValue                                   2     0      2      92
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        5     2      3     446
                                             13 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2     170
                                             11 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             1     1      0     124
                                             10 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     124
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0     219
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          1     1      0     124
                                             10 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (5) _MSdelay                                              6     4      2      95
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                 4     4      0      30
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Initialize
   _LCD_Clear
     _LCD_Command
       _MSdelay
   _LCD_Init
     _LCD_Command
     _MSdelay
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
         _MSdelay
   _PWM
     _LCD_Clear
     _LCD_String_xy
     _PWM2_Initialize
     _PWM2_LoadDutyValue
     _PWM2_OutputStatusGet
     _PWM_Output_D8_Enable
     _TMR2_Initialize
     _TMR2_StartTimer
       _TMR2_Start
     ___lldiv
       ___lmul (ARG)
     ___lmul
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _efgtoa
             ___fladd
             ___fldiv
               ___xxtofl (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___fldiv (ARG)
                 ___xxtofl (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
             _strcpy
           _fputc
           _read_prec_or_width
   _readADC
     _LCD_String_xy
     ___fldiv
     ___flmul
     ___xxtofl
     _sprintf
     _strcat

 _ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRllh      1383      0       0      0.0%
BITBIGSFRlll       400      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0      80     31.2%
BITBIGSFRlh        182      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160    122     151     94.4%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     87      91     95.8%
BITBIGSFRh          80      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     321      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Apr 29 11:40:42 2025

       ?_PWM_Output_D8_Enable 0001                  ___fldiv@aexp 002B                  ___fldiv@bexp 002A  
                ___fldiv@sign 0023                  ?_LCD_Command 0001                  ___awdiv@sign 000A  
                 ?_LCD_String 000C                           l130 4FE2                           l202 4F86  
                         l133 4F4C                           l213 4EFC                           l221 4C8C  
                         l142 495A                           l127 4F26                           l136 4F6A  
                         l208 4FB2                           l216 4FDA                           l225 40B6  
                         l155 4C46                           l147 4E28                           l172 4FEC  
                         l158 4DA8                           l270 48D8                           l254 49B4  
                         l502 4844                           l175 4FE8                           l255 49C4  
                         l169 4F9C                           l513 43C8                           l508 4382  
                         l540 42C4                           l277 48E8                           l517 4E98  
                         l474 4588                           l804 2E88                           l813 4D62  
                         l901 3F16                           l830 34C6                           l487 46EE  
                         l912 3EAE                           l825 369E                           l921 4E60  
                         l905 3E52                           l827 3502                           l771 2BF8  
                         l836 3548                           l780 2EC4                           l772 2BE6  
                         l837 3566                           l861 330E                           l773 2BAC  
                         l950 4A48                           l838 35BE                           l839 35AC  
                         l960 3F50                           l864 31A4                           l961 3F96  
                         l865 31C2                           l857 2F8A                           l785 2DA0  
                         l954 4A96                           l874 32D0                           l866 321A  
                         l867 3208                           l972 4090                           l788 2D12  
                         l797 2DE0                           l958 3F48                           l798 2DCE  
                         l983 2A0E                           l986 23AE                           l898 3DBA  
                         l988 21F4                           _PR2 3FAB                           _ISR 49C8  
                         _PWM 393C                           _abs 4E9A                           _pad 4A32  
                ___awmod@sign 000A               _TMR2_Initialize 4F88                           wreg 3FE8  
                ___flmul@aexp 003D                  ___flmul@bexp 003E                  ___flmul@sign 0038  
                ___flmul@temp 0043                  ___flmul@prod 003F                          ?_ISR 0001  
                 LCD_Char@dat 000B                          ?_PWM 0001                          ISR@i 0003  
                ___fltol@exp1 000E  __end_of_PWM2_OutputStatusGet 4FDC                          l1100 4BA8  
                        l1016 27F4                          l1032 4640                          l1040 393A  
                        l1106 4B52                          ?_abs 000B                          l1028 4638  
                        l1118 479A                          l1126 4DE8                          l1046 37E2  
                        l1062 4CD6                          l1080 4ECC                          l3000 2EC6  
                        l1072 44C6                          l1144 4D1C                          l1129 4FEE  
                        l3010 2F02                          l3002 2ED2                          l1138 4AF8  
                        l3100 3244                          l3020 2F34                          l3012 2F12  
                        l3004 2EE0                          l1077 4EB4                          l3110 32BA  
                        l3102 326E                          l3030 2F74                          l3022 2F42  
                        l3014 2F18                          l3006 2EE2                          l1086 3D62  
                        l3200 46BA                          l3120 32F4                          l3112 32CA  
                        l3104 3272                          l3040 2FBE                          l3032 2F7A  
                        l3024 2F44                          l3016 2F28                          l3008 2EF2  
                        l1089 3CA6                          l3210 46E6                          l3202 46C2  
                        l3114 32D4                          l3122 32FA                          l3106 328C  
                        l3050 301A                          l3042 2FCE                          l3034 2F9A  
                        l3026 2F54                          l3018 2F2E                          l3130 4D2E  
                        l2500 4D96                          l3140 44E0                          l3204 46C8  
                        l3220 4808                          l3124 32FE                          l3116 32E4  
                        l3108 32A0                          l3060 3060                          l3052 3026  
                        l3044 2FD8                          l3036 2FAA                          l3028 2F64  
                        l3300 42B4                          l4100 2142                          l2510 4DA6  
                        l2502 4D9A                          l3150 4506                          l3142 44E4  
                        l3134 44C8                          l3206 46CE                          l3310 4A64  
                        l3222 4818                          l3214 479C                          l3230 42C6  
                        l3118 32F2                          l3070 30CE                          l3062 3070  
                        l3054 3032                          l3046 2FF2                          l4110 218C  
                        l4102 2168                          l2504 4D9E                          l3160 453C  
                        l3152 4518                          l3144 44F2                          l3136 44CA  
                        l3208 46DE                          l3312 4A68                          l3304 4A32  
                        l3224 483C                          l3216 47CA                          l3240 4350  
                        l3232 42F4                          l3080 316C                          l3072 30DE  
                        l3064 3080                          l3056 3040                          l3048 2FFE  
                        l3128 4D1E                          l3320 43CA                          l4200 26D6  
                        l4120 21BE                          l4104 217A                          l2506 4DA0  
                        l3402 4C12                          l3162 4552                          l3154 4520  
                        l3170 4568                          l3146 44FA                          l3138 44D8  
                        l3314 4A86                          l3306 4A40                          l3410 3F18  
                        l3226 4842                          l3218 47DA                          l3242 4362  
                        l3234 4304                          l3090 31D2                          l3082 318A  
                        l3074 30FE                          l3066 309E                          l3058 3050  
                        l3322 43EA                          l4210 273A                          l4202 270A  
                        l4130 227C                          l4106 217E                          l2508 4DA2  
                        l3404 4C16                          l3172 4578                          l3164 455A  
                        l3156 4528                          l3148 44FE                          l3180 4644  
                        l3316 4E9A                          l3308 4A54                          l3420 3F7E  
                        l3412 3F3C                          l3244 4370                          l3236 4332  
                        l3092 3200                          l3084 3194                          l3076 3128  
                        l3068 30AE                          l3252 4E62                          l2700 2AD6  
                        l3260 41C0                          l3324 4428                          l3332 4468  
                        l4220 27EA                          l4212 273E                          l4204 271E  
                        l4140 233C                          l4132 22AE                          l4124 2204  
                        l4108 2184                          l4060 202A                          l4300 3776  
                        l2470 4D6C                          l3406 4C2C                          l3174 4580  
                        l3166 455C                          l3158 4536                          l3190 4674  
                        l3182 4652                          l3318 4EA8                          l3430 3FAC  
                        l3422 3F8A                          l3414 3F58                          l3246 43C0  
                        l3238 4342                          l3086 31A2                          l3078 315E  
                        l3254 4E78                          l2710 2B10                          l2702 2ADC  
                        l3270 4216                          l3262 41D6                          l3334 447A  
                        l3326 4450                          l3350 4B76                          l3342 4CD8  
                        l4230 282E                          l4222 2806                          l4214 2746  
                        l4206 2722                          l4150 23D2                          l4134 22EC  
                        l4126 220A                          l4118 21A4                          l4070 207E  
                        l4062 203E                          l4310 37BA                          l4302 3792  
                        l2480 4D82                          l2472 4D70                          l2464 4D64  
                        l3408 4C30                          l3168 4562                          l3192 4686  
                        l3184 465A                          l3440 4020                          l3432 3FDE  
                        l3424 3F92                          l3416 3F68                          l3248 43C6  
                        l3096 322A                          l3088 31B4                          l3256 4E88  
                        l2720 2B24                          l2712 2B14                          l2704 2AEC  
                        l3272 4226                          l3328 445C                          l3360 3BDC  
                        l3344 4CE0                          l4232 2836                          l4224 2814  
                        l4240 2856                          l4216 2752                          l4208 2732  
                        l4160 2406                          l4152 23DA                          l4136 2300  
                        l4144 237C                          l4128 223E                          l4080 20BA  
                        l4072 2086                          l4064 204C                          l4320 3806  
                        l4312 37D4                          l4304 379C                          l4400 3966  
                        l2490 4D8C                          l2482 4D84                          l2474 4D72  
                        l2466 4D66                          l3194 468E                          l3186 465E  
                        l3178 4642                          l2650 4700                          l3450 4074  
                        l3442 4032                          l3434 3FE4                          l3426 3F9E  
                        l3418 3F6E                          l3098 3236                          l2810 2D74  
                        l2802 2D4C                          l2730 2B38                          l2722 2B28  
                        l2714 2B18                          l2706 2AFE                          l3282 4250  
                        l3274 422A                          l3266 41EA                          l3338 44BE  
                        l3362 3BEA                          l3370 3CCA                          l3354 3B52  
                        l3346 4B54                          l4250 28DC                          l4242 2868  
                        l4234 2846                          l4226 2824                          l4218 27CA  
                        l4170 2450                          l4162 241E                          l4154 23E2  
                        l4146 23B6                          l4138 2334                          l4090 2100  
                        l4074 2096                          l4082 20BE                          l4066 2050  
                        l4330 38A6                          l4322 382C                          l4314 37DA  
                        l4410 3976                          l4402 3968                          l2492 4D8E  
                        l2484 4D86                          l2476 4D74                          l2468 4D6A  
                        l3196 4696                          l3188 466C                          l2652 4710  
                        l3444 404C                          l3436 3FEA                          l3428 3FA6  
                        l2900 33C8                          l2820 2DB0                          l2812 2D7C  
                        l2804 2D56                          l2732 2B3C                          l2724 2B2C  
                        l2716 2B1C                          l2708 2B0C                          l2740 2B4C  
                        l3292 4278                          l3284 425A                          l3276 4238  
                        l3268 4214                          l3372 3D06                          l3356 3B72  
                        l3348 4B62                          l4260 2956                          l4252 2910  
                        l4244 287A                          l4236 284A                          l4228 2828  
                        l4172 2464                          l4180 255A                          l4164 2430  
                        l4156 23E6                          l4148 23C6                          l4092 2108  
                        l4084 20E4                          l4076 20A6                          l4068 2074  
                        l4332 38B4                          l4324 385E                          l4340 3904  
                        l4308 37B0                          l4420 39FC                          l4412 397A  
                        l4404 396A                          l2494 4D90                          l2486 4D88  
                        l2478 4D76                          l3198 46A4                          l2654 471A  
                        l3446 405C                          l3438 4006                          l2910 340A  
                        l2902 33D8                          l2830 2E0A                          l2822 2DC6  
                        l2814 2D80                          l2806 2D64                          l2750 2BC6  
                        l2742 2B78                          l2734 2B40                          l2726 2B30  
                        l2718 2B20                          l2670 2A3C                          l2662 2A10  
                        l3294 4284                          l3286 4264                          l3374 3D1A  
                        l3366 3C5A                          l3358 3BC8                          l3390 4B34  
                        l3382 4AFA                          l4270 29C2                          l4262 295E  
                        l4254 2918                          l4246 287E                          l4238 2850  
                        l4190 2626                          l4182 2578                          l4174 24C8  
                        l4158 23F8                          l4166 2438                          l4094 211C  
                        l4086 20F6                          l4078 20B2                          l4318 37E8  
                        l4350 4C90                          l4430 3A48                          l4422 3A12  
                        l4414 3986                          l4406 396E                          l2496 4D92  
                        l2488 4D8A                          l2656 4736                          l2648 46F0  
                        l3448 4062                          l2904 33EE                          l2840 2E86  
                        l2832 2E44                          l2816 2D90                          l2808 2D66  
                        l2760 2C06                          l2752 2BCA                          l2744 2B94  
                        l2736 2B44                          l2728 2B34                          l2680 2A74  
                        l2672 2A4C                          l2664 2A1C                          l3296 4294  
                        l3376 3D42                          l3368 3C96                          l3384 4B0E  
                        l3392 4B38                          l4272 29D2                          l4264 296C  
                        l4248 2884                          l4256 291C                          l4192 2636  
                        l4184 25AC                          l4176 2520                          l4168 2440  
                        l4096 2126                          l4088 20FA                          l4328 3890  
                        l4344 3912                          l4280 36A0                          l4352 4C98  
                        l4360 4E2A                          l4440 3B08                          l4432 3A4E  
                        l4424 3A22                          l4416 39F6                          l4408 3972  
                        l2498 4D94                          l3394 4BFE                          l3810 4DFC  
                        l2658 4768                          l2930 348C                          l2922 3442  
                        l2906 33FE                          l2914 341E                          l2850 2EB2  
                        l2842 2E96                          l2826 2DF0                          l2834 2E46  
                        l2818 2D92                          l2770 2C48                          l2762 2C16  
                        l2754 2BD8                          l2746 2BA4                          l2738 2B48  
                        l2690 2AA2                          l2682 2A7A                          l2674 2A5C  
                        l2666 2A2A                          l3298 42A4                          l3378 3D52  
                        l3386 4B1E                          l4274 29EA                          l4266 299C  
                        l4258 293A                          l4194 2646                          l4186 25DE  
                        l4178 2554                          l4338 38E6                          l4290 370A  
                        l4282 36CA                          l4354 4CAA                          l4362 4E34  
                        l4442 3B0C                          l4434 3A62                          l4426 3A30  
                        l4418 39F8                          l4450 4C4C                          l3396 4C0A  
                        l3804 4FDC                          l3812 4E04                          l3820 4F88  
                        l3900 4874                          l2860 4DC4                          l2940 34D0  
                        l2932 3492                          l2924 345C                          l2916 342E  
                        l2908 3406                          l2852 2EB4                          l2844 2E9C  
                        l2836 2E56                          l2828 2DFC                          l2780 2C76  
                        l2772 2C56                          l2756 2BDA                          l2748 2BBA  
                        l2692 2AA4                          l2684 2A8C                          l2676 2A5E  
                        l2668 2A2C                          l3388 4B22                          l4276 29F2  
                        l4268 29AA                          l4196 267A                          l4188 25F4  
                        l4292 3712                          l4284 36D2                          l4356 4CCC  
                        l4364 4E3C                          l4444 3B22                          l4436 3A6A  
                        l4428 3A3A                          l4380 40DE                          l4372 4092  
                        l4460 4C88                          l4452 4C50                          l3814 4E0E  
                        l3806 4DEC                          l3830 4F94                          l3822 4F8C  
                        l3910 48C6                          l3902 4880                          l2862 4DC8  
                        l2950 3528                          l2942 34EE                          l2934 34A2  
                        l2926 346C                          l2918 342E                          l2870 332C  
                        l2846 2E9E                          l2838 2E66                          l2790 2CE2  
                        l2782 2C80                          l2774 2C62                          l2766 2C2A  
                        l2758 2BE4                          l2694 2AB4                          l2686 2A8E  
                        l2678 2A64                          l4198 26D0                          l4294 3726  
                        l4286 36DE                          l4366 4E44                          l4446 3B32  
                        l4438 3AEA                          l4390 393C                          l4382 4166  
                        l4374 409C                          l4454 4C66                          ?_pad 0013  
                        l3816 4E16                          l3808 4DEC                          l3840 4F9E  
                        l3824 4F8E                          l3832 4FE4                          l3912 48C8  
                        l3904 488E                          l2856 4DAA                          l2960 3576  
                        l2952 352E                          l2944 34F0                          l2936 34B6  
                        l2928 347C                          l2872 333C                          l2880 3364  
                        l2864 3310                          l2848 2EA4                          l2792 2CF2  
                        l2776 2C66                          l2768 2C3A                          l2784 2C86  
                        l2696 2AC4                          l2688 2A94                          l3680 45C2  
                        l4296 3732                          l4288 36E2                          l4368 4E54  
                        l4392 3950                          l3920 3D84                          l4384 4184  
                        l4376 40B2                          l4456 4C80                          l4448 4C48  
                        l3770 4F2A                          l3690 4F56                          l3818 4E1C  
                        l3842 4FA2                          l3850 4EF2                          l3834 4F6C  
                        l3826 4F90                          l3914 48D2                          l3906 4898  
                        l2858 4DB6                          l2970 35E8                          l2962 35A4  
                        l2954 3538                          l2946 3500                          l2938 34C4  
                        l2890 3390                          l2882 3374                          l2874 334C  
                        l2866 331C                          l2786 2CAC                          l2794 2D02  
                        l2778 2C74                          l2698 2AD4                          l3682 45E2  
                        l3674 458A                          l4298 3754                          l4394 395A  
                        l3930 3DFC                          l3922 3DCA                          l4386 4190  
                        l4378 40C4                          l4458 4C84                          l3780 4F3E  
                        l3772 4F30                          l3692 4F58                          l3852 4EF6  
                        l3844 4ECE                          l3836 4F76                          l3828 4F92  
                        l3908 48B6                          l2980 3660                          l2972 3612  
                        l2956 3546                          l2948 3512                          l2892 33A0  
                        l2884 337A                          l2876 335C                          l2868 332A  
                        l2796 2D28                          l2788 2CE0                          l3684 4604  
                        l3676 4592                          l4396 395E                          l3940 3E84  
                        l3932 3E08                          l3924 3DE0                          l3916 3D66  
                        l4388 41A0                          l3782 4F40                          l3774 4F38  
                        l3694 4F5A                          l3790 4920                          l3846 4ED6  
                        l3838 4F84                          l2990 3692                          l2982 3678  
                        l2966 35CE                          l2974 3616                          l2958 3558  
                        l2894 33B0                          l2886 3380                          l2878 335E  
                        l2798 2D38                          l3678 45BA                          l3686 460C  
                        l4398 3962                          l3950 3EC2                          l3942 3E90  
                        l3934 3E3A                          l3918 3D76                          l3776 4F3A  
                        l3696 4F5C                          l3688 4F50                          l3784 48EA  
                        l3848 4EE4                          l3792 4FEA                          l2992 3694  
                        l2984 367A                          l2976 3630                          l2968 35DA  
                        l2896 33C0                          l2888 338E                          l3952 3EE6  
                        l3944 3E9E                          l3936 3E3C                          l3928 3DF4  
                        l3880 4AC4                          l3778 4F3C                          l3962 4EFE  
                        l3698 4F5E                          l3786 48EE                          l3858 4FC8  
                        l3890 498A                          l2986 367E                          l2978 3646  
                        l2898 33C2                          l3954 3EF6                          l3946 3EBC  
                        l3938 3E48                          l3882 4ACA                          l3874 4A98  
                        l3964 4F0A                          l3788 491C                          l3892 4994  
                        l3884 495C                          l2988 368C                          l3956 3F04  
                        l3948 3EBE                          l3876 4AA4                          l3966 4F0C  
                        l3894 4846                          l3886 496C                          l3958 3F06  
                        l3878 4AA8                          l3896 4856                          l3888 497A  
                        l3898 486C                          STR_1 2010                          STR_2 2001  
                        STR_3 2016                          STR_4 2023                          STR_5 2026  
                        STR_6 2026                          STR_7 201B                          u3000 31D2  
                        u3001 31CE                          u3010 3200                          u3011 31FC  
                        u3100 4518                          u2220 4700                          u3020 3216  
                        u2300 2AA2                          u3101 4514                          u2221 46FC  
                        u3021 3212                          u2301 2A9E                          u3110 4536  
                        u2230 4710                          u3030 322A                          u2310 2AB4  
                        u3111 4532                          u2231 470C                          u3031 3226  
                        u2311 2AB0                          u3120 4552                          u2240 4736  
                        u3200 47CA                          u3040 3244                          u2400 2BF8  
                        u2320 2AC4                          _LATD 3FBD                          u3121 454E  
                        u2241 4732                          u3201 47C6                          u3041 3240  
                        u2401 2BF4                          u2321 2AC0                          u3130 4578  
                        u2250 4768                          u3210 4808                          u3050 328C  
                        u2410 2C06                          u2330 2AFE                          u3131 4574  
                        u2251 4764                          u3211 4804                          u3051 3288  
                        u2411 2C02                          u2331 2AFA                          u4100 494A  
                        u3140 4652                          u3220 483C                          u3060 32BA  
                        u2500 2D64                          u2420 2C16                          u2340 2B0C  
                        u2260 2A2A                          u3300 420A                          u4020 45BA  
                        u3141 464E                          u3221 4838                          u3061 32B6  
                        u2501 2D60                          u2421 2C12                          u2341 2B08  
                        u2261 2A26                          u4021 45B6                          u4110 495A  
                        u3150 466C                          u3230 42F4                          u3070 32F2  
                        u2510 2D74                          u2430 2C48                          u2350 2B78  
                        u2270 2A3C                          u3310 4238                          u4030 4638  
                        u4111 4956                          u3151 4668                          u3231 42F0  
                        u3071 32EE                          u2511 2D70                          u2431 2C44  
                        u2351 2B74                          u2271 2A38                          u3311 4234  
                        u4031 4634                          u4200 49B4                          u3080 44D8  
                        u3160 4686                          u3240 4332                          u2600 2E56  
                        u2520 2D90                          u2440 2C56                          u2360 2B90  
                        u2280 2A4C                          u3320 424C                          u3400 4428  
                        u4201 49B0                          u3081 44D4                          u3161 4682  
                        u3241 432E                          u2601 2E52                          u2521 2D8C  
                        u2441 2C52                          u2361 2B8A                          u2281 2A48  
                        u3321 4248                          u3305 4200                          u3401 4424  
                        u4130 4DFC                          u4210 486C                          u3090 44F2  
                        u3170 46A4                          u3250 4350                          u2610 2E66  
                        u2530 2DA0                          u2450 2C74                          u2370 2B92  
                        u2290 2A8C                          u3330 4274                          u3410 4450  
                        _T2PR 3FAB                          u4107 493C                          u4131 4DF8  
                        u4211 4868                          u3091 44EE                          u3171 46A0  
                        u3251 434C                          u2611 2E62                          u2531 2D9C  
                        u2451 2C70                          u2291 2A88                          u3331 4270  
                        u3411 444C                          u4140 4EE4                          u4220 488E  
                        u3180 46BA                          u2700 33A0                          u3260 4370  
                        u2620 2E86                          u2540 2DB0                          u2460 2CAC  
                        u2380 2BBA                          u3340 4294                          u3420 447A  
                        u3500 3BEA                          u4300 3EAE                          u4141 4EE0  
                        u4221 488A                          u3181 46B6                          u2701 339C  
                        u3261 436C                          u2621 2E82                          u2541 2DAC  
                        u2461 2CA8                          u2381 2BB6                          u3341 4290  
                        u3421 4476                          u3501 3BE6                          u4301 3EAA  
                        u4230 48B6                          u3190 46DE                          u2710 33B0  
                        u3270 43C0                          u2630 2E96                          u2550 2DC6  
                        u2470 2CF2                          u2390 2BD8                          u3350 42A4  
                        u4310 3EBC                          u4231 48B2                          u3191 46DA  
                        u2711 33AC                          u3271 43BC                          u2631 2E92  
                        u2551 2DC2                          u2471 2CEE                          u2391 2BD4  
                        u3351 42A0                          u4311 3EB8                          u3600 4C46  
                        u4160 4FD8                          u3360 4A40                          u2800 3566  
                        u2720 33EE                          u3280 4E78                          u2640 2EB2  
                        u2560 2DDC                          u2480 2D28                          u3440 44B4  
                        u3520 3C56                          u4400 2096                          u4320 3EF6  
                        u4240 3D76                          u3601 4C42                          u4161 4FD2  
                        u3361 4A3C                          u2801 3562                          u2721 33EA  
                        u3281 4E74                          u2641 2EAE                          u2561 2DD8  
                        u2481 2D24                          u3441 44AE                          u3521 3C52  
                        u4401 2092                          u4321 3EF2                          u4241 3D72  
                        u4090 4918                          u2650 4DE8                          u3370 4A86  
                        u3610 3F28                          u2810 3576                          u2730 342E  
                        u2570 2DF0                          u2490 2D38                          u3290 41D6  
                        u3450 44B6                          u3530 3C7A                          u4410 20A6  
                        u4330 3F04                          u4250 3D84                          u4170 4AC0  
                        u4155 4EE6                          u2651 4DE4                          u3371 4A82  
                        u3611 3F22                          u2811 3572                          u2731 342A  
                        u2571 2DEC                          u2491 2D34                          u3291 41D2  
                        u3435 448C                          u3515 3BFE                          u4411 20A2  
                        u4331 3F00                          u4251 3D80                          u4171 4ABC  
                        u3380 4EA8                          u3620 3F2A                          u2820 35A4  
                        u2740 34A2                          u2660 332A                          u2900 2EF2  
                        u2580 2E0A                          u3540 3C96                          u3516 3C08  
                        u3460 4D1C                          u4500 2378                          u4420 20E4  
                        u4260 3DE0                          u4180 4AF8                          u3381 4EA4  
                        u2821 35A0                          u2741 349E                          u2661 3326  
                        u2901 2EEE                          u2581 2E06                          u3541 3C92  
                        u3517 3C18                          u3461 4D18                          u4501 2374  
                        u4421 20E0                          u4261 3DDC                          u4181 4AF4  
                        u4166 4FDA                          u4190 497A                          u3630 3F3C  
                        u2830 35BA                          u2750 34C4                          u2670 333C  
                        u2910 2F02                          u2590 2E44                          u3390 440A  
                        u3550 3CEA                          u3470 4B62                          u4510 23AE  
                        u4430 20F6                          u4270 3E36                          u4191 4976  
                        u3631 3F38                          u2831 35B6                          u2751 34C0  
                        u2671 3338                          u2911 2EFE                          u2591 2E40  
                        u3535 3C70                          u3471 4B5E                          u4511 23AA  
                        u4431 20F2                          u4271 3E32                          u3640 3F68  
                        u2840 35CE                          u2760 34EE                          u2680 334C  
                        u2920 2F42                          u3560 3D06                          u3480 3B9A  
                        u4600 26D0                          u4520 23C6                          u4440 2168  
                        u4280 3E80                          u4097 490A                          u3641 3F64  
                        u2841 35CA                          u2761 34EA                          u2681 3348  
                        u2921 2F3E                          u3561 3D02                          u4601 26CC  
                        u4521 23C2                          u4441 2164                          u4281 3E7C  
                        u3650 3F7E                          u2850 35E8                          u2770 3512  
                        u2690 338E                          u2930 2F54                          u3570 3D42  
                        u3490 3BC8                          u4610 271E                          u4530 23F8  
                        u4450 217A                          u4290 3E9E                          u3651 3F7A  
                        u2851 35E4                          u2771 350E                          u2691 338A  
                        u2931 2F50                          u3395 4400                          u3571 3D3E  
                        u3555 3CE0                          u3491 3BC4                          u4611 271A  
                        u4531 23F4                          u4451 2176                          u4291 3E9A  
                        u3660 4020                          u2860 3630                          u2780 3528  
                        u2940 2F64                          u3580 4B52                          u4700 29D2  
                        u4620 27CA                          u4540 2406                          u4460 21F0  
                        u3661 401C                          u2861 362C                          u2781 3524  
                        u2941 2F60                          u3485 3B90                          u3581 4B4E  
                        u4701 29CE                          u4621 27C6                          u4541 2402  
                        u4461 21EC                          u3590 4C2C                          u3670 4032  
                        u2870 3660                          u2790 3546                          u2950 2F9A  
                        u4630 2806                          u4550 2430                          u4470 227C  
                        u4390 204C                          u4710 36CA                          u3591 4C28  
                        u3671 402E                          u2871 365C                          u2791 3542  
                        u2951 2F96                          u4631 2802                          u4551 242C  
                        u4471 2278                          u4391 2048                          u4711 36C6  
                        u3680 404C                          u2880 368C                          u2960 2FAA  
                        u4640 2814                          u4560 2578                          u4480 22AE  
                        u4720 370A                          u4800 3A48                          u3681 4048  
                        u2881 3688                          u2961 2FA6                          u4641 2810  
                        u4561 2574                          u4481 22AA                          u4721 3706  
                        u4801 3A44                          u3690 405C                          u2970 3148  
                        u2890 2EE0                          u4650 2868                          u4570 25DE  
                        u4490 22EC                          u4730 3754                          u4810 3A62  
                        u3691 4058                          u2891 2EDC                          u4651 2864  
                        u4571 25DA                          u4491 22E8                          u4731 3750  
                        u4811 3A5E                          u2980 31A2                          u4660 293A  
                        u4580 2626                          u4740 3776                          u2981 319E  
                        u4661 2936                          u4581 2622                          u4741 3772  
                        u2990 31C2                          u4670 2956                          u4590 2636  
                        u4750 3828                          u2991 31BE                          u2975 313E  
                        u4671 2952                          u4591 2632                          u4751 3824  
                        u4680 29BC                          u4760 4CCC                          u4681 29B6  
                        u4761 4CC8                          u4690 29BE                          u4770 40C4  
                        u4771 40C0                          u4827 4C72                          u4781 3946  
                        u4837 41AC                          u4847 3B3E                          u4857 4F32  
                        u4795 3A38                          u4796 3A3A                          _TMR2 3FAA  
                        abs@a 000B                          _dbuf 0100                          _labs 4B54  
                        _main 4C48                          _dtoa 3F18                          _prec 00F4  
                        pad@i 0019                          pad@p 0016                          fsr1h 3FE2  
                        fsr2h 3FDA                          indf1 3FE7                          indf2 3FDF  
                        fsr1l 3FE1                          fsr2l 3FD9                 ___fpclassifyf 43CA  
                        prodh 3FF4                          prodl 3FF3                          start 00AE  
             __end_of_MSdelay 4C48               ___fldiv@new_exp 0024                 _LCD_String_xy 4DEA  
                ___param_bank 0000                         ??_ISR 0001                         ??_PWM 00AD  
                       ??_abs 000D                         ??_pad 0018              __end_of_LCD_Char 4F6C  
     __end_of_PWM2_Initialize 4FB4              __end_of_LCD_Init 4F28                 ___fltol@sign1 000D  
                       ?_labs 0005                         _ADCAP 3EF5               __end_of___fladd 2EC6  
                       ?_main 0001                         ?_dtoa 001B                         _ADCLK 3EFF  
                       _ADPCH 3EF1               __end_of___fldiv 36A0                         _ADREF 3EFD  
             __end_of___awdiv 458A               __end_of___flneg 4E9A                         STR_10 201F  
             __end_of___awmod 46F0               __end_of___flmul 3310               __end_of___flsub 4D64  
             __end_of___fltol 42C6               __end_of___lldiv 48EA               ___awdiv@divisor 0007  
                       _T2CON 3FAC                         _LATC3 1FDE3                         _LATC4 1FDE4  
                       _LATC5 1FDE5                         _T2HLT 3FAD                         _T2TMR 3FAA  
                       _T2RST 3FAF                         i2l164 49E0                         i2l165 4A2A  
                       i2l166 4A30               ___awdiv@counter 0009                  vfpfcnvrt@fmt 008F  
                       _PORTB 3FCB                         _TRISB 3FC3                         _TRISC 3FC4  
                       _TRISD 3FC5                         _TRISE 3FC6           ___lmul@multiplicand 0009  
                 readADC@Vref 00BF               __end_of_readADC 41C0                         _flags 00F6  
                 ?_TMR2_Start 0001           read_prec_or_width@c 0009           read_prec_or_width@n 000A  
                       _fputc 46F0                         _fputs 4DAA                         labs@a 0005  
                       pad@fp 0013                         _width 00F2                         _putch 4FEE  
                       dtoa@d 001C                         dtoa@i 0025                         dtoa@p 0022  
                       dtoa@s 0024                         dtoa@w 0020                         tablat 3FF5  
                       plusw1 3FE3                         plusw2 3FDB                         status 3FD8  
             __end_of_sprintf 4E62                ?___fpclassifyf 0005               _TMR2_StartTimer 4FE4  
              ?_LCD_String_xy 000E        ??_PWM_Output_D8_Enable 0005               __initialization 4BAA  
                __end_of_labs 4BAA                  __end_of_main 4C90                  __end_of_dtoa 4092  
     __end_of_TMR2_Initialize 4F9E                    _Initialize 4D64                  PWM@pwmStatus 00D2  
                      ??_labs 0009                        ??_main 00D8                        ??_dtoa 001E  
           __end_of_LCD_Clear 4FE4                 __activetblptr 0003    __end_of_read_prec_or_width 4642  
                      _ADACQH 3EF4                        _ADACQL 3EF3                        ?_fputc 0005  
                      ?_fputs 000D                        _ADRESH 3EF0                        _ADRESL 3EEF  
                      _ADPREH 3EF7                        _ADPREL 3EF6                        _CCPR2H 3F79  
                      _CCPR2L 3F78              ___awdiv@dividend 0005                        ?_putch 0001  
                      _ANSELB 3A50                        _ANSELC 3A60                        _ANSELD 3A70  
                      _ANSELE 3A80              LCD_String_xy@msg 000F              LCD_String_xy@pos 000E  
            LCD_String_xy@row 0011                        _RB3PPS 3A0B                     ??_MSdelay 0007  
                      i2l2600 49C8                        i2l2610 4A0A                        i2l2602 49D8  
                      i2l2608 49F2                        _OSCFRQ 39DF              __end_of___xxtofl 3F18  
                _CCPTMRS0bits 3F5E                  vfprintf@cfmt 009A                        ___flge 42C6  
                      ___fleq 479C                        ___lmul 495C                     ??___fladd 000D  
                   ??___fldiv 001B                     ??___awdiv 0009                     ??___flneg 0009  
                   ??___awmod 0009                     ??___flmul 0034                     ??___flsub 004D  
                   ??___fltol 0009                     ??___lldiv 0019                        _efgtoa 202A  
                      _floorf 3B52                        _memcpy 4AFA              ?_PWM2_Initialize 0001  
        _PWM2_OutputStatusGet 4FC8          read_prec_or_width@ap 0006                        clear_0 4BD2  
                      clear_1 4BDE              ___awdiv@quotient 000B               ___awmod@divisor 0007  
                      isa$std 0001               ___awmod@counter 0009                        pad@buf 0014  
                      _strcat 4A98                        dtoa@fp 001B                        _strcpy 4CD8  
                   ??_readADC 00AD                        fputc@c 0005                        fputs@c 0010  
                      fputs@i 0011                        fputs@s 000D               ___fpclassifyf@e 000D  
             ___fpclassifyf@u 000F               ___fpclassifyf@x 0005                  __mediumconst 2000  
                      tblptrh 3FF7                        tblptrl 3FF6                        tblptru 3FF8  
                      putch@c 0001              __end_of_vfprintf 4CD8       __end_of_TMR2_StartTimer 4FEA  
                   ??_sprintf 0058                    ___flge@ff1 0045                    ___flge@ff2 0049  
             ??___fpclassifyf 0009                  ___xxtofl@arg 000F                  ___xxtofl@exp 000E  
                ___xxtofl@val 0005                    ___fleq@ff1 0005                    ___fleq@ff2 0009  
                   ?_LCD_Char 0001                    __accesstop 0060       __end_of__initialization 4BF8  
                   ?_LCD_Init 0001               ??_LCD_String_xy 0011                    ___flneg@f1 0005  
  __end_of_PWM2_LoadDutyValue 4EFE                 ___rparam_used 0001                    ___fltol@f1 0005  
              __pcstackCOMRAM 0001                  __pidataBANK0 4FB4                ivt0x8_undefint 00AC  
               __end_of_fputc 479C                 __end_of_fputs 4DEA         ?_PWM2_OutputStatusGet 0001  
                 ?_Initialize 0001                 __end_of_putch 4FF0              ?_TMR2_Initialize 0001  
                ??_LCD_String 000E                       ??_fputc 0008                       ??_fputs 0010  
                     ??_putch 0005                    __pbssBANK0 00EE                    __pbssBANK1 0100  
                  ??_LCD_Char 000B                    ??_LCD_Init 000C            __end_of_LCD_String 495C  
                     IVTBASEH 3FD6                       IVTBASEL 3FD5                       IVTBASEU 3FD7  
                     ?___flge 0045                       ?___fleq 0005                       ?___lmul 0005  
                   PWM@F16999 00DA                       ?_efgtoa 0051                       _CCP2CON 3F7A  
                     ?_floorf 002C                       ?_memcpy 0005                ___lmul@product 000D  
                     ?_strcat 0005                       ?_strcpy 0005                     ?___xxtofl 0005  
                     _PPSLOCK 3ABF                  ??_TMR2_Start 0005              ?_TMR2_StartTimer 0001  
                     _MSdelay 4BFE                 LCD_String@msg 000C                       __Hparam 0000  
                     __Lparam 0000        ??_PWM2_OutputStatusGet 0005                       ___fladd 2A10  
                     ___fldiv 3310                       ___awdiv 44C8                       ___flneg 4E62  
                     ___awmod 4642                       ___flmul 2EC6                       ___flsub 4D1E  
                     ___fltol 41C0                       ___lldiv 4846                     ?_vfprintf 0097  
               readADC@buffer 00AF                  __psmallconst 2000            __end_of_TMR2_Start 4FEE  
                     __pcinit 4BAA                       __ramtop 2000                       __ptext0 4C48  
                     __ptext1 4092                       __ptext2 4A98                       __ptext3 3D64  
                     __ptext4 393C                       __ptext5 4E2A                       __ptext6 4C90  
                     __ptext7 36A0                       __ptext8 458A                       __ptext9 202A  
                     _readADC 4092                     _T2CONbits 3FAC         read_prec_or_width@fmt 0005  
                  ??___xxtofl 0009              ___awmod@dividend 0005                     _IOCCFbits 3A67  
                     efgtoa@c 0056                       efgtoa@d 006D                       efgtoa@e 0071  
                     efgtoa@f 0052                       efgtoa@g 0084                       efgtoa@h 007B  
                     efgtoa@i 0079                       efgtoa@l 007F                       efgtoa@m 006F  
                     efgtoa@n 0088                       efgtoa@p 0064                       efgtoa@t 0066  
                     efgtoa@u 008A                       efgtoa@w 0073                     _IOCCPbits 3A65  
                   _LCD_Clear 4FDC                       _sprintf 4E2A          end_of_initialization 4BF8  
                     floorf@e 003A                       floorf@m 0036                       floorf@u 003C  
                     floorf@x 002C                       memcpy@d 000B                       memcpy@n 0009  
                     memcpy@s 000D                       fputc@fp 0007                LCD_Command@cmd 000B  
                     fputs@fp 000F            _read_prec_or_width 458A               ___lldiv@divisor 0015  
             ___lldiv@counter 001D             __end_of_vfpfcnvrt 393C                    efgtoa@mode 006B  
                  efgtoa@sign 0083                       postdec1 3FE5                       postdec2 3FDD  
         ?_read_prec_or_width 0005                       postinc0 3FEE                       postinc1 3FE6  
                     postinc2 3FDE              vfpfcnvrt@convarg 0091                    ??_vfprintf 0058  
                     strcat@i 0007                       strcpy@d 0009                     _PORTBbits 3FCB  
                   _PORTEbits 3FCE                   ___fladd@grs 0014                 ___xxtofl@sign 000D  
                   _TRISAbits 3FC2                     _TRISBbits 3FC3                    ?_LCD_Clear 0001  
        ??_read_prec_or_width 0007                   ___fldiv@grs 0026                   ___fldiv@rem 001F  
                 ___flmul@grs 0039                   _CCP2CONbits 3F7A                 ??_LCD_Command 000B  
              __end_of___flge 43CA                __end_of___fleq 4846                __end_of___lmul 49C6  
                ??_Initialize 0005                   vfpfcnvrt@ap 0090                   vfpfcnvrt@cp 0096  
                 vfpfcnvrt@fp 008E                __end_of_efgtoa 2A10            _PWM2_LoadDutyValue 4ECE  
              __end_of_floorf 3D64                __end_of_memcpy 4B54                    floorf@F521 00EE  
              __end_of_strcat 4AFA                __end_of_strcpy 4D1E           start_initialization 4BAA  
                 __end_of_ISR 4A32                   __end_of_PWM 3B52           ?_PWM2_LoadDutyValue 0005  
                 __end_of_abs 4ECE                   __end_of_pad 4A98                    ivt0x8_base 0008  
       __end_of___fpclassifyf 44C8            __end_of_Initialize 4DAA         __end_of_LCD_String_xy 4E2A  
        ??_PWM2_LoadDutyValue 0007                   vfprintf@fmt 0098                      ??___flge 004D  
                    ??___fleq 000D   PWM2_LoadDutyValue@dutyValue 0005                      ??___lmul 000D  
                    ??_efgtoa 0060                   __pdataBANK0 00DA                      ??_floorf 0030  
                    ??_memcpy 000B                      ??_strcat 0007                      ??_strcpy 0008  
                   ___fladd@a 0009                     ___fladd@b 0005                     ___fldiv@a 0017  
                   ___fldiv@b 0013           __end_of_LCD_Command 4F4E                     ___flmul@a 0030  
                   ___flmul@b 002C                   __pbssCOMRAM 0058                     ___flsub@a 0049  
                   ___flsub@b 0045                 __pcstackBANK0 0060                   ??_LCD_Clear 000C  
                    ?_MSdelay 0005                   _efgtoa$1337 0068                     _dtoa$1306 001E  
                    ?___fladd 0005                      ?___fldiv 0013                      ?___awdiv 0005  
                    ?___flneg 0005                      ?___awmod 0005                      ?___flmul 002C  
                    ?___flsub 0045                      ?___fltol 0005                      ?___lldiv 0011  
                    PWM@dcVal 00BE                      ?_readADC 0001                   __smallconst 2000  
                    PWM@index 00D6         LCD_String_xy@location 0012                      ?_sprintf 009B  
                    _T2CLKCON 3FAE                      MSdelay@i 0007                      MSdelay@j 0009  
                    _LCD_Char 4F4E             ??_PWM2_Initialize 0005                      _LCD_Init 4EFE  
                    _PIE0bits 3990                      i2u220_45 49F2                      i2u221_40 4A2A  
                    i2u221_41 4A26                      i2u218_40 49D8                      i2u218_41 49D4  
                    i2u219_40 49F0                      i2u219_41 49EA                      _PIR4bits 39A4  
                    i2u486_47 49FC                   _LCD_Command 4F28                     _vfpfcnvrt 36A0  
                  _ADCON0bits 3EF8                      _WPUCbits 3A61  __end_of_PWM_Output_D8_Enable 4F88  
                  vfpfcnvrt@c 0095                   _INTCON0bits 3FD2             ___lmul@multiplier 0005  
                   copy_data0 4BBE                    PWM@percent 00AF             ??_TMR2_Initialize 0005  
                    __Hrparam 0000                     memcpy@tmp 000F                    vfprintf@ap 0099  
                    __Lrparam 0000                    vfprintf@fp 0097                    ?_vfpfcnvrt 008E  
              readADC@digital 00C1                    _ANSELAbits 3A40            ___fpclassifyf@F465 0058  
                  sprintf@fmt 009C                      ___xxtofl 3D64                    strcat@dest 0005  
                    __pivt0x8 0008                      __ptext10 4CD8                      __ptext11 4AFA  
                    __ptext20 42C6                      __ptext12 4B54                      __ptext21 479C  
                    __ptext13 3B52                      __ptext30 44C8                      __ptext22 3310  
                    __ptext14 43CA                      __ptext31 495C                      __ptext23 3F18  
                    __ptext15 41C0                      __ptext40 4DEA                      __ptext32 4846  
                    __ptext24 4A32                      __ptext16 4D1E                      __ptext41 48EA  
                    __ptext33 4FE4                      __ptext25 4DAA                      __ptext17 2A10  
                    __ptext42 4F4E                      __ptext34 4FEA                      __ptext26 46F0  
                    __ptext18 4E62                      __ptext43 4FDC                      __ptext35 4F88  
                    __ptext27 4FEE                      __ptext19 2EC6                      __ptext44 4EFE  
                    __ptext36 4F6C                      __ptext28 4E9A                      __ptext45 4F28  
                    __ptext37 4FC8                      __ptext29 4642                      __ptext46 4BFE  
                    __ptext38 4ECE                      __ptext47 4D64                      __ptext39 4F9E  
                    __ptext48 49C8                readADC@voltage 00BB                    strcpy@dest 0005  
                  MSdelay@val 0005                      efgtoa@fp 0051                      efgtoa@ne 0062  
                    efgtoa@pp 006A                      efgtoa@ou 0075                      isa$xinst 0000  
                    _vfprintf 4C90             ??_TMR2_StartTimer 0005                    _LCD_String 48EA  
                 _OSCSTATbits 39DC                      memcpy@d1 0005                      memcpy@s1 0007  
                    intlevel2 0000                     sprintf@ap 00A1                     strcat@src 0006  
            ___lldiv@dividend 0011                     strcpy@src 0007                   _PPSLOCKbits 3ABF  
                 efgtoa@nmode 006C          _PWM_Output_D8_Enable 4F6C                   ??_vfpfcnvrt 0057  
                    sprintf@f 00A2                      sprintf@s 009B              ___lldiv@quotient 0019  
             _PWM2_Initialize 4F9E                    _TMR2_Start 4FEA                 ___fladd@signs 0011  
                ___fladd@aexp 0012                  ___fladd@bexp 0013             PWM@checkdutyCycle 00D4  
