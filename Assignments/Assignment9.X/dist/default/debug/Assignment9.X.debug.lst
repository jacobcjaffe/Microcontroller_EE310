

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Apr 29 15:33:19 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=3
    17                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=2
    33                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=2
    34                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=1
    35                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1,group=1
    36                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=3
    38                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,group=3
    39                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1,group=3
    40                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1,group=2
    41                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1,group=2
    42                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1,group=2
    43                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1,group=2
    44                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text45,global,reloc=4,class=CODE,space=0,delta=1
    60                           	psect	ivt0x8,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    64   000000                     
    65                           ; Generated 12/10/2023 GMT
    66                           ; 
    67                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution. Publication is not required when
    81                           ;        this file is used in an embedded application.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC18F47K42 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99   003FE0                     bsr             equ	16352
   100   003FE9                     fsr0            equ	16361
   101   003FEA                     fsr0h           equ	16362
   102   003FE9                     fsr0l           equ	16361
   103   003FE1                     fsr1            equ	16353
   104   003FE2                     fsr1h           equ	16354
   105   003FE1                     fsr1l           equ	16353
   106   003FD9                     fsr2            equ	16345
   107   003FDA                     fsr2h           equ	16346
   108   003FD9                     fsr2l           equ	16345
   109   003FEF                     indf0           equ	16367
   110   003FE7                     indf1           equ	16359
   111   003FDF                     indf2           equ	16351
   112   003FD2                     intcon          equ	16338
   113   0039E5                     nvmcon          equ	14821
   114   003FF9                     pcl             equ	16377
   115   003FFA                     pclath          equ	16378
   116   003FFB                     pclatu          equ	16379
   117   003FEB                     plusw0          equ	16363
   118   003FE3                     plusw1          equ	16355
   119   003FDB                     plusw2          equ	16347
   120   003FED                     postdec0        equ	16365
   121   003FE5                     postdec1        equ	16357
   122   003FDD                     postdec2        equ	16349
   123   003FEE                     postinc0        equ	16366
   124   003FE6                     postinc1        equ	16358
   125   003FDE                     postinc2        equ	16350
   126   003FEC                     preinc0         equ	16364
   127   003FE4                     preinc1         equ	16356
   128   003FDC                     preinc2         equ	16348
   129   003FF3                     prod            equ	16371
   130   003FF4                     prodh           equ	16372
   131   003FF3                     prodl           equ	16371
   132   003FD8                     status          equ	16344
   133   003FF5                     tablat          equ	16373
   134   003FF6                     tblptr          equ	16374
   135   003FF7                     tblptrh         equ	16375
   136   003FF6                     tblptrl         equ	16374
   137   003FF8                     tblptru         equ	16376
   138   003FFD                     tosl            equ	16381
   139   003FE8                     wreg            equ	16360
   140   003880                     STATUS_CSHAD    equ	14464	;# 
   141   003881                     WREG_CSHAD      equ	14465	;# 
   142   003882                     BSR_CSHAD       equ	14466	;# 
   143   003883                     SHADCON         equ	14467	;# 
   144   003884                     STATUS_SHAD     equ	14468	;# 
   145   003885                     WREG_SHAD       equ	14469	;# 
   146   003886                     BSR_SHAD        equ	14470	;# 
   147   003887                     PCLATH_SHAD     equ	14471	;# 
   148   003888                     PCLATU_SHAD     equ	14472	;# 
   149   003889                     FSR0SH          equ	14473	;# 
   150   003889                     FSR0L_SHAD      equ	14473	;# 
   151   00388A                     FSR0H_SHAD      equ	14474	;# 
   152   00388B                     FSR1SH          equ	14475	;# 
   153   00388B                     FSR1L_SHAD      equ	14475	;# 
   154   00388C                     FSR1H_SHAD      equ	14476	;# 
   155   00388D                     FSR2SH          equ	14477	;# 
   156   00388D                     FSR2L_SHAD      equ	14477	;# 
   157   00388E                     FSR2H_SHAD      equ	14478	;# 
   158   00388F                     PRODSH          equ	14479	;# 
   159   00388F                     PRODL_SHAD      equ	14479	;# 
   160   003890                     PRODH_SHAD      equ	14480	;# 
   161   00389D                     IVTADL          equ	14493	;# 
   162   00389E                     IVTADH          equ	14494	;# 
   163   00389F                     IVTADU          equ	14495	;# 
   164   00395B                     WDTCON0         equ	14683	;# 
   165   00395C                     WDTCON1         equ	14684	;# 
   166   00395D                     WDTPSL          equ	14685	;# 
   167   00395E                     WDTPSH          equ	14686	;# 
   168   00395F                     WDTTMR          equ	14687	;# 
   169   003960                     CRCDATA         equ	14688	;# 
   170   003960                     CRCDATL         equ	14688	;# 
   171   003961                     CRCDATH         equ	14689	;# 
   172   003962                     CRCACC          equ	14690	;# 
   173   003962                     CRCACCL         equ	14690	;# 
   174   003963                     CRCACCH         equ	14691	;# 
   175   003964                     CRCSHFT         equ	14692	;# 
   176   003964                     CRCSHIFTL       equ	14692	;# 
   177   003965                     CRCSHIFTH       equ	14693	;# 
   178   003966                     CRCXOR          equ	14694	;# 
   179   003966                     CRCXORL         equ	14694	;# 
   180   003967                     CRCXORH         equ	14695	;# 
   181   003968                     CRCCON0         equ	14696	;# 
   182   003969                     CRCCON1         equ	14697	;# 
   183   003976                     SCANLADR        equ	14710	;# 
   184   003976                     SCANLADRL       equ	14710	;# 
   185   003977                     SCANLADRH       equ	14711	;# 
   186   003978                     SCANLADRU       equ	14712	;# 
   187   003979                     SCANHADR        equ	14713	;# 
   188   003979                     SCANHADRL       equ	14713	;# 
   189   00397A                     SCANHADRH       equ	14714	;# 
   190   00397B                     SCANHADRU       equ	14715	;# 
   191   00397C                     SCANCON0        equ	14716	;# 
   192   00397D                     SCANTRIG        equ	14717	;# 
   193   003980                     IPR0            equ	14720	;# 
   194   003981                     IPR1            equ	14721	;# 
   195   003982                     IPR2            equ	14722	;# 
   196   003983                     IPR3            equ	14723	;# 
   197   003984                     IPR4            equ	14724	;# 
   198   003985                     IPR5            equ	14725	;# 
   199   003986                     IPR6            equ	14726	;# 
   200   003987                     IPR7            equ	14727	;# 
   201   003988                     IPR8            equ	14728	;# 
   202   003989                     IPR9            equ	14729	;# 
   203   00398A                     IPR10           equ	14730	;# 
   204   003990                     PIE0            equ	14736	;# 
   205   003991                     PIE1            equ	14737	;# 
   206   003992                     PIE2            equ	14738	;# 
   207   003993                     PIE3            equ	14739	;# 
   208   003994                     PIE4            equ	14740	;# 
   209   003995                     PIE5            equ	14741	;# 
   210   003996                     PIE6            equ	14742	;# 
   211   003997                     PIE7            equ	14743	;# 
   212   003998                     PIE8            equ	14744	;# 
   213   003999                     PIE9            equ	14745	;# 
   214   00399A                     PIE10           equ	14746	;# 
   215   0039A0                     PIR0            equ	14752	;# 
   216   0039A1                     PIR1            equ	14753	;# 
   217   0039A2                     PIR2            equ	14754	;# 
   218   0039A3                     PIR3            equ	14755	;# 
   219   0039A4                     PIR4            equ	14756	;# 
   220   0039A5                     PIR5            equ	14757	;# 
   221   0039A6                     PIR6            equ	14758	;# 
   222   0039A7                     PIR7            equ	14759	;# 
   223   0039A8                     PIR8            equ	14760	;# 
   224   0039A9                     PIR9            equ	14761	;# 
   225   0039AA                     PIR10           equ	14762	;# 
   226   0039C0                     PMD0            equ	14784	;# 
   227   0039C1                     PMD1            equ	14785	;# 
   228   0039C2                     PMD2            equ	14786	;# 
   229   0039C3                     PMD3            equ	14787	;# 
   230   0039C4                     PMD4            equ	14788	;# 
   231   0039C5                     PMD5            equ	14789	;# 
   232   0039C6                     PMD6            equ	14790	;# 
   233   0039C7                     PMD7            equ	14791	;# 
   234   0039D0                     BORCON          equ	14800	;# 
   235   0039D1                     VREGCON         equ	14801	;# 
   236   0039D8                     CPUDOZE         equ	14808	;# 
   237   0039D9                     OSCCON1         equ	14809	;# 
   238   0039DA                     OSCCON2         equ	14810	;# 
   239   0039DB                     OSCCON3         equ	14811	;# 
   240   0039DC                     OSCSTAT         equ	14812	;# 
   241   0039DC                     OSCSTAT1        equ	14812	;# 
   242   0039DD                     OSCEN           equ	14813	;# 
   243   0039DE                     OSCTUNE         equ	14814	;# 
   244   0039DF                     OSCFRQ          equ	14815	;# 
   245   0039E0                     NVMADRL         equ	14816	;# 
   246   0039E1                     NVMADRH         equ	14817	;# 
   247   0039E3                     NVMDAT          equ	14819	;# 
   248   0039E5                     NVMCON1         equ	14821	;# 
   249   0039E6                     NVMCON2         equ	14822	;# 
   250   0039EF                     PRLOCK          equ	14831	;# 
   251   0039F1                     ISRPR           equ	14833	;# 
   252   0039F2                     MAINPR          equ	14834	;# 
   253   0039F3                     DMA1PR          equ	14835	;# 
   254   0039F4                     DMA2PR          equ	14836	;# 
   255   0039F7                     SCANPR          equ	14839	;# 
   256   003A00                     RA0PPS          equ	14848	;# 
   257   003A01                     RA1PPS          equ	14849	;# 
   258   003A02                     RA2PPS          equ	14850	;# 
   259   003A03                     RA3PPS          equ	14851	;# 
   260   003A04                     RA4PPS          equ	14852	;# 
   261   003A05                     RA5PPS          equ	14853	;# 
   262   003A06                     RA6PPS          equ	14854	;# 
   263   003A07                     RA7PPS          equ	14855	;# 
   264   003A08                     RB0PPS          equ	14856	;# 
   265   003A09                     RB1PPS          equ	14857	;# 
   266   003A0A                     RB2PPS          equ	14858	;# 
   267   003A0B                     RB3PPS          equ	14859	;# 
   268   003A0C                     RB4PPS          equ	14860	;# 
   269   003A0D                     RB5PPS          equ	14861	;# 
   270   003A0E                     RB6PPS          equ	14862	;# 
   271   003A0F                     RB7PPS          equ	14863	;# 
   272   003A10                     RC0PPS          equ	14864	;# 
   273   003A11                     RC1PPS          equ	14865	;# 
   274   003A12                     RC2PPS          equ	14866	;# 
   275   003A13                     RC3PPS          equ	14867	;# 
   276   003A14                     RC4PPS          equ	14868	;# 
   277   003A15                     RC5PPS          equ	14869	;# 
   278   003A16                     RC6PPS          equ	14870	;# 
   279   003A17                     RC7PPS          equ	14871	;# 
   280   003A18                     RD0PPS          equ	14872	;# 
   281   003A19                     RD1PPS          equ	14873	;# 
   282   003A1A                     RD2PPS          equ	14874	;# 
   283   003A1B                     RD3PPS          equ	14875	;# 
   284   003A1C                     RD4PPS          equ	14876	;# 
   285   003A1D                     RD5PPS          equ	14877	;# 
   286   003A1E                     RD6PPS          equ	14878	;# 
   287   003A1F                     RD7PPS          equ	14879	;# 
   288   003A20                     RE0PPS          equ	14880	;# 
   289   003A21                     RE1PPS          equ	14881	;# 
   290   003A22                     RE2PPS          equ	14882	;# 
   291   003A40                     ANSELA          equ	14912	;# 
   292   003A41                     WPUA            equ	14913	;# 
   293   003A42                     ODCONA          equ	14914	;# 
   294   003A43                     SLRCONA         equ	14915	;# 
   295   003A44                     INLVLA          equ	14916	;# 
   296   003A45                     IOCAP           equ	14917	;# 
   297   003A46                     IOCAN           equ	14918	;# 
   298   003A47                     IOCAF           equ	14919	;# 
   299   003A50                     ANSELB          equ	14928	;# 
   300   003A51                     WPUB            equ	14929	;# 
   301   003A52                     ODCONB          equ	14930	;# 
   302   003A53                     SLRCONB         equ	14931	;# 
   303   003A54                     INLVLB          equ	14932	;# 
   304   003A55                     IOCBP           equ	14933	;# 
   305   003A56                     IOCBN           equ	14934	;# 
   306   003A57                     IOCBF           equ	14935	;# 
   307   003A5A                     RB1I2C          equ	14938	;# 
   308   003A5B                     RB2I2C          equ	14939	;# 
   309   003A60                     ANSELC          equ	14944	;# 
   310   003A61                     WPUC            equ	14945	;# 
   311   003A62                     ODCONC          equ	14946	;# 
   312   003A63                     SLRCONC         equ	14947	;# 
   313   003A64                     INLVLC          equ	14948	;# 
   314   003A65                     IOCCP           equ	14949	;# 
   315   003A66                     IOCCN           equ	14950	;# 
   316   003A67                     IOCCF           equ	14951	;# 
   317   003A6A                     RC3I2C          equ	14954	;# 
   318   003A6B                     RC4I2C          equ	14955	;# 
   319   003A70                     ANSELD          equ	14960	;# 
   320   003A71                     WPUD            equ	14961	;# 
   321   003A72                     ODCOND          equ	14962	;# 
   322   003A73                     SLRCOND         equ	14963	;# 
   323   003A74                     INLVLD          equ	14964	;# 
   324   003A7A                     RD0I2C          equ	14970	;# 
   325   003A7B                     RD1I2C          equ	14971	;# 
   326   003A80                     ANSELE          equ	14976	;# 
   327   003A81                     WPUE            equ	14977	;# 
   328   003A82                     ODCONE          equ	14978	;# 
   329   003A83                     SLRCONE         equ	14979	;# 
   330   003A84                     INLVLE          equ	14980	;# 
   331   003A85                     IOCEP           equ	14981	;# 
   332   003A86                     IOCEN           equ	14982	;# 
   333   003A87                     IOCEF           equ	14983	;# 
   334   003ABF                     PPSLOCK         equ	15039	;# 
   335   003AC0                     INT0PPS         equ	15040	;# 
   336   003AC1                     INT1PPS         equ	15041	;# 
   337   003AC2                     INT2PPS         equ	15042	;# 
   338   003AC3                     T0CKIPPS        equ	15043	;# 
   339   003AC4                     T1CKIPPS        equ	15044	;# 
   340   003AC5                     T1GPPS          equ	15045	;# 
   341   003AC6                     T3CKIPPS        equ	15046	;# 
   342   003AC7                     T3GPPS          equ	15047	;# 
   343   003AC8                     T5CKIPPS        equ	15048	;# 
   344   003AC9                     T5GPPS          equ	15049	;# 
   345   003ACA                     T2INPPS         equ	15050	;# 
   346   003ACB                     T4INPPS         equ	15051	;# 
   347   003ACC                     T6INPPS         equ	15052	;# 
   348   003ACD                     CCP1PPS         equ	15053	;# 
   349   003ACE                     CCP2PPS         equ	15054	;# 
   350   003ACF                     CCP3PPS         equ	15055	;# 
   351   003AD0                     CCP4PPS         equ	15056	;# 
   352   003AD1                     SMT1WINPPS      equ	15057	;# 
   353   003AD2                     SMT1SIGPPS      equ	15058	;# 
   354   003AD3                     CWG1INPPS       equ	15059	;# 
   355   003AD4                     CWG2INPPS       equ	15060	;# 
   356   003AD5                     CWG3INPPS       equ	15061	;# 
   357   003AD6                     MD1CARLPPS      equ	15062	;# 
   358   003AD7                     MD1CARHPPS      equ	15063	;# 
   359   003AD8                     MD1SRCPPS       equ	15064	;# 
   360   003AD9                     CLCIN0PPS       equ	15065	;# 
   361   003ADA                     CLCIN1PPS       equ	15066	;# 
   362   003ADB                     CLCIN2PPS       equ	15067	;# 
   363   003ADC                     CLCIN3PPS       equ	15068	;# 
   364   003ADD                     ADACTPPS        equ	15069	;# 
   365   003ADE                     SPI1SCKPPS      equ	15070	;# 
   366   003ADF                     SPI1SDIPPS      equ	15071	;# 
   367   003AE0                     SPI1SSPPS       equ	15072	;# 
   368   003AE1                     I2C1SCLPPS      equ	15073	;# 
   369   003AE2                     I2C1SDAPPS      equ	15074	;# 
   370   003AE3                     I2C2SCLPPS      equ	15075	;# 
   371   003AE4                     I2C2SDAPPS      equ	15076	;# 
   372   003AE5                     U1RXPPS         equ	15077	;# 
   373   003AE6                     U1CTSPPS        equ	15078	;# 
   374   003AE8                     U2RXPPS         equ	15080	;# 
   375   003AE9                     U2CTSPPS        equ	15081	;# 
   376   003BC9                     DMA2BUF         equ	15305	;# 
   377   003BCA                     DMA2DCNT        equ	15306	;# 
   378   003BCA                     DMA2DCNTL       equ	15306	;# 
   379   003BCB                     DMA2DCNTH       equ	15307	;# 
   380   003BCC                     DMA2DPTR        equ	15308	;# 
   381   003BCC                     DMA2DPTRL       equ	15308	;# 
   382   003BCD                     DMA2DPTRH       equ	15309	;# 
   383   003BCE                     DMA2DSZ         equ	15310	;# 
   384   003BCE                     DMA2DSZL        equ	15310	;# 
   385   003BCF                     DMA2DSZH        equ	15311	;# 
   386   003BD0                     DMA2DSA         equ	15312	;# 
   387   003BD0                     DMA2DSAL        equ	15312	;# 
   388   003BD1                     DMA2DSAH        equ	15313	;# 
   389   003BD2                     DMA2SCNT        equ	15314	;# 
   390   003BD2                     DMA2SCNTL       equ	15314	;# 
   391   003BD3                     DMA2SCNTH       equ	15315	;# 
   392   003BD4                     DMA2SPTR        equ	15316	;# 
   393   003BD4                     DMA2SPTRL       equ	15316	;# 
   394   003BD5                     DMA2SPTRH       equ	15317	;# 
   395   003BD6                     DMA2SPTRU       equ	15318	;# 
   396   003BD7                     DMA2SSZ         equ	15319	;# 
   397   003BD7                     DMA2SSZL        equ	15319	;# 
   398   003BD8                     DMA2SSZH        equ	15320	;# 
   399   003BD9                     DMA2SSA         equ	15321	;# 
   400   003BD9                     DMA2SSAL        equ	15321	;# 
   401   003BDA                     DMA2SSAH        equ	15322	;# 
   402   003BDB                     DMA2SSAU        equ	15323	;# 
   403   003BDC                     DMA2CON0        equ	15324	;# 
   404   003BDD                     DMA2CON1        equ	15325	;# 
   405   003BDE                     DMA2AIRQ        equ	15326	;# 
   406   003BDF                     DMA2SIRQ        equ	15327	;# 
   407   003BE9                     DMA1BUF         equ	15337	;# 
   408   003BEA                     DMA1DCNT        equ	15338	;# 
   409   003BEA                     DMA1DCNTL       equ	15338	;# 
   410   003BEB                     DMA1DCNTH       equ	15339	;# 
   411   003BEC                     DMA1DPTR        equ	15340	;# 
   412   003BEC                     DMA1DPTRL       equ	15340	;# 
   413   003BED                     DMA1DPTRH       equ	15341	;# 
   414   003BEE                     DMA1DSZ         equ	15342	;# 
   415   003BEE                     DMA1DSZL        equ	15342	;# 
   416   003BEF                     DMA1DSZH        equ	15343	;# 
   417   003BF0                     DMA1DSA         equ	15344	;# 
   418   003BF0                     DMA1DSAL        equ	15344	;# 
   419   003BF1                     DMA1DSAH        equ	15345	;# 
   420   003BF2                     DMA1SCNT        equ	15346	;# 
   421   003BF2                     DMA1SCNTL       equ	15346	;# 
   422   003BF3                     DMA1SCNTH       equ	15347	;# 
   423   003BF4                     DMA1SPTR        equ	15348	;# 
   424   003BF4                     DMA1SPTRL       equ	15348	;# 
   425   003BF5                     DMA1SPTRH       equ	15349	;# 
   426   003BF6                     DMA1SPTRU       equ	15350	;# 
   427   003BF7                     DMA1SSZ         equ	15351	;# 
   428   003BF7                     DMA1SSZL        equ	15351	;# 
   429   003BF8                     DMA1SSZH        equ	15352	;# 
   430   003BF9                     DMA1SSA         equ	15353	;# 
   431   003BF9                     DMA1SSAL        equ	15353	;# 
   432   003BFA                     DMA1SSAH        equ	15354	;# 
   433   003BFB                     DMA1SSAU        equ	15355	;# 
   434   003BFC                     DMA1CON0        equ	15356	;# 
   435   003BFD                     DMA1CON1        equ	15357	;# 
   436   003BFE                     DMA1AIRQ        equ	15358	;# 
   437   003BFF                     DMA1SIRQ        equ	15359	;# 
   438   003C56                     CLC4CON         equ	15446	;# 
   439   003C57                     CLC4POL         equ	15447	;# 
   440   003C58                     CLC4SEL0        equ	15448	;# 
   441   003C59                     CLC4SEL1        equ	15449	;# 
   442   003C5A                     CLC4SEL2        equ	15450	;# 
   443   003C5B                     CLC4SEL3        equ	15451	;# 
   444   003C5C                     CLC4GLS0        equ	15452	;# 
   445   003C5D                     CLC4GLS1        equ	15453	;# 
   446   003C5E                     CLC4GLS2        equ	15454	;# 
   447   003C5F                     CLC4GLS3        equ	15455	;# 
   448   003C60                     CLC3CON         equ	15456	;# 
   449   003C61                     CLC3POL         equ	15457	;# 
   450   003C62                     CLC3SEL0        equ	15458	;# 
   451   003C63                     CLC3SEL1        equ	15459	;# 
   452   003C64                     CLC3SEL2        equ	15460	;# 
   453   003C65                     CLC3SEL3        equ	15461	;# 
   454   003C66                     CLC3GLS0        equ	15462	;# 
   455   003C67                     CLC3GLS1        equ	15463	;# 
   456   003C68                     CLC3GLS2        equ	15464	;# 
   457   003C69                     CLC3GLS3        equ	15465	;# 
   458   003C6A                     CLC2CON         equ	15466	;# 
   459   003C6B                     CLC2POL         equ	15467	;# 
   460   003C6C                     CLC2SEL0        equ	15468	;# 
   461   003C6D                     CLC2SEL1        equ	15469	;# 
   462   003C6E                     CLC2SEL2        equ	15470	;# 
   463   003C6F                     CLC2SEL3        equ	15471	;# 
   464   003C70                     CLC2GLS0        equ	15472	;# 
   465   003C71                     CLC2GLS1        equ	15473	;# 
   466   003C72                     CLC2GLS2        equ	15474	;# 
   467   003C73                     CLC2GLS3        equ	15475	;# 
   468   003C74                     CLC1CON         equ	15476	;# 
   469   003C75                     CLC1POL         equ	15477	;# 
   470   003C76                     CLC1SEL0        equ	15478	;# 
   471   003C77                     CLC1SEL1        equ	15479	;# 
   472   003C78                     CLC1SEL2        equ	15480	;# 
   473   003C79                     CLC1SEL3        equ	15481	;# 
   474   003C7A                     CLC1GLS0        equ	15482	;# 
   475   003C7B                     CLC1GLS1        equ	15483	;# 
   476   003C7C                     CLC1GLS2        equ	15484	;# 
   477   003C7D                     CLC1GLS3        equ	15485	;# 
   478   003C7E                     CLCDATA0        equ	15486	;# 
   479   003CE5                     CLKRCON         equ	15589	;# 
   480   003CE6                     CLKRCLK         equ	15590	;# 
   481   003CFA                     MD1CON0         equ	15610	;# 
   482   003CFB                     MD1CON1         equ	15611	;# 
   483   003CFC                     MD1SRC          equ	15612	;# 
   484   003CFD                     MD1CARL         equ	15613	;# 
   485   003CFE                     MD1CARH         equ	15614	;# 
   486   003D10                     SPI1RXB         equ	15632	;# 
   487   003D11                     SPI1TXB         equ	15633	;# 
   488   003D12                     SPI1TCNT        equ	15634	;# 
   489   003D12                     SPI1TCNTL       equ	15634	;# 
   490   003D13                     SPI1TCNTH       equ	15635	;# 
   491   003D14                     SPI1CON0        equ	15636	;# 
   492   003D15                     SPI1CON1        equ	15637	;# 
   493   003D16                     SPI1CON2        equ	15638	;# 
   494   003D17                     SPI1STATUS      equ	15639	;# 
   495   003D18                     SPI1TWIDTH      equ	15640	;# 
   496   003D19                     SPI1BAUD        equ	15641	;# 
   497   003D1A                     SPI1INTF        equ	15642	;# 
   498   003D1B                     SPI1INTE        equ	15643	;# 
   499   003D1C                     SPI1CLK         equ	15644	;# 
   500   003D54                     I2C2RXB         equ	15700	;# 
   501   003D55                     I2C2TXB         equ	15701	;# 
   502   003D56                     I2C2CNT         equ	15702	;# 
   503   003D57                     I2C2ADB0        equ	15703	;# 
   504   003D58                     I2C2ADB1        equ	15704	;# 
   505   003D59                     I2C2ADR0        equ	15705	;# 
   506   003D5A                     I2C2ADR1        equ	15706	;# 
   507   003D5B                     I2C2ADR2        equ	15707	;# 
   508   003D5C                     I2C2ADR3        equ	15708	;# 
   509   003D5D                     I2C2CON0        equ	15709	;# 
   510   003D5E                     I2C2CON1        equ	15710	;# 
   511   003D5F                     I2C2CON2        equ	15711	;# 
   512   003D60                     I2C2ERR         equ	15712	;# 
   513   003D61                     I2C2STAT0       equ	15713	;# 
   514   003D62                     I2C2STAT1       equ	15714	;# 
   515   003D63                     I2C2PIR         equ	15715	;# 
   516   003D64                     I2C2PIE         equ	15716	;# 
   517   003D65                     I2C2CLK         equ	15717	;# 
   518   003D66                     I2C2BTO         equ	15718	;# 
   519   003D6A                     I2C1RXB         equ	15722	;# 
   520   003D6B                     I2C1TXB         equ	15723	;# 
   521   003D6C                     I2C1CNT         equ	15724	;# 
   522   003D6D                     I2C1ADB0        equ	15725	;# 
   523   003D6E                     I2C1ADB1        equ	15726	;# 
   524   003D6F                     I2C1ADR0        equ	15727	;# 
   525   003D70                     I2C1ADR1        equ	15728	;# 
   526   003D71                     I2C1ADR2        equ	15729	;# 
   527   003D72                     I2C1ADR3        equ	15730	;# 
   528   003D73                     I2C1CON0        equ	15731	;# 
   529   003D74                     I2C1CON1        equ	15732	;# 
   530   003D75                     I2C1CON2        equ	15733	;# 
   531   003D76                     I2C1ERR         equ	15734	;# 
   532   003D77                     I2C1STAT0       equ	15735	;# 
   533   003D78                     I2C1STAT1       equ	15736	;# 
   534   003D79                     I2C1PIR         equ	15737	;# 
   535   003D7A                     I2C1PIE         equ	15738	;# 
   536   003D7B                     I2C1CLK         equ	15739	;# 
   537   003D7C                     I2C1BTO         equ	15740	;# 
   538   003DD0                     U2RXB           equ	15824	;# 
   539   003DD0                     U2RXBL          equ	15824	;# 
   540   003DD2                     U2TXB           equ	15826	;# 
   541   003DD2                     U2TXBL          equ	15826	;# 
   542   003DD4                     U2P1            equ	15828	;# 
   543   003DD4                     U2P1L           equ	15828	;# 
   544   003DD6                     U2P2            equ	15830	;# 
   545   003DD6                     U2P2L           equ	15830	;# 
   546   003DD8                     U2P3            equ	15832	;# 
   547   003DD8                     U2P3L           equ	15832	;# 
   548   003DDA                     U2CON0          equ	15834	;# 
   549   003DDB                     U2CON1          equ	15835	;# 
   550   003DDC                     U2CON2          equ	15836	;# 
   551   003DDD                     U2BRG           equ	15837	;# 
   552   003DDD                     U2BRGL          equ	15837	;# 
   553   003DDE                     U2BRGH          equ	15838	;# 
   554   003DDF                     U2FIFO          equ	15839	;# 
   555   003DE0                     U2UIR           equ	15840	;# 
   556   003DE1                     U2ERRIR         equ	15841	;# 
   557   003DE2                     U2ERRIE         equ	15842	;# 
   558   003DE8                     U1RXB           equ	15848	;# 
   559   003DE8                     U1RXBL          equ	15848	;# 
   560   003DE9                     U1RXCHK         equ	15849	;# 
   561   003DEA                     U1TXB           equ	15850	;# 
   562   003DEA                     U1TXBL          equ	15850	;# 
   563   003DEB                     U1TXCHK         equ	15851	;# 
   564   003DEC                     U1P1            equ	15852	;# 
   565   003DEC                     U1P1L           equ	15852	;# 
   566   003DED                     U1P1H           equ	15853	;# 
   567   003DEE                     U1P2            equ	15854	;# 
   568   003DEE                     U1P2L           equ	15854	;# 
   569   003DEF                     U1P2H           equ	15855	;# 
   570   003DF0                     U1P3            equ	15856	;# 
   571   003DF0                     U1P3L           equ	15856	;# 
   572   003DF1                     U1P3H           equ	15857	;# 
   573   003DF2                     U1CON0          equ	15858	;# 
   574   003DF3                     U1CON1          equ	15859	;# 
   575   003DF4                     U1CON2          equ	15860	;# 
   576   003DF5                     U1BRG           equ	15861	;# 
   577   003DF5                     U1BRGL          equ	15861	;# 
   578   003DF6                     U1BRGH          equ	15862	;# 
   579   003DF7                     U1FIFO          equ	15863	;# 
   580   003DF8                     U1UIR           equ	15864	;# 
   581   003DF9                     U1ERRIR         equ	15865	;# 
   582   003DFA                     U1ERRIE         equ	15866	;# 
   583   003E9C                     DAC1CON1        equ	16028	;# 
   584   003E9E                     DAC1CON0        equ	16030	;# 
   585   003EB8                     CM2CON0         equ	16056	;# 
   586   003EB9                     CM2CON1         equ	16057	;# 
   587   003EBA                     CM2NCH          equ	16058	;# 
   588   003EBB                     CM2PCH          equ	16059	;# 
   589   003EBC                     CM1CON0         equ	16060	;# 
   590   003EBD                     CM1CON1         equ	16061	;# 
   591   003EBE                     CM1NCH          equ	16062	;# 
   592   003EBF                     CM1PCH          equ	16063	;# 
   593   003EC0                     CMOUT           equ	16064	;# 
   594   003EC1                     FVRCON          equ	16065	;# 
   595   003EC3                     ZCDCON          equ	16067	;# 
   596   003EC9                     HLVDCON0        equ	16073	;# 
   597   003ECA                     HLVDCON1        equ	16074	;# 
   598   003ED7                     ADCP            equ	16087	;# 
   599   003EDE                     ADLTH           equ	16094	;# 
   600   003EDE                     ADLTHL          equ	16094	;# 
   601   003EDF                     ADLTHH          equ	16095	;# 
   602   003EE0                     ADUTH           equ	16096	;# 
   603   003EE0                     ADUTHL          equ	16096	;# 
   604   003EE1                     ADUTHH          equ	16097	;# 
   605   003EE2                     ADERR           equ	16098	;# 
   606   003EE2                     ADERRL          equ	16098	;# 
   607   003EE3                     ADERRH          equ	16099	;# 
   608   003EE4                     ADSTPT          equ	16100	;# 
   609   003EE4                     ADSTPTL         equ	16100	;# 
   610   003EE5                     ADSTPTH         equ	16101	;# 
   611   003EE6                     ADFLTR          equ	16102	;# 
   612   003EE6                     ADFLTRL         equ	16102	;# 
   613   003EE7                     ADFLTRH         equ	16103	;# 
   614   003EE8                     ADACC           equ	16104	;# 
   615   003EE8                     ADACCL          equ	16104	;# 
   616   003EE9                     ADACCH          equ	16105	;# 
   617   003EEA                     ADACCU          equ	16106	;# 
   618   003EEB                     ADCNT           equ	16107	;# 
   619   003EEC                     ADRPT           equ	16108	;# 
   620   003EED                     ADPREV          equ	16109	;# 
   621   003EED                     ADPREVL         equ	16109	;# 
   622   003EEE                     ADPREVH         equ	16110	;# 
   623   003EEF                     ADRES           equ	16111	;# 
   624   003EEF                     ADRESL          equ	16111	;# 
   625   003EF0                     ADRESH          equ	16112	;# 
   626   003EF1                     ADPCH           equ	16113	;# 
   627   003EF3                     ADACQ           equ	16115	;# 
   628   003EF3                     ADACQL          equ	16115	;# 
   629   003EF4                     ADACQH          equ	16116	;# 
   630   003EF5                     ADCAP           equ	16117	;# 
   631   003EF6                     ADPRE           equ	16118	;# 
   632   003EF6                     ADPREL          equ	16118	;# 
   633   003EF7                     ADPREH          equ	16119	;# 
   634   003EF8                     ADCON0          equ	16120	;# 
   635   003EF9                     ADCON1          equ	16121	;# 
   636   003EFA                     ADCON2          equ	16122	;# 
   637   003EFB                     ADCON3          equ	16123	;# 
   638   003EFC                     ADSTAT          equ	16124	;# 
   639   003EFD                     ADREF           equ	16125	;# 
   640   003EFE                     ADACT           equ	16126	;# 
   641   003EFF                     ADCLK           equ	16127	;# 
   642   003F12                     SMT1TMR         equ	16146	;# 
   643   003F12                     SMT1TMRL        equ	16146	;# 
   644   003F13                     SMT1TMRH        equ	16147	;# 
   645   003F14                     SMT1TMRU        equ	16148	;# 
   646   003F15                     SMT1CPR         equ	16149	;# 
   647   003F15                     SMT1CPRL        equ	16149	;# 
   648   003F16                     SMT1CPRH        equ	16150	;# 
   649   003F17                     SMT1CPRU        equ	16151	;# 
   650   003F18                     SMT1CPW         equ	16152	;# 
   651   003F18                     SMT1CPWL        equ	16152	;# 
   652   003F19                     SMT1CPWH        equ	16153	;# 
   653   003F1A                     SMT1CPWU        equ	16154	;# 
   654   003F1B                     SMT1PR          equ	16155	;# 
   655   003F1B                     SMT1PRL         equ	16155	;# 
   656   003F1C                     SMT1PRH         equ	16156	;# 
   657   003F1D                     SMT1PRU         equ	16157	;# 
   658   003F1E                     SMT1CON0        equ	16158	;# 
   659   003F1F                     SMT1CON1        equ	16159	;# 
   660   003F20                     SMT1STAT        equ	16160	;# 
   661   003F21                     SMT1CLK         equ	16161	;# 
   662   003F22                     SMT1SIG         equ	16162	;# 
   663   003F23                     SMT1WIN         equ	16163	;# 
   664   003F38                     NCO1ACC         equ	16184	;# 
   665   003F38                     NCO1ACCL        equ	16184	;# 
   666   003F39                     NCO1ACCH        equ	16185	;# 
   667   003F3A                     NCO1ACCU        equ	16186	;# 
   668   003F3B                     NCO1INC         equ	16187	;# 
   669   003F3B                     NCO1INCL        equ	16187	;# 
   670   003F3C                     NCO1INCH        equ	16188	;# 
   671   003F3D                     NCO1INCU        equ	16189	;# 
   672   003F3E                     NCO1CON         equ	16190	;# 
   673   003F3F                     NCO1CLK         equ	16191	;# 
   674   003F40                     CWG3CLK         equ	16192	;# 
   675   003F40                     CWG3CLKCON      equ	16192	;# 
   676   003F41                     CWG3ISM         equ	16193	;# 
   677   003F41                     CWG3DAT         equ	16193	;# 
   678   003F42                     CWG3DBR         equ	16194	;# 
   679   003F43                     CWG3DBF         equ	16195	;# 
   680   003F44                     CWG3CON0        equ	16196	;# 
   681   003F45                     CWG3CON1        equ	16197	;# 
   682   003F46                     CWG3AS0         equ	16198	;# 
   683   003F47                     CWG3AS1         equ	16199	;# 
   684   003F48                     CWG3STR         equ	16200	;# 
   685   003F49                     CWG2CLK         equ	16201	;# 
   686   003F49                     CWG2CLKCON      equ	16201	;# 
   687   003F4A                     CWG2ISM         equ	16202	;# 
   688   003F4A                     CWG2DAT         equ	16202	;# 
   689   003F4B                     CWG2DBR         equ	16203	;# 
   690   003F4C                     CWG2DBF         equ	16204	;# 
   691   003F4D                     CWG2CON0        equ	16205	;# 
   692   003F4E                     CWG2CON1        equ	16206	;# 
   693   003F4F                     CWG2AS0         equ	16207	;# 
   694   003F50                     CWG2AS1         equ	16208	;# 
   695   003F51                     CWG2STR         equ	16209	;# 
   696   003F52                     CWG1CLK         equ	16210	;# 
   697   003F52                     CWG1CLKCON      equ	16210	;# 
   698   003F53                     CWG1ISM         equ	16211	;# 
   699   003F53                     CWG1DAT         equ	16211	;# 
   700   003F54                     CWG1DBR         equ	16212	;# 
   701   003F55                     CWG1DBF         equ	16213	;# 
   702   003F56                     CWG1CON0        equ	16214	;# 
   703   003F57                     CWG1CON1        equ	16215	;# 
   704   003F58                     CWG1AS0         equ	16216	;# 
   705   003F59                     CWG1AS1         equ	16217	;# 
   706   003F5A                     CWG1STR         equ	16218	;# 
   707   003F5E                     CCPTMRS0        equ	16222	;# 
   708   003F5F                     CCPTMRS1        equ	16223	;# 
   709   003F60                     PWM8DC          equ	16224	;# 
   710   003F60                     PWM8DCL         equ	16224	;# 
   711   003F61                     PWM8DCH         equ	16225	;# 
   712   003F62                     PWM8CON         equ	16226	;# 
   713   003F64                     PWM7DC          equ	16228	;# 
   714   003F64                     PWM7DCL         equ	16228	;# 
   715   003F65                     PWM7DCH         equ	16229	;# 
   716   003F66                     PWM7CON         equ	16230	;# 
   717   003F68                     PWM6DC          equ	16232	;# 
   718   003F68                     PWM6DCL         equ	16232	;# 
   719   003F69                     PWM6DCH         equ	16233	;# 
   720   003F6A                     PWM6CON         equ	16234	;# 
   721   003F6C                     PWM5DC          equ	16236	;# 
   722   003F6C                     PWM5DCL         equ	16236	;# 
   723   003F6D                     PWM5DCH         equ	16237	;# 
   724   003F6E                     PWM5CON         equ	16238	;# 
   725   003F70                     CCPR4           equ	16240	;# 
   726   003F70                     CCPR4L          equ	16240	;# 
   727   003F71                     CCPR4H          equ	16241	;# 
   728   003F72                     CCP4CON         equ	16242	;# 
   729   003F73                     CCP4CAP         equ	16243	;# 
   730   003F74                     CCPR3           equ	16244	;# 
   731   003F74                     CCPR3L          equ	16244	;# 
   732   003F75                     CCPR3H          equ	16245	;# 
   733   003F76                     CCP3CON         equ	16246	;# 
   734   003F77                     CCP3CAP         equ	16247	;# 
   735   003F78                     CCPR2           equ	16248	;# 
   736   003F78                     CCPR2L          equ	16248	;# 
   737   003F79                     CCPR2H          equ	16249	;# 
   738   003F7A                     CCP2CON         equ	16250	;# 
   739   003F7B                     CCP2CAP         equ	16251	;# 
   740   003F7C                     CCPR1           equ	16252	;# 
   741   003F7C                     CCPR1L          equ	16252	;# 
   742   003F7D                     CCPR1H          equ	16253	;# 
   743   003F7E                     CCP1CON         equ	16254	;# 
   744   003F7F                     CCP1CAP         equ	16255	;# 
   745   003F92                     T6TMR           equ	16274	;# 
   746   003F92                     TMR6            equ	16274	;# 
   747   003F93                     T6PR            equ	16275	;# 
   748   003F93                     PR6             equ	16275	;# 
   749   003F94                     T6CON           equ	16276	;# 
   750   003F95                     T6HLT           equ	16277	;# 
   751   003F96                     T6CLKCON        equ	16278	;# 
   752   003F96                     T6CLK           equ	16278	;# 
   753   003F97                     T6RST           equ	16279	;# 
   754   003F98                     TMR5            equ	16280	;# 
   755   003F98                     TMR5L           equ	16280	;# 
   756   003F99                     TMR5H           equ	16281	;# 
   757   003F9A                     T5CON           equ	16282	;# 
   758   003F9A                     TMR5CON         equ	16282	;# 
   759   003F9B                     T5GCON          equ	16283	;# 
   760   003F9B                     TMR5GCON        equ	16283	;# 
   761   003F9C                     T5GATE          equ	16284	;# 
   762   003F9C                     TMR5GATE        equ	16284	;# 
   763   003F9D                     T5CLK           equ	16285	;# 
   764   003F9D                     TMR5CLK         equ	16285	;# 
   765   003F9D                     PR5             equ	16285	;# 
   766   003F9E                     T4TMR           equ	16286	;# 
   767   003F9E                     TMR4            equ	16286	;# 
   768   003F9F                     T4PR            equ	16287	;# 
   769   003F9F                     PR4             equ	16287	;# 
   770   003FA0                     T4CON           equ	16288	;# 
   771   003FA1                     T4HLT           equ	16289	;# 
   772   003FA2                     T4CLKCON        equ	16290	;# 
   773   003FA2                     T4CLK           equ	16290	;# 
   774   003FA3                     T4RST           equ	16291	;# 
   775   003FA4                     TMR3            equ	16292	;# 
   776   003FA4                     TMR3L           equ	16292	;# 
   777   003FA5                     TMR3H           equ	16293	;# 
   778   003FA6                     T3CON           equ	16294	;# 
   779   003FA6                     TMR3CON         equ	16294	;# 
   780   003FA7                     T3GCON          equ	16295	;# 
   781   003FA7                     TMR3GCON        equ	16295	;# 
   782   003FA8                     T3GATE          equ	16296	;# 
   783   003FA8                     TMR3GATE        equ	16296	;# 
   784   003FA9                     T3CLK           equ	16297	;# 
   785   003FA9                     TMR3CLK         equ	16297	;# 
   786   003FA9                     PR3             equ	16297	;# 
   787   003FAA                     T2TMR           equ	16298	;# 
   788   003FAA                     TMR2            equ	16298	;# 
   789   003FAB                     T2PR            equ	16299	;# 
   790   003FAB                     PR2             equ	16299	;# 
   791   003FAC                     T2CON           equ	16300	;# 
   792   003FAD                     T2HLT           equ	16301	;# 
   793   003FAE                     T2CLKCON        equ	16302	;# 
   794   003FAE                     T2CLK           equ	16302	;# 
   795   003FAF                     T2RST           equ	16303	;# 
   796   003FB0                     TMR1            equ	16304	;# 
   797   003FB0                     TMR1L           equ	16304	;# 
   798   003FB1                     TMR1H           equ	16305	;# 
   799   003FB2                     T1CON           equ	16306	;# 
   800   003FB2                     TMR1CON         equ	16306	;# 
   801   003FB3                     T1GCON          equ	16307	;# 
   802   003FB3                     TMR1GCON        equ	16307	;# 
   803   003FB4                     T1GATE          equ	16308	;# 
   804   003FB4                     TMR1GATE        equ	16308	;# 
   805   003FB5                     T1CLK           equ	16309	;# 
   806   003FB5                     TMR1CLK         equ	16309	;# 
   807   003FB5                     PR1             equ	16309	;# 
   808   003FB6                     TMR0L           equ	16310	;# 
   809   003FB6                     TMR0            equ	16310	;# 
   810   003FB7                     TMR0H           equ	16311	;# 
   811   003FB7                     PR0             equ	16311	;# 
   812   003FB8                     T0CON0          equ	16312	;# 
   813   003FB9                     T0CON1          equ	16313	;# 
   814   003FBA                     LATA            equ	16314	;# 
   815   003FBB                     LATB            equ	16315	;# 
   816   003FBC                     LATC            equ	16316	;# 
   817   003FBD                     LATD            equ	16317	;# 
   818   003FBE                     LATE            equ	16318	;# 
   819   003FC2                     TRISA           equ	16322	;# 
   820   003FC3                     TRISB           equ	16323	;# 
   821   003FC4                     TRISC           equ	16324	;# 
   822   003FC5                     TRISD           equ	16325	;# 
   823   003FC6                     TRISE           equ	16326	;# 
   824   003FCA                     PORTA           equ	16330	;# 
   825   003FCB                     PORTB           equ	16331	;# 
   826   003FCC                     PORTC           equ	16332	;# 
   827   003FCD                     PORTD           equ	16333	;# 
   828   003FCE                     PORTE           equ	16334	;# 
   829   003FD2                     INTCON0         equ	16338	;# 
   830   003FD3                     INTCON1         equ	16339	;# 
   831   003FD4                     IVTLOCK         equ	16340	;# 
   832   003FD5                     IVTBASE         equ	16341	;# 
   833   003FD5                     IVTBASEL        equ	16341	;# 
   834   003FD6                     IVTBASEH        equ	16342	;# 
   835   003FD7                     IVTBASEU        equ	16343	;# 
   836   003FD8                     STATUS          equ	16344	;# 
   837   003FD9                     FSR2            equ	16345	;# 
   838   003FD9                     FSR2L           equ	16345	;# 
   839   003FDA                     FSR2H           equ	16346	;# 
   840   003FDB                     PLUSW2          equ	16347	;# 
   841   003FDC                     PREINC2         equ	16348	;# 
   842   003FDD                     POSTDEC2        equ	16349	;# 
   843   003FDE                     POSTINC2        equ	16350	;# 
   844   003FDF                     INDF2           equ	16351	;# 
   845   003FE0                     BSR             equ	16352	;# 
   846   003FE1                     FSR1            equ	16353	;# 
   847   003FE1                     FSR1L           equ	16353	;# 
   848   003FE2                     FSR1H           equ	16354	;# 
   849   003FE3                     PLUSW1          equ	16355	;# 
   850   003FE4                     PREINC1         equ	16356	;# 
   851   003FE5                     POSTDEC1        equ	16357	;# 
   852   003FE6                     POSTINC1        equ	16358	;# 
   853   003FE7                     INDF1           equ	16359	;# 
   854   003FE8                     WREG            equ	16360	;# 
   855   003FE9                     FSR0            equ	16361	;# 
   856   003FE9                     FSR0L           equ	16361	;# 
   857   003FEA                     FSR0H           equ	16362	;# 
   858   003FEB                     PLUSW0          equ	16363	;# 
   859   003FEC                     PREINC0         equ	16364	;# 
   860   003FED                     POSTDEC0        equ	16365	;# 
   861   003FEE                     POSTINC0        equ	16366	;# 
   862   003FEF                     INDF0           equ	16367	;# 
   863   003FF0                     PCON0           equ	16368	;# 
   864   003FF1                     PCON1           equ	16369	;# 
   865   003FF3                     PROD            equ	16371	;# 
   866   003FF3                     PRODL           equ	16371	;# 
   867   003FF4                     PRODH           equ	16372	;# 
   868   003FF5                     TABLAT          equ	16373	;# 
   869   003FF6                     TBLPTR          equ	16374	;# 
   870   003FF6                     TBLPTRL         equ	16374	;# 
   871   003FF7                     TBLPTRH         equ	16375	;# 
   872   003FF8                     TBLPTRU         equ	16376	;# 
   873   003FF9                     PCLAT           equ	16377	;# 
   874   003FF9                     PCL             equ	16377	;# 
   875   003FFA                     PCLATH          equ	16378	;# 
   876   003FFB                     PCLATU          equ	16379	;# 
   877   003FFC                     STKPTR          equ	16380	;# 
   878   003FFD                     TOS             equ	16381	;# 
   879   003FFD                     TOSL            equ	16381	;# 
   880   003FFE                     TOSH            equ	16382	;# 
   881   003FFF                     TOSU            equ	16383	;# 
   882                           
   883                           	psect	idataBANK0
   884   004C14                     __pidataBANK0:
   885                           	callstack 0
   886                           
   887                           ;initializer for PWM@F16999
   888   004C14  0000               	dw	0
   889   004C16  0067               	dw	103
   890   004C18  00CD               	dw	205
   891   004C1A  0134               	dw	308
   892   004C1C  019A               	dw	410
   893   004C1E  0200               	dw	512
   894   004C20  0267               	dw	615
   895   004C22  02CD               	dw	717
   896   004C24  0334               	dw	820
   897   004C26  039A               	dw	922
   898   0039DF                     _OSCFRQ         set	14815
   899   0039DC                     _OSCSTATbits    set	14812
   900   0039A4                     _PIR4bits       set	14756
   901   003990                     _PIE0bits       set	14736
   902   003A50                     _ANSELB         set	14928
   903   003A0B                     _RB3PPS         set	14859
   904   003ABF                     _PPSLOCKbits    set	15039
   905   003ABF                     _PPSLOCK        set	15039
   906   003A61                     _WPUCbits       set	14945
   907   003A67                     _IOCCFbits      set	14951
   908   003A65                     _IOCCPbits      set	14949
   909   003A40                     _ANSELAbits     set	14912
   910   003A60                     _ANSELC         set	14944
   911   003A70                     _ANSELD         set	14960
   912   003A80                     _ANSELE         set	14976
   913   003EEF                     _ADRESL         set	16111
   914   003EF0                     _ADRESH         set	16112
   915   003EF4                     _ADACQH         set	16116
   916   003EF3                     _ADACQL         set	16115
   917   003EF7                     _ADPREH         set	16119
   918   003EF6                     _ADPREL         set	16118
   919   003EFD                     _ADREF          set	16125
   920   003EF5                     _ADCAP          set	16117
   921   003EF1                     _ADPCH          set	16113
   922   003EFF                     _ADCLK          set	16127
   923   003EF8                     _ADCON0bits     set	16120
   924   003F5E                     _CCPTMRS0bits   set	16222
   925   003FCE                     _PORTEbits      set	16334
   926   003FCB                     _PORTBbits      set	16331
   927   003FCB                     _PORTB          set	16331
   928   003FC3                     _TRISB          set	16323
   929   003F7A                     _CCP2CONbits    set	16250
   930   003F78                     _CCPR2L         set	16248
   931   003F79                     _CCPR2H         set	16249
   932   003F7A                     _CCP2CON        set	16250
   933   003FC3                     _TRISBbits      set	16323
   934   003FAB                     _PR2            set	16299
   935   003FAA                     _TMR2           set	16298
   936   003FAC                     _T2CONbits      set	16300
   937   003FAC                     _T2CON          set	16300
   938   003FAA                     _T2TMR          set	16298
   939   003FAB                     _T2PR           set	16299
   940   003FAF                     _T2RST          set	16303
   941   003FAD                     _T2HLT          set	16301
   942   003FAE                     _T2CLKCON       set	16302
   943   003FD2                     _INTCON0bits    set	16338
   944   003FC2                     _TRISAbits      set	16322
   945   003FC6                     _TRISE          set	16326
   946   003FBD                     _LATD           set	16317
   947   003FC4                     _TRISC          set	16324
   948   003FC5                     _TRISD          set	16325
   949   01FDE5                     _LATC5          set	130533
   950   01FDE4                     _LATC4          set	130532
   951   01FDE3                     _LATC3          set	130531
   952                           
   953                           	psect	smallconst
   954   002000                     __psmallconst:
   955                           	callstack 0
   956   002000  00                 	db	0
   957   002001                     
   958                           ; BSR set to: 58
   959   002001  69                 	db	105	;'i'
   960   002002  6E                 	db	110	;'n'
   961   002003  70                 	db	112	;'p'
   962   002004  75                 	db	117	;'u'
   963   002005  74                 	db	116	;'t'
   964   002006  20                 	db	32
   965   002007  76                 	db	118	;'v'
   966   002008  6F                 	db	111	;'o'
   967   002009  6C                 	db	108	;'l'
   968   00200A  74                 	db	116	;'t'
   969   00200B  61                 	db	97	;'a'
   970   00200C  67                 	db	103	;'g'
   971   00200D  65                 	db	101	;'e'
   972   00200E  3A                 	db	58	;':'
   973   00200F  00                 	db	0
   974   002010                     STR_1:
   975                           
   976                           ; BSR set to: 58
   977   002010  4A                 	db	74	;'J'
   978   002011  61                 	db	97	;'a'
   979   002012  63                 	db	99	;'c'
   980   002013  6F                 	db	111	;'o'
   981   002014  62                 	db	98	;'b'
   982   002015  00                 	db	0
   983   002016                     
   984                           ; BSR set to: 58
   985   002016  25                 	db	37
   986   002017  2E                 	db	46
   987   002018  32                 	db	50	;'2'
   988   002019  66                 	db	102	;'f'
   989   00201A  00                 	db	0
   990   00201B                     STR_7:
   991                           
   992                           ; BSR set to: 58
   993   00201B  69                 	db	105	;'i'
   994   00201C  6E                 	db	110	;'n'
   995   00201D  66                 	db	102	;'f'
   996   00201E  00                 	db	0
   997   00201F                     STR_10:
   998                           
   999                           ; BSR set to: 58
  1000   00201F  6E                 	db	110	;'n'
  1001   002020  61                 	db	97	;'a'
  1002   002021  6E                 	db	110	;'n'
  1003   002022  00                 	db	0
  1004   002023                     
  1005                           ; BSR set to: 58
  1006   002023  20                 	db	32
  1007   002024  56                 	db	86	;'V'
  1008   002025  00                 	db	0
  1009   002026                     STR_5:
  1010                           
  1011                           ; BSR set to: 58
  1012   002026  25                 	db	37
  1013   002027  64                 	db	100	;'d'
  1014   002028  00                 	db	0
  1015   00201F                     STR_11          equ	STR_10
  1016   00201F                     STR_12          equ	STR_10
  1017   00201B                     STR_8           equ	STR_7
  1018   00201B                     STR_9           equ	STR_7
  1019   002026                     STR_6           equ	STR_5
  1020   002029  00                 	db	0	; dummy byte at the end
  1021   002000                     __smallconst    set	__psmallconst
  1022   002000                     __mediumconst   set	__psmallconst
  1023   000003                     __activetblptr  equ	3
  1024                           
  1025                           ; #config settings
  1026                           
  1027                           	psect	cinit
  1028   004782                     __pcinit:
  1029                           	callstack 0
  1030   004782                     start_initialization:
  1031                           	callstack 0
  1032   004782                     __initialization:
  1033                           	callstack 0
  1034                           
  1035                           ; Initialize objects allocated to BANK0 (20 bytes)
  1036                           ; load TBLPTR registers with __pidataBANK0
  1037   004782  0E14               	movlw	low __pidataBANK0
  1038   004784  6EF6               	movwf	tblptrl,c
  1039   004786  0E4C               	movlw	high __pidataBANK0
  1040   004788  6EF7               	movwf	tblptrh,c
  1041   00478A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1042   00478C  6EF8               	movwf	tblptru,c
  1043   00478E  EE00  F0BB         	lfsr	0,__pdataBANK0
  1044   004792  EE10 F014          	lfsr	1,20
  1045   004796                     copy_data0:
  1046   004796  0009               	tblrd		*+
  1047   004798  006F FFD7 FFEE     	movff	tablat,postinc0
  1048   00479E  50E5               	movf	postdec1,w,c
  1049   0047A0  50E1               	movf	fsr1l,w,c
  1050   0047A2  E1F9               	bnz	copy_data0
  1051                           
  1052                           ; Clear objects allocated to BANK1 (80 bytes)
  1053   0047A4  EE00  F100         	lfsr	0,__pbssBANK1
  1054   0047A8  0E50               	movlw	80
  1055   0047AA                     clear_0:
  1056   0047AA  6AEE               	clrf	postinc0,c
  1057   0047AC  06E8               	decf	wreg,f,c
  1058   0047AE  E1FD               	bnz	clear_0
  1059                           
  1060                           ; Clear objects allocated to BANK0 (4 bytes)
  1061   0047B0  0100               	movlb	0
  1062   0047B2  6BD2               	clrf	(__pbssBANK0+3)& (0+255),b
  1063   0047B4  6BD1               	clrf	(__pbssBANK0+2)& (0+255),b
  1064   0047B6  6BD0               	clrf	(__pbssBANK0+1)& (0+255),b
  1065   0047B8  6BCF               	clrf	__pbssBANK0& (0+255),b
  1066                           
  1067                           ; Clear objects allocated to COMRAM (9 bytes)
  1068   0047BA  EE00  F054         	lfsr	0,__pbssCOMRAM
  1069   0047BE  0E09               	movlw	9
  1070   0047C0                     clear_1:
  1071   0047C0  6AEE               	clrf	postinc0,c
  1072   0047C2  06E8               	decf	wreg,f,c
  1073   0047C4  E1FD               	bnz	clear_1
  1074                           
  1075                           ;
  1076                           ; Setup IVTBASE
  1077                           ;
  1078   003FD5                     IVTBASEL        equ	16341
  1079   003FD6                     IVTBASEH        equ	16342
  1080   003FD7                     IVTBASEU        equ	16343
  1081   0047C6  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1082   0047C8  6ED5               	movwf	213,c
  1083   0047CA  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1084   0047CC  6ED6               	movwf	214,c
  1085   0047CE  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1086   0047D0  6ED7               	movwf	215,c
  1087   0047D2                     end_of_initialization:
  1088                           	callstack 0
  1089   0047D2                     __end_of__initialization:
  1090                           	callstack 0
  1091   0047D2  0100               	movlb	0
  1092   0047D4  EF9A  F025         	goto	_main	;jump to C main() function
  1093                           
  1094                           	psect	bssCOMRAM
  1095   000054                     __pbssCOMRAM:
  1096                           	callstack 0
  1097   000054                     floorf@F521:
  1098                           	callstack 0
  1099   000054                     	ds	4
  1100   000058                     ___fpclassifyf@F465:
  1101                           	callstack 0
  1102   000058                     	ds	4
  1103   00005C                     _flags:
  1104                           	callstack 0
  1105   00005C                     	ds	1
  1106                           
  1107                           	psect	bssBANK0
  1108   0000CF                     __pbssBANK0:
  1109                           	callstack 0
  1110   0000CF                     _width:
  1111                           	callstack 0
  1112   0000CF                     	ds	2
  1113   0000D1                     _prec:
  1114                           	callstack 0
  1115   0000D1                     	ds	2
  1116                           
  1117                           	psect	dataBANK0
  1118   0000BB                     __pdataBANK0:
  1119                           	callstack 0
  1120   0000BB                     PWM@F16999:
  1121                           	callstack 0
  1122   0000BB                     	ds	20
  1123                           
  1124                           	psect	bssBANK1
  1125   000100                     __pbssBANK1:
  1126                           	callstack 0
  1127   000100                     _dbuf:
  1128                           	callstack 0
  1129   000100                     	ds	80
  1130                           
  1131                           	psect	cstackBANK0
  1132   000060                     __pcstackBANK0:
  1133                           	callstack 0
  1134   000060                     efgtoa@ne:
  1135                           	callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x0
  1138   000060                     	ds	2
  1139   000062                     efgtoa@p:
  1140                           	callstack 0
  1141                           
  1142                           ; 2 bytes @ 0x2
  1143   000062                     	ds	2
  1144   000064                     efgtoa@t:
  1145                           	callstack 0
  1146                           
  1147                           ; 2 bytes @ 0x4
  1148   000064                     	ds	2
  1149   000066                     _efgtoa$1333:
  1150                           	callstack 0
  1151                           
  1152                           ; 2 bytes @ 0x6
  1153   000066                     	ds	2
  1154   000068                     efgtoa@pp:
  1155                           	callstack 0
  1156                           
  1157                           ; 1 bytes @ 0x8
  1158   000068                     	ds	1
  1159   000069                     efgtoa@mode:
  1160                           	callstack 0
  1161                           
  1162                           ; 1 bytes @ 0x9
  1163   000069                     	ds	1
  1164   00006A                     efgtoa@nmode:
  1165                           	callstack 0
  1166                           
  1167                           ; 1 bytes @ 0xA
  1168   00006A                     	ds	1
  1169   00006B                     efgtoa@d:
  1170                           	callstack 0
  1171                           
  1172                           ; 2 bytes @ 0xB
  1173   00006B                     	ds	2
  1174   00006D                     efgtoa@m:
  1175                           	callstack 0
  1176                           
  1177                           ; 2 bytes @ 0xD
  1178   00006D                     	ds	2
  1179   00006F                     efgtoa@e:
  1180                           	callstack 0
  1181                           
  1182                           ; 2 bytes @ 0xF
  1183   00006F                     	ds	2
  1184   000071                     efgtoa@w:
  1185                           	callstack 0
  1186                           
  1187                           ; 2 bytes @ 0x11
  1188   000071                     	ds	2
  1189   000073                     efgtoa@ou:
  1190                           	callstack 0
  1191                           
  1192                           ; 4 bytes @ 0x13
  1193   000073                     	ds	4
  1194   000077                     efgtoa@i:
  1195                           	callstack 0
  1196                           
  1197                           ; 2 bytes @ 0x17
  1198   000077                     	ds	2
  1199   000079                     efgtoa@h:
  1200                           	callstack 0
  1201                           
  1202                           ; 4 bytes @ 0x19
  1203   000079                     	ds	4
  1204   00007D                     efgtoa@l:
  1205                           	callstack 0
  1206                           
  1207                           ; 4 bytes @ 0x1D
  1208   00007D                     	ds	4
  1209   000081                     efgtoa@sign:
  1210                           	callstack 0
  1211                           
  1212                           ; 1 bytes @ 0x21
  1213   000081                     	ds	1
  1214   000082                     efgtoa@n:
  1215                           	callstack 0
  1216                           
  1217                           ; 2 bytes @ 0x22
  1218   000082                     	ds	2
  1219   000084                     efgtoa@g:
  1220                           	callstack 0
  1221                           
  1222                           ; 4 bytes @ 0x24
  1223   000084                     	ds	4
  1224   000088                     efgtoa@u:
  1225                           	callstack 0
  1226                           
  1227                           ; 4 bytes @ 0x28
  1228   000088                     	ds	4
  1229   00008C                     ?_sprintf:
  1230                           	callstack 0
  1231   00008C                     sprintf@s:
  1232                           	callstack 0
  1233                           
  1234                           ; 1 bytes @ 0x2C
  1235   00008C                     	ds	1
  1236   00008D                     sprintf@fmt:
  1237                           	callstack 0
  1238                           
  1239                           ; 1 bytes @ 0x2D
  1240   00008D                     	ds	5
  1241   000092                     PWM@percent:
  1242                           	callstack 0
  1243                           
  1244                           ; 15 bytes @ 0x32
  1245   000092                     	ds	15
  1246   0000A1                     PWM@dcVal:
  1247                           	callstack 0
  1248                           
  1249                           ; 20 bytes @ 0x41
  1250   0000A1                     	ds	20
  1251   0000B5                     PWM@pwmStatus:
  1252                           	callstack 0
  1253                           
  1254                           ; 2 bytes @ 0x55
  1255   0000B5                     	ds	2
  1256   0000B7                     PWM@checkdutyCycle:
  1257                           	callstack 0
  1258                           
  1259                           ; 2 bytes @ 0x57
  1260   0000B7                     	ds	2
  1261   0000B9                     PWM@index:
  1262                           	callstack 0
  1263                           
  1264                           ; 2 bytes @ 0x59
  1265   0000B9                     	ds	2
  1266                           
  1267                           	psect	cstackCOMRAM
  1268   000001                     __pcstackCOMRAM:
  1269                           	callstack 0
  1270   000001                     ISR@i:
  1271                           	callstack 0
  1272   000001                     
  1273                           ; 1 bytes @ 0x0
  1274   000001                     	ds	2
  1275   000003                     ?___fpclassifyf:
  1276                           	callstack 0
  1277   000003                     ?___awdiv:
  1278                           	callstack 0
  1279   000003                     ?___awmod:
  1280                           	callstack 0
  1281   000003                     ?_read_prec_or_width:
  1282                           	callstack 0
  1283   000003                     ?___fladd:
  1284                           	callstack 0
  1285   000003                     ?___fldiv:
  1286                           	callstack 0
  1287   000003                     ?___flmul:
  1288                           	callstack 0
  1289   000003                     ?_labs:
  1290                           	callstack 0
  1291   000003                     ?___lmul:
  1292                           	callstack 0
  1293   000003                     ?___flneg:
  1294                           	callstack 0
  1295   000003                     ?___fltol:
  1296                           	callstack 0
  1297   000003                     read_prec_or_width@fmt:
  1298                           	callstack 0
  1299   000003                     MSdelay@val:
  1300                           	callstack 0
  1301   000003                     PWM2_LoadDutyValue@dutyValue:
  1302                           	callstack 0
  1303   000003                     ___awdiv@dividend:
  1304                           	callstack 0
  1305   000003                     ___awmod@dividend:
  1306                           	callstack 0
  1307   000003                     memcpy@d1:
  1308                           	callstack 0
  1309   000003                     fputc@c:
  1310                           	callstack 0
  1311   000003                     strcpy@dest:
  1312                           	callstack 0
  1313   000003                     ___lmul@multiplier:
  1314                           	callstack 0
  1315   000003                     ___fleq@ff1:
  1316                           	callstack 0
  1317   000003                     ___flneg@f1:
  1318                           	callstack 0
  1319   000003                     ___fltol@f1:
  1320                           	callstack 0
  1321   000003                     ___fladd@b:
  1322                           	callstack 0
  1323   000003                     ___fldiv@b:
  1324                           	callstack 0
  1325   000003                     ___flmul@b:
  1326                           	callstack 0
  1327   000003                     ___fpclassifyf@x:
  1328                           	callstack 0
  1329   000003                     labs@a:
  1330                           	callstack 0
  1331   000003                     
  1332                           ; 1 bytes @ 0x2
  1333   000003                     	ds	1
  1334   000004                     read_prec_or_width@ap:
  1335                           	callstack 0
  1336                           
  1337                           ; 1 bytes @ 0x3
  1338   000004                     	ds	1
  1339   000005                     fputc@fp:
  1340                           	callstack 0
  1341   000005                     strcpy@src:
  1342                           	callstack 0
  1343   000005                     MSdelay@i:
  1344                           	callstack 0
  1345   000005                     ___awdiv@divisor:
  1346                           	callstack 0
  1347   000005                     ___awmod@divisor:
  1348                           	callstack 0
  1349   000005                     memcpy@s1:
  1350                           	callstack 0
  1351   000005                     ??_read_prec_or_width:
  1352                           
  1353                           ; 1 bytes @ 0x4
  1354   000005                     	ds	1
  1355   000006                     ??_fputc:
  1356   000006                     ??_strcpy:
  1357                           
  1358                           ; 1 bytes @ 0x5
  1359   000006                     	ds	1
  1360   000007                     ___awdiv@counter:
  1361                           	callstack 0
  1362   000007                     ___awmod@counter:
  1363                           	callstack 0
  1364   000007                     read_prec_or_width@c:
  1365                           	callstack 0
  1366   000007                     MSdelay@j:
  1367                           	callstack 0
  1368   000007                     memcpy@n:
  1369                           	callstack 0
  1370   000007                     strcpy@d:
  1371                           	callstack 0
  1372   000007                     ___lmul@multiplicand:
  1373                           	callstack 0
  1374   000007                     ___fleq@ff2:
  1375                           	callstack 0
  1376   000007                     ___fladd@a:
  1377                           	callstack 0
  1378   000007                     ___fldiv@a:
  1379                           	callstack 0
  1380   000007                     ___flmul@a:
  1381                           	callstack 0
  1382   000007                     ??___fpclassifyf:
  1383   000007                     ??_labs:
  1384   000007                     ??___fltol:
  1385                           
  1386                           ; 1 bytes @ 0x6
  1387   000007                     	ds	1
  1388   000008                     ___awdiv@sign:
  1389                           	callstack 0
  1390   000008                     ___awmod@sign:
  1391                           	callstack 0
  1392   000008                     read_prec_or_width@n:
  1393                           	callstack 0
  1394                           
  1395                           ; 2 bytes @ 0x7
  1396   000008                     	ds	1
  1397   000009                     ?_abs:
  1398                           	callstack 0
  1399   000009                     LCD_Command@cmd:
  1400                           	callstack 0
  1401   000009                     LCD_Char@dat:
  1402                           	callstack 0
  1403   000009                     ___awdiv@quotient:
  1404                           	callstack 0
  1405   000009                     abs@a:
  1406                           	callstack 0
  1407   000009                     memcpy@d:
  1408                           	callstack 0
  1409   000009                     
  1410                           ; 1 bytes @ 0x8
  1411   000009                     	ds	1
  1412   00000A                     LCD_String@msg:
  1413                           	callstack 0
  1414   00000A                     
  1415                           ; 1 bytes @ 0x9
  1416   00000A                     	ds	1
  1417   00000B                     ___fltol@sign1:
  1418                           	callstack 0
  1419   00000B                     ___fpclassifyf@e:
  1420                           	callstack 0
  1421   00000B                     memcpy@s:
  1422                           	callstack 0
  1423   00000B                     fputs@s:
  1424                           	callstack 0
  1425   00000B                     ___lmul@product:
  1426                           	callstack 0
  1427   00000B                     ??___fladd:
  1428   00000B                     ??___fldiv:
  1429   00000B                     ??___flmul:
  1430   00000B                     ??_abs:
  1431   00000B                     ??___fleq:
  1432                           
  1433                           ; 1 bytes @ 0xA
  1434   00000B                     	ds	1
  1435   00000C                     LCD_String_xy@pos:
  1436                           	callstack 0
  1437   00000C                     ___fltol@exp1:
  1438                           	callstack 0
  1439   00000C                     
  1440                           ; 1 bytes @ 0xB
  1441   00000C                     	ds	1
  1442   00000D                     memcpy@tmp:
  1443                           	callstack 0
  1444   00000D                     fputs@fp:
  1445                           	callstack 0
  1446   00000D                     LCD_String_xy@msg:
  1447                           	callstack 0
  1448   00000D                     ___fpclassifyf@u:
  1449                           	callstack 0
  1450                           
  1451                           ; 4 bytes @ 0xC
  1452   00000D                     	ds	1
  1453   00000E                     fputs@c:
  1454                           	callstack 0
  1455   00000E                     
  1456                           ; 1 bytes @ 0xD
  1457   00000E                     	ds	1
  1458   00000F                     ?___lldiv:
  1459                           	callstack 0
  1460   00000F                     LCD_String_xy@row:
  1461                           	callstack 0
  1462   00000F                     ___fladd@signs:
  1463                           	callstack 0
  1464   00000F                     ___flmul@sign:
  1465                           	callstack 0
  1466   00000F                     fputs@i:
  1467                           	callstack 0
  1468   00000F                     ___lldiv@dividend:
  1469                           	callstack 0
  1470   00000F                     ___fldiv@rem:
  1471                           	callstack 0
  1472   00000F                     
  1473                           ; 1 bytes @ 0xE
  1474   00000F                     	ds	1
  1475   000010                     LCD_String_xy@location:
  1476                           	callstack 0
  1477   000010                     ___fladd@aexp:
  1478                           	callstack 0
  1479   000010                     ___flmul@grs:
  1480                           	callstack 0
  1481                           
  1482                           ; 4 bytes @ 0xF
  1483   000010                     	ds	1
  1484   000011                     ___fladd@bexp:
  1485                           	callstack 0
  1486   000011                     pad@fp:
  1487                           	callstack 0
  1488                           
  1489                           ; 1 bytes @ 0x10
  1490   000011                     	ds	1
  1491   000012                     ___fladd@grs:
  1492                           	callstack 0
  1493   000012                     pad@buf:
  1494                           	callstack 0
  1495                           
  1496                           ; 2 bytes @ 0x11
  1497   000012                     	ds	1
  1498   000013                     ___fldiv@sign:
  1499                           	callstack 0
  1500   000013                     ___lldiv@divisor:
  1501                           	callstack 0
  1502                           
  1503                           ; 4 bytes @ 0x12
  1504   000013                     	ds	1
  1505   000014                     ___flmul@aexp:
  1506                           	callstack 0
  1507   000014                     ___fldiv@new_exp:
  1508                           	callstack 0
  1509   000014                     pad@p:
  1510                           	callstack 0
  1511                           
  1512                           ; 2 bytes @ 0x13
  1513   000014                     	ds	1
  1514   000015                     ___flmul@bexp:
  1515                           	callstack 0
  1516                           
  1517                           ; 1 bytes @ 0x14
  1518   000015                     	ds	1
  1519   000016                     ___fldiv@grs:
  1520                           	callstack 0
  1521   000016                     ___flmul@prod:
  1522                           	callstack 0
  1523   000016                     ??_pad:
  1524                           
  1525                           ; 1 bytes @ 0x15
  1526   000016                     	ds	1
  1527   000017                     pad@i:
  1528                           	callstack 0
  1529   000017                     ___lldiv@quotient:
  1530                           	callstack 0
  1531   000017                     
  1532                           ; 1 bytes @ 0x16
  1533   000017                     	ds	2
  1534   000019                     dtoa@fp:
  1535                           	callstack 0
  1536                           
  1537                           ; 1 bytes @ 0x18
  1538   000019                     	ds	1
  1539   00001A                     ___fldiv@bexp:
  1540                           	callstack 0
  1541   00001A                     ___flmul@temp:
  1542                           	callstack 0
  1543   00001A                     dtoa@d:
  1544                           	callstack 0
  1545                           
  1546                           ; 2 bytes @ 0x19
  1547   00001A                     	ds	1
  1548   00001B                     ___lldiv@counter:
  1549                           	callstack 0
  1550   00001B                     ___fldiv@aexp:
  1551                           	callstack 0
  1552                           
  1553                           ; 1 bytes @ 0x1A
  1554   00001B                     	ds	1
  1555   00001C                     ?___flsub:
  1556                           	callstack 0
  1557   00001C                     ?_floorf:
  1558                           	callstack 0
  1559   00001C                     _dtoa$1302:
  1560                           	callstack 0
  1561   00001C                     ___flge@ff1:
  1562                           	callstack 0
  1563   00001C                     ___flsub@b:
  1564                           	callstack 0
  1565   00001C                     floorf@x:
  1566                           	callstack 0
  1567   00001C                     
  1568                           ; 1 bytes @ 0x1B
  1569   00001C                     	ds	2
  1570   00001E                     dtoa@w:
  1571                           	callstack 0
  1572                           
  1573                           ; 2 bytes @ 0x1D
  1574   00001E                     	ds	2
  1575   000020                     dtoa@p:
  1576                           	callstack 0
  1577   000020                     ___flge@ff2:
  1578                           	callstack 0
  1579   000020                     ___flsub@a:
  1580                           	callstack 0
  1581   000020                     ??_floorf:
  1582                           
  1583                           ; 1 bytes @ 0x1F
  1584   000020                     	ds	2
  1585   000022                     dtoa@s:
  1586                           	callstack 0
  1587                           
  1588                           ; 1 bytes @ 0x21
  1589   000022                     	ds	1
  1590   000023                     dtoa@i:
  1591                           	callstack 0
  1592                           
  1593                           ; 2 bytes @ 0x22
  1594   000023                     	ds	1
  1595   000024                     ??___flge:
  1596                           
  1597                           ; 1 bytes @ 0x23
  1598   000024                     	ds	2
  1599   000026                     floorf@m:
  1600                           	callstack 0
  1601                           
  1602                           ; 4 bytes @ 0x25
  1603   000026                     	ds	4
  1604   00002A                     floorf@e:
  1605                           	callstack 0
  1606                           
  1607                           ; 2 bytes @ 0x29
  1608   00002A                     	ds	2
  1609   00002C                     floorf@u:
  1610                           	callstack 0
  1611                           
  1612                           ; 4 bytes @ 0x2B
  1613   00002C                     	ds	4
  1614   000030                     efgtoa@fp:
  1615                           	callstack 0
  1616                           
  1617                           ; 1 bytes @ 0x2F
  1618   000030                     	ds	1
  1619   000031                     efgtoa@f:
  1620                           	callstack 0
  1621                           
  1622                           ; 4 bytes @ 0x30
  1623   000031                     	ds	4
  1624   000035                     efgtoa@c:
  1625                           	callstack 0
  1626                           
  1627                           ; 1 bytes @ 0x34
  1628   000035                     	ds	1
  1629   000036                     ??_efgtoa:
  1630                           
  1631                           ; 1 bytes @ 0x35
  1632   000036                     	ds	2
  1633   000038                     vfpfcnvrt@fp:
  1634                           	callstack 0
  1635                           
  1636                           ; 1 bytes @ 0x37
  1637   000038                     	ds	1
  1638   000039                     vfpfcnvrt@fmt:
  1639                           	callstack 0
  1640                           
  1641                           ; 1 bytes @ 0x38
  1642   000039                     	ds	1
  1643   00003A                     vfpfcnvrt@ap:
  1644                           	callstack 0
  1645                           
  1646                           ; 1 bytes @ 0x39
  1647   00003A                     	ds	1
  1648   00003B                     ??_vfpfcnvrt:
  1649                           
  1650                           ; 1 bytes @ 0x3A
  1651   00003B                     	ds	1
  1652   00003C                     vfpfcnvrt@convarg:
  1653                           	callstack 0
  1654                           
  1655                           ; 4 bytes @ 0x3B
  1656   00003C                     	ds	4
  1657   000040                     vfpfcnvrt@c:
  1658                           	callstack 0
  1659                           
  1660                           ; 1 bytes @ 0x3F
  1661   000040                     	ds	1
  1662   000041                     vfpfcnvrt@cp:
  1663                           	callstack 0
  1664                           
  1665                           ; 1 bytes @ 0x40
  1666   000041                     	ds	1
  1667   000042                     ?_vfprintf:
  1668                           	callstack 0
  1669   000042                     vfprintf@fp:
  1670                           	callstack 0
  1671                           
  1672                           ; 1 bytes @ 0x41
  1673   000042                     	ds	1
  1674   000043                     vfprintf@fmt:
  1675                           	callstack 0
  1676                           
  1677                           ; 1 bytes @ 0x42
  1678   000043                     	ds	1
  1679   000044                     vfprintf@ap:
  1680                           	callstack 0
  1681                           
  1682                           ; 1 bytes @ 0x43
  1683   000044                     	ds	1
  1684   000045                     vfprintf@cfmt:
  1685                           	callstack 0
  1686   000045                     
  1687                           ; 1 bytes @ 0x44
  1688   000045                     	ds	1
  1689   000046                     sprintf@ap:
  1690                           	callstack 0
  1691   000046                     
  1692                           ; 1 bytes @ 0x45
  1693   000046                     	ds	1
  1694   000047                     sprintf@f:
  1695                           	callstack 0
  1696                           
  1697                           ; 11 bytes @ 0x46
  1698   000047                     	ds	11
  1699   000052                     ??_PWM:
  1700                           
  1701                           ; 1 bytes @ 0x51
  1702   000052                     	ds	2
  1703   000054                     
  1704                           ; 1 bytes @ 0x53
  1705 ;;
  1706 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1707 ;;
  1708 ;; *************** function _main *****************
  1709 ;; Defined at:
  1710 ;;		line 41 in file "main.c"
  1711 ;; Parameters:    Size  Location     Type
  1712 ;;		None
  1713 ;; Auto vars:     Size  Location     Type
  1714 ;;		None
  1715 ;; Return value:  Size  Location     Type
  1716 ;;                  1    wreg      void 
  1717 ;; Registers used:
  1718 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1719 ;; Tracked objects:
  1720 ;;		On entry : 0/0
  1721 ;;		On exit  : 0/0
  1722 ;;		Unchanged: 0/0
  1723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1728 ;;Total ram usage:        0 bytes
  1729 ;; Hardware stack levels required when called: 10
  1730 ;; This function calls:
  1731 ;;		_Initialize
  1732 ;;		_LCD_Clear
  1733 ;;		_LCD_Init
  1734 ;;		_LCD_String_xy
  1735 ;;		_PWM
  1736 ;; This function is called by:
  1737 ;;		Startup code after reset
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           	psect	text0
  1742   004B34                     __ptext0:
  1743                           	callstack 0
  1744   004B34                     _main:
  1745                           	callstack 21
  1746   004B34                     
  1747                           ;main.c: 42:     Initialize();
  1748   004B34  ECAC  F024         	call	_Initialize	;wreg free
  1749   004B38                     
  1750                           ;main.c: 43:     LCD_Init();
  1751   004B38  ECAF  F025         	call	_LCD_Init	;wreg free
  1752   004B3C                     
  1753                           ;main.c: 44:     LCD_String_xy(1, 0, "Jacob");
  1754   004B3C  0E00               	movlw	0
  1755   004B3E  6E0C               	movwf	LCD_String_xy@pos^0,c
  1756   004B40  0E10               	movlw	low STR_1
  1757   004B42  6E0D               	movwf	LCD_String_xy@msg^0,c
  1758   004B44  500D               	movf	LCD_String_xy@msg^0,w,c
  1759   004B46  A4D8               	btfss	status,2,c
  1760   004B48  0E20               	movlw	high __smallconst
  1761   004B4A  6E0E               	movwf	(LCD_String_xy@msg+1)^0,c
  1762   004B4C  0E01               	movlw	1
  1763   004B4E  EC11  F025         	call	_LCD_String_xy
  1764   004B52                     
  1765                           ;main.c: 47:     LCD_Clear();
  1766   004B52  EC1E  F026         	call	_LCD_Clear	;wreg free
  1767   004B56                     
  1768                           ;main.c: 52:     PWM();
  1769   004B56  ECA5  F01D         	call	_PWM	;wreg free
  1770   004B5A  EF57  F000         	goto	start
  1771   004B5E                     __end_of_main:
  1772                           	callstack 0
  1773                           
  1774 ;; *************** function _PWM *****************
  1775 ;; Defined at:
  1776 ;;		line 75 in file "main.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;		None
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;  dcVal          20   65[BANK0 ] int [10]
  1781 ;;  percent        15   50[BANK0 ] unsigned char [15]
  1782 ;;  index           2   89[BANK0 ] int 
  1783 ;;  checkdutyCyc    2   87[BANK0 ] unsigned int 
  1784 ;;  pwmStatus       2   85[BANK0 ] unsigned int 
  1785 ;;  preScale        2    0        unsigned int 
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  1    wreg      void 
  1788 ;; Registers used:
  1789 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1796 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1797 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1798 ;;      Totals:         2      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1799 ;;Total ram usage:       43 bytes
  1800 ;; Hardware stack levels used: 1
  1801 ;; Hardware stack levels required when called: 9
  1802 ;; This function calls:
  1803 ;;		_LCD_Clear
  1804 ;;		_LCD_String_xy
  1805 ;;		_PWM2_Initialize
  1806 ;;		_PWM2_LoadDutyValue
  1807 ;;		_PWM2_OutputStatusGet
  1808 ;;		_PWM_Output_D8_Enable
  1809 ;;		_TMR2_Initialize
  1810 ;;		_TMR2_StartTimer
  1811 ;;		___lldiv
  1812 ;;		___lmul
  1813 ;;		_sprintf
  1814 ;; This function is called by:
  1815 ;;		_main
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819                           	psect	text1
  1820   003B4A                     __ptext1:
  1821                           	callstack 0
  1822   003B4A                     _PWM:
  1823                           	callstack 21
  1824   003B4A                     
  1825                           ;main.c: 76:     unsigned int checkdutyCycle, pwmStatus, preScale;;main.c: 77:     int d
      +                          cVal[10] = {0, 103, 205, 308, 410, 512, 615, 717, 820, 922};
  1826   003B4A  EE20  F0BB         	lfsr	2,PWM@F16999
  1827   003B4E  EE10  F0A1         	lfsr	1,PWM@dcVal
  1828   003B52  0E13               	movlw	19
  1829   003B54                     u4101:
  1830   003B54  006F FF6F FFE3     	movff	plusw2,plusw1
  1831   003B5A  06E8               	decf	wreg,f,c
  1832   003B5C  E2FB               	bc	u4101
  1833   003B5E                     
  1834                           ;main.c: 78:     int index = 0;
  1835   003B5E  0E00               	movlw	0
  1836   003B60  0100               	movlb	0	; () banked
  1837   003B62  6FBA               	movwf	(PWM@index+1)& (0+255),b
  1838   003B64  0E00               	movlw	0
  1839   003B66  6FB9               	movwf	PWM@index& (0+255),b
  1840   003B68                     
  1841                           ; BSR set to: 0
  1842                           ;main.c: 79:     char percent[15];;main.c: 80:     OSCSTATbits.HFOR =1;
  1843   003B68  0139               	movlb	57	; () banked
  1844   003B6A  8DDC               	bsf	220,6,b	;volatile
  1845   003B6C                     
  1846                           ; BSR set to: 57
  1847                           ;main.c: 81:     OSCFRQ=0x02;
  1848   003B6C  0E02               	movlw	2
  1849   003B6E  6FDF               	movwf	223,b	;volatile
  1850   003B70                     
  1851                           ; BSR set to: 57
  1852                           ;main.c: 83:     ANSELB = 0b00000000;
  1853   003B70  013A               	movlb	58	; () banked
  1854   003B72  6B50               	clrf	80,b	;volatile
  1855   003B74                     
  1856                           ; BSR set to: 58
  1857                           ;main.c: 84:     TRISB= 0b00000000;
  1858   003B74  6AC3               	clrf	195,c	;volatile
  1859   003B76                     
  1860                           ; BSR set to: 58
  1861                           ;main.c: 85:     PORTB= 0b00000000;
  1862   003B76  6ACB               	clrf	203,c	;volatile
  1863   003B78                     
  1864                           ; BSR set to: 58
  1865                           ;main.c: 86:     TMR2_Initialize();
  1866   003B78  ECF4  F025         	call	_TMR2_Initialize	;wreg free
  1867   003B7C                     
  1868                           ;main.c: 87:     TMR2_StartTimer();
  1869   003B7C  EC22  F026         	call	_TMR2_StartTimer	;wreg free
  1870   003B80                     
  1871                           ;main.c: 89:     PWM_Output_D8_Enable();
  1872   003B80  ECE6  F025         	call	_PWM_Output_D8_Enable	;wreg free
  1873   003B84                     
  1874                           ;main.c: 90:     PWM2_Initialize();
  1875   003B84  ECFF  F025         	call	_PWM2_Initialize	;wreg free
  1876   003B88                     
  1877                           ;main.c: 91:     PWM2_LoadDutyValue( dcVal[index] );
  1878   003B88  C0A1  F003         	movff	PWM@dcVal,PWM2_LoadDutyValue@dutyValue
  1879   003B8C  C0A2  F004         	movff	PWM@dcVal+1,PWM2_LoadDutyValue@dutyValue+1
  1880   003B90  EC82  F025         	call	_PWM2_LoadDutyValue	;wreg free
  1881   003B94                     
  1882                           ;main.c: 96:     checkdutyCycle =(uint16_t)((100UL*dcVal[index])/(4*(T2PR+1)));
  1883   003B94  C0A1  F003         	movff	PWM@dcVal,___lmul@multiplier
  1884   003B98  C0A2  F004         	movff	PWM@dcVal+1,___lmul@multiplier+1
  1885   003B9C  0E00               	movlw	0
  1886   003B9E  BE04               	btfsc	(___lmul@multiplier+1)^0,7,c
  1887   003BA0  0EFF               	movlw	-1
  1888   003BA2  6E05               	movwf	(___lmul@multiplier+2)^0,c
  1889   003BA4  6E06               	movwf	(___lmul@multiplier+3)^0,c
  1890   003BA6  0E64               	movlw	100
  1891   003BA8  6E07               	movwf	___lmul@multiplicand^0,c
  1892   003BAA  0E00               	movlw	0
  1893   003BAC  6E08               	movwf	(___lmul@multiplicand+1)^0,c
  1894   003BAE  0E00               	movlw	0
  1895   003BB0  6E09               	movwf	(___lmul@multiplicand+2)^0,c
  1896   003BB2  0E00               	movlw	0
  1897   003BB4  6E0A               	movwf	(___lmul@multiplicand+3)^0,c
  1898   003BB6  EC2C  F023         	call	___lmul	;wreg free
  1899   003BBA  C003  F00F         	movff	?___lmul,___lldiv@dividend
  1900   003BBE  C004  F010         	movff	?___lmul+1,___lldiv@dividend+1
  1901   003BC2  C005  F011         	movff	?___lmul+2,___lldiv@dividend+2
  1902   003BC6  C006  F012         	movff	?___lmul+3,___lldiv@dividend+3
  1903   003BCA  50AB               	movf	171,w,c	;volatile
  1904   003BCC  6E52               	movwf	??_PWM^0,c
  1905   003BCE  6A53               	clrf	(??_PWM+1)^0,c
  1906   003BD0  90D8               	bcf	status,0,c
  1907   003BD2  3652               	rlcf	??_PWM^0,f,c
  1908   003BD4  3653               	rlcf	(??_PWM+1)^0,f,c
  1909   003BD6  90D8               	bcf	status,0,c
  1910   003BD8  3652               	rlcf	??_PWM^0,f,c
  1911   003BDA  3653               	rlcf	(??_PWM+1)^0,f,c
  1912   003BDC  0E04               	movlw	4
  1913   003BDE  2652               	addwf	??_PWM^0,f,c
  1914   003BE0  0E00               	movlw	0
  1915   003BE2  2253               	addwfc	(??_PWM+1)^0,f,c
  1916   003BE4  C052  F013         	movff	??_PWM,___lldiv@divisor
  1917   003BE8  C053  F014         	movff	??_PWM+1,___lldiv@divisor+1
  1918   003BEC  0E00               	movlw	0
  1919   003BEE  BE14               	btfsc	(___lldiv@divisor+1)^0,7,c
  1920   003BF0  0EFF               	movlw	-1
  1921   003BF2  6E15               	movwf	(___lldiv@divisor+2)^0,c
  1922   003BF4  6E16               	movwf	(___lldiv@divisor+3)^0,c
  1923   003BF6  ECA1  F022         	call	___lldiv	;wreg free
  1924   003BFA  C00F  F0B7         	movff	?___lldiv,PWM@checkdutyCycle
  1925   003BFE  C010  F0B8         	movff	?___lldiv+1,PWM@checkdutyCycle+1
  1926   003C02  50AC               	movf	172,w,c	;volatile
  1927   003C04                     
  1928                           ;main.c: 100:     LCD_Clear();
  1929   003C04  EC1E  F026         	call	_LCD_Clear	;wreg free
  1930   003C08                     
  1931                           ;main.c: 101:     sprintf(percent, "%d", checkdutyCycle);
  1932   003C08  0E92               	movlw	low PWM@percent
  1933   003C0A  0100               	movlb	0	; () banked
  1934   003C0C  6F8C               	movwf	sprintf@s& (0+255),b
  1935   003C0E  0E26               	movlw	low STR_5
  1936   003C10  6F8D               	movwf	sprintf@fmt& (0+255),b
  1937   003C12  C0B7  F08E         	movff	PWM@checkdutyCycle,?_sprintf+2
  1938   003C16  C0B8  F08F         	movff	PWM@checkdutyCycle+1,?_sprintf+3
  1939   003C1A  EC4D  F025         	call	_sprintf	;wreg free
  1940   003C1E                     
  1941                           ;main.c: 102:     LCD_String_xy(2, 0, percent);
  1942   003C1E  0E00               	movlw	0
  1943   003C20  6E0C               	movwf	LCD_String_xy@pos^0,c
  1944   003C22  0E92               	movlw	low PWM@percent
  1945   003C24  6E0D               	movwf	LCD_String_xy@msg^0,c
  1946   003C26  6A0E               	clrf	(LCD_String_xy@msg+1)^0,c
  1947   003C28  0E02               	movlw	2
  1948   003C2A  EC11  F025         	call	_LCD_String_xy
  1949   003C2E                     l3882:
  1950                           
  1951                           ;main.c: 105:         pwmStatus = PWM2_OutputStatusGet();
  1952   003C2E  EC14  F026         	call	_PWM2_OutputStatusGet	;wreg free
  1953   003C32  6E52               	movwf	??_PWM^0,c
  1954   003C34  5052               	movf	??_PWM^0,w,c
  1955   003C36  0100               	movlb	0	; () banked
  1956   003C38  6FB5               	movwf	PWM@pwmStatus& (0+255),b
  1957   003C3A  6BB6               	clrf	(PWM@pwmStatus+1)& (0+255),b
  1958   003C3C                     
  1959                           ; BSR set to: 0
  1960                           ;main.c: 106:         PORTBbits.RB2 = pwmStatus;
  1961   003C3C  B1B5               	btfsc	PWM@pwmStatus& (0+255),0,b
  1962   003C3E  D002               	bra	u4115
  1963   003C40  94CB               	bcf	203,2,c	;volatile
  1964   003C42  D001               	bra	u4116
  1965   003C44                     u4115:
  1966   003C44  84CB               	bsf	203,2,c	;volatile
  1967   003C46                     u4116:
  1968   003C46                     
  1969                           ;main.c: 114:         if (PORTEbits.RE1 == 1) {
  1970   003C46  A2CE               	btfss	206,1,c	;volatile
  1971   003C48  EF28  F01E         	goto	u4121
  1972   003C4C  EF2A  F01E         	goto	u4120
  1973   003C50                     u4121:
  1974   003C50  EF17  F01E         	goto	l3882
  1975   003C54                     u4120:
  1976   003C54                     
  1977                           ;main.c: 115:             index++;
  1978   003C54  0100               	movlb	0	; () banked
  1979   003C56  4BB9               	infsnz	PWM@index& (0+255),f,b
  1980   003C58  2BBA               	incf	(PWM@index+1)& (0+255),f,b
  1981   003C5A                     
  1982                           ; BSR set to: 0
  1983                           ;main.c: 117:             if (index == 10) { index = 0; }
  1984   003C5A  0E0A               	movlw	10
  1985   003C5C  19B9               	xorwf	PWM@index& (0+255),w,b
  1986   003C5E  11BA               	iorwf	(PWM@index+1)& (0+255),w,b
  1987   003C60  A4D8               	btfss	status,2,c
  1988   003C62  EF35  F01E         	goto	u4131
  1989   003C66  EF37  F01E         	goto	u4130
  1990   003C6A                     u4131:
  1991   003C6A  EF3B  F01E         	goto	l3894
  1992   003C6E                     u4130:
  1993   003C6E                     
  1994                           ; BSR set to: 0
  1995   003C6E  0E00               	movlw	0
  1996   003C70  6FBA               	movwf	(PWM@index+1)& (0+255),b
  1997   003C72  0E00               	movlw	0
  1998   003C74  6FB9               	movwf	PWM@index& (0+255),b
  1999   003C76                     l3894:
  2000                           
  2001                           ; BSR set to: 0
  2002                           ;main.c: 118:             checkdutyCycle =(uint16_t)((100UL*dcVal[index])/(4*(T2PR+1)));
  2003   003C76  51B9               	movf	PWM@index& (0+255),w,b
  2004   003C78  0D02               	mullw	2
  2005   003C7A  50F3               	movf	243,w,c
  2006   003C7C  0FA1               	addlw	low PWM@dcVal
  2007   003C7E  6ED9               	movwf	fsr2l,c
  2008   003C80  6ADA               	clrf	fsr2h,c
  2009   003C82  006F FF78  F003    	movff	postinc2,___lmul@multiplier
  2010   003C88  006F FF74  F004    	movff	postdec2,___lmul@multiplier+1
  2011   003C8E  0E00               	movlw	0
  2012   003C90  BE04               	btfsc	(___lmul@multiplier+1)^0,7,c
  2013   003C92  0EFF               	movlw	-1
  2014   003C94  6E05               	movwf	(___lmul@multiplier+2)^0,c
  2015   003C96  6E06               	movwf	(___lmul@multiplier+3)^0,c
  2016   003C98  0E64               	movlw	100
  2017   003C9A  6E07               	movwf	___lmul@multiplicand^0,c
  2018   003C9C  0E00               	movlw	0
  2019   003C9E  6E08               	movwf	(___lmul@multiplicand+1)^0,c
  2020   003CA0  0E00               	movlw	0
  2021   003CA2  6E09               	movwf	(___lmul@multiplicand+2)^0,c
  2022   003CA4  0E00               	movlw	0
  2023   003CA6  6E0A               	movwf	(___lmul@multiplicand+3)^0,c
  2024   003CA8  EC2C  F023         	call	___lmul	;wreg free
  2025   003CAC  C003  F00F         	movff	?___lmul,___lldiv@dividend
  2026   003CB0  C004  F010         	movff	?___lmul+1,___lldiv@dividend+1
  2027   003CB4  C005  F011         	movff	?___lmul+2,___lldiv@dividend+2
  2028   003CB8  C006  F012         	movff	?___lmul+3,___lldiv@dividend+3
  2029   003CBC  50AB               	movf	171,w,c	;volatile
  2030   003CBE  6E52               	movwf	??_PWM^0,c
  2031   003CC0  6A53               	clrf	(??_PWM+1)^0,c
  2032   003CC2  90D8               	bcf	status,0,c
  2033   003CC4  3652               	rlcf	??_PWM^0,f,c
  2034   003CC6  3653               	rlcf	(??_PWM+1)^0,f,c
  2035   003CC8  90D8               	bcf	status,0,c
  2036   003CCA  3652               	rlcf	??_PWM^0,f,c
  2037   003CCC  3653               	rlcf	(??_PWM+1)^0,f,c
  2038   003CCE  0E04               	movlw	4
  2039   003CD0  2652               	addwf	??_PWM^0,f,c
  2040   003CD2  0E00               	movlw	0
  2041   003CD4  2253               	addwfc	(??_PWM+1)^0,f,c
  2042   003CD6  C052  F013         	movff	??_PWM,___lldiv@divisor
  2043   003CDA  C053  F014         	movff	??_PWM+1,___lldiv@divisor+1
  2044   003CDE  0E00               	movlw	0
  2045   003CE0  BE14               	btfsc	(___lldiv@divisor+1)^0,7,c
  2046   003CE2  0EFF               	movlw	-1
  2047   003CE4  6E15               	movwf	(___lldiv@divisor+2)^0,c
  2048   003CE6  6E16               	movwf	(___lldiv@divisor+3)^0,c
  2049   003CE8  ECA1  F022         	call	___lldiv	;wreg free
  2050   003CEC  C00F  F0B7         	movff	?___lldiv,PWM@checkdutyCycle
  2051   003CF0  C010  F0B8         	movff	?___lldiv+1,PWM@checkdutyCycle+1
  2052   003CF4                     
  2053                           ;main.c: 121:             PWM2_LoadDutyValue( dcVal[index] );
  2054   003CF4  0100               	movlb	0	; () banked
  2055   003CF6  51B9               	movf	PWM@index& (0+255),w,b
  2056   003CF8  0D02               	mullw	2
  2057   003CFA  50F3               	movf	243,w,c
  2058   003CFC  0FA1               	addlw	low PWM@dcVal
  2059   003CFE  6ED9               	movwf	fsr2l,c
  2060   003D00  6ADA               	clrf	fsr2h,c
  2061   003D02  006F FF78  F003    	movff	postinc2,PWM2_LoadDutyValue@dutyValue
  2062   003D08  006F FF74  F004    	movff	postdec2,PWM2_LoadDutyValue@dutyValue+1
  2063   003D0E  EC82  F025         	call	_PWM2_LoadDutyValue	;wreg free
  2064   003D12                     
  2065                           ;main.c: 124:             LCD_Clear();
  2066   003D12  EC1E  F026         	call	_LCD_Clear	;wreg free
  2067   003D16                     
  2068                           ;main.c: 125:             sprintf(percent, "%d", checkdutyCycle);
  2069   003D16  0E92               	movlw	low PWM@percent
  2070   003D18  0100               	movlb	0	; () banked
  2071   003D1A  6F8C               	movwf	sprintf@s& (0+255),b
  2072   003D1C  0E26               	movlw	low STR_5
  2073   003D1E  6F8D               	movwf	sprintf@fmt& (0+255),b
  2074   003D20  C0B7  F08E         	movff	PWM@checkdutyCycle,?_sprintf+2
  2075   003D24  C0B8  F08F         	movff	PWM@checkdutyCycle+1,?_sprintf+3
  2076   003D28  EC4D  F025         	call	_sprintf	;wreg free
  2077   003D2C                     
  2078                           ;main.c: 126:             LCD_String_xy(2, 0, percent);
  2079   003D2C  0E00               	movlw	0
  2080   003D2E  6E0C               	movwf	LCD_String_xy@pos^0,c
  2081   003D30  0E92               	movlw	low PWM@percent
  2082   003D32  6E0D               	movwf	LCD_String_xy@msg^0,c
  2083   003D34  6A0E               	clrf	(LCD_String_xy@msg+1)^0,c
  2084   003D36  0E02               	movlw	2
  2085   003D38  EC11  F025         	call	_LCD_String_xy
  2086   003D3C  EF17  F01E         	goto	l3882
  2087   003D40  0012               	return		;funcret
  2088   003D42                     __end_of_PWM:
  2089                           	callstack 0
  2090                           
  2091 ;; *************** function _sprintf *****************
  2092 ;; Defined at:
  2093 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;  s               1   44[BANK0 ] PTR unsigned char 
  2096 ;;		 -> PWM@percent(15), readADC@buffer(12), 
  2097 ;;  fmt             1   45[BANK0 ] PTR const unsigned char 
  2098 ;;		 -> STR_6(3), STR_5(3), STR_3(5), 
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;  f              11   70[COMRAM] struct _IO_FILE
  2101 ;;  ret             2    0        int 
  2102 ;;  ap              1   69[COMRAM] PTR void [1]
  2103 ;;		 -> ?_sprintf(2), 
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  2   44[BANK0 ] int 
  2106 ;; Registers used:
  2107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2113 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2114 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2116 ;;      Totals:        12       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2117 ;;Total ram usage:       18 bytes
  2118 ;; Hardware stack levels used: 1
  2119 ;; Hardware stack levels required when called: 8
  2120 ;; This function calls:
  2121 ;;		_vfprintf
  2122 ;; This function is called by:
  2123 ;;		_PWM
  2124 ;;		_readADC
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           	psect	text2
  2129   004A9A                     __ptext2:
  2130                           	callstack 0
  2131   004A9A                     _sprintf:
  2132                           	callstack 21
  2133   004A9A  0E8E               	movlw	low (?_sprintf+2)
  2134   004A9C  6E46               	movwf	sprintf@ap^0,c
  2135   004A9E  C08C  F047         	movff	sprintf@s,sprintf@f
  2136   004AA2  0E00               	movlw	0
  2137   004AA4  6E4A               	movwf	(sprintf@f+3)^0,c
  2138   004AA6  0E00               	movlw	0
  2139   004AA8  6E49               	movwf	(sprintf@f+2)^0,c
  2140   004AAA  0E00               	movlw	0
  2141   004AAC  6E51               	movwf	(sprintf@f+10)^0,c
  2142   004AAE  0E00               	movlw	0
  2143   004AB0  6E50               	movwf	(sprintf@f+9)^0,c
  2144   004AB2  0E47               	movlw	low sprintf@f
  2145   004AB4  6E42               	movwf	vfprintf@fp^0,c
  2146   004AB6  C08D  F043         	movff	sprintf@fmt,vfprintf@fmt
  2147   004ABA  0E46               	movlw	low sprintf@ap
  2148   004ABC  6E44               	movwf	vfprintf@ap^0,c
  2149   004ABE  ECCF  F024         	call	_vfprintf	;wreg free
  2150   004AC2  0100               	movlb	0	; () banked
  2151   004AC4  518C               	movf	sprintf@s& (0+255),w,b
  2152   004AC6  2449               	addwf	(sprintf@f+2)^0,w,c
  2153   004AC8  6ED9               	movwf	fsr2l,c
  2154   004ACA  6ADA               	clrf	fsr2h,c
  2155   004ACC  6ADF               	clrf	indf2,c
  2156   004ACE                     
  2157                           ; BSR set to: 0
  2158   004ACE  0012               	return		;funcret
  2159   004AD0                     __end_of_sprintf:
  2160                           	callstack 0
  2161                           
  2162 ;; *************** function _vfprintf *****************
  2163 ;; Defined at:
  2164 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;  fp              1   65[COMRAM] PTR struct _IO_FILE
  2167 ;;		 -> sprintf@f(11), 
  2168 ;;  fmt             1   66[COMRAM] PTR const unsigned char 
  2169 ;;		 -> STR_6(3), STR_5(3), STR_3(5), 
  2170 ;;  ap              1   67[COMRAM] PTR PTR void 
  2171 ;;		 -> sprintf@ap(1), 
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;  cfmt            1   68[COMRAM] PTR unsigned char 
  2174 ;;		 -> STR_6(3), STR_5(3), STR_3(5), 
  2175 ;; Return value:  Size  Location     Type
  2176 ;;                  2   65[COMRAM] int 
  2177 ;; Registers used:
  2178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2184 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2185 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2187 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2188 ;;Total ram usage:        4 bytes
  2189 ;; Hardware stack levels used: 1
  2190 ;; Hardware stack levels required when called: 7
  2191 ;; This function calls:
  2192 ;;		_vfpfcnvrt
  2193 ;; This function is called by:
  2194 ;;		_sprintf
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198                           	psect	text3
  2199   00499E                     __ptext3:
  2200                           	callstack 0
  2201   00499E                     _vfprintf:
  2202                           	callstack 21
  2203   00499E                     
  2204                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2205   00499E  C043  F045         	movff	vfprintf@fmt,vfprintf@cfmt
  2206                           
  2207                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2208   0049A2  EFDB  F024         	goto	l3734
  2209   0049A6                     l3732:
  2210                           
  2211                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2212   0049A6  C042  F038         	movff	vfprintf@fp,vfpfcnvrt@fp
  2213   0049AA  0E45               	movlw	low vfprintf@cfmt
  2214   0049AC  6E39               	movwf	vfpfcnvrt@fmt^0,c
  2215   0049AE  C044  F03A         	movff	vfprintf@ap,vfpfcnvrt@ap
  2216   0049B2  EC50  F01B         	call	_vfpfcnvrt	;wreg free
  2217   0049B6                     l3734:
  2218                           
  2219                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2220   0049B6  0060  F117  FFF6   	movff	vfprintf@cfmt,tblptrl
  2221   0049BC                     	if	1	;There is more than 1 active tblptr byte
  2222   0049BC  0E20               	movlw	high __smallconst
  2223   0049BE  6EF7               	movwf	tblptrh,c
  2224   0049C0                     	endif
  2225   0049C0                     	if	0	;tblptru may be non-zero
  2226   0049C0                     	endif
  2227   0049C0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2228   0049C0  0E00               	movlw	low (__smallconst shr (0+16))
  2229   0049C2  6EF8               	movwf	tblptru,c
  2230   0049C4                     	endif
  2231   0049C4  0008               	tblrd		*
  2232   0049C6  50F5               	movf	tablat,w,c
  2233   0049C8  0900               	iorlw	0
  2234   0049CA  A4D8               	btfss	status,2,c
  2235   0049CC  EFEA  F024         	goto	u4001
  2236   0049D0  EFEC  F024         	goto	u4000
  2237   0049D4                     u4001:
  2238   0049D4  EFD3  F024         	goto	l3732
  2239   0049D8                     u4000:
  2240   0049D8                     
  2241                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2242   0049D8  0E00               	movlw	0
  2243   0049DA  6E43               	movwf	(?_vfprintf+1)^0,c
  2244   0049DC  0E00               	movlw	0
  2245   0049DE  6E42               	movwf	?_vfprintf^0,c
  2246   0049E0  0012               	return		;funcret
  2247   0049E2                     __end_of_vfprintf:
  2248                           	callstack 0
  2249                           
  2250 ;; *************** function _vfpfcnvrt *****************
  2251 ;; Defined at:
  2252 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;  fp              1   55[COMRAM] PTR struct _IO_FILE
  2255 ;;		 -> sprintf@f(11), 
  2256 ;;  fmt             1   56[COMRAM] PTR PTR unsigned char 
  2257 ;;		 -> vfprintf@cfmt(1), 
  2258 ;;  ap              1   57[COMRAM] PTR PTR void 
  2259 ;;		 -> sprintf@ap(1), 
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;  convarg         4   59[COMRAM] struct .
  2262 ;;  cp              1   64[COMRAM] PTR unsigned char 
  2263 ;;		 -> STR_6(3), STR_5(3), STR_3(5), 
  2264 ;;  c               1   63[COMRAM] unsigned char 
  2265 ;;  done            1    0        _Bool 
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  1    wreg      void 
  2268 ;; Registers used:
  2269 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2275 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2276 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2277 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2278 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2279 ;;Total ram usage:       10 bytes
  2280 ;; Hardware stack levels used: 1
  2281 ;; Hardware stack levels required when called: 6
  2282 ;; This function calls:
  2283 ;;		_dtoa
  2284 ;;		_efgtoa
  2285 ;;		_fputc
  2286 ;;		_read_prec_or_width
  2287 ;; This function is called by:
  2288 ;;		_vfprintf
  2289 ;; This function uses a non-reentrant model
  2290 ;;
  2291                           
  2292                           	psect	text4
  2293   0036A0                     __ptext4:
  2294                           	callstack 0
  2295   0036A0                     _vfpfcnvrt:
  2296                           	callstack 21
  2297   0036A0                     
  2298                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2299   0036A0  5039               	movf	vfpfcnvrt@fmt^0,w,c
  2300   0036A2  6ED9               	movwf	fsr2l,c
  2301   0036A4  6ADA               	clrf	fsr2h,c
  2302   0036A6  006F FF7F FFF6     	movff	indf2,tblptrl
  2303   0036AC                     	if	1	;There is more than 1 active tblptr byte
  2304   0036AC  0E20               	movlw	high __smallconst
  2305   0036AE  6EF7               	movwf	tblptrh,c
  2306   0036B0                     	endif
  2307   0036B0                     	if	0	;tblptru may be non-zero
  2308   0036B0                     	endif
  2309   0036B0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2310   0036B0  0E00               	movlw	low (__smallconst shr (0+16))
  2311   0036B2  6EF8               	movwf	tblptru,c
  2312   0036B4                     	endif
  2313   0036B4  0008               	tblrd		*
  2314   0036B6  50F5               	movf	tablat,w,c
  2315   0036B8  0A25               	xorlw	37
  2316   0036BA  A4D8               	btfss	status,2,c
  2317   0036BC  EF62  F01B         	goto	u3921
  2318   0036C0  EF64  F01B         	goto	u3920
  2319   0036C4                     u3921:
  2320   0036C4  EF87  F01C         	goto	l3700
  2321   0036C8                     u3920:
  2322   0036C8                     
  2323                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2324   0036C8  5039               	movf	vfpfcnvrt@fmt^0,w,c
  2325   0036CA  6ED9               	movwf	fsr2l,c
  2326   0036CC  6ADA               	clrf	fsr2h,c
  2327   0036CE  2ADF               	incf	indf2,f,c
  2328   0036D0                     
  2329                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2330   0036D0  0E00               	movlw	0
  2331   0036D2  0100               	movlb	0	; () banked
  2332   0036D4  6FD0               	movwf	(_width+1)& (0+255),b
  2333   0036D6  0E00               	movlw	0
  2334   0036D8  6FCF               	movwf	_width& (0+255),b
  2335   0036DA  C0CF  F05C         	movff	_width,_flags
  2336   0036DE                     
  2337                           ; BSR set to: 0
  2338                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2339   0036DE  69D1               	setf	_prec& (0+255),b
  2340   0036E0  69D2               	setf	(_prec+1)& (0+255),b
  2341   0036E2                     
  2342                           ; BSR set to: 0
  2343                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  2344   0036E2  5039               	movf	vfpfcnvrt@fmt^0,w,c
  2345   0036E4  6ED9               	movwf	fsr2l,c
  2346   0036E6  6ADA               	clrf	fsr2h,c
  2347   0036E8  006F FF7F FFF6     	movff	indf2,tblptrl
  2348   0036EE                     	if	1	;There is more than 1 active tblptr byte
  2349   0036EE  0E20               	movlw	high __smallconst
  2350   0036F0  6EF7               	movwf	tblptrh,c
  2351   0036F2                     	endif
  2352   0036F2                     	if	0	;tblptru may be non-zero
  2353   0036F2                     	endif
  2354   0036F2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2355   0036F2  0E00               	movlw	low (__smallconst shr (0+16))
  2356   0036F4  6EF8               	movwf	tblptru,c
  2357   0036F6                     	endif
  2358   0036F6  0008               	tblrd		*
  2359   0036F8  50F5               	movf	tablat,w,c
  2360   0036FA  0A2E               	xorlw	46
  2361   0036FC  A4D8               	btfss	status,2,c
  2362   0036FE  EF83  F01B         	goto	u3931
  2363   003702  EF85  F01B         	goto	u3930
  2364   003706                     u3931:
  2365   003706  EF93  F01B         	goto	l3650
  2366   00370A                     u3930:
  2367   00370A                     
  2368                           ; BSR set to: 0
  2369                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  2370   00370A  5039               	movf	vfpfcnvrt@fmt^0,w,c
  2371   00370C  6ED9               	movwf	fsr2l,c
  2372   00370E  6ADA               	clrf	fsr2h,c
  2373   003710  2ADF               	incf	indf2,f,c
  2374   003712                     
  2375                           ; BSR set to: 0
  2376                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  2377   003712  C039  F003         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2378   003716  C03A  F004         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2379   00371A  EC43  F021         	call	_read_prec_or_width	;wreg free
  2380   00371E  C003  F0D1         	movff	?_read_prec_or_width,_prec
  2381   003722  C004  F0D2         	movff	?_read_prec_or_width+1,_prec+1
  2382   003726                     l3650:
  2383                           
  2384                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2385   003726  5039               	movf	vfpfcnvrt@fmt^0,w,c
  2386   003728  6ED9               	movwf	fsr2l,c
  2387   00372A  6ADA               	clrf	fsr2h,c
  2388   00372C  50DF               	movf	indf2,w,c
  2389   00372E  6E41               	movwf	vfpfcnvrt@cp^0,c
  2390   003730                     
  2391                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2392   003730  0060  F107  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2393   003736                     	if	1	;There is more than 1 active tblptr byte
  2394   003736  0E20               	movlw	high __smallconst
  2395   003738  6EF7               	movwf	tblptrh,c
  2396   00373A                     	endif
  2397   00373A                     	if	0	;tblptru may be non-zero
  2398   00373A                     	endif
  2399   00373A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2400   00373A  0E00               	movlw	low (__smallconst shr (0+16))
  2401   00373C  6EF8               	movwf	tblptru,c
  2402   00373E                     	endif
  2403   00373E  0008               	tblrd		*
  2404   003740  50F5               	movf	tablat,w,c
  2405   003742  0A64               	xorlw	100
  2406   003744  B4D8               	btfsc	status,2,c
  2407   003746  EFA7  F01B         	goto	u3941
  2408   00374A  EFA9  F01B         	goto	u3940
  2409   00374E                     u3941:
  2410   00374E  EFBA  F01B         	goto	l3656
  2411   003752                     u3940:
  2412   003752  0060  F107  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2413   003758                     	if	1	;There is more than 1 active tblptr byte
  2414   003758  0E20               	movlw	high __smallconst
  2415   00375A  6EF7               	movwf	tblptrh,c
  2416   00375C                     	endif
  2417   00375C                     	if	0	;tblptru may be non-zero
  2418   00375C                     	endif
  2419   00375C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2420   00375C  0E00               	movlw	low (__smallconst shr (0+16))
  2421   00375E  6EF8               	movwf	tblptru,c
  2422   003760                     	endif
  2423   003760  0008               	tblrd		*
  2424   003762  50F5               	movf	tablat,w,c
  2425   003764  0A69               	xorlw	105
  2426   003766  A4D8               	btfss	status,2,c
  2427   003768  EFB8  F01B         	goto	u3951
  2428   00376C  EFBA  F01B         	goto	u3950
  2429   003770                     u3951:
  2430   003770  EFD7  F01B         	goto	l3664
  2431   003774                     u3950:
  2432   003774                     l3656:
  2433                           
  2434                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2435   003774  503A               	movf	vfpfcnvrt@ap^0,w,c
  2436   003776  6ED9               	movwf	fsr2l,c
  2437   003778  6ADA               	clrf	fsr2h,c
  2438   00377A  0E02               	movlw	2
  2439   00377C  26DF               	addwf	indf2,f,c
  2440   00377E  5CDF               	subwf	indf2,w,c
  2441   003780  6ED9               	movwf	fsr2l,c
  2442   003782  6ADA               	clrf	fsr2h,c
  2443   003784  006F FF78  F03C    	movff	postinc2,vfpfcnvrt@convarg
  2444   00378A  006F FF78  F03D    	movff	postinc2,vfpfcnvrt@convarg+1
  2445   003790                     
  2446                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2447   003790  5039               	movf	vfpfcnvrt@fmt^0,w,c
  2448   003792  6ED9               	movwf	fsr2l,c
  2449   003794  6ADA               	clrf	fsr2h,c
  2450   003796  2841               	incf	vfpfcnvrt@cp^0,w,c
  2451   003798  6EDF               	movwf	indf2,c
  2452   00379A                     
  2453                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2454   00379A  C038  F019         	movff	vfpfcnvrt@fp,dtoa@fp
  2455   00379E  C03C  F01A         	movff	vfpfcnvrt@convarg,dtoa@d
  2456   0037A2  C03D  F01B         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2457   0037A6  ECA1  F01E         	call	_dtoa	;wreg free
  2458   0037AA  EF9B  F01C         	goto	l1038
  2459   0037AE                     l3664:
  2460                           
  2461                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  2462   0037AE  5039               	movf	vfpfcnvrt@fmt^0,w,c
  2463   0037B0  6ED9               	movwf	fsr2l,c
  2464   0037B2  6ADA               	clrf	fsr2h,c
  2465   0037B4  50DF               	movf	indf2,w,c
  2466   0037B6  6E41               	movwf	vfpfcnvrt@cp^0,c
  2467   0037B8                     
  2468                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  2469   0037B8  0060  F107  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2470   0037BE                     	if	1	;There is more than 1 active tblptr byte
  2471   0037BE  0E20               	movlw	high __smallconst
  2472   0037C0  6EF7               	movwf	tblptrh,c
  2473   0037C2                     	endif
  2474   0037C2                     	if	0	;tblptru may be non-zero
  2475   0037C2                     	endif
  2476   0037C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2477   0037C2  0E00               	movlw	low (__smallconst shr (0+16))
  2478   0037C4  6EF8               	movwf	tblptru,c
  2479   0037C6                     	endif
  2480   0037C6  0008               	tblrd		*
  2481   0037C8  006F FFD4  F040    	movff	tablat,vfpfcnvrt@c
  2482                           
  2483                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  2484   0037CE  EFF3  F01B         	goto	l3674
  2485   0037D2                     l3668:
  2486                           
  2487                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  2488   0037D2  2A41               	incf	vfpfcnvrt@cp^0,f,c
  2489                           
  2490                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1696:     break;
  2491   0037D4  EF02  F01C         	goto	l3676
  2492   0037D8                     l3670:
  2493                           
  2494                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  2495   0037D8  0E6C               	movlw	108
  2496   0037DA  6E40               	movwf	vfpfcnvrt@c^0,c
  2497                           
  2498                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1722:     break;
  2499   0037DC  EF02  F01C         	goto	l3676
  2500   0037E0                     l1044:
  2501                           
  2502                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  2503   0037E0  6A40               	clrf	vfpfcnvrt@c^0,c
  2504                           
  2505                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1725:     break;
  2506   0037E2  EF02  F01C         	goto	l3676
  2507   0037E6                     l3674:
  2508   0037E6  5040               	movf	vfpfcnvrt@c^0,w,c
  2509                           
  2510                           ; Switch size 1, requested type "simple"
  2511                           ; Number of cases is 3, Range of values is 76 to 108
  2512                           ; switch strategies available:
  2513                           ; Name         Instructions Cycles
  2514                           ; simple_byte           10     6 (average)
  2515                           ;	Chosen strategy is simple_byte
  2516   0037E8  0A4C               	xorlw	76	; case 76
  2517   0037EA  B4D8               	btfsc	status,2,c
  2518   0037EC  EFE9  F01B         	goto	l3668
  2519   0037F0  0A2A               	xorlw	42	; case 102
  2520   0037F2  B4D8               	btfsc	status,2,c
  2521   0037F4  EFEC  F01B         	goto	l3670
  2522   0037F8  0A0A               	xorlw	10	; case 108
  2523   0037FA  B4D8               	btfsc	status,2,c
  2524   0037FC  EFE9  F01B         	goto	l3668
  2525   003800  EFF0  F01B         	goto	l1044
  2526   003804                     l3676:
  2527   003804  0060  F107  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2528   00380A                     	if	1	;There is more than 1 active tblptr byte
  2529   00380A  0E20               	movlw	high __smallconst
  2530   00380C  6EF7               	movwf	tblptrh,c
  2531   00380E                     	endif
  2532   00380E                     	if	0	;tblptru may be non-zero
  2533   00380E                     	endif
  2534   00380E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2535   00380E  0E00               	movlw	low (__smallconst shr (0+16))
  2536   003810  6EF8               	movwf	tblptru,c
  2537   003812                     	endif
  2538   003812  0008               	tblrd		*
  2539   003814  50F5               	movf	tablat,w,c
  2540   003816  0A66               	xorlw	102
  2541   003818  A4D8               	btfss	status,2,c
  2542   00381A  EF11  F01C         	goto	u3961
  2543   00381E  EF13  F01C         	goto	u3960
  2544   003822                     u3961:
  2545   003822  EF81  F01C         	goto	l3696
  2546   003826                     u3960:
  2547   003826  EF47  F01C         	goto	l3684
  2548   00382A                     l3678:
  2549                           
  2550                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2551   00382A  503A               	movf	vfpfcnvrt@ap^0,w,c
  2552   00382C  6ED9               	movwf	fsr2l,c
  2553   00382E  6ADA               	clrf	fsr2h,c
  2554   003830  006F FF7C  F03B    	movff	indf2,??_vfpfcnvrt
  2555   003836  0E04               	movlw	4
  2556   003838  26DF               	addwf	indf2,f,c
  2557   00383A  503B               	movf	??_vfpfcnvrt^0,w,c
  2558   00383C  6ED9               	movwf	fsr2l,c
  2559   00383E  6ADA               	clrf	fsr2h,c
  2560   003840  006F FF78  F03C    	movff	postinc2,vfpfcnvrt@convarg
  2561   003846  006F FF78  F03D    	movff	postinc2,vfpfcnvrt@convarg+1
  2562   00384C  006F FF78  F03E    	movff	postinc2,vfpfcnvrt@convarg+2
  2563   003852  006F FF78  F03F    	movff	postinc2,vfpfcnvrt@convarg+3
  2564                           
  2565                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1757:      break;
  2566   003858  EF52  F01C         	goto	l3686
  2567   00385C                     l3680:
  2568                           
  2569                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2570   00385C  503A               	movf	vfpfcnvrt@ap^0,w,c
  2571   00385E  6ED9               	movwf	fsr2l,c
  2572   003860  6ADA               	clrf	fsr2h,c
  2573   003862  006F FF7C  F03B    	movff	indf2,??_vfpfcnvrt
  2574   003868  0E04               	movlw	4
  2575   00386A  26DF               	addwf	indf2,f,c
  2576   00386C  503B               	movf	??_vfpfcnvrt^0,w,c
  2577   00386E  6ED9               	movwf	fsr2l,c
  2578   003870  6ADA               	clrf	fsr2h,c
  2579   003872  006F FF78  F03C    	movff	postinc2,vfpfcnvrt@convarg
  2580   003878  006F FF78  F03D    	movff	postinc2,vfpfcnvrt@convarg+1
  2581   00387E  006F FF78  F03E    	movff	postinc2,vfpfcnvrt@convarg+2
  2582   003884  006F FF78  F03F    	movff	postinc2,vfpfcnvrt@convarg+3
  2583                           
  2584                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1760:      break;
  2585   00388A  EF52  F01C         	goto	l3686
  2586   00388E                     l3684:
  2587   00388E  5040               	movf	vfpfcnvrt@c^0,w,c
  2588                           
  2589                           ; Switch size 1, requested type "simple"
  2590                           ; Number of cases is 2, Range of values is 76 to 108
  2591                           ; switch strategies available:
  2592                           ; Name         Instructions Cycles
  2593                           ; simple_byte            7     4 (average)
  2594                           ;	Chosen strategy is simple_byte
  2595   003890  0A4C               	xorlw	76	; case 76
  2596   003892  B4D8               	btfsc	status,2,c
  2597   003894  EF2E  F01C         	goto	l3680
  2598   003898  0A20               	xorlw	32	; case 108
  2599   00389A  B4D8               	btfsc	status,2,c
  2600   00389C  EF15  F01C         	goto	l3678
  2601   0038A0  EF52  F01C         	goto	l3686
  2602   0038A4                     l3686:
  2603                           
  2604                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  2605   0038A4  5039               	movf	vfpfcnvrt@fmt^0,w,c
  2606   0038A6  6ED9               	movwf	fsr2l,c
  2607   0038A8  6ADA               	clrf	fsr2h,c
  2608   0038AA  2841               	incf	vfpfcnvrt@cp^0,w,c
  2609   0038AC  6EDF               	movwf	indf2,c
  2610                           
  2611                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  2612   0038AE  EF72  F01C         	goto	l3694
  2613   0038B2                     l3688:
  2614                           
  2615                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2616   0038B2  C038  F030         	movff	vfpfcnvrt@fp,efgtoa@fp
  2617   0038B6  C03C  F031         	movff	vfpfcnvrt@convarg,efgtoa@f
  2618   0038BA  C03D  F032         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2619   0038BE  C03E  F033         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2620   0038C2  C03F  F034         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2621   0038C6  0060  F107  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2622   0038CC                     	if	1	;There is more than 1 active tblptr byte
  2623   0038CC  0E20               	movlw	high __smallconst
  2624   0038CE  6EF7               	movwf	tblptrh,c
  2625   0038D0                     	endif
  2626   0038D0                     	if	0	;tblptru may be non-zero
  2627   0038D0                     	endif
  2628   0038D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2629   0038D0  0E00               	movlw	low (__smallconst shr (0+16))
  2630   0038D2  6EF8               	movwf	tblptru,c
  2631   0038D4                     	endif
  2632   0038D4  0008               	tblrd		*
  2633   0038D6  006F FFD4  F035    	movff	tablat,efgtoa@c
  2634   0038DC  EC15  F010         	call	_efgtoa	;wreg free
  2635   0038E0  EF9B  F01C         	goto	l1038
  2636   0038E4                     l3694:
  2637   0038E4  0060  F107  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2638   0038EA                     	if	1	;There is more than 1 active tblptr byte
  2639   0038EA  0E20               	movlw	high __smallconst
  2640   0038EC  6EF7               	movwf	tblptrh,c
  2641   0038EE                     	endif
  2642   0038EE                     	if	0	;tblptru may be non-zero
  2643   0038EE                     	endif
  2644   0038EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2645   0038EE  0E00               	movlw	low (__smallconst shr (0+16))
  2646   0038F0  6EF8               	movwf	tblptru,c
  2647   0038F2                     	endif
  2648   0038F2  0008               	tblrd		*
  2649   0038F4  50F5               	movf	tablat,w,c
  2650                           
  2651                           ; Switch size 1, requested type "simple"
  2652                           ; Number of cases is 1, Range of values is 102 to 102
  2653                           ; switch strategies available:
  2654                           ; Name         Instructions Cycles
  2655                           ; simple_byte            4     3 (average)
  2656                           ;	Chosen strategy is simple_byte
  2657   0038F6  0A66               	xorlw	102	; case 102
  2658   0038F8  B4D8               	btfsc	status,2,c
  2659   0038FA  EF59  F01C         	goto	l3688
  2660   0038FE  EF81  F01C         	goto	l3696
  2661   003902                     l3696:
  2662                           
  2663                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2664   003902  5039               	movf	vfpfcnvrt@fmt^0,w,c
  2665   003904  6ED9               	movwf	fsr2l,c
  2666   003906  6ADA               	clrf	fsr2h,c
  2667   003908  2ADF               	incf	indf2,f,c
  2668   00390A  EF9B  F01C         	goto	l1038
  2669   00390E                     l3700:
  2670                           
  2671                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2672   00390E  5039               	movf	vfpfcnvrt@fmt^0,w,c
  2673   003910  6ED9               	movwf	fsr2l,c
  2674   003912  6ADA               	clrf	fsr2h,c
  2675   003914  006F FF7F FFF6     	movff	indf2,tblptrl
  2676   00391A                     	if	1	;There is more than 1 active tblptr byte
  2677   00391A  0E20               	movlw	high __smallconst
  2678   00391C  6EF7               	movwf	tblptrh,c
  2679   00391E                     	endif
  2680   00391E                     	if	0	;tblptru may be non-zero
  2681   00391E                     	endif
  2682   00391E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2683   00391E  0E00               	movlw	low (__smallconst shr (0+16))
  2684   003920  6EF8               	movwf	tblptru,c
  2685   003922                     	endif
  2686   003922  0008               	tblrd		*
  2687   003924  50F5               	movf	tablat,w,c
  2688   003926  6E03               	movwf	fputc@c^0,c
  2689   003928  6A04               	clrf	(fputc@c+1)^0,c
  2690   00392A  C038  F005         	movff	vfpfcnvrt@fp,fputc@fp
  2691   00392E  ECF6  F021         	call	_fputc	;wreg free
  2692   003932  EF81  F01C         	goto	l3696
  2693   003936                     l1038:
  2694   003936  0012               	return		;funcret
  2695   003938                     __end_of_vfpfcnvrt:
  2696                           	callstack 0
  2697                           
  2698 ;; *************** function _read_prec_or_width *****************
  2699 ;; Defined at:
  2700 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;  fmt             1    2[COMRAM] PTR PTR const unsigned c
  2703 ;;		 -> vfprintf@cfmt(1), 
  2704 ;;  ap              1    3[COMRAM] PTR PTR void [1]
  2705 ;;		 -> sprintf@ap(1), 
  2706 ;; Auto vars:     Size  Location     Type
  2707 ;;  c               1    6[COMRAM] unsigned char 
  2708 ;;  n               2    7[COMRAM] int 
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  2    2[COMRAM] int 
  2711 ;; Registers used:
  2712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2718 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2719 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2720 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2721 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2722 ;;Total ram usage:        7 bytes
  2723 ;; Hardware stack levels used: 1
  2724 ;; Hardware stack levels required when called: 1
  2725 ;; This function calls:
  2726 ;;		Nothing
  2727 ;; This function is called by:
  2728 ;;		_vfpfcnvrt
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           	psect	text5
  2733   004286                     __ptext5:
  2734                           	callstack 0
  2735   004286                     _read_prec_or_width:
  2736                           	callstack 25
  2737   004286                     
  2738                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2739   004286  0E00               	movlw	0
  2740   004288  6E09               	movwf	(read_prec_or_width@n+1)^0,c
  2741   00428A  0E00               	movlw	0
  2742   00428C  6E08               	movwf	read_prec_or_width@n^0,c
  2743   00428E                     
  2744                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2745   00428E  5003               	movf	read_prec_or_width@fmt^0,w,c
  2746   004290  6ED9               	movwf	fsr2l,c
  2747   004292  6ADA               	clrf	fsr2h,c
  2748   004294  006F FF7F FFF6     	movff	indf2,tblptrl
  2749   00429A                     	if	1	;There is more than 1 active tblptr byte
  2750   00429A  0E20               	movlw	high __smallconst
  2751   00429C  6EF7               	movwf	tblptrh,c
  2752   00429E                     	endif
  2753   00429E                     	if	0	;tblptru may be non-zero
  2754   00429E                     	endif
  2755   00429E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2756   00429E  0E00               	movlw	low (__smallconst shr (0+16))
  2757   0042A0  6EF8               	movwf	tblptru,c
  2758   0042A2                     	endif
  2759   0042A2  0008               	tblrd		*
  2760   0042A4  50F5               	movf	tablat,w,c
  2761   0042A6  0A2A               	xorlw	42
  2762   0042A8  A4D8               	btfss	status,2,c
  2763   0042AA  EF59  F021         	goto	u3901
  2764   0042AE  EF5B  F021         	goto	u3900
  2765   0042B2                     u3901:
  2766   0042B2  EF84  F021         	goto	l3622
  2767   0042B6                     u3900:
  2768   0042B6                     
  2769                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2770   0042B6  5003               	movf	read_prec_or_width@fmt^0,w,c
  2771   0042B8  6ED9               	movwf	fsr2l,c
  2772   0042BA  6ADA               	clrf	fsr2h,c
  2773   0042BC  2ADF               	incf	indf2,f,c
  2774   0042BE                     
  2775                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2776   0042BE  5004               	movf	read_prec_or_width@ap^0,w,c
  2777   0042C0  6ED9               	movwf	fsr2l,c
  2778   0042C2  6ADA               	clrf	fsr2h,c
  2779   0042C4  0E02               	movlw	2
  2780   0042C6  26DF               	addwf	indf2,f,c
  2781   0042C8  5CDF               	subwf	indf2,w,c
  2782   0042CA  6ED9               	movwf	fsr2l,c
  2783   0042CC  6ADA               	clrf	fsr2h,c
  2784   0042CE  006F FF78  F008    	movff	postinc2,read_prec_or_width@n
  2785   0042D4  006F FF78  F009    	movff	postinc2,read_prec_or_width@n+1
  2786                           
  2787                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2788   0042DA  EF9A  F021         	goto	l1026
  2789   0042DE                     l3618:
  2790                           
  2791                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2792   0042DE  0E0A               	movlw	10
  2793   0042E0  0208               	mulwf	read_prec_or_width@n^0,c
  2794   0042E2  006F FFCC  F005    	movff	prodl,??_read_prec_or_width
  2795   0042E8  006F FFD0  F006    	movff	prodh,??_read_prec_or_width+1
  2796   0042EE  0209               	mulwf	(read_prec_or_width@n+1)^0,c
  2797   0042F0  50F3               	movf	prodl,w,c
  2798   0042F2  2606               	addwf	(??_read_prec_or_width+1)^0,f,c
  2799   0042F4  5007               	movf	read_prec_or_width@c^0,w,c
  2800   0042F6  2405               	addwf	??_read_prec_or_width^0,w,c
  2801   0042F8  6E08               	movwf	read_prec_or_width@n^0,c
  2802   0042FA  0E00               	movlw	0
  2803   0042FC  2006               	addwfc	(??_read_prec_or_width+1)^0,w,c
  2804   0042FE  6E09               	movwf	(read_prec_or_width@n+1)^0,c
  2805   004300                     
  2806                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2807   004300  5003               	movf	read_prec_or_width@fmt^0,w,c
  2808   004302  6ED9               	movwf	fsr2l,c
  2809   004304  6ADA               	clrf	fsr2h,c
  2810   004306  2ADF               	incf	indf2,f,c
  2811   004308                     l3622:
  2812                           
  2813                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2814   004308  5003               	movf	read_prec_or_width@fmt^0,w,c
  2815   00430A  6ED9               	movwf	fsr2l,c
  2816   00430C  6ADA               	clrf	fsr2h,c
  2817   00430E  006F FF7F FFF6     	movff	indf2,tblptrl
  2818   004314                     	if	1	;There is more than 1 active tblptr byte
  2819   004314  0E20               	movlw	high __smallconst
  2820   004316  6EF7               	movwf	tblptrh,c
  2821   004318                     	endif
  2822   004318                     	if	0	;tblptru may be non-zero
  2823   004318                     	endif
  2824   004318                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2825   004318  0E00               	movlw	low (__smallconst shr (0+16))
  2826   00431A  6EF8               	movwf	tblptru,c
  2827   00431C                     	endif
  2828   00431C  0008               	tblrd		*
  2829   00431E  50F5               	movf	tablat,w,c
  2830   004320  0FD0               	addlw	208
  2831   004322  6E07               	movwf	read_prec_or_width@c^0,c
  2832   004324  0E09               	movlw	9
  2833   004326  6407               	cpfsgt	read_prec_or_width@c^0,c
  2834   004328  EF98  F021         	goto	u3911
  2835   00432C  EF9A  F021         	goto	u3910
  2836   004330                     u3911:
  2837   004330  EF6F  F021         	goto	l3618
  2838   004334                     u3910:
  2839   004334                     l1026:
  2840                           
  2841                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2842   004334  C008  F003         	movff	read_prec_or_width@n,?_read_prec_or_width
  2843   004338  C009  F004         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2844   00433C  0012               	return		;funcret
  2845   00433E                     __end_of_read_prec_or_width:
  2846                           	callstack 0
  2847                           
  2848 ;; *************** function _efgtoa *****************
  2849 ;; Defined at:
  2850 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;  fp              1   47[COMRAM] PTR struct _IO_FILE
  2853 ;;		 -> sprintf@f(11), 
  2854 ;;  f               4   48[COMRAM] PTR struct _IO_FILE
  2855 ;;  c               1   52[COMRAM] unsigned char 
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;  u               4   40[BANK0 ] struct flui
  2858 ;;  g               4   36[BANK0 ] struct flui
  2859 ;;  l               4   29[BANK0 ] struct flui
  2860 ;;  h               4   25[BANK0 ] struct flui
  2861 ;;  ou              4   19[BANK0 ] struct flui
  2862 ;;  n               2   34[BANK0 ] int 
  2863 ;;  i               2   23[BANK0 ] int 
  2864 ;;  w               2   17[BANK0 ] int 
  2865 ;;  e               2   15[BANK0 ] int 
  2866 ;;  m               2   13[BANK0 ] int 
  2867 ;;  d               2   11[BANK0 ] int 
  2868 ;;  t               2    4[BANK0 ] int 
  2869 ;;  p               2    2[BANK0 ] int 
  2870 ;;  ne              2    0[BANK0 ] int 
  2871 ;;  sign            1   33[BANK0 ] unsigned char 
  2872 ;;  nmode           1   10[BANK0 ] unsigned char 
  2873 ;;  mode            1    9[BANK0 ] unsigned char 
  2874 ;;  pp              1    8[BANK0 ] unsigned char 
  2875 ;;  esign           1    0        unsigned char 
  2876 ;; Return value:  Size  Location     Type
  2877 ;;                  1    wreg      void 
  2878 ;; Registers used:
  2879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2880 ;; Tracked objects:
  2881 ;;		On entry : 0/0
  2882 ;;		On exit  : 0/0
  2883 ;;		Unchanged: 0/0
  2884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2885 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2886 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2887 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2888 ;;      Totals:         8      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2889 ;;Total ram usage:       52 bytes
  2890 ;; Hardware stack levels used: 1
  2891 ;; Hardware stack levels required when called: 5
  2892 ;; This function calls:
  2893 ;;		___fladd
  2894 ;;		___fldiv
  2895 ;;		___fleq
  2896 ;;		___flge
  2897 ;;		___flmul
  2898 ;;		___flneg
  2899 ;;		___flsub
  2900 ;;		___fltol
  2901 ;;		___fpclassifyf
  2902 ;;		_floorf
  2903 ;;		_labs
  2904 ;;		_memcpy
  2905 ;;		_pad
  2906 ;;		_strcpy
  2907 ;; This function is called by:
  2908 ;;		_vfpfcnvrt
  2909 ;; This function uses a non-reentrant model
  2910 ;;
  2911                           
  2912                           	psect	text6
  2913   00202A                     __ptext6:
  2914                           	callstack 0
  2915   00202A                     _efgtoa:
  2916                           	callstack 21
  2917   00202A                     
  2918                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v3.00\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v3
      +                          .00\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  2919   00202A  0100               	movlb	0	; () banked
  2920   00202C  6B81               	clrf	efgtoa@sign& (0+255),b
  2921                           
  2922                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  2923   00202E  C031  F084         	movff	efgtoa@f,efgtoa@g
  2924   002032  C032  F085         	movff	efgtoa@f+1,efgtoa@g+1
  2925   002036  C033  F086         	movff	efgtoa@f+2,efgtoa@g+2
  2926   00203A  C034  F087         	movff	efgtoa@f+3,efgtoa@g+3
  2927   00203E                     
  2928                           ; BSR set to: 0
  2929                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  2930   00203E  BF87               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2931   002040  EF26  F010         	goto	u3580
  2932   002044  EF24  F010         	goto	u3581
  2933   002048                     u3581:
  2934   002048  EF3A  F010         	goto	l3398
  2935   00204C                     u3580:
  2936   00204C                     
  2937                           ; BSR set to: 0
  2938                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  2939   00204C  0E01               	movlw	1
  2940   00204E  6F81               	movwf	efgtoa@sign& (0+255),b
  2941   002050                     
  2942                           ; BSR set to: 0
  2943                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  2944   002050  C084  F003         	movff	efgtoa@g,___flneg@f1
  2945   002054  C085  F004         	movff	efgtoa@g+1,___flneg@f1+1
  2946   002058  C086  F005         	movff	efgtoa@g+2,___flneg@f1+2
  2947   00205C  C087  F006         	movff	efgtoa@g+3,___flneg@f1+3
  2948   002060  EC31  F025         	call	___flneg	;wreg free
  2949   002064  C003  F084         	movff	?___flneg,efgtoa@g
  2950   002068  C004  F085         	movff	?___flneg+1,efgtoa@g+1
  2951   00206C  C005  F086         	movff	?___flneg+2,efgtoa@g+2
  2952   002070  C006  F087         	movff	?___flneg+3,efgtoa@g+3
  2953   002074                     l3398:
  2954                           
  2955                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  2956   002074  0E00               	movlw	0
  2957   002076  0100               	movlb	0	; () banked
  2958   002078  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  2959   00207A  0E00               	movlw	0
  2960   00207C  6F82               	movwf	efgtoa@n& (0+255),b
  2961   00207E                     
  2962                           ; BSR set to: 0
  2963                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  2964   00207E  C0CF  F071         	movff	_width,efgtoa@w
  2965   002082  C0D0  F072         	movff	_width+1,efgtoa@w+1
  2966   002086                     
  2967                           ; BSR set to: 0
  2968                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 605:     if (sign
  2969   002086  5181               	movf	efgtoa@sign& (0+255),w,b
  2970   002088  B4D8               	btfsc	status,2,c
  2971   00208A  EF49  F010         	goto	u3591
  2972   00208E  EF4B  F010         	goto	u3590
  2973   002092                     u3591:
  2974   002092  EF5F  F010         	goto	l3412
  2975   002096                     u3590:
  2976   002096                     
  2977                           ; BSR set to: 0
  2978                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  2979   002096  5181               	movf	efgtoa@sign& (0+255),w,b
  2980   002098  A4D8               	btfss	status,2,c
  2981   00209A  EF51  F010         	goto	u3601
  2982   00209E  EF53  F010         	goto	u3600
  2983   0020A2                     u3601:
  2984   0020A2  EF59  F010         	goto	l3408
  2985   0020A6                     u3600:
  2986   0020A6                     
  2987                           ; BSR set to: 0
  2988   0020A6  0E00               	movlw	0
  2989   0020A8  6F67               	movwf	(_efgtoa$1333+1)& (0+255),b
  2990   0020AA  0E2B               	movlw	43
  2991   0020AC  6F66               	movwf	_efgtoa$1333& (0+255),b
  2992   0020AE  EF5D  F010         	goto	l3410
  2993   0020B2                     l3408:
  2994                           
  2995                           ; BSR set to: 0
  2996   0020B2  0E00               	movlw	0
  2997   0020B4  6F67               	movwf	(_efgtoa$1333+1)& (0+255),b
  2998   0020B6  0E2D               	movlw	45
  2999   0020B8  6F66               	movwf	_efgtoa$1333& (0+255),b
  3000   0020BA                     l3410:
  3001                           
  3002                           ; BSR set to: 0
  3003   0020BA  C066  F081         	movff	_efgtoa$1333,efgtoa@sign
  3004   0020BE                     l3412:
  3005                           
  3006                           ; BSR set to: 0
  3007                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3008   0020BE  C084  F003         	movff	efgtoa@g,___fpclassifyf@x
  3009   0020C2  C085  F004         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3010   0020C6  C086  F005         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3011   0020CA  C087  F006         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3012   0020CE  EC63  F020         	call	___fpclassifyf	;wreg free
  3013   0020D2  0403               	decf	?___fpclassifyf^0,w,c
  3014   0020D4  1004               	iorwf	(?___fpclassifyf+1)^0,w,c
  3015   0020D6  A4D8               	btfss	status,2,c
  3016   0020D8  EF70  F010         	goto	u3611
  3017   0020DC  EF72  F010         	goto	u3610
  3018   0020E0                     u3611:
  3019   0020E0  EFA1  F010         	goto	l3430
  3020   0020E4                     u3610:
  3021   0020E4                     
  3022                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  3023   0020E4  0100               	movlb	0	; () banked
  3024   0020E6  5181               	movf	efgtoa@sign& (0+255),w,b
  3025   0020E8  B4D8               	btfsc	status,2,c
  3026   0020EA  EF79  F010         	goto	u3621
  3027   0020EE  EF7B  F010         	goto	u3620
  3028   0020F2                     u3621:
  3029   0020F2  EF84  F010         	goto	l3422
  3030   0020F6                     u3620:
  3031   0020F6                     
  3032                           ; BSR set to: 0
  3033                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  3034   0020F6  C081  F100         	movff	efgtoa@sign,_dbuf
  3035   0020FA                     
  3036                           ; BSR set to: 0
  3037                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 622:    w--;
  3038   0020FA  0771               	decf	efgtoa@w& (0+255),f,b
  3039   0020FC  A0D8               	btfss	status,0,c
  3040   0020FE  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3041   002100                     
  3042                           ; BSR set to: 0
  3043                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  3044   002100  0E00               	movlw	0
  3045   002102  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  3046   002104  0E01               	movlw	1
  3047   002106  6F82               	movwf	efgtoa@n& (0+255),b
  3048   002108                     l3422:
  3049                           
  3050                           ; BSR set to: 0
  3051                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  3052   002108  0E00               	movlw	low _dbuf
  3053   00210A  2582               	addwf	efgtoa@n& (0+255),w,b
  3054   00210C  6E03               	movwf	strcpy@dest^0,c
  3055   00210E  0E01               	movlw	high _dbuf
  3056   002110  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3057   002112  6E04               	movwf	(strcpy@dest+1)^0,c
  3058   002114  0E1B               	movlw	low STR_7
  3059   002116  6E05               	movwf	strcpy@src^0,c
  3060   002118  EC66  F024         	call	_strcpy	;wreg free
  3061   00211C                     l3424:
  3062                           
  3063                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3064   00211C  0100               	movlb	0	; () banked
  3065   00211E  0EFD               	movlw	253
  3066   002120  2771               	addwf	efgtoa@w& (0+255),f,b
  3067   002122  0EFF               	movlw	255
  3068   002124  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3069   002126                     
  3070                           ; BSR set to: 0
  3071                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3072   002126  C030  F011         	movff	efgtoa@fp,pad@fp
  3073   00212A  0E00               	movlw	low _dbuf
  3074   00212C  6E12               	movwf	pad@buf^0,c
  3075   00212E  0E01               	movlw	high _dbuf
  3076   002130  6E13               	movwf	(pad@buf+1)^0,c
  3077   002132  C071  F014         	movff	efgtoa@w,pad@p
  3078   002136  C072  F015         	movff	efgtoa@w+1,pad@p+1
  3079   00213A  EC61  F023         	call	_pad	;wreg free
  3080   00213E  EF07  F015         	goto	l981
  3081   002142                     l3430:
  3082                           
  3083                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3084   002142  C084  F003         	movff	efgtoa@g,___fpclassifyf@x
  3085   002146  C085  F004         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3086   00214A  C086  F005         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3087   00214E  C087  F006         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3088   002152  EC63  F020         	call	___fpclassifyf	;wreg free
  3089   002156  5003               	movf	?___fpclassifyf^0,w,c
  3090   002158  1004               	iorwf	(?___fpclassifyf+1)^0,w,c
  3091   00215A  A4D8               	btfss	status,2,c
  3092   00215C  EFB2  F010         	goto	u3631
  3093   002160  EFB4  F010         	goto	u3630
  3094   002164                     u3631:
  3095   002164  EFD2  F010         	goto	l3448
  3096   002168                     u3630:
  3097   002168                     
  3098                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  3099   002168  0100               	movlb	0	; () banked
  3100   00216A  5181               	movf	efgtoa@sign& (0+255),w,b
  3101   00216C  B4D8               	btfsc	status,2,c
  3102   00216E  EFBB  F010         	goto	u3641
  3103   002172  EFBD  F010         	goto	u3640
  3104   002176                     u3641:
  3105   002176  EFC6  F010         	goto	l3440
  3106   00217A                     u3640:
  3107   00217A                     
  3108                           ; BSR set to: 0
  3109                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  3110   00217A  C081  F100         	movff	efgtoa@sign,_dbuf
  3111   00217E                     
  3112                           ; BSR set to: 0
  3113                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 640:    w--;
  3114   00217E  0771               	decf	efgtoa@w& (0+255),f,b
  3115   002180  A0D8               	btfss	status,0,c
  3116   002182  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3117   002184                     
  3118                           ; BSR set to: 0
  3119                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  3120   002184  0E00               	movlw	0
  3121   002186  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  3122   002188  0E01               	movlw	1
  3123   00218A  6F82               	movwf	efgtoa@n& (0+255),b
  3124   00218C                     l3440:
  3125                           
  3126                           ; BSR set to: 0
  3127                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  3128   00218C  0E00               	movlw	low _dbuf
  3129   00218E  2582               	addwf	efgtoa@n& (0+255),w,b
  3130   002190  6E03               	movwf	strcpy@dest^0,c
  3131   002192  0E01               	movlw	high _dbuf
  3132   002194  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3133   002196  6E04               	movwf	(strcpy@dest+1)^0,c
  3134   002198  0E1F               	movlw	low STR_10
  3135   00219A  6E05               	movwf	strcpy@src^0,c
  3136   00219C  EC66  F024         	call	_strcpy	;wreg free
  3137   0021A0  EF8E  F010         	goto	l3424
  3138   0021A4                     l3448:
  3139                           
  3140                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  3141   0021A4  0E00               	movlw	0
  3142   0021A6  0100               	movlb	0	; () banked
  3143   0021A8  6F88               	movwf	efgtoa@u& (0+255),b
  3144   0021AA  0E00               	movlw	0
  3145   0021AC  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  3146   0021AE  0E80               	movlw	128
  3147   0021B0  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  3148   0021B2  0E3F               	movlw	63
  3149   0021B4  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  3150                           
  3151                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  3152   0021B6  0E00               	movlw	0
  3153   0021B8  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  3154   0021BA  0E00               	movlw	0
  3155   0021BC  6F6F               	movwf	efgtoa@e& (0+255),b
  3156   0021BE                     
  3157                           ; BSR set to: 0
  3158                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  3159   0021BE  C084  F003         	movff	efgtoa@g,___fleq@ff1
  3160   0021C2  C085  F004         	movff	efgtoa@g+1,___fleq@ff1+1
  3161   0021C6  C086  F005         	movff	efgtoa@g+2,___fleq@ff1+2
  3162   0021CA  C087  F006         	movff	efgtoa@g+3,___fleq@ff1+3
  3163   0021CE  0E00               	movlw	0
  3164   0021D0  6E07               	movwf	___fleq@ff2^0,c
  3165   0021D2  0E00               	movlw	0
  3166   0021D4  6E08               	movwf	(___fleq@ff2+1)^0,c
  3167   0021D6  0E00               	movlw	0
  3168   0021D8  6E09               	movwf	(___fleq@ff2+2)^0,c
  3169   0021DA  0E00               	movlw	0
  3170   0021DC  6E0A               	movwf	(___fleq@ff2+3)^0,c
  3171   0021DE  EC4C  F022         	call	___fleq	;wreg free
  3172   0021E2  B0D8               	btfsc	status,0,c
  3173   0021E4  EFF6  F010         	goto	u3651
  3174   0021E8  EFF8  F010         	goto	u3650
  3175   0021EC                     u3651:
  3176   0021EC  EFD7  F011         	goto	l984
  3177   0021F0                     u3650:
  3178   0021F0  EF05  F011         	goto	l3456
  3179   0021F4                     l986:
  3180                           
  3181                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  3182   0021F4  C073  F088         	movff	efgtoa@ou,efgtoa@u
  3183   0021F8  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  3184   0021FC  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  3185   002200  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  3186   002204                     
  3187                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 662:    ++e;
  3188   002204  0100               	movlb	0	; () banked
  3189   002206  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  3190   002208  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  3191   00220A                     l3456:
  3192                           
  3193                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3194   00220A  C088  F003         	movff	efgtoa@u,___flmul@b
  3195   00220E  C089  F004         	movff	efgtoa@u+1,___flmul@b+1
  3196   002212  C08A  F005         	movff	efgtoa@u+2,___flmul@b+2
  3197   002216  C08B  F006         	movff	efgtoa@u+3,___flmul@b+3
  3198   00221A  0E00               	movlw	0
  3199   00221C  6E07               	movwf	___flmul@a^0,c
  3200   00221E  0E00               	movlw	0
  3201   002220  6E08               	movwf	(___flmul@a+1)^0,c
  3202   002222  0E20               	movlw	32
  3203   002224  6E09               	movwf	(___flmul@a+2)^0,c
  3204   002226  0E41               	movlw	65
  3205   002228  6E0A               	movwf	(___flmul@a+3)^0,c
  3206   00222A  EC63  F017         	call	___flmul	;wreg free
  3207   00222E  C003  F073         	movff	?___flmul,efgtoa@ou
  3208   002232  C004  F074         	movff	?___flmul+1,efgtoa@ou+1
  3209   002236  C005  F075         	movff	?___flmul+2,efgtoa@ou+2
  3210   00223A  C006  F076         	movff	?___flmul+3,efgtoa@ou+3
  3211   00223E  0100               	movlb	0	; () banked
  3212   002240  5173               	movf	efgtoa@ou& (0+255),w,b
  3213   002242  5D84               	subwf	efgtoa@g& (0+255),w,b
  3214   002244  6E03               	movwf	labs@a^0,c
  3215   002246  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  3216   002248  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3217   00224A  6E04               	movwf	(labs@a+1)^0,c
  3218   00224C  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  3219   00224E  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3220   002250  6E05               	movwf	(labs@a+2)^0,c
  3221   002252  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  3222   002254  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3223   002256  6E06               	movwf	(labs@a+3)^0,c
  3224   002258  ECEC  F023         	call	_labs	;wreg free
  3225   00225C  BE06               	btfsc	(?_labs+3)^0,7,c
  3226   00225E  EF3C  F011         	goto	u3661
  3227   002262  5006               	movf	(?_labs+3)^0,w,c
  3228   002264  1005               	iorwf	(?_labs+2)^0,w,c
  3229   002266  1004               	iorwf	(?_labs+1)^0,w,c
  3230   002268  E109               	bnz	u3660
  3231   00226A  0E02               	movlw	2
  3232   00226C  5C03               	subwf	?_labs^0,w,c
  3233   00226E  A0D8               	btfss	status,0,c
  3234   002270  EF3C  F011         	goto	u3661
  3235   002274  EF3E  F011         	goto	u3660
  3236   002278                     u3661:
  3237   002278  EFFA  F010         	goto	l986
  3238   00227C                     u3660:
  3239   00227C  C073  F01C         	movff	efgtoa@ou,___flge@ff1
  3240   002280  C074  F01D         	movff	efgtoa@ou+1,___flge@ff1+1
  3241   002284  C075  F01E         	movff	efgtoa@ou+2,___flge@ff1+2
  3242   002288  C076  F01F         	movff	efgtoa@ou+3,___flge@ff1+3
  3243   00228C  C084  F020         	movff	efgtoa@g,___flge@ff2
  3244   002290  C085  F021         	movff	efgtoa@g+1,___flge@ff2+1
  3245   002294  C086  F022         	movff	efgtoa@g+2,___flge@ff2+2
  3246   002298  C087  F023         	movff	efgtoa@g+3,___flge@ff2+3
  3247   00229C  ECE1  F01F         	call	___flge	;wreg free
  3248   0022A0  A0D8               	btfss	status,0,c
  3249   0022A2  EF55  F011         	goto	u3671
  3250   0022A6  EF57  F011         	goto	u3670
  3251   0022AA                     u3671:
  3252   0022AA  EFFA  F010         	goto	l986
  3253   0022AE                     u3670:
  3254   0022AE                     
  3255                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3256   0022AE  0100               	movlb	0	; () banked
  3257   0022B0  5188               	movf	efgtoa@u& (0+255),w,b
  3258   0022B2  5D84               	subwf	efgtoa@g& (0+255),w,b
  3259   0022B4  6E03               	movwf	labs@a^0,c
  3260   0022B6  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  3261   0022B8  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3262   0022BA  6E04               	movwf	(labs@a+1)^0,c
  3263   0022BC  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  3264   0022BE  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3265   0022C0  6E05               	movwf	(labs@a+2)^0,c
  3266   0022C2  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  3267   0022C4  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3268   0022C6  6E06               	movwf	(labs@a+3)^0,c
  3269   0022C8  ECEC  F023         	call	_labs	;wreg free
  3270   0022CC  BE06               	btfsc	(?_labs+3)^0,7,c
  3271   0022CE  EF76  F011         	goto	u3680
  3272   0022D2  5006               	movf	(?_labs+3)^0,w,c
  3273   0022D4  1005               	iorwf	(?_labs+2)^0,w,c
  3274   0022D6  1004               	iorwf	(?_labs+1)^0,w,c
  3275   0022D8  E107               	bnz	u3681
  3276   0022DA  0E02               	movlw	2
  3277   0022DC  5C03               	subwf	?_labs^0,w,c
  3278   0022DE  B0D8               	btfsc	status,0,c
  3279   0022E0  EF74  F011         	goto	u3681
  3280   0022E4  EF76  F011         	goto	u3680
  3281   0022E8                     u3681:
  3282   0022E8  EFBE  F011         	goto	l3474
  3283   0022EC                     u3680:
  3284   0022EC                     l3464:
  3285                           
  3286                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 665:    g = u;
  3287   0022EC  C088  F084         	movff	efgtoa@u,efgtoa@g
  3288   0022F0  C089  F085         	movff	efgtoa@u+1,efgtoa@g+1
  3289   0022F4  C08A  F086         	movff	efgtoa@u+2,efgtoa@g+2
  3290   0022F8  C08B  F087         	movff	efgtoa@u+3,efgtoa@g+3
  3291                           
  3292                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 666:   }
  3293   0022FC  EFD7  F011         	goto	l984
  3294   002300                     l3466:
  3295                           
  3296                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  3297   002300  C088  F003         	movff	efgtoa@u,___fldiv@b
  3298   002304  C089  F004         	movff	efgtoa@u+1,___fldiv@b+1
  3299   002308  C08A  F005         	movff	efgtoa@u+2,___fldiv@b+2
  3300   00230C  C08B  F006         	movff	efgtoa@u+3,___fldiv@b+3
  3301   002310  0E00               	movlw	0
  3302   002312  6E07               	movwf	___fldiv@a^0,c
  3303   002314  0E00               	movlw	0
  3304   002316  6E08               	movwf	(___fldiv@a+1)^0,c
  3305   002318  0E20               	movlw	32
  3306   00231A  6E09               	movwf	(___fldiv@a+2)^0,c
  3307   00231C  0E41               	movlw	65
  3308   00231E  6E0A               	movwf	(___fldiv@a+3)^0,c
  3309   002320  EC88  F019         	call	___fldiv	;wreg free
  3310   002324  C003  F088         	movff	?___fldiv,efgtoa@u
  3311   002328  C004  F089         	movff	?___fldiv+1,efgtoa@u+1
  3312   00232C  C005  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3313   002330  C006  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3314   002334                     
  3315                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 670:     --e;
  3316   002334  0100               	movlb	0	; () banked
  3317   002336  076F               	decf	efgtoa@e& (0+255),f,b
  3318   002338  A0D8               	btfss	status,0,c
  3319   00233A  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  3320   00233C                     
  3321                           ; BSR set to: 0
  3322                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3323   00233C  5188               	movf	efgtoa@u& (0+255),w,b
  3324   00233E  5D84               	subwf	efgtoa@g& (0+255),w,b
  3325   002340  6E03               	movwf	labs@a^0,c
  3326   002342  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  3327   002344  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3328   002346  6E04               	movwf	(labs@a+1)^0,c
  3329   002348  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  3330   00234A  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3331   00234C  6E05               	movwf	(labs@a+2)^0,c
  3332   00234E  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  3333   002350  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3334   002352  6E06               	movwf	(labs@a+3)^0,c
  3335   002354  ECEC  F023         	call	_labs	;wreg free
  3336   002358  BE06               	btfsc	(?_labs+3)^0,7,c
  3337   00235A  EFBC  F011         	goto	u3690
  3338   00235E  5006               	movf	(?_labs+3)^0,w,c
  3339   002360  1005               	iorwf	(?_labs+2)^0,w,c
  3340   002362  1004               	iorwf	(?_labs+1)^0,w,c
  3341   002364  E107               	bnz	u3691
  3342   002366  0E02               	movlw	2
  3343   002368  5C03               	subwf	?_labs^0,w,c
  3344   00236A  B0D8               	btfsc	status,0,c
  3345   00236C  EFBA  F011         	goto	u3691
  3346   002370  EFBC  F011         	goto	u3690
  3347   002374                     u3691:
  3348   002374  EFBE  F011         	goto	l3474
  3349   002378                     u3690:
  3350   002378  EF76  F011         	goto	l3464
  3351   00237C                     l3474:
  3352                           
  3353                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  3354   00237C  C084  F01C         	movff	efgtoa@g,___flge@ff1
  3355   002380  C085  F01D         	movff	efgtoa@g+1,___flge@ff1+1
  3356   002384  C086  F01E         	movff	efgtoa@g+2,___flge@ff1+2
  3357   002388  C087  F01F         	movff	efgtoa@g+3,___flge@ff1+3
  3358   00238C  C088  F020         	movff	efgtoa@u,___flge@ff2
  3359   002390  C089  F021         	movff	efgtoa@u+1,___flge@ff2+1
  3360   002394  C08A  F022         	movff	efgtoa@u+2,___flge@ff2+2
  3361   002398  C08B  F023         	movff	efgtoa@u+3,___flge@ff2+3
  3362   00239C  ECE1  F01F         	call	___flge	;wreg free
  3363   0023A0  A0D8               	btfss	status,0,c
  3364   0023A2  EFD5  F011         	goto	u3701
  3365   0023A6  EFD7  F011         	goto	u3700
  3366   0023AA                     u3701:
  3367   0023AA  EF80  F011         	goto	l3466
  3368   0023AE                     u3700:
  3369   0023AE                     l984:
  3370                           
  3371                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  3372   0023AE  C035  F069         	movff	efgtoa@c,efgtoa@mode
  3373                           
  3374                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  3375   0023B2  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  3376   0023B6                     
  3377                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  3378   0023B6  0100               	movlb	0	; () banked
  3379   0023B8  BFD2               	btfsc	(_prec+1)& (0+255),7,b
  3380   0023BA  EFE1  F011         	goto	u3711
  3381   0023BE  EFE3  F011         	goto	u3710
  3382   0023C2                     u3711:
  3383   0023C2  EFE9  F011         	goto	l3480
  3384   0023C6                     u3710:
  3385   0023C6                     
  3386                           ; BSR set to: 0
  3387   0023C6  C0D1  F062         	movff	_prec,efgtoa@p
  3388   0023CA  C0D2  F063         	movff	_prec+1,efgtoa@p+1
  3389   0023CE  EFED  F011         	goto	l3482
  3390   0023D2                     l3480:
  3391                           
  3392                           ; BSR set to: 0
  3393   0023D2  0E00               	movlw	0
  3394   0023D4  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  3395   0023D6  0E06               	movlw	6
  3396   0023D8  6F62               	movwf	efgtoa@p& (0+255),b
  3397   0023DA                     l3482:
  3398                           
  3399                           ; BSR set to: 0
  3400                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 711:     m = p;
  3401   0023DA  C062  F06D         	movff	efgtoa@p,efgtoa@m
  3402   0023DE  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  3403   0023E2                     
  3404                           ; BSR set to: 0
  3405                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 716:         ++m;
  3406   0023E2  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  3407   0023E4  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  3408   0023E6                     
  3409                           ; BSR set to: 0
  3410                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  3411   0023E6  0E66               	movlw	102
  3412   0023E8  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  3413   0023EA  A4D8               	btfss	status,2,c
  3414   0023EC  EFFA  F011         	goto	u3721
  3415   0023F0  EFFC  F011         	goto	u3720
  3416   0023F4                     u3721:
  3417   0023F4  EF1C  F012         	goto	l3496
  3418   0023F8                     u3720:
  3419   0023F8                     
  3420                           ; BSR set to: 0
  3421                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  3422   0023F8  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3423   0023FA  EF03  F012         	goto	u3730
  3424   0023FE  EF01  F012         	goto	u3731
  3425   002402                     u3731:
  3426   002402  EF0F  F012         	goto	l3492
  3427   002406                     u3730:
  3428   002406                     
  3429                           ; BSR set to: 0
  3430                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  3431   002406  0E00               	movlw	0
  3432   002408  6F88               	movwf	efgtoa@u& (0+255),b
  3433   00240A  0E00               	movlw	0
  3434   00240C  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  3435   00240E  0E80               	movlw	128
  3436   002410  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  3437   002412  0E3F               	movlw	63
  3438   002414  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  3439                           
  3440                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  3441   002416  0E00               	movlw	0
  3442   002418  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  3443   00241A  0E00               	movlw	0
  3444   00241C  6F6F               	movwf	efgtoa@e& (0+255),b
  3445   00241E                     l3492:
  3446                           
  3447                           ; BSR set to: 0
  3448                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  3449   00241E  0E67               	movlw	103
  3450   002420  1969               	xorwf	efgtoa@mode& (0+255),w,b
  3451   002422  B4D8               	btfsc	status,2,c
  3452   002424  EF16  F012         	goto	u3741
  3453   002428  EF18  F012         	goto	u3740
  3454   00242C                     u3741:
  3455   00242C  EF1C  F012         	goto	l3496
  3456   002430                     u3740:
  3457   002430                     
  3458                           ; BSR set to: 0
  3459                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  3460   002430  516F               	movf	efgtoa@e& (0+255),w,b
  3461   002432  276D               	addwf	efgtoa@m& (0+255),f,b
  3462   002434  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  3463   002436  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3464   002438                     l3496:
  3465                           
  3466                           ; BSR set to: 0
  3467                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  3468   002438  0E00               	movlw	0
  3469   00243A  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  3470   00243C  0E00               	movlw	0
  3471   00243E  6F77               	movwf	efgtoa@i& (0+255),b
  3472   002440                     
  3473                           ; BSR set to: 0
  3474                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  3475   002440  C084  F079         	movff	efgtoa@g,efgtoa@h
  3476   002444  C085  F07A         	movff	efgtoa@g+1,efgtoa@h+1
  3477   002448  C086  F07B         	movff	efgtoa@g+2,efgtoa@h+2
  3478   00244C  C087  F07C         	movff	efgtoa@g+3,efgtoa@h+3
  3479   002450                     
  3480                           ; BSR set to: 0
  3481                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  3482   002450  C088  F073         	movff	efgtoa@u,efgtoa@ou
  3483   002454  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  3484   002458  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  3485   00245C  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  3486                           
  3487                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3488   002460  EFAD  F012         	goto	l3510
  3489   002464                     l3502:
  3490                           
  3491                           ; BSR set to: 0
  3492                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  3493   002464  C079  F003         	movff	efgtoa@h,___fldiv@b
  3494   002468  C07A  F004         	movff	efgtoa@h+1,___fldiv@b+1
  3495   00246C  C07B  F005         	movff	efgtoa@h+2,___fldiv@b+2
  3496   002470  C07C  F006         	movff	efgtoa@h+3,___fldiv@b+3
  3497   002474  C088  F007         	movff	efgtoa@u,___fldiv@a
  3498   002478  C089  F008         	movff	efgtoa@u+1,___fldiv@a+1
  3499   00247C  C08A  F009         	movff	efgtoa@u+2,___fldiv@a+2
  3500   002480  C08B  F00A         	movff	efgtoa@u+3,___fldiv@a+3
  3501   002484  EC88  F019         	call	___fldiv	;wreg free
  3502   002488  C003  F01C         	movff	?___fldiv,floorf@x
  3503   00248C  C004  F01D         	movff	?___fldiv+1,floorf@x+1
  3504   002490  C005  F01E         	movff	?___fldiv+2,floorf@x+2
  3505   002494  C006  F01F         	movff	?___fldiv+3,floorf@x+3
  3506   002498  EC9C  F01C         	call	_floorf	;wreg free
  3507   00249C  C01C  F07D         	movff	?_floorf,efgtoa@l
  3508   0024A0  C01D  F07E         	movff	?_floorf+1,efgtoa@l+1
  3509   0024A4  C01E  F07F         	movff	?_floorf+2,efgtoa@l+2
  3510   0024A8  C01F  F080         	movff	?_floorf+3,efgtoa@l+3
  3511                           
  3512                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  3513   0024AC  C07D  F003         	movff	efgtoa@l,___fltol@f1
  3514   0024B0  C07E  F004         	movff	efgtoa@l+1,___fltol@f1+1
  3515   0024B4  C07F  F005         	movff	efgtoa@l+2,___fltol@f1+2
  3516   0024B8  C080  F006         	movff	efgtoa@l+3,___fltol@f1+3
  3517   0024BC  EC5E  F01F         	call	___fltol	;wreg free
  3518   0024C0  C003  F06B         	movff	?___fltol,efgtoa@d
  3519   0024C4  C004  F06C         	movff	?___fltol+1,efgtoa@d+1
  3520   0024C8                     
  3521                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  3522   0024C8  C079  F01C         	movff	efgtoa@h,___flsub@b
  3523   0024CC  C07A  F01D         	movff	efgtoa@h+1,___flsub@b+1
  3524   0024D0  C07B  F01E         	movff	efgtoa@h+2,___flsub@b+2
  3525   0024D4  C07C  F01F         	movff	efgtoa@h+3,___flsub@b+3
  3526   0024D8  C07D  F007         	movff	efgtoa@l,___flmul@a
  3527   0024DC  C07E  F008         	movff	efgtoa@l+1,___flmul@a+1
  3528   0024E0  C07F  F009         	movff	efgtoa@l+2,___flmul@a+2
  3529   0024E4  C080  F00A         	movff	efgtoa@l+3,___flmul@a+3
  3530   0024E8  C088  F003         	movff	efgtoa@u,___flmul@b
  3531   0024EC  C089  F004         	movff	efgtoa@u+1,___flmul@b+1
  3532   0024F0  C08A  F005         	movff	efgtoa@u+2,___flmul@b+2
  3533   0024F4  C08B  F006         	movff	efgtoa@u+3,___flmul@b+3
  3534   0024F8  EC63  F017         	call	___flmul	;wreg free
  3535   0024FC  C003  F020         	movff	?___flmul,___flsub@a
  3536   002500  C004  F021         	movff	?___flmul+1,___flsub@a+1
  3537   002504  C005  F022         	movff	?___flmul+2,___flsub@a+2
  3538   002508  C006  F023         	movff	?___flmul+3,___flsub@a+3
  3539   00250C  EC89  F024         	call	___flsub	;wreg free
  3540   002510  C01C  F079         	movff	?___flsub,efgtoa@h
  3541   002514  C01D  F07A         	movff	?___flsub+1,efgtoa@h+1
  3542   002518  C01E  F07B         	movff	?___flsub+2,efgtoa@h+2
  3543   00251C  C01F  F07C         	movff	?___flsub+3,efgtoa@h+3
  3544   002520                     
  3545                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  3546   002520  C088  F003         	movff	efgtoa@u,___fldiv@b
  3547   002524  C089  F004         	movff	efgtoa@u+1,___fldiv@b+1
  3548   002528  C08A  F005         	movff	efgtoa@u+2,___fldiv@b+2
  3549   00252C  C08B  F006         	movff	efgtoa@u+3,___fldiv@b+3
  3550   002530  0E00               	movlw	0
  3551   002532  6E07               	movwf	___fldiv@a^0,c
  3552   002534  0E00               	movlw	0
  3553   002536  6E08               	movwf	(___fldiv@a+1)^0,c
  3554   002538  0E20               	movlw	32
  3555   00253A  6E09               	movwf	(___fldiv@a+2)^0,c
  3556   00253C  0E41               	movlw	65
  3557   00253E  6E0A               	movwf	(___fldiv@a+3)^0,c
  3558   002540  EC88  F019         	call	___fldiv	;wreg free
  3559   002544  C003  F088         	movff	?___fldiv,efgtoa@u
  3560   002548  C004  F089         	movff	?___fldiv+1,efgtoa@u+1
  3561   00254C  C005  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3562   002550  C006  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3563   002554                     
  3564                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 741:         ++i;
  3565   002554  0100               	movlb	0	; () banked
  3566   002556  4B77               	infsnz	efgtoa@i& (0+255),f,b
  3567   002558  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  3568   00255A                     l3510:
  3569                           
  3570                           ; BSR set to: 0
  3571                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3572   00255A  516D               	movf	efgtoa@m& (0+255),w,b
  3573   00255C  5D77               	subwf	efgtoa@i& (0+255),w,b
  3574   00255E  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3575   002560  0A80               	xorlw	128
  3576   002562  6E36               	movwf	??_efgtoa^0,c
  3577   002564  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  3578   002566  0A80               	xorlw	128
  3579   002568  5836               	subwfb	??_efgtoa^0,w,c
  3580   00256A  A0D8               	btfss	status,0,c
  3581   00256C  EFBA  F012         	goto	u3751
  3582   002570  EFBC  F012         	goto	u3750
  3583   002574                     u3751:
  3584   002574  EF32  F012         	goto	l3502
  3585   002578                     u3750:
  3586   002578                     
  3587                           ; BSR set to: 0
  3588                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  3589   002578  C088  F003         	movff	efgtoa@u,___flmul@b
  3590   00257C  C089  F004         	movff	efgtoa@u+1,___flmul@b+1
  3591   002580  C08A  F005         	movff	efgtoa@u+2,___flmul@b+2
  3592   002584  C08B  F006         	movff	efgtoa@u+3,___flmul@b+3
  3593   002588  0E00               	movlw	0
  3594   00258A  6E07               	movwf	___flmul@a^0,c
  3595   00258C  0E00               	movlw	0
  3596   00258E  6E08               	movwf	(___flmul@a+1)^0,c
  3597   002590  0EA0               	movlw	160
  3598   002592  6E09               	movwf	(___flmul@a+2)^0,c
  3599   002594  0E40               	movlw	64
  3600   002596  6E0A               	movwf	(___flmul@a+3)^0,c
  3601   002598  EC63  F017         	call	___flmul	;wreg free
  3602   00259C  C003  F07D         	movff	?___flmul,efgtoa@l
  3603   0025A0  C004  F07E         	movff	?___flmul+1,efgtoa@l+1
  3604   0025A4  C005  F07F         	movff	?___flmul+2,efgtoa@l+2
  3605   0025A8  C006  F080         	movff	?___flmul+3,efgtoa@l+3
  3606   0025AC                     
  3607                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  3608   0025AC  C079  F01C         	movff	efgtoa@h,___flge@ff1
  3609   0025B0  C07A  F01D         	movff	efgtoa@h+1,___flge@ff1+1
  3610   0025B4  C07B  F01E         	movff	efgtoa@h+2,___flge@ff1+2
  3611   0025B8  C07C  F01F         	movff	efgtoa@h+3,___flge@ff1+3
  3612   0025BC  C07D  F020         	movff	efgtoa@l,___flge@ff2
  3613   0025C0  C07E  F021         	movff	efgtoa@l+1,___flge@ff2+1
  3614   0025C4  C07F  F022         	movff	efgtoa@l+2,___flge@ff2+2
  3615   0025C8  C080  F023         	movff	efgtoa@l+3,___flge@ff2+3
  3616   0025CC  ECE1  F01F         	call	___flge	;wreg free
  3617   0025D0  B0D8               	btfsc	status,0,c
  3618   0025D2  EFED  F012         	goto	u3761
  3619   0025D6  EFEF  F012         	goto	u3760
  3620   0025DA                     u3761:
  3621   0025DA  EFFA  F012         	goto	l3518
  3622   0025DE                     u3760:
  3623   0025DE                     
  3624                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  3625   0025DE  0E00               	movlw	0
  3626   0025E0  0100               	movlb	0	; () banked
  3627   0025E2  6F7D               	movwf	efgtoa@l& (0+255),b
  3628   0025E4  0E00               	movlw	0
  3629   0025E6  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  3630   0025E8  0E00               	movlw	0
  3631   0025EA  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  3632   0025EC  0E00               	movlw	0
  3633   0025EE  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  3634                           
  3635                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 748:     } else {
  3636   0025F0  EF23  F013         	goto	l3524
  3637   0025F4                     l3518:
  3638                           
  3639                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  3640   0025F4  C079  F003         	movff	efgtoa@h,___fleq@ff1
  3641   0025F8  C07A  F004         	movff	efgtoa@h+1,___fleq@ff1+1
  3642   0025FC  C07B  F005         	movff	efgtoa@h+2,___fleq@ff1+2
  3643   002600  C07C  F006         	movff	efgtoa@h+3,___fleq@ff1+3
  3644   002604  C07D  F007         	movff	efgtoa@l,___fleq@ff2
  3645   002608  C07E  F008         	movff	efgtoa@l+1,___fleq@ff2+1
  3646   00260C  C07F  F009         	movff	efgtoa@l+2,___fleq@ff2+2
  3647   002610  C080  F00A         	movff	efgtoa@l+3,___fleq@ff2+3
  3648   002614  EC4C  F022         	call	___fleq	;wreg free
  3649   002618  A0D8               	btfss	status,0,c
  3650   00261A  EF11  F013         	goto	u3771
  3651   00261E  EF13  F013         	goto	u3770
  3652   002622                     u3771:
  3653   002622  EF23  F013         	goto	l3524
  3654   002626                     u3770:
  3655   002626  0100               	movlb	0	; () banked
  3656   002628  B16B               	btfsc	efgtoa@d& (0+255),0,b
  3657   00262A  EF19  F013         	goto	u3781
  3658   00262E  EF1B  F013         	goto	u3780
  3659   002632                     u3781:
  3660   002632  EF23  F013         	goto	l3524
  3661   002636                     u3780:
  3662   002636                     
  3663                           ; BSR set to: 0
  3664                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  3665   002636  0E00               	movlw	0
  3666   002638  6F7D               	movwf	efgtoa@l& (0+255),b
  3667   00263A  0E00               	movlw	0
  3668   00263C  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  3669   00263E  0E00               	movlw	0
  3670   002640  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  3671   002642  0E00               	movlw	0
  3672   002644  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  3673   002646                     l3524:
  3674                           
  3675                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  3676   002646  C084  F003         	movff	efgtoa@g,___fladd@b
  3677   00264A  C085  F004         	movff	efgtoa@g+1,___fladd@b+1
  3678   00264E  C086  F005         	movff	efgtoa@g+2,___fladd@b+2
  3679   002652  C087  F006         	movff	efgtoa@g+3,___fladd@b+3
  3680   002656  C07D  F007         	movff	efgtoa@l,___fladd@a
  3681   00265A  C07E  F008         	movff	efgtoa@l+1,___fladd@a+1
  3682   00265E  C07F  F009         	movff	efgtoa@l+2,___fladd@a+2
  3683   002662  C080  F00A         	movff	efgtoa@l+3,___fladd@a+3
  3684   002666  EC08  F015         	call	___fladd	;wreg free
  3685   00266A  C003  F079         	movff	?___fladd,efgtoa@h
  3686   00266E  C004  F07A         	movff	?___fladd+1,efgtoa@h+1
  3687   002672  C005  F07B         	movff	?___fladd+2,efgtoa@h+2
  3688   002676  C006  F07C         	movff	?___fladd+3,efgtoa@h+3
  3689   00267A                     
  3690                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  3691   00267A  C079  F01C         	movff	efgtoa@h,___flge@ff1
  3692   00267E  C07A  F01D         	movff	efgtoa@h+1,___flge@ff1+1
  3693   002682  C07B  F01E         	movff	efgtoa@h+2,___flge@ff1+2
  3694   002686  C07C  F01F         	movff	efgtoa@h+3,___flge@ff1+3
  3695   00268A  0E00               	movlw	0
  3696   00268C  6E07               	movwf	___flmul@a^0,c
  3697   00268E  0E00               	movlw	0
  3698   002690  6E08               	movwf	(___flmul@a+1)^0,c
  3699   002692  0E20               	movlw	32
  3700   002694  6E09               	movwf	(___flmul@a+2)^0,c
  3701   002696  0E41               	movlw	65
  3702   002698  6E0A               	movwf	(___flmul@a+3)^0,c
  3703   00269A  C073  F003         	movff	efgtoa@ou,___flmul@b
  3704   00269E  C074  F004         	movff	efgtoa@ou+1,___flmul@b+1
  3705   0026A2  C075  F005         	movff	efgtoa@ou+2,___flmul@b+2
  3706   0026A6  C076  F006         	movff	efgtoa@ou+3,___flmul@b+3
  3707   0026AA  EC63  F017         	call	___flmul	;wreg free
  3708   0026AE  C003  F020         	movff	?___flmul,___flge@ff2
  3709   0026B2  C004  F021         	movff	?___flmul+1,___flge@ff2+1
  3710   0026B6  C005  F022         	movff	?___flmul+2,___flge@ff2+2
  3711   0026BA  C006  F023         	movff	?___flmul+3,___flge@ff2+3
  3712   0026BE  ECE1  F01F         	call	___flge	;wreg free
  3713   0026C2  A0D8               	btfss	status,0,c
  3714   0026C4  EF66  F013         	goto	u3791
  3715   0026C8  EF68  F013         	goto	u3790
  3716   0026CC                     u3791:
  3717   0026CC  EF91  F013         	goto	l3536
  3718   0026D0                     u3790:
  3719   0026D0                     
  3720                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 759:   e++;
  3721   0026D0  0100               	movlb	0	; () banked
  3722   0026D2  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  3723   0026D4  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  3724   0026D6                     
  3725                           ; BSR set to: 0
  3726                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  3727   0026D6  C073  F003         	movff	efgtoa@ou,___flmul@b
  3728   0026DA  C074  F004         	movff	efgtoa@ou+1,___flmul@b+1
  3729   0026DE  C075  F005         	movff	efgtoa@ou+2,___flmul@b+2
  3730   0026E2  C076  F006         	movff	efgtoa@ou+3,___flmul@b+3
  3731   0026E6  0E00               	movlw	0
  3732   0026E8  6E07               	movwf	___flmul@a^0,c
  3733   0026EA  0E00               	movlw	0
  3734   0026EC  6E08               	movwf	(___flmul@a+1)^0,c
  3735   0026EE  0E20               	movlw	32
  3736   0026F0  6E09               	movwf	(___flmul@a+2)^0,c
  3737   0026F2  0E41               	movlw	65
  3738   0026F4  6E0A               	movwf	(___flmul@a+3)^0,c
  3739   0026F6  EC63  F017         	call	___flmul	;wreg free
  3740   0026FA  C003  F073         	movff	?___flmul,efgtoa@ou
  3741   0026FE  C004  F074         	movff	?___flmul+1,efgtoa@ou+1
  3742   002702  C005  F075         	movff	?___flmul+2,efgtoa@ou+2
  3743   002706  C006  F076         	movff	?___flmul+3,efgtoa@ou+3
  3744   00270A                     
  3745                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  3746   00270A  0E66               	movlw	102
  3747   00270C  0100               	movlb	0	; () banked
  3748   00270E  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  3749   002710  A4D8               	btfss	status,2,c
  3750   002712  EF8D  F013         	goto	u3801
  3751   002716  EF8F  F013         	goto	u3800
  3752   00271A                     u3801:
  3753   00271A  EF91  F013         	goto	l3536
  3754   00271E                     u3800:
  3755   00271E                     
  3756                           ; BSR set to: 0
  3757                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 764:    m++;
  3758   00271E  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  3759   002720  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  3760   002722                     l3536:
  3761                           
  3762                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  3763   002722  C073  F088         	movff	efgtoa@ou,efgtoa@u
  3764   002726  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  3765   00272A  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  3766   00272E  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  3767   002732                     
  3768                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  3769   002732  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  3770   002736  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  3771   00273A                     
  3772                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  3773   00273A  0100               	movlb	0	; () banked
  3774   00273C  6B68               	clrf	efgtoa@pp& (0+255),b
  3775   00273E                     
  3776                           ; BSR set to: 0
  3777                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  3778   00273E  0E00               	movlw	0
  3779   002740  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  3780   002742  0E00               	movlw	0
  3781   002744  6F64               	movwf	efgtoa@t& (0+255),b
  3782   002746                     
  3783                           ; BSR set to: 0
  3784                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  3785   002746  0E00               	movlw	0
  3786   002748  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  3787   00274A  0E00               	movlw	0
  3788   00274C  6F77               	movwf	efgtoa@i& (0+255),b
  3789                           
  3790                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3791   00274E  EF8E  F014         	goto	l3586
  3792   002752                     l3546:
  3793                           
  3794                           ; BSR set to: 0
  3795                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  3796   002752  C079  F003         	movff	efgtoa@h,___fldiv@b
  3797   002756  C07A  F004         	movff	efgtoa@h+1,___fldiv@b+1
  3798   00275A  C07B  F005         	movff	efgtoa@h+2,___fldiv@b+2
  3799   00275E  C07C  F006         	movff	efgtoa@h+3,___fldiv@b+3
  3800   002762  C088  F007         	movff	efgtoa@u,___fldiv@a
  3801   002766  C089  F008         	movff	efgtoa@u+1,___fldiv@a+1
  3802   00276A  C08A  F009         	movff	efgtoa@u+2,___fldiv@a+2
  3803   00276E  C08B  F00A         	movff	efgtoa@u+3,___fldiv@a+3
  3804   002772  EC88  F019         	call	___fldiv	;wreg free
  3805   002776  C003  F01C         	movff	?___fldiv,floorf@x
  3806   00277A  C004  F01D         	movff	?___fldiv+1,floorf@x+1
  3807   00277E  C005  F01E         	movff	?___fldiv+2,floorf@x+2
  3808   002782  C006  F01F         	movff	?___fldiv+3,floorf@x+3
  3809   002786  EC9C  F01C         	call	_floorf	;wreg free
  3810   00278A  C01C  F07D         	movff	?_floorf,efgtoa@l
  3811   00278E  C01D  F07E         	movff	?_floorf+1,efgtoa@l+1
  3812   002792  C01E  F07F         	movff	?_floorf+2,efgtoa@l+2
  3813   002796  C01F  F080         	movff	?_floorf+3,efgtoa@l+3
  3814                           
  3815                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3816   00279A  C07D  F003         	movff	efgtoa@l,___fltol@f1
  3817   00279E  C07E  F004         	movff	efgtoa@l+1,___fltol@f1+1
  3818   0027A2  C07F  F005         	movff	efgtoa@l+2,___fltol@f1+2
  3819   0027A6  C080  F006         	movff	efgtoa@l+3,___fltol@f1+3
  3820   0027AA  EC5E  F01F         	call	___fltol	;wreg free
  3821   0027AE  BE04               	btfsc	(?___fltol+1)^0,7,c
  3822   0027B0  EFE5  F013         	goto	u3810
  3823   0027B4  5004               	movf	(?___fltol+1)^0,w,c
  3824   0027B6  E107               	bnz	u3811
  3825   0027B8  0E0A               	movlw	10
  3826   0027BA  5C03               	subwf	?___fltol^0,w,c
  3827   0027BC  B0D8               	btfsc	status,0,c
  3828   0027BE  EFE3  F013         	goto	u3811
  3829   0027C2  EFE5  F013         	goto	u3810
  3830   0027C6                     u3811:
  3831   0027C6  EFF5  F013         	goto	l3550
  3832   0027CA                     u3810:
  3833   0027CA  C07D  F003         	movff	efgtoa@l,___fltol@f1
  3834   0027CE  C07E  F004         	movff	efgtoa@l+1,___fltol@f1+1
  3835   0027D2  C07F  F005         	movff	efgtoa@l+2,___fltol@f1+2
  3836   0027D6  C080  F006         	movff	efgtoa@l+3,___fltol@f1+3
  3837   0027DA  EC5E  F01F         	call	___fltol	;wreg free
  3838   0027DE  C003  F06B         	movff	?___fltol,efgtoa@d
  3839   0027E2  C004  F06C         	movff	?___fltol+1,efgtoa@d+1
  3840   0027E6  EFFA  F013         	goto	l1014
  3841   0027EA                     l3550:
  3842   0027EA  0E00               	movlw	0
  3843   0027EC  0100               	movlb	0	; () banked
  3844   0027EE  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  3845   0027F0  0E09               	movlw	9
  3846   0027F2  6F6B               	movwf	efgtoa@d& (0+255),b
  3847   0027F4                     l1014:
  3848                           
  3849                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  3850   0027F4  0100               	movlb	0	; () banked
  3851   0027F6  5168               	movf	efgtoa@pp& (0+255),w,b
  3852   0027F8  A4D8               	btfss	status,2,c
  3853   0027FA  EF01  F014         	goto	u3821
  3854   0027FE  EF03  F014         	goto	u3820
  3855   002802                     u3821:
  3856   002802  EF2B  F014         	goto	l3570
  3857   002806                     u3820:
  3858   002806                     
  3859                           ; BSR set to: 0
  3860   002806  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3861   002808  EF0A  F014         	goto	u3830
  3862   00280C  EF08  F014         	goto	u3831
  3863   002810                     u3831:
  3864   002810  EF2B  F014         	goto	l3570
  3865   002814                     u3830:
  3866   002814                     
  3867                           ; BSR set to: 0
  3868                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  3869   002814  0E00               	movlw	low _dbuf
  3870   002816  2582               	addwf	efgtoa@n& (0+255),w,b
  3871   002818  6ED9               	movwf	fsr2l,c
  3872   00281A  0E01               	movlw	high _dbuf
  3873   00281C  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3874   00281E  6EDA               	movwf	fsr2h,c
  3875   002820  0E2E               	movlw	46
  3876   002822  6EDF               	movwf	indf2,c
  3877   002824                     
  3878                           ; BSR set to: 0
  3879   002824  4B82               	infsnz	efgtoa@n& (0+255),f,b
  3880   002826  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  3881   002828                     
  3882                           ; BSR set to: 0
  3883                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  3884   002828  0771               	decf	efgtoa@w& (0+255),f,b
  3885   00282A  A0D8               	btfss	status,0,c
  3886   00282C  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3887   00282E                     
  3888                           ; BSR set to: 0
  3889                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  3890   00282E  0E01               	movlw	1
  3891   002830  6F68               	movwf	efgtoa@pp& (0+255),b
  3892   002832  EF2B  F014         	goto	l3570
  3893   002836                     l3562:
  3894                           
  3895                           ; BSR set to: 0
  3896                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  3897   002836  0E00               	movlw	low _dbuf
  3898   002838  2582               	addwf	efgtoa@n& (0+255),w,b
  3899   00283A  6ED9               	movwf	fsr2l,c
  3900   00283C  0E01               	movlw	high _dbuf
  3901   00283E  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3902   002840  6EDA               	movwf	fsr2h,c
  3903   002842  0E30               	movlw	48
  3904   002844  6EDF               	movwf	indf2,c
  3905   002846                     
  3906                           ; BSR set to: 0
  3907   002846  4B82               	infsnz	efgtoa@n& (0+255),f,b
  3908   002848  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  3909   00284A                     
  3910                           ; BSR set to: 0
  3911                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  3912   00284A  0771               	decf	efgtoa@w& (0+255),f,b
  3913   00284C  A0D8               	btfss	status,0,c
  3914   00284E  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3915   002850                     
  3916                           ; BSR set to: 0
  3917                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  3918   002850  0764               	decf	efgtoa@t& (0+255),f,b
  3919   002852  A0D8               	btfss	status,0,c
  3920   002854  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  3921   002856                     l3570:
  3922                           
  3923                           ; BSR set to: 0
  3924                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  3925   002856  5164               	movf	efgtoa@t& (0+255),w,b
  3926   002858  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3927   00285A  A4D8               	btfss	status,2,c
  3928   00285C  EF32  F014         	goto	u3841
  3929   002860  EF34  F014         	goto	u3840
  3930   002864                     u3841:
  3931   002864  EF1B  F014         	goto	l3562
  3932   002868                     u3840:
  3933   002868                     
  3934                           ; BSR set to: 0
  3935                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3936   002868  0E00               	movlw	low _dbuf
  3937   00286A  2582               	addwf	efgtoa@n& (0+255),w,b
  3938   00286C  6ED9               	movwf	fsr2l,c
  3939   00286E  0E01               	movlw	high _dbuf
  3940   002870  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3941   002872  6EDA               	movwf	fsr2h,c
  3942   002874  516B               	movf	efgtoa@d& (0+255),w,b
  3943   002876  0F30               	addlw	48
  3944   002878  6EDF               	movwf	indf2,c
  3945   00287A                     
  3946                           ; BSR set to: 0
  3947   00287A  4B82               	infsnz	efgtoa@n& (0+255),f,b
  3948   00287C  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  3949   00287E                     
  3950                           ; BSR set to: 0
  3951                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  3952   00287E  0771               	decf	efgtoa@w& (0+255),f,b
  3953   002880  A0D8               	btfss	status,0,c
  3954   002882  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3955   002884                     
  3956                           ; BSR set to: 0
  3957                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  3958   002884  C079  F01C         	movff	efgtoa@h,___flsub@b
  3959   002888  C07A  F01D         	movff	efgtoa@h+1,___flsub@b+1
  3960   00288C  C07B  F01E         	movff	efgtoa@h+2,___flsub@b+2
  3961   002890  C07C  F01F         	movff	efgtoa@h+3,___flsub@b+3
  3962   002894  C07D  F007         	movff	efgtoa@l,___flmul@a
  3963   002898  C07E  F008         	movff	efgtoa@l+1,___flmul@a+1
  3964   00289C  C07F  F009         	movff	efgtoa@l+2,___flmul@a+2
  3965   0028A0  C080  F00A         	movff	efgtoa@l+3,___flmul@a+3
  3966   0028A4  C088  F003         	movff	efgtoa@u,___flmul@b
  3967   0028A8  C089  F004         	movff	efgtoa@u+1,___flmul@b+1
  3968   0028AC  C08A  F005         	movff	efgtoa@u+2,___flmul@b+2
  3969   0028B0  C08B  F006         	movff	efgtoa@u+3,___flmul@b+3
  3970   0028B4  EC63  F017         	call	___flmul	;wreg free
  3971   0028B8  C003  F020         	movff	?___flmul,___flsub@a
  3972   0028BC  C004  F021         	movff	?___flmul+1,___flsub@a+1
  3973   0028C0  C005  F022         	movff	?___flmul+2,___flsub@a+2
  3974   0028C4  C006  F023         	movff	?___flmul+3,___flsub@a+3
  3975   0028C8  EC89  F024         	call	___flsub	;wreg free
  3976   0028CC  C01C  F079         	movff	?___flsub,efgtoa@h
  3977   0028D0  C01D  F07A         	movff	?___flsub+1,efgtoa@h+1
  3978   0028D4  C01E  F07B         	movff	?___flsub+2,efgtoa@h+2
  3979   0028D8  C01F  F07C         	movff	?___flsub+3,efgtoa@h+3
  3980   0028DC                     
  3981                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  3982   0028DC  C088  F003         	movff	efgtoa@u,___fldiv@b
  3983   0028E0  C089  F004         	movff	efgtoa@u+1,___fldiv@b+1
  3984   0028E4  C08A  F005         	movff	efgtoa@u+2,___fldiv@b+2
  3985   0028E8  C08B  F006         	movff	efgtoa@u+3,___fldiv@b+3
  3986   0028EC  0E00               	movlw	0
  3987   0028EE  6E07               	movwf	___fldiv@a^0,c
  3988   0028F0  0E00               	movlw	0
  3989   0028F2  6E08               	movwf	(___fldiv@a+1)^0,c
  3990   0028F4  0E20               	movlw	32
  3991   0028F6  6E09               	movwf	(___fldiv@a+2)^0,c
  3992   0028F8  0E41               	movlw	65
  3993   0028FA  6E0A               	movwf	(___fldiv@a+3)^0,c
  3994   0028FC  EC88  F019         	call	___fldiv	;wreg free
  3995   002900  C003  F088         	movff	?___fldiv,efgtoa@u
  3996   002904  C004  F089         	movff	?___fldiv+1,efgtoa@u+1
  3997   002908  C005  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3998   00290C  C006  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3999   002910                     
  4000                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  4001   002910  0100               	movlb	0	; () banked
  4002   002912  0760               	decf	efgtoa@ne& (0+255),f,b
  4003   002914  A0D8               	btfss	status,0,c
  4004   002916  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  4005   002918                     
  4006                           ; BSR set to: 0
  4007                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 809:         ++i;
  4008   002918  4B77               	infsnz	efgtoa@i& (0+255),f,b
  4009   00291A  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  4010   00291C                     l3586:
  4011                           
  4012                           ; BSR set to: 0
  4013                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4014   00291C  516D               	movf	efgtoa@m& (0+255),w,b
  4015   00291E  5D77               	subwf	efgtoa@i& (0+255),w,b
  4016   002920  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  4017   002922  0A80               	xorlw	128
  4018   002924  6E36               	movwf	??_efgtoa^0,c
  4019   002926  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  4020   002928  0A80               	xorlw	128
  4021   00292A  5836               	subwfb	??_efgtoa^0,w,c
  4022   00292C  B0D8               	btfsc	status,0,c
  4023   00292E  EF9B  F014         	goto	u3851
  4024   002932  EF9D  F014         	goto	u3850
  4025   002936                     u3851:
  4026   002936  EFAB  F014         	goto	l3590
  4027   00293A                     u3850:
  4028   00293A                     
  4029                           ; BSR set to: 0
  4030   00293A  BF83               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4031   00293C  EFA9  F014         	goto	u3861
  4032   002940  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  4033   002942  E109               	bnz	u3860
  4034   002944  0E4B               	movlw	75
  4035   002946  5D82               	subwf	efgtoa@n& (0+255),w,b
  4036   002948  A0D8               	btfss	status,0,c
  4037   00294A  EFA9  F014         	goto	u3861
  4038   00294E  EFAB  F014         	goto	u3860
  4039   002952                     u3861:
  4040   002952  EFA9  F013         	goto	l3546
  4041   002956                     u3860:
  4042   002956                     l3590:
  4043                           
  4044                           ; BSR set to: 0
  4045                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  4046   002956  0E00               	movlw	0
  4047   002958  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  4048   00295A  0E4F               	movlw	79
  4049   00295C  6F77               	movwf	efgtoa@i& (0+255),b
  4050   00295E                     
  4051                           ; BSR set to: 0
  4052                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  4053   00295E  0E00               	movlw	low _dbuf
  4054   002960  2577               	addwf	efgtoa@i& (0+255),w,b
  4055   002962  6ED9               	movwf	fsr2l,c
  4056   002964  0E01               	movlw	high _dbuf
  4057   002966  2178               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4058   002968  6EDA               	movwf	fsr2h,c
  4059   00296A  6ADF               	clrf	indf2,c
  4060   00296C                     
  4061                           ; BSR set to: 0
  4062                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4063   00296C  0E00               	movlw	low _dbuf
  4064   00296E  6E36               	movwf	??_efgtoa^0,c
  4065   002970  0E01               	movlw	high _dbuf
  4066   002972  6E37               	movwf	(??_efgtoa+1)^0,c
  4067   002974  5182               	movf	efgtoa@n& (0+255),w,b
  4068   002976  5E36               	subwf	??_efgtoa^0,f,c
  4069   002978  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  4070   00297A  5A37               	subwfb	(??_efgtoa+1)^0,f,c
  4071   00297C  5177               	movf	efgtoa@i& (0+255),w,b
  4072   00297E  2436               	addwf	??_efgtoa^0,w,c
  4073   002980  6E03               	movwf	memcpy@d1^0,c
  4074   002982  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  4075   002984  2037               	addwfc	(??_efgtoa+1)^0,w,c
  4076   002986  6E04               	movwf	(memcpy@d1+1)^0,c
  4077   002988  0E00               	movlw	low _dbuf
  4078   00298A  6E05               	movwf	memcpy@s1^0,c
  4079   00298C  0E01               	movlw	high _dbuf
  4080   00298E  6E06               	movwf	(memcpy@s1+1)^0,c
  4081   002990  C082  F007         	movff	efgtoa@n,memcpy@n
  4082   002994  C083  F008         	movff	efgtoa@n+1,memcpy@n+1
  4083   002998  EC94  F023         	call	_memcpy	;wreg free
  4084   00299C                     
  4085                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  4086   00299C  0100               	movlb	0	; () banked
  4087   00299E  5182               	movf	efgtoa@n& (0+255),w,b
  4088   0029A0  5D77               	subwf	efgtoa@i& (0+255),w,b
  4089   0029A2  6F82               	movwf	efgtoa@n& (0+255),b
  4090   0029A4  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  4091   0029A6  5978               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4092   0029A8  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  4093   0029AA                     
  4094                           ; BSR set to: 0
  4095                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  4096   0029AA  5181               	movf	efgtoa@sign& (0+255),w,b
  4097   0029AC  A4D8               	btfss	status,2,c
  4098   0029AE  EFDB  F014         	goto	u3871
  4099   0029B2  EFDE  F014         	goto	u3870
  4100   0029B6                     u3871:
  4101   0029B6  0E01               	movlw	1
  4102   0029B8  EFDF  F014         	goto	u3880
  4103   0029BC                     u3870:
  4104   0029BC  0E00               	movlw	0
  4105   0029BE                     u3880:
  4106   0029BE  6F77               	movwf	efgtoa@i& (0+255),b
  4107   0029C0  6B78               	clrf	(efgtoa@i+1)& (0+255),b
  4108   0029C2                     
  4109                           ; BSR set to: 0
  4110                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  4111   0029C2  5181               	movf	efgtoa@sign& (0+255),w,b
  4112   0029C4  B4D8               	btfsc	status,2,c
  4113   0029C6  EFE7  F014         	goto	u3891
  4114   0029CA  EFE9  F014         	goto	u3890
  4115   0029CE                     u3891:
  4116   0029CE  EFF5  F014         	goto	l3604
  4117   0029D2                     u3890:
  4118   0029D2                     
  4119                           ; BSR set to: 0
  4120                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  4121   0029D2  0782               	decf	efgtoa@n& (0+255),f,b
  4122   0029D4  A0D8               	btfss	status,0,c
  4123   0029D6  0783               	decf	(efgtoa@n+1)& (0+255),f,b
  4124   0029D8  0E00               	movlw	low _dbuf
  4125   0029DA  2582               	addwf	efgtoa@n& (0+255),w,b
  4126   0029DC  6ED9               	movwf	fsr2l,c
  4127   0029DE  0E01               	movlw	high _dbuf
  4128   0029E0  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4129   0029E2  6EDA               	movwf	fsr2h,c
  4130   0029E4  0060  F207  FFDF   	movff	efgtoa@sign,indf2
  4131   0029EA                     l3604:
  4132                           
  4133                           ; BSR set to: 0
  4134                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  4135   0029EA  5177               	movf	efgtoa@i& (0+255),w,b
  4136   0029EC  5F71               	subwf	efgtoa@w& (0+255),f,b
  4137   0029EE  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  4138   0029F0  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4139   0029F2                     
  4140                           ; BSR set to: 0
  4141                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4142   0029F2  C030  F011         	movff	efgtoa@fp,pad@fp
  4143   0029F6  0E00               	movlw	low _dbuf
  4144   0029F8  2582               	addwf	efgtoa@n& (0+255),w,b
  4145   0029FA  6E12               	movwf	pad@buf^0,c
  4146   0029FC  0E01               	movlw	high _dbuf
  4147   0029FE  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4148   002A00  6E13               	movwf	(pad@buf+1)^0,c
  4149   002A02  C071  F014         	movff	efgtoa@w,pad@p
  4150   002A06  C072  F015         	movff	efgtoa@w+1,pad@p+1
  4151   002A0A  EC61  F023         	call	_pad	;wreg free
  4152   002A0E                     l981:
  4153   002A0E  0012               	return		;funcret
  4154   002A10                     __end_of_efgtoa:
  4155                           	callstack 0
  4156                           
  4157 ;; *************** function _strcpy *****************
  4158 ;; Defined at:
  4159 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcpy.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;  dest            2    2[COMRAM] PTR unsigned char 
  4162 ;;		 -> dbuf(80), 
  4163 ;;  src             1    4[COMRAM] PTR const unsigned char 
  4164 ;;		 -> STR_10(4), STR_7(4), 
  4165 ;; Auto vars:     Size  Location     Type
  4166 ;;  d               2    6[COMRAM] PTR unsigned char 
  4167 ;;		 -> dbuf(80), 
  4168 ;; Return value:  Size  Location     Type
  4169 ;;                  2    2[COMRAM] PTR unsigned char 
  4170 ;; Registers used:
  4171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4172 ;; Tracked objects:
  4173 ;;		On entry : 0/0
  4174 ;;		On exit  : 0/0
  4175 ;;		Unchanged: 0/0
  4176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4177 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4178 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4179 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4180 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4181 ;;Total ram usage:        6 bytes
  4182 ;; Hardware stack levels used: 1
  4183 ;; Hardware stack levels required when called: 1
  4184 ;; This function calls:
  4185 ;;		Nothing
  4186 ;; This function is called by:
  4187 ;;		_efgtoa
  4188 ;; This function uses a non-reentrant model
  4189 ;;
  4190                           
  4191                           	psect	text7
  4192   0048CC                     __ptext7:
  4193                           	callstack 0
  4194   0048CC                     _strcpy:
  4195                           	callstack 24
  4196   0048CC  C003  F007         	movff	strcpy@dest,strcpy@d
  4197   0048D0  C004  F008         	movff	strcpy@dest+1,strcpy@d+1
  4198   0048D4                     l3280:
  4199   0048D4  2A05               	incf	strcpy@src^0,f,c
  4200   0048D6  0405               	decf	strcpy@src^0,w,c
  4201   0048D8  6E06               	movwf	??_strcpy^0,c
  4202   0048DA  0060  F01B  FFF6   	movff	??_strcpy,tblptrl
  4203   0048E0                     	if	1	;There is more than 1 active tblptr byte
  4204   0048E0  0E20               	movlw	high __smallconst
  4205   0048E2  6EF7               	movwf	tblptrh,c
  4206   0048E4                     	endif
  4207   0048E4                     	if	0	;tblptru may be non-zero
  4208   0048E4                     	endif
  4209   0048E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4210   0048E4  0E00               	movlw	low (__smallconst shr (0+16))
  4211   0048E6  6EF8               	movwf	tblptru,c
  4212   0048E8                     	endif
  4213   0048E8  0060  F01F  FFD9   	movff	strcpy@d,fsr2l
  4214   0048EE  0060  F023  FFDA   	movff	strcpy@d+1,fsr2h
  4215   0048F4  4A07               	infsnz	strcpy@d^0,f,c
  4216   0048F6  2A08               	incf	(strcpy@d+1)^0,f,c
  4217   0048F8  0008               	tblrd		*
  4218   0048FA  006F FFD7 FFDF     	movff	tablat,indf2
  4219   004900  50DF               	movf	indf2,w,c
  4220   004902  A4D8               	btfss	status,2,c
  4221   004904  EF86  F024         	goto	u3341
  4222   004908  EF88  F024         	goto	u3340
  4223   00490C                     u3341:
  4224   00490C  EF6A  F024         	goto	l3280
  4225   004910                     u3340:
  4226   004910  0012               	return		;funcret
  4227   004912                     __end_of_strcpy:
  4228                           	callstack 0
  4229                           
  4230 ;; *************** function _memcpy *****************
  4231 ;; Defined at:
  4232 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
  4233 ;; Parameters:    Size  Location     Type
  4234 ;;  d1              2    2[COMRAM] PTR void 
  4235 ;;		 -> dbuf(80), 
  4236 ;;  s1              2    4[COMRAM] PTR const void 
  4237 ;;		 -> dbuf(80), 
  4238 ;;  n               2    6[COMRAM] unsigned int 
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;  s               2   10[COMRAM] PTR const unsigned char 
  4241 ;;		 -> dbuf(80), 
  4242 ;;  d               2    8[COMRAM] PTR unsigned char 
  4243 ;;		 -> dbuf(80), 
  4244 ;;  tmp             1   12[COMRAM] unsigned char 
  4245 ;; Return value:  Size  Location     Type
  4246 ;;                  2    2[COMRAM] PTR void 
  4247 ;; Registers used:
  4248 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4249 ;; Tracked objects:
  4250 ;;		On entry : 0/0
  4251 ;;		On exit  : 0/0
  4252 ;;		Unchanged: 0/0
  4253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4254 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4255 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4257 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4258 ;;Total ram usage:       11 bytes
  4259 ;; Hardware stack levels used: 1
  4260 ;; Hardware stack levels required when called: 1
  4261 ;; This function calls:
  4262 ;;		Nothing
  4263 ;; This function is called by:
  4264 ;;		_efgtoa
  4265 ;; This function uses a non-reentrant model
  4266 ;;
  4267                           
  4268                           	psect	text8
  4269   004728                     __ptext8:
  4270                           	callstack 0
  4271   004728                     _memcpy:
  4272                           	callstack 24
  4273   004728  C005  F00B         	movff	memcpy@s1,memcpy@s
  4274   00472C  C006  F00C         	movff	memcpy@s1+1,memcpy@s+1
  4275   004730  C003  F009         	movff	memcpy@d1,memcpy@d
  4276   004734  C004  F00A         	movff	memcpy@d1+1,memcpy@d+1
  4277   004738  EFB3  F023         	goto	l3328
  4278   00473C                     l3320:
  4279   00473C  0060  F02F  FFD9   	movff	memcpy@s,fsr2l
  4280   004742  0060  F033  FFDA   	movff	memcpy@s+1,fsr2h
  4281   004748  50DF               	movf	indf2,w,c
  4282   00474A  6E0D               	movwf	memcpy@tmp^0,c
  4283   00474C  4A0B               	infsnz	memcpy@s^0,f,c
  4284   00474E  2A0C               	incf	(memcpy@s+1)^0,f,c
  4285   004750  0060  F027  FFD9   	movff	memcpy@d,fsr2l
  4286   004756  0060  F02B  FFDA   	movff	memcpy@d+1,fsr2h
  4287   00475C  0060  F037  FFDF   	movff	memcpy@tmp,indf2
  4288   004762  4A09               	infsnz	memcpy@d^0,f,c
  4289   004764  2A0A               	incf	(memcpy@d+1)^0,f,c
  4290   004766                     l3328:
  4291   004766  0607               	decf	memcpy@n^0,f,c
  4292   004768  A0D8               	btfss	status,0,c
  4293   00476A  0608               	decf	(memcpy@n+1)^0,f,c
  4294   00476C  2807               	incf	memcpy@n^0,w,c
  4295   00476E  E106               	bnz	u3461
  4296   004770  2808               	incf	(memcpy@n+1)^0,w,c
  4297   004772  A4D8               	btfss	status,2,c
  4298   004774  EFBE  F023         	goto	u3461
  4299   004778  EFC0  F023         	goto	u3460
  4300   00477C                     u3461:
  4301   00477C  EF9E  F023         	goto	l3320
  4302   004780                     u3460:
  4303   004780  0012               	return		;funcret
  4304   004782                     __end_of_memcpy:
  4305                           	callstack 0
  4306                           
  4307 ;; *************** function _labs *****************
  4308 ;; Defined at:
  4309 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\labs.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;  a               4    2[COMRAM] long 
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;		None
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  4    2[COMRAM] long 
  4316 ;; Registers used:
  4317 ;;		wreg, status,2, status,0
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4323 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4325 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4326 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4327 ;;Total ram usage:        8 bytes
  4328 ;; Hardware stack levels used: 1
  4329 ;; Hardware stack levels required when called: 1
  4330 ;; This function calls:
  4331 ;;		Nothing
  4332 ;; This function is called by:
  4333 ;;		_efgtoa
  4334 ;; This function uses a non-reentrant model
  4335 ;;
  4336                           
  4337                           	psect	text9
  4338   0047D8                     __ptext9:
  4339                           	callstack 0
  4340   0047D8                     _labs:
  4341                           	callstack 24
  4342   0047D8  BE06               	btfsc	(labs@a+3)^0,7,c
  4343   0047DA  EFF1  F023         	goto	u3351
  4344   0047DE  EFF3  F023         	goto	u3350
  4345   0047E2                     u3351:
  4346   0047E2  EFFD  F023         	goto	l3286
  4347   0047E6                     u3350:
  4348   0047E6  C003  F003         	movff	labs@a,?_labs
  4349   0047EA  C004  F004         	movff	labs@a+1,?_labs+1
  4350   0047EE  C005  F005         	movff	labs@a+2,?_labs+2
  4351   0047F2  C006  F006         	movff	labs@a+3,?_labs+3
  4352   0047F6  EF16  F024         	goto	l1098
  4353   0047FA                     l3286:
  4354   0047FA  C003  F007         	movff	labs@a,??_labs
  4355   0047FE  C004  F008         	movff	labs@a+1,??_labs+1
  4356   004802  C005  F009         	movff	labs@a+2,??_labs+2
  4357   004806  C006  F00A         	movff	labs@a+3,??_labs+3
  4358   00480A  1E07               	comf	??_labs^0,f,c
  4359   00480C  1E08               	comf	(??_labs+1)^0,f,c
  4360   00480E  1E09               	comf	(??_labs+2)^0,f,c
  4361   004810  1E0A               	comf	(??_labs+3)^0,f,c
  4362   004812  2A07               	incf	??_labs^0,f,c
  4363   004814  0E00               	movlw	0
  4364   004816  2208               	addwfc	(??_labs+1)^0,f,c
  4365   004818  2209               	addwfc	(??_labs+2)^0,f,c
  4366   00481A  220A               	addwfc	(??_labs+3)^0,f,c
  4367   00481C  C007  F003         	movff	??_labs,?_labs
  4368   004820  C008  F004         	movff	??_labs+1,?_labs+1
  4369   004824  C009  F005         	movff	??_labs+2,?_labs+2
  4370   004828  C00A  F006         	movff	??_labs+3,?_labs+3
  4371   00482C                     l1098:
  4372   00482C  0012               	return		;funcret
  4373   00482E                     __end_of_labs:
  4374                           	callstack 0
  4375                           
  4376 ;; *************** function _floorf *****************
  4377 ;; Defined at:
  4378 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\floorf.c"
  4379 ;; Parameters:    Size  Location     Type
  4380 ;;  x               4   27[COMRAM] float 
  4381 ;; Auto vars:     Size  Location     Type
  4382 ;;  u               4   43[COMRAM] struct .
  4383 ;;  m               4   37[COMRAM] unsigned long 
  4384 ;;  e               2   41[COMRAM] int 
  4385 ;; Return value:  Size  Location     Type
  4386 ;;                  4   27[COMRAM] float 
  4387 ;; Registers used:
  4388 ;;		wreg, status,2, status,0
  4389 ;; Tracked objects:
  4390 ;;		On entry : 0/0
  4391 ;;		On exit  : 0/0
  4392 ;;		Unchanged: 0/0
  4393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4394 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4395 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4396 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4397 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4398 ;;Total ram usage:       20 bytes
  4399 ;; Hardware stack levels used: 1
  4400 ;; Hardware stack levels required when called: 1
  4401 ;; This function calls:
  4402 ;;		Nothing
  4403 ;; This function is called by:
  4404 ;;		_efgtoa
  4405 ;; This function uses a non-reentrant model
  4406 ;;
  4407                           
  4408                           	psect	text10
  4409   003938                     __ptext10:
  4410                           	callstack 0
  4411   003938                     _floorf:
  4412                           	callstack 24
  4413   003938  C054  F02C         	movff	floorf@F521,floorf@u
  4414   00393C  C055  F02D         	movff	floorf@F521+1,floorf@u+1
  4415   003940  C056  F02E         	movff	floorf@F521+2,floorf@u+2
  4416   003944  C057  F02F         	movff	floorf@F521+3,floorf@u+3
  4417   003948  C01C  F02C         	movff	floorf@x,floorf@u
  4418   00394C  C01D  F02D         	movff	floorf@x+1,floorf@u+1
  4419   003950  C01E  F02E         	movff	floorf@x+2,floorf@u+2
  4420   003954  C01F  F02F         	movff	floorf@x+3,floorf@u+3
  4421   003958  0E81               	movlw	129
  4422   00395A  6E20               	movwf	??_floorf^0,c
  4423   00395C  0EFF               	movlw	255
  4424   00395E  6E21               	movwf	(??_floorf+1)^0,c
  4425   003960  C02C  F022         	movff	floorf@u,??_floorf+2
  4426   003964  C02D  F023         	movff	floorf@u+1,??_floorf+3
  4427   003968  C02E  F024         	movff	floorf@u+2,??_floorf+4
  4428   00396C  C02F  F025         	movff	floorf@u+3,??_floorf+5
  4429   003970  0E18               	movlw	24
  4430   003972  EFC0  F01C         	goto	u3360
  4431   003976                     u3365:
  4432   003976  90D8               	bcf	status,0,c
  4433   003978  3225               	rrcf	(??_floorf+5)^0,f,c
  4434   00397A  3224               	rrcf	(??_floorf+4)^0,f,c
  4435   00397C  3223               	rrcf	(??_floorf+3)^0,f,c
  4436   00397E  3222               	rrcf	(??_floorf+2)^0,f,c
  4437   003980                     u3360:
  4438   003980  2EE8               	decfsz	wreg,f,c
  4439   003982  EFBB  F01C         	goto	u3365
  4440   003986  5022               	movf	(??_floorf+2)^0,w,c
  4441   003988  2420               	addwf	??_floorf^0,w,c
  4442   00398A  6E2A               	movwf	floorf@e^0,c
  4443   00398C  0E00               	movlw	0
  4444   00398E  2021               	addwfc	(??_floorf+1)^0,w,c
  4445   003990  6E2B               	movwf	(floorf@e+1)^0,c
  4446   003992  BE2B               	btfsc	(floorf@e+1)^0,7,c
  4447   003994  EFD5  F01C         	goto	u3371
  4448   003998  502B               	movf	(floorf@e+1)^0,w,c
  4449   00399A  E109               	bnz	u3370
  4450   00399C  0E17               	movlw	23
  4451   00399E  5C2A               	subwf	floorf@e^0,w,c
  4452   0039A0  A0D8               	btfss	status,0,c
  4453   0039A2  EFD5  F01C         	goto	u3371
  4454   0039A6  EFD7  F01C         	goto	u3370
  4455   0039AA                     u3371:
  4456   0039AA  EFE1  F01C         	goto	l3296
  4457   0039AE                     u3370:
  4458   0039AE                     l3294:
  4459   0039AE  C01C  F01C         	movff	floorf@x,?_floorf
  4460   0039B2  C01D  F01D         	movff	floorf@x+1,?_floorf+1
  4461   0039B6  C01E  F01E         	movff	floorf@x+2,?_floorf+2
  4462   0039BA  C01F  F01F         	movff	floorf@x+3,?_floorf+3
  4463   0039BE  EFA4  F01D         	goto	l1084
  4464   0039C2                     l3296:
  4465   0039C2  BE2B               	btfsc	(floorf@e+1)^0,7,c
  4466   0039C4  EFE6  F01C         	goto	u3381
  4467   0039C8  EFE8  F01C         	goto	u3380
  4468   0039CC                     u3381:
  4469   0039CC  EF58  F01D         	goto	l3306
  4470   0039D0                     u3380:
  4471   0039D0  C02A  F020         	movff	floorf@e,??_floorf
  4472   0039D4  0EFF               	movlw	255
  4473   0039D6  6E21               	movwf	(??_floorf+1)^0,c
  4474   0039D8  0EFF               	movlw	255
  4475   0039DA  6E22               	movwf	(??_floorf+2)^0,c
  4476   0039DC  0E7F               	movlw	127
  4477   0039DE  6E23               	movwf	(??_floorf+3)^0,c
  4478   0039E0  0E00               	movlw	0
  4479   0039E2  6E24               	movwf	(??_floorf+4)^0,c
  4480   0039E4                     u3395:
  4481   0039E4  6620               	tstfsz	??_floorf^0,c
  4482   0039E6  EFF7  F01C         	goto	u3396
  4483   0039EA  EFFF  F01C         	goto	u3397
  4484   0039EE                     u3396:
  4485   0039EE  3424               	rlcf	(??_floorf+4)^0,w,c
  4486   0039F0  3224               	rrcf	(??_floorf+4)^0,f,c
  4487   0039F2  3223               	rrcf	(??_floorf+3)^0,f,c
  4488   0039F4  3222               	rrcf	(??_floorf+2)^0,f,c
  4489   0039F6  3221               	rrcf	(??_floorf+1)^0,f,c
  4490   0039F8  2E20               	decfsz	??_floorf^0,f,c
  4491   0039FA  EFF2  F01C         	goto	u3395
  4492   0039FE                     u3397:
  4493   0039FE  C021  F026         	movff	??_floorf+1,floorf@m
  4494   003A02  C022  F027         	movff	??_floorf+2,floorf@m+1
  4495   003A06  C023  F028         	movff	??_floorf+3,floorf@m+2
  4496   003A0A  C024  F029         	movff	??_floorf+4,floorf@m+3
  4497   003A0E  5026               	movf	floorf@m^0,w,c
  4498   003A10  142C               	andwf	floorf@u^0,w,c
  4499   003A12  6E20               	movwf	??_floorf^0,c
  4500   003A14  5027               	movf	(floorf@m+1)^0,w,c
  4501   003A16  142D               	andwf	(floorf@u+1)^0,w,c
  4502   003A18  6E21               	movwf	(??_floorf+1)^0,c
  4503   003A1A  5028               	movf	(floorf@m+2)^0,w,c
  4504   003A1C  142E               	andwf	(floorf@u+2)^0,w,c
  4505   003A1E  6E22               	movwf	(??_floorf+2)^0,c
  4506   003A20  5029               	movf	(floorf@m+3)^0,w,c
  4507   003A22  142F               	andwf	(floorf@u+3)^0,w,c
  4508   003A24  6E23               	movwf	(??_floorf+3)^0,c
  4509   003A26  5020               	movf	??_floorf^0,w,c
  4510   003A28  1021               	iorwf	(??_floorf+1)^0,w,c
  4511   003A2A  1022               	iorwf	(??_floorf+2)^0,w,c
  4512   003A2C  1023               	iorwf	(??_floorf+3)^0,w,c
  4513   003A2E  A4D8               	btfss	status,2,c
  4514   003A30  EF1C  F01D         	goto	u3401
  4515   003A34  EF1E  F01D         	goto	u3400
  4516   003A38                     u3401:
  4517   003A38  EF20  F01D         	goto	l3302
  4518   003A3C                     u3400:
  4519   003A3C  EFD7  F01C         	goto	l3294
  4520   003A40                     l3302:
  4521   003A40  C02C  F020         	movff	floorf@u,??_floorf
  4522   003A44  C02D  F021         	movff	floorf@u+1,??_floorf+1
  4523   003A48  C02E  F022         	movff	floorf@u+2,??_floorf+2
  4524   003A4C  C02F  F023         	movff	floorf@u+3,??_floorf+3
  4525   003A50  0E20               	movlw	32
  4526   003A52  EF30  F01D         	goto	u3410
  4527   003A56                     u3415:
  4528   003A56  90D8               	bcf	status,0,c
  4529   003A58  3223               	rrcf	(??_floorf+3)^0,f,c
  4530   003A5A  3222               	rrcf	(??_floorf+2)^0,f,c
  4531   003A5C  3221               	rrcf	(??_floorf+1)^0,f,c
  4532   003A5E  3220               	rrcf	??_floorf^0,f,c
  4533   003A60                     u3410:
  4534   003A60  2EE8               	decfsz	wreg,f,c
  4535   003A62  EF2B  F01D         	goto	u3415
  4536   003A66  5020               	movf	??_floorf^0,w,c
  4537   003A68  1021               	iorwf	(??_floorf+1)^0,w,c
  4538   003A6A  1022               	iorwf	(??_floorf+2)^0,w,c
  4539   003A6C  1023               	iorwf	(??_floorf+3)^0,w,c
  4540   003A6E  B4D8               	btfsc	status,2,c
  4541   003A70  EF3C  F01D         	goto	u3421
  4542   003A74  EF3E  F01D         	goto	u3420
  4543   003A78                     u3421:
  4544   003A78  EF46  F01D         	goto	l1087
  4545   003A7C                     u3420:
  4546   003A7C  5026               	movf	floorf@m^0,w,c
  4547   003A7E  262C               	addwf	floorf@u^0,f,c
  4548   003A80  5027               	movf	(floorf@m+1)^0,w,c
  4549   003A82  222D               	addwfc	(floorf@u+1)^0,f,c
  4550   003A84  5028               	movf	(floorf@m+2)^0,w,c
  4551   003A86  222E               	addwfc	(floorf@u+2)^0,f,c
  4552   003A88  5029               	movf	(floorf@m+3)^0,w,c
  4553   003A8A  222F               	addwfc	(floorf@u+3)^0,f,c
  4554   003A8C                     l1087:
  4555   003A8C  1C26               	comf	floorf@m^0,w,c
  4556   003A8E  6E20               	movwf	??_floorf^0,c
  4557   003A90  1C27               	comf	(floorf@m+1)^0,w,c
  4558   003A92  6E21               	movwf	(??_floorf+1)^0,c
  4559   003A94  1C28               	comf	(floorf@m+2)^0,w,c
  4560   003A96  6E22               	movwf	(??_floorf+2)^0,c
  4561   003A98  1C29               	comf	(floorf@m+3)^0,w,c
  4562   003A9A  6E23               	movwf	(??_floorf+3)^0,c
  4563   003A9C  5020               	movf	??_floorf^0,w,c
  4564   003A9E  162C               	andwf	floorf@u^0,f,c
  4565   003AA0  5021               	movf	(??_floorf+1)^0,w,c
  4566   003AA2  162D               	andwf	(floorf@u+1)^0,f,c
  4567   003AA4  5022               	movf	(??_floorf+2)^0,w,c
  4568   003AA6  162E               	andwf	(floorf@u+2)^0,f,c
  4569   003AA8  5023               	movf	(??_floorf+3)^0,w,c
  4570   003AAA  162F               	andwf	(floorf@u+3)^0,f,c
  4571   003AAC  EF9C  F01D         	goto	l3314
  4572   003AB0                     l3306:
  4573   003AB0  C02C  F020         	movff	floorf@u,??_floorf
  4574   003AB4  C02D  F021         	movff	floorf@u+1,??_floorf+1
  4575   003AB8  C02E  F022         	movff	floorf@u+2,??_floorf+2
  4576   003ABC  C02F  F023         	movff	floorf@u+3,??_floorf+3
  4577   003AC0  0E20               	movlw	32
  4578   003AC2  EF68  F01D         	goto	u3430
  4579   003AC6                     u3435:
  4580   003AC6  90D8               	bcf	status,0,c
  4581   003AC8  3223               	rrcf	(??_floorf+3)^0,f,c
  4582   003ACA  3222               	rrcf	(??_floorf+2)^0,f,c
  4583   003ACC  3221               	rrcf	(??_floorf+1)^0,f,c
  4584   003ACE  3220               	rrcf	??_floorf^0,f,c
  4585   003AD0                     u3430:
  4586   003AD0  2EE8               	decfsz	wreg,f,c
  4587   003AD2  EF63  F01D         	goto	u3435
  4588   003AD6  5020               	movf	??_floorf^0,w,c
  4589   003AD8  1021               	iorwf	(??_floorf+1)^0,w,c
  4590   003ADA  1022               	iorwf	(??_floorf+2)^0,w,c
  4591   003ADC  1023               	iorwf	(??_floorf+3)^0,w,c
  4592   003ADE  A4D8               	btfss	status,2,c
  4593   003AE0  EF74  F01D         	goto	u3441
  4594   003AE4  EF76  F01D         	goto	u3440
  4595   003AE8                     u3441:
  4596   003AE8  EF80  F01D         	goto	l3310
  4597   003AEC                     u3440:
  4598   003AEC  0E00               	movlw	0
  4599   003AEE  6E2C               	movwf	floorf@u^0,c
  4600   003AF0  0E00               	movlw	0
  4601   003AF2  6E2D               	movwf	(floorf@u+1)^0,c
  4602   003AF4  0E00               	movlw	0
  4603   003AF6  6E2E               	movwf	(floorf@u+2)^0,c
  4604   003AF8  0E00               	movlw	0
  4605   003AFA  6E2F               	movwf	(floorf@u+3)^0,c
  4606   003AFC  EF9C  F01D         	goto	l3314
  4607   003B00                     l3310:
  4608   003B00  90D8               	bcf	status,0,c
  4609   003B02  342C               	rlcf	floorf@u^0,w,c
  4610   003B04  6E20               	movwf	??_floorf^0,c
  4611   003B06  342D               	rlcf	(floorf@u+1)^0,w,c
  4612   003B08  6E21               	movwf	(??_floorf+1)^0,c
  4613   003B0A  342E               	rlcf	(floorf@u+2)^0,w,c
  4614   003B0C  6E22               	movwf	(??_floorf+2)^0,c
  4615   003B0E  342F               	rlcf	(floorf@u+3)^0,w,c
  4616   003B10  6E23               	movwf	(??_floorf+3)^0,c
  4617   003B12  5020               	movf	??_floorf^0,w,c
  4618   003B14  1021               	iorwf	(??_floorf+1)^0,w,c
  4619   003B16  1022               	iorwf	(??_floorf+2)^0,w,c
  4620   003B18  1023               	iorwf	(??_floorf+3)^0,w,c
  4621   003B1A  B4D8               	btfsc	status,2,c
  4622   003B1C  EF92  F01D         	goto	u3451
  4623   003B20  EF94  F01D         	goto	u3450
  4624   003B24                     u3451:
  4625   003B24  EF9C  F01D         	goto	l3314
  4626   003B28                     u3450:
  4627   003B28  0E00               	movlw	0
  4628   003B2A  6E2C               	movwf	floorf@u^0,c
  4629   003B2C  0E00               	movlw	0
  4630   003B2E  6E2D               	movwf	(floorf@u+1)^0,c
  4631   003B30  0E80               	movlw	128
  4632   003B32  6E2E               	movwf	(floorf@u+2)^0,c
  4633   003B34  0EBF               	movlw	191
  4634   003B36  6E2F               	movwf	(floorf@u+3)^0,c
  4635   003B38                     l3314:
  4636   003B38  C02C  F01C         	movff	floorf@u,?_floorf
  4637   003B3C  C02D  F01D         	movff	floorf@u+1,?_floorf+1
  4638   003B40  C02E  F01E         	movff	floorf@u+2,?_floorf+2
  4639   003B44  C02F  F01F         	movff	floorf@u+3,?_floorf+3
  4640   003B48                     l1084:
  4641   003B48  0012               	return		;funcret
  4642   003B4A                     __end_of_floorf:
  4643                           	callstack 0
  4644                           
  4645 ;; *************** function ___fpclassifyf *****************
  4646 ;; Defined at:
  4647 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__fpclassifyf.c"
  4648 ;; Parameters:    Size  Location     Type
  4649 ;;  x               4    2[COMRAM] float 
  4650 ;; Auto vars:     Size  Location     Type
  4651 ;;  u               4   12[COMRAM] struct .
  4652 ;;  e               2   10[COMRAM] int 
  4653 ;; Return value:  Size  Location     Type
  4654 ;;                  2    2[COMRAM] int 
  4655 ;; Registers used:
  4656 ;;		wreg, status,2, status,0
  4657 ;; Tracked objects:
  4658 ;;		On entry : 0/0
  4659 ;;		On exit  : 0/0
  4660 ;;		Unchanged: 0/0
  4661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4662 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4663 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4664 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4665 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4666 ;;Total ram usage:       14 bytes
  4667 ;; Hardware stack levels used: 1
  4668 ;; Hardware stack levels required when called: 1
  4669 ;; This function calls:
  4670 ;;		Nothing
  4671 ;; This function is called by:
  4672 ;;		_efgtoa
  4673 ;; This function uses a non-reentrant model
  4674 ;;
  4675                           
  4676                           	psect	text11
  4677   0040C6                     __ptext11:
  4678                           	callstack 0
  4679   0040C6                     ___fpclassifyf:
  4680                           	callstack 24
  4681   0040C6  C058  F00D         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4682   0040CA  C059  F00E         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4683   0040CE  C05A  F00F         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4684   0040D2  C05B  F010         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4685   0040D6  C003  F00D         	movff	___fpclassifyf@x,___fpclassifyf@u
  4686   0040DA  C004  F00E         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4687   0040DE  C005  F00F         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4688   0040E2  C006  F010         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4689   0040E6  C00D  F007         	movff	___fpclassifyf@u,??___fpclassifyf
  4690   0040EA  C00E  F008         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4691   0040EE  C00F  F009         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4692   0040F2  C010  F00A         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4693   0040F6  0E18               	movlw	24
  4694   0040F8  EF83  F020         	goto	u3270
  4695   0040FC                     u3275:
  4696   0040FC  90D8               	bcf	status,0,c
  4697   0040FE  320A               	rrcf	(??___fpclassifyf+3)^0,f,c
  4698   004100  3209               	rrcf	(??___fpclassifyf+2)^0,f,c
  4699   004102  3208               	rrcf	(??___fpclassifyf+1)^0,f,c
  4700   004104  3207               	rrcf	??___fpclassifyf^0,f,c
  4701   004106                     u3270:
  4702   004106  2EE8               	decfsz	wreg,f,c
  4703   004108  EF7E  F020         	goto	u3275
  4704   00410C  5007               	movf	??___fpclassifyf^0,w,c
  4705   00410E  6E0B               	movwf	___fpclassifyf@e^0,c
  4706   004110  6A0C               	clrf	(___fpclassifyf@e+1)^0,c
  4707   004112  500B               	movf	___fpclassifyf@e^0,w,c
  4708   004114  100C               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4709   004116  A4D8               	btfss	status,2,c
  4710   004118  EF90  F020         	goto	u3281
  4711   00411C  EF92  F020         	goto	u3280
  4712   004120                     u3281:
  4713   004120  EFB2  F020         	goto	l3268
  4714   004124                     u3280:
  4715   004124  90D8               	bcf	status,0,c
  4716   004126  340D               	rlcf	___fpclassifyf@u^0,w,c
  4717   004128  6E07               	movwf	??___fpclassifyf^0,c
  4718   00412A  340E               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4719   00412C  6E08               	movwf	(??___fpclassifyf+1)^0,c
  4720   00412E  340F               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4721   004130  6E09               	movwf	(??___fpclassifyf+2)^0,c
  4722   004132  3410               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4723   004134  6E0A               	movwf	(??___fpclassifyf+3)^0,c
  4724   004136  5007               	movf	??___fpclassifyf^0,w,c
  4725   004138  1008               	iorwf	(??___fpclassifyf+1)^0,w,c
  4726   00413A  1009               	iorwf	(??___fpclassifyf+2)^0,w,c
  4727   00413C  100A               	iorwf	(??___fpclassifyf+3)^0,w,c
  4728   00413E  A4D8               	btfss	status,2,c
  4729   004140  EFA4  F020         	goto	u3291
  4730   004144  EFA6  F020         	goto	u3290
  4731   004148                     u3291:
  4732   004148  EFAC  F020         	goto	l3264
  4733   00414C                     u3290:
  4734   00414C  0E00               	movlw	0
  4735   00414E  6E04               	movwf	(?___fpclassifyf+1)^0,c
  4736   004150  0E02               	movlw	2
  4737   004152  6E03               	movwf	?___fpclassifyf^0,c
  4738   004154  EFE1  F020         	goto	l1070
  4739   004158                     l3264:
  4740   004158  0E00               	movlw	0
  4741   00415A  6E04               	movwf	(?___fpclassifyf+1)^0,c
  4742   00415C  0E03               	movlw	3
  4743   00415E  6E03               	movwf	?___fpclassifyf^0,c
  4744   004160  EFE1  F020         	goto	l1070
  4745   004164                     l3268:
  4746   004164  280B               	incf	___fpclassifyf@e^0,w,c
  4747   004166  100C               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4748   004168  A4D8               	btfss	status,2,c
  4749   00416A  EFB9  F020         	goto	u3301
  4750   00416E  EFBB  F020         	goto	u3300
  4751   004172                     u3301:
  4752   004172  EFDD  F020         	goto	l3274
  4753   004176                     u3300:
  4754   004176  C00D  F007         	movff	___fpclassifyf@u,??___fpclassifyf
  4755   00417A  C00E  F008         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4756   00417E  C00F  F009         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4757   004182  C010  F00A         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4758   004186  0E09               	movlw	9
  4759   004188                     u3315:
  4760   004188  90D8               	bcf	status,0,c
  4761   00418A  3607               	rlcf	??___fpclassifyf^0,f,c
  4762   00418C  3608               	rlcf	(??___fpclassifyf+1)^0,f,c
  4763   00418E  3609               	rlcf	(??___fpclassifyf+2)^0,f,c
  4764   004190  360A               	rlcf	(??___fpclassifyf+3)^0,f,c
  4765   004192  2EE8               	decfsz	wreg,f,c
  4766   004194  EFC4  F020         	goto	u3315
  4767   004198  5007               	movf	??___fpclassifyf^0,w,c
  4768   00419A  1008               	iorwf	(??___fpclassifyf+1)^0,w,c
  4769   00419C  1009               	iorwf	(??___fpclassifyf+2)^0,w,c
  4770   00419E  100A               	iorwf	(??___fpclassifyf+3)^0,w,c
  4771   0041A0  B4D8               	btfsc	status,2,c
  4772   0041A2  EFD5  F020         	goto	u3321
  4773   0041A6  EFD8  F020         	goto	u3320
  4774   0041AA                     u3321:
  4775   0041AA  0E01               	movlw	1
  4776   0041AC  EFD9  F020         	goto	u3330
  4777   0041B0                     u3320:
  4778   0041B0  0E00               	movlw	0
  4779   0041B2                     u3330:
  4780   0041B2  6E03               	movwf	?___fpclassifyf^0,c
  4781   0041B4  6A04               	clrf	(?___fpclassifyf+1)^0,c
  4782   0041B6  EFE1  F020         	goto	l1070
  4783   0041BA                     l3274:
  4784   0041BA  0E00               	movlw	0
  4785   0041BC  6E04               	movwf	(?___fpclassifyf+1)^0,c
  4786   0041BE  0E04               	movlw	4
  4787   0041C0  6E03               	movwf	?___fpclassifyf^0,c
  4788   0041C2                     l1070:
  4789   0041C2  0012               	return		;funcret
  4790   0041C4                     __end_of___fpclassifyf:
  4791                           	callstack 0
  4792                           
  4793 ;; *************** function ___fltol *****************
  4794 ;; Defined at:
  4795 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
  4796 ;; Parameters:    Size  Location     Type
  4797 ;;  f1              4    2[COMRAM] int 
  4798 ;; Auto vars:     Size  Location     Type
  4799 ;;  exp1            1   11[COMRAM] unsigned char 
  4800 ;;  sign1           1   10[COMRAM] unsigned char 
  4801 ;; Return value:  Size  Location     Type
  4802 ;;                  4    2[COMRAM] long 
  4803 ;; Registers used:
  4804 ;;		wreg, status,2, status,0
  4805 ;; Tracked objects:
  4806 ;;		On entry : 0/0
  4807 ;;		On exit  : 0/0
  4808 ;;		Unchanged: 0/0
  4809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4810 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4811 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4812 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4813 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4814 ;;Total ram usage:       10 bytes
  4815 ;; Hardware stack levels used: 1
  4816 ;; Hardware stack levels required when called: 1
  4817 ;; This function calls:
  4818 ;;		Nothing
  4819 ;; This function is called by:
  4820 ;;		_efgtoa
  4821 ;; This function uses a non-reentrant model
  4822 ;;
  4823                           
  4824                           	psect	text12
  4825   003EBC                     __ptext12:
  4826                           	callstack 0
  4827   003EBC                     ___fltol:
  4828                           	callstack 24
  4829   003EBC  3405               	rlcf	(___fltol@f1+2)^0,w,c
  4830   003EBE  3406               	rlcf	(___fltol@f1+3)^0,w,c
  4831   003EC0  6E0C               	movwf	___fltol@exp1^0,c
  4832   003EC2  500C               	movf	___fltol@exp1^0,w,c
  4833   003EC4  A4D8               	btfss	status,2,c
  4834   003EC6  EF67  F01F         	goto	u3171
  4835   003ECA  EF69  F01F         	goto	u3170
  4836   003ECE                     u3171:
  4837   003ECE  EF73  F01F         	goto	l3202
  4838   003ED2                     u3170:
  4839   003ED2                     l3198:
  4840   003ED2  0E00               	movlw	0
  4841   003ED4  6E03               	movwf	?___fltol^0,c
  4842   003ED6  0E00               	movlw	0
  4843   003ED8  6E04               	movwf	(?___fltol+1)^0,c
  4844   003EDA  0E00               	movlw	0
  4845   003EDC  6E05               	movwf	(?___fltol+2)^0,c
  4846   003EDE  0E00               	movlw	0
  4847   003EE0  6E06               	movwf	(?___fltol+3)^0,c
  4848   003EE2  EFE0  F01F         	goto	l538
  4849   003EE6                     l3202:
  4850   003EE6  C003  F007         	movff	___fltol@f1,??___fltol
  4851   003EEA  C004  F008         	movff	___fltol@f1+1,??___fltol+1
  4852   003EEE  C005  F009         	movff	___fltol@f1+2,??___fltol+2
  4853   003EF2  C006  F00A         	movff	___fltol@f1+3,??___fltol+3
  4854   003EF6  0E20               	movlw	32
  4855   003EF8  EF83  F01F         	goto	u3180
  4856   003EFC                     u3185:
  4857   003EFC  90D8               	bcf	status,0,c
  4858   003EFE  320A               	rrcf	(??___fltol+3)^0,f,c
  4859   003F00  3209               	rrcf	(??___fltol+2)^0,f,c
  4860   003F02  3208               	rrcf	(??___fltol+1)^0,f,c
  4861   003F04  3207               	rrcf	??___fltol^0,f,c
  4862   003F06                     u3180:
  4863   003F06  2EE8               	decfsz	wreg,f,c
  4864   003F08  EF7E  F01F         	goto	u3185
  4865   003F0C  5007               	movf	??___fltol^0,w,c
  4866   003F0E  6E0B               	movwf	___fltol@sign1^0,c
  4867   003F10  8E05               	bsf	(___fltol@f1+2)^0,7,c
  4868   003F12  0EFF               	movlw	255
  4869   003F14  1603               	andwf	___fltol@f1^0,f,c
  4870   003F16  0EFF               	movlw	255
  4871   003F18  1604               	andwf	(___fltol@f1+1)^0,f,c
  4872   003F1A  0EFF               	movlw	255
  4873   003F1C  1605               	andwf	(___fltol@f1+2)^0,f,c
  4874   003F1E  0E00               	movlw	0
  4875   003F20  1606               	andwf	(___fltol@f1+3)^0,f,c
  4876   003F22  0E96               	movlw	150
  4877   003F24  5E0C               	subwf	___fltol@exp1^0,f,c
  4878   003F26  BE0C               	btfsc	___fltol@exp1^0,7,c
  4879   003F28  EF9A  F01F         	goto	u3190
  4880   003F2C  EF98  F01F         	goto	u3191
  4881   003F30                     u3191:
  4882   003F30  EFB0  F01F         	goto	l3222
  4883   003F34                     u3190:
  4884   003F34  500C               	movf	___fltol@exp1^0,w,c
  4885   003F36  0A80               	xorlw	128
  4886   003F38  0F97               	addlw	151
  4887   003F3A  B0D8               	btfsc	status,0,c
  4888   003F3C  EFA2  F01F         	goto	u3201
  4889   003F40  EFA4  F01F         	goto	u3200
  4890   003F44                     u3201:
  4891   003F44  EFA6  F01F         	goto	l3218
  4892   003F48                     u3200:
  4893   003F48  EF69  F01F         	goto	l3198
  4894   003F4C                     l3218:
  4895   003F4C  90D8               	bcf	status,0,c
  4896   003F4E  3206               	rrcf	(___fltol@f1+3)^0,f,c
  4897   003F50  3205               	rrcf	(___fltol@f1+2)^0,f,c
  4898   003F52  3204               	rrcf	(___fltol@f1+1)^0,f,c
  4899   003F54  3203               	rrcf	___fltol@f1^0,f,c
  4900   003F56  3E0C               	incfsz	___fltol@exp1^0,f,c
  4901   003F58  EFA6  F01F         	goto	l3218
  4902   003F5C  EFC8  F01F         	goto	l3232
  4903   003F60                     l3222:
  4904   003F60  0E1F               	movlw	31
  4905   003F62  640C               	cpfsgt	___fltol@exp1^0,c
  4906   003F64  EFB6  F01F         	goto	u3211
  4907   003F68  EFB8  F01F         	goto	u3210
  4908   003F6C                     u3211:
  4909   003F6C  EFC0  F01F         	goto	l3230
  4910   003F70                     u3210:
  4911   003F70  EF69  F01F         	goto	l3198
  4912   003F74                     l3228:
  4913   003F74  90D8               	bcf	status,0,c
  4914   003F76  3603               	rlcf	___fltol@f1^0,f,c
  4915   003F78  3604               	rlcf	(___fltol@f1+1)^0,f,c
  4916   003F7A  3605               	rlcf	(___fltol@f1+2)^0,f,c
  4917   003F7C  3606               	rlcf	(___fltol@f1+3)^0,f,c
  4918   003F7E  060C               	decf	___fltol@exp1^0,f,c
  4919   003F80                     l3230:
  4920   003F80  500C               	movf	___fltol@exp1^0,w,c
  4921   003F82  A4D8               	btfss	status,2,c
  4922   003F84  EFC6  F01F         	goto	u3221
  4923   003F88  EFC8  F01F         	goto	u3220
  4924   003F8C                     u3221:
  4925   003F8C  EFBA  F01F         	goto	l3228
  4926   003F90                     u3220:
  4927   003F90                     l3232:
  4928   003F90  500B               	movf	___fltol@sign1^0,w,c
  4929   003F92  B4D8               	btfsc	status,2,c
  4930   003F94  EFCE  F01F         	goto	u3231
  4931   003F98  EFD0  F01F         	goto	u3230
  4932   003F9C                     u3231:
  4933   003F9C  EFD8  F01F         	goto	l3236
  4934   003FA0                     u3230:
  4935   003FA0  1E06               	comf	(___fltol@f1+3)^0,f,c
  4936   003FA2  1E05               	comf	(___fltol@f1+2)^0,f,c
  4937   003FA4  1E04               	comf	(___fltol@f1+1)^0,f,c
  4938   003FA6  6C03               	negf	___fltol@f1^0,c
  4939   003FA8  0E00               	movlw	0
  4940   003FAA  2204               	addwfc	(___fltol@f1+1)^0,f,c
  4941   003FAC  2205               	addwfc	(___fltol@f1+2)^0,f,c
  4942   003FAE  2206               	addwfc	(___fltol@f1+3)^0,f,c
  4943   003FB0                     l3236:
  4944   003FB0  C003  F003         	movff	___fltol@f1,?___fltol
  4945   003FB4  C004  F004         	movff	___fltol@f1+1,?___fltol+1
  4946   003FB8  C005  F005         	movff	___fltol@f1+2,?___fltol+2
  4947   003FBC  C006  F006         	movff	___fltol@f1+3,?___fltol+3
  4948   003FC0                     l538:
  4949   003FC0  0012               	return		;funcret
  4950   003FC2                     __end_of___fltol:
  4951                           	callstack 0
  4952                           
  4953 ;; *************** function ___flsub *****************
  4954 ;; Defined at:
  4955 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  4956 ;; Parameters:    Size  Location     Type
  4957 ;;  b               4   27[COMRAM] long 
  4958 ;;  a               4   31[COMRAM] long 
  4959 ;; Auto vars:     Size  Location     Type
  4960 ;;		None
  4961 ;; Return value:  Size  Location     Type
  4962 ;;                  4   27[COMRAM] long 
  4963 ;; Registers used:
  4964 ;;		wreg, status,2, status,0, cstack
  4965 ;; Tracked objects:
  4966 ;;		On entry : 0/0
  4967 ;;		On exit  : 0/0
  4968 ;;		Unchanged: 0/0
  4969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4970 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4973 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4974 ;;Total ram usage:        8 bytes
  4975 ;; Hardware stack levels used: 1
  4976 ;; Hardware stack levels required when called: 2
  4977 ;; This function calls:
  4978 ;;		___fladd
  4979 ;; This function is called by:
  4980 ;;		_efgtoa
  4981 ;; This function uses a non-reentrant model
  4982 ;;
  4983                           
  4984                           	psect	text13
  4985   004912                     __ptext13:
  4986                           	callstack 0
  4987   004912                     ___flsub:
  4988                           	callstack 23
  4989   004912  0E00               	movlw	0
  4990   004914  1A20               	xorwf	___flsub@a^0,f,c
  4991   004916  0E00               	movlw	0
  4992   004918  1A21               	xorwf	(___flsub@a+1)^0,f,c
  4993   00491A  0E00               	movlw	0
  4994   00491C  1A22               	xorwf	(___flsub@a+2)^0,f,c
  4995   00491E  0E80               	movlw	128
  4996   004920  1A23               	xorwf	(___flsub@a+3)^0,f,c
  4997   004922  C01C  F003         	movff	___flsub@b,___fladd@b
  4998   004926  C01D  F004         	movff	___flsub@b+1,___fladd@b+1
  4999   00492A  C01E  F005         	movff	___flsub@b+2,___fladd@b+2
  5000   00492E  C01F  F006         	movff	___flsub@b+3,___fladd@b+3
  5001   004932  C020  F007         	movff	___flsub@a,___fladd@a
  5002   004936  C021  F008         	movff	___flsub@a+1,___fladd@a+1
  5003   00493A  C022  F009         	movff	___flsub@a+2,___fladd@a+2
  5004   00493E  C023  F00A         	movff	___flsub@a+3,___fladd@a+3
  5005   004942  EC08  F015         	call	___fladd	;wreg free
  5006   004946  C003  F01C         	movff	?___fladd,?___flsub
  5007   00494A  C004  F01D         	movff	?___fladd+1,?___flsub+1
  5008   00494E  C005  F01E         	movff	?___fladd+2,?___flsub+2
  5009   004952  C006  F01F         	movff	?___fladd+3,?___flsub+3
  5010   004956  0012               	return		;funcret
  5011   004958                     __end_of___flsub:
  5012                           	callstack 0
  5013                           
  5014 ;; *************** function ___fladd *****************
  5015 ;; Defined at:
  5016 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  5017 ;; Parameters:    Size  Location     Type
  5018 ;;  b               4    2[COMRAM] long 
  5019 ;;  a               4    6[COMRAM] long 
  5020 ;; Auto vars:     Size  Location     Type
  5021 ;;  grs             1   17[COMRAM] unsigned char 
  5022 ;;  bexp            1   16[COMRAM] unsigned char 
  5023 ;;  aexp            1   15[COMRAM] unsigned char 
  5024 ;;  signs           1   14[COMRAM] unsigned char 
  5025 ;; Return value:  Size  Location     Type
  5026 ;;                  4    2[COMRAM] unsigned char 
  5027 ;; Registers used:
  5028 ;;		wreg, status,2, status,0
  5029 ;; Tracked objects:
  5030 ;;		On entry : 0/0
  5031 ;;		On exit  : 0/0
  5032 ;;		Unchanged: 0/0
  5033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5034 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5035 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5036 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5037 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5038 ;;Total ram usage:       16 bytes
  5039 ;; Hardware stack levels used: 1
  5040 ;; Hardware stack levels required when called: 1
  5041 ;; This function calls:
  5042 ;;		Nothing
  5043 ;; This function is called by:
  5044 ;;		___flsub
  5045 ;;		_efgtoa
  5046 ;; This function uses a non-reentrant model
  5047 ;;
  5048                           
  5049                           	psect	text14
  5050   002A10                     __ptext14:
  5051                           	callstack 0
  5052   002A10                     ___fladd:
  5053                           	callstack 23
  5054   002A10  5006               	movf	(___fladd@b+3)^0,w,c
  5055   002A12  0B80               	andlw	128
  5056   002A14  6E0F               	movwf	___fladd@signs^0,c
  5057   002A16  5006               	movf	(___fladd@b+3)^0,w,c
  5058   002A18  2406               	addwf	(___fladd@b+3)^0,w,c
  5059   002A1A  6E11               	movwf	___fladd@bexp^0,c
  5060   002A1C  AE05               	btfss	(___fladd@b+2)^0,7,c
  5061   002A1E  EF13  F015         	goto	u2141
  5062   002A22  EF15  F015         	goto	u2140
  5063   002A26                     u2141:
  5064   002A26  EF16  F015         	goto	l2604
  5065   002A2A                     u2140:
  5066   002A2A  8011               	bsf	___fladd@bexp^0,0,c
  5067   002A2C                     l2604:
  5068   002A2C  5011               	movf	___fladd@bexp^0,w,c
  5069   002A2E  B4D8               	btfsc	status,2,c
  5070   002A30  EF1C  F015         	goto	u2151
  5071   002A34  EF1E  F015         	goto	u2150
  5072   002A38                     u2151:
  5073   002A38  EF32  F015         	goto	l2614
  5074   002A3C                     u2150:
  5075   002A3C  2811               	incf	___fladd@bexp^0,w,c
  5076   002A3E  A4D8               	btfss	status,2,c
  5077   002A40  EF24  F015         	goto	u2161
  5078   002A44  EF26  F015         	goto	u2160
  5079   002A48                     u2161:
  5080   002A48  EF2E  F015         	goto	l2610
  5081   002A4C                     u2160:
  5082   002A4C  0E00               	movlw	0
  5083   002A4E  6E03               	movwf	___fladd@b^0,c
  5084   002A50  0E00               	movlw	0
  5085   002A52  6E04               	movwf	(___fladd@b+1)^0,c
  5086   002A54  0E00               	movlw	0
  5087   002A56  6E05               	movwf	(___fladd@b+2)^0,c
  5088   002A58  0E00               	movlw	0
  5089   002A5A  6E06               	movwf	(___fladd@b+3)^0,c
  5090   002A5C                     l2610:
  5091   002A5C  8E05               	bsf	(___fladd@b+2)^0,7,c
  5092   002A5E  6A06               	clrf	(___fladd@b+3)^0,c
  5093   002A60  EF3A  F015         	goto	l2616
  5094   002A64                     l2614:
  5095   002A64  0E00               	movlw	0
  5096   002A66  6E03               	movwf	___fladd@b^0,c
  5097   002A68  0E00               	movlw	0
  5098   002A6A  6E04               	movwf	(___fladd@b+1)^0,c
  5099   002A6C  0E00               	movlw	0
  5100   002A6E  6E05               	movwf	(___fladd@b+2)^0,c
  5101   002A70  0E00               	movlw	0
  5102   002A72  6E06               	movwf	(___fladd@b+3)^0,c
  5103   002A74                     l2616:
  5104   002A74  500A               	movf	(___fladd@a+3)^0,w,c
  5105   002A76  0B80               	andlw	128
  5106   002A78  6E10               	movwf	___fladd@aexp^0,c
  5107   002A7A  500F               	movf	___fladd@signs^0,w,c
  5108   002A7C  1810               	xorwf	___fladd@aexp^0,w,c
  5109   002A7E  B4D8               	btfsc	status,2,c
  5110   002A80  EF44  F015         	goto	u2171
  5111   002A84  EF46  F015         	goto	u2170
  5112   002A88                     u2171:
  5113   002A88  EF47  F015         	goto	l2622
  5114   002A8C                     u2170:
  5115   002A8C  8C0F               	bsf	___fladd@signs^0,6,c
  5116   002A8E                     l2622:
  5117   002A8E  500A               	movf	(___fladd@a+3)^0,w,c
  5118   002A90  240A               	addwf	(___fladd@a+3)^0,w,c
  5119   002A92  6E10               	movwf	___fladd@aexp^0,c
  5120   002A94  AE09               	btfss	(___fladd@a+2)^0,7,c
  5121   002A96  EF4F  F015         	goto	u2181
  5122   002A9A  EF51  F015         	goto	u2180
  5123   002A9E                     u2181:
  5124   002A9E  EF52  F015         	goto	l2628
  5125   002AA2                     u2180:
  5126   002AA2  8010               	bsf	___fladd@aexp^0,0,c
  5127   002AA4                     l2628:
  5128   002AA4  5010               	movf	___fladd@aexp^0,w,c
  5129   002AA6  B4D8               	btfsc	status,2,c
  5130   002AA8  EF58  F015         	goto	u2191
  5131   002AAC  EF5A  F015         	goto	u2190
  5132   002AB0                     u2191:
  5133   002AB0  EF6E  F015         	goto	l2638
  5134   002AB4                     u2190:
  5135   002AB4  2810               	incf	___fladd@aexp^0,w,c
  5136   002AB6  A4D8               	btfss	status,2,c
  5137   002AB8  EF60  F015         	goto	u2201
  5138   002ABC  EF62  F015         	goto	u2200
  5139   002AC0                     u2201:
  5140   002AC0  EF6A  F015         	goto	l2634
  5141   002AC4                     u2200:
  5142   002AC4  0E00               	movlw	0
  5143   002AC6  6E07               	movwf	___fladd@a^0,c
  5144   002AC8  0E00               	movlw	0
  5145   002ACA  6E08               	movwf	(___fladd@a+1)^0,c
  5146   002ACC  0E00               	movlw	0
  5147   002ACE  6E09               	movwf	(___fladd@a+2)^0,c
  5148   002AD0  0E00               	movlw	0
  5149   002AD2  6E0A               	movwf	(___fladd@a+3)^0,c
  5150   002AD4                     l2634:
  5151   002AD4  8E09               	bsf	(___fladd@a+2)^0,7,c
  5152   002AD6  6A0A               	clrf	(___fladd@a+3)^0,c
  5153   002AD8  EF76  F015         	goto	l2640
  5154   002ADC                     l2638:
  5155   002ADC  0E00               	movlw	0
  5156   002ADE  6E07               	movwf	___fladd@a^0,c
  5157   002AE0  0E00               	movlw	0
  5158   002AE2  6E08               	movwf	(___fladd@a+1)^0,c
  5159   002AE4  0E00               	movlw	0
  5160   002AE6  6E09               	movwf	(___fladd@a+2)^0,c
  5161   002AE8  0E00               	movlw	0
  5162   002AEA  6E0A               	movwf	(___fladd@a+3)^0,c
  5163   002AEC                     l2640:
  5164   002AEC  5011               	movf	___fladd@bexp^0,w,c
  5165   002AEE  5C10               	subwf	___fladd@aexp^0,w,c
  5166   002AF0  B0D8               	btfsc	status,0,c
  5167   002AF2  EF7D  F015         	goto	u2211
  5168   002AF6  EF7F  F015         	goto	u2210
  5169   002AFA                     u2211:
  5170   002AFA  EFA6  F015         	goto	l2676
  5171   002AFE                     u2210:
  5172   002AFE  AC0F               	btfss	___fladd@signs^0,6,c
  5173   002B00  EF84  F015         	goto	u2221
  5174   002B04  EF86  F015         	goto	u2220
  5175   002B08                     u2221:
  5176   002B08  EF88  F015         	goto	l2646
  5177   002B0C                     u2220:
  5178   002B0C  0E80               	movlw	128
  5179   002B0E  1A0F               	xorwf	___fladd@signs^0,f,c
  5180   002B10                     l2646:
  5181   002B10  C011  F012         	movff	___fladd@bexp,___fladd@grs
  5182   002B14  C010  F011         	movff	___fladd@aexp,___fladd@bexp
  5183   002B18  C012  F010         	movff	___fladd@grs,___fladd@aexp
  5184   002B1C  C003  F012         	movff	___fladd@b,___fladd@grs
  5185   002B20  C007  F003         	movff	___fladd@a,___fladd@b
  5186   002B24  C012  F007         	movff	___fladd@grs,___fladd@a
  5187   002B28  C004  F012         	movff	___fladd@b+1,___fladd@grs
  5188   002B2C  C008  F004         	movff	___fladd@a+1,___fladd@b+1
  5189   002B30  C012  F008         	movff	___fladd@grs,___fladd@a+1
  5190   002B34  C005  F012         	movff	___fladd@b+2,___fladd@grs
  5191   002B38  C009  F005         	movff	___fladd@a+2,___fladd@b+2
  5192   002B3C  C012  F009         	movff	___fladd@grs,___fladd@a+2
  5193   002B40  C006  F012         	movff	___fladd@b+3,___fladd@grs
  5194   002B44  C00A  F006         	movff	___fladd@a+3,___fladd@b+3
  5195   002B48  C012  F00A         	movff	___fladd@grs,___fladd@a+3
  5196   002B4C                     l2676:
  5197   002B4C  6A12               	clrf	___fladd@grs^0,c
  5198   002B4E  5011               	movf	___fladd@bexp^0,w,c
  5199   002B50  C010  F00B         	movff	___fladd@aexp,??___fladd
  5200   002B54  6A0C               	clrf	(??___fladd+1)^0,c
  5201   002B56  5E0B               	subwf	??___fladd^0,f,c
  5202   002B58  0E00               	movlw	0
  5203   002B5A  5A0C               	subwfb	(??___fladd+1)^0,f,c
  5204   002B5C  BE0C               	btfsc	(??___fladd+1)^0,7,c
  5205   002B5E  EFBA  F015         	goto	u2231
  5206   002B62  500C               	movf	(??___fladd+1)^0,w,c
  5207   002B64  E109               	bnz	u2230
  5208   002B66  0E1A               	movlw	26
  5209   002B68  5C0B               	subwf	??___fladd^0,w,c
  5210   002B6A  A0D8               	btfss	status,0,c
  5211   002B6C  EFBA  F015         	goto	u2231
  5212   002B70  EFBC  F015         	goto	u2230
  5213   002B74                     u2231:
  5214   002B74  EFF3  F015         	goto	l770
  5215   002B78                     u2230:
  5216   002B78  5003               	movf	___fladd@b^0,w,c
  5217   002B7A  1004               	iorwf	(___fladd@b+1)^0,w,c
  5218   002B7C  1005               	iorwf	(___fladd@b+2)^0,w,c
  5219   002B7E  1006               	iorwf	(___fladd@b+3)^0,w,c
  5220   002B80  A4D8               	btfss	status,2,c
  5221   002B82  EFC5  F015         	goto	u2241
  5222   002B86  EFC8  F015         	goto	u2240
  5223   002B8A                     u2241:
  5224   002B8A  0E01               	movlw	1
  5225   002B8C  EFC9  F015         	goto	u2250
  5226   002B90                     u2240:
  5227   002B90  0E00               	movlw	0
  5228   002B92                     u2250:
  5229   002B92  6E12               	movwf	___fladd@grs^0,c
  5230   002B94  0E00               	movlw	0
  5231   002B96  6E03               	movwf	___fladd@b^0,c
  5232   002B98  0E00               	movlw	0
  5233   002B9A  6E04               	movwf	(___fladd@b+1)^0,c
  5234   002B9C  0E00               	movlw	0
  5235   002B9E  6E05               	movwf	(___fladd@b+2)^0,c
  5236   002BA0  0E00               	movlw	0
  5237   002BA2  6E06               	movwf	(___fladd@b+3)^0,c
  5238   002BA4  C010  F011         	movff	___fladd@aexp,___fladd@bexp
  5239   002BA8  EFFC  F015         	goto	l769
  5240   002BAC                     l771:
  5241   002BAC  A012               	btfss	___fladd@grs^0,0,c
  5242   002BAE  EFDB  F015         	goto	u2261
  5243   002BB2  EFDD  F015         	goto	u2260
  5244   002BB6                     u2261:
  5245   002BB6  EFE3  F015         	goto	l2686
  5246   002BBA                     u2260:
  5247   002BBA  90D8               	bcf	status,0,c
  5248   002BBC  3012               	rrcf	___fladd@grs^0,w,c
  5249   002BBE  0901               	iorlw	1
  5250   002BC0  6E12               	movwf	___fladd@grs^0,c
  5251   002BC2  EFE5  F015         	goto	l2688
  5252   002BC6                     l2686:
  5253   002BC6  90D8               	bcf	status,0,c
  5254   002BC8  3212               	rrcf	___fladd@grs^0,f,c
  5255   002BCA                     l2688:
  5256   002BCA  A003               	btfss	___fladd@b^0,0,c
  5257   002BCC  EFEA  F015         	goto	u2271
  5258   002BD0  EFEC  F015         	goto	u2270
  5259   002BD4                     u2271:
  5260   002BD4  EFED  F015         	goto	l2692
  5261   002BD8                     u2270:
  5262   002BD8  8E12               	bsf	___fladd@grs^0,7,c
  5263   002BDA                     l2692:
  5264   002BDA  3406               	rlcf	(___fladd@b+3)^0,w,c
  5265   002BDC  3206               	rrcf	(___fladd@b+3)^0,f,c
  5266   002BDE  3205               	rrcf	(___fladd@b+2)^0,f,c
  5267   002BE0  3204               	rrcf	(___fladd@b+1)^0,f,c
  5268   002BE2  3203               	rrcf	___fladd@b^0,f,c
  5269   002BE4  2A11               	incf	___fladd@bexp^0,f,c
  5270   002BE6                     l770:
  5271   002BE6  5010               	movf	___fladd@aexp^0,w,c
  5272   002BE8  5C11               	subwf	___fladd@bexp^0,w,c
  5273   002BEA  A0D8               	btfss	status,0,c
  5274   002BEC  EFFA  F015         	goto	u2281
  5275   002BF0  EFFC  F015         	goto	u2280
  5276   002BF4                     u2281:
  5277   002BF4  EFD6  F015         	goto	l771
  5278   002BF8                     u2280:
  5279   002BF8                     l769:
  5280   002BF8  BC0F               	btfsc	___fladd@signs^0,6,c
  5281   002BFA  EF01  F016         	goto	u2291
  5282   002BFE  EF03  F016         	goto	u2290
  5283   002C02                     u2291:
  5284   002C02  EF43  F016         	goto	l2720
  5285   002C06                     u2290:
  5286   002C06  5011               	movf	___fladd@bexp^0,w,c
  5287   002C08  A4D8               	btfss	status,2,c
  5288   002C0A  EF09  F016         	goto	u2301
  5289   002C0E  EF0B  F016         	goto	u2300
  5290   002C12                     u2301:
  5291   002C12  EF15  F016         	goto	l2702
  5292   002C16                     u2300:
  5293   002C16  0E00               	movlw	0
  5294   002C18  6E03               	movwf	?___fladd^0,c
  5295   002C1A  0E00               	movlw	0
  5296   002C1C  6E04               	movwf	(?___fladd+1)^0,c
  5297   002C1E  0E00               	movlw	0
  5298   002C20  6E05               	movwf	(?___fladd+2)^0,c
  5299   002C22  0E00               	movlw	0
  5300   002C24  6E06               	movwf	(?___fladd+3)^0,c
  5301   002C26  EF62  F017         	goto	l778
  5302   002C2A                     l2702:
  5303   002C2A  5007               	movf	___fladd@a^0,w,c
  5304   002C2C  2603               	addwf	___fladd@b^0,f,c
  5305   002C2E  5008               	movf	(___fladd@a+1)^0,w,c
  5306   002C30  2204               	addwfc	(___fladd@b+1)^0,f,c
  5307   002C32  5009               	movf	(___fladd@a+2)^0,w,c
  5308   002C34  2205               	addwfc	(___fladd@b+2)^0,f,c
  5309   002C36  500A               	movf	(___fladd@a+3)^0,w,c
  5310   002C38  2206               	addwfc	(___fladd@b+3)^0,f,c
  5311   002C3A  A006               	btfss	(___fladd@b+3)^0,0,c
  5312   002C3C  EF22  F016         	goto	u2311
  5313   002C40  EF24  F016         	goto	u2310
  5314   002C44                     u2311:
  5315   002C44  EFD0  F016         	goto	l783
  5316   002C48                     u2310:
  5317   002C48  A012               	btfss	___fladd@grs^0,0,c
  5318   002C4A  EF29  F016         	goto	u2321
  5319   002C4E  EF2B  F016         	goto	u2320
  5320   002C52                     u2321:
  5321   002C52  EF31  F016         	goto	l2710
  5322   002C56                     u2320:
  5323   002C56  90D8               	bcf	status,0,c
  5324   002C58  3012               	rrcf	___fladd@grs^0,w,c
  5325   002C5A  0901               	iorlw	1
  5326   002C5C  6E12               	movwf	___fladd@grs^0,c
  5327   002C5E  EF33  F016         	goto	l2712
  5328   002C62                     l2710:
  5329   002C62  90D8               	bcf	status,0,c
  5330   002C64  3212               	rrcf	___fladd@grs^0,f,c
  5331   002C66                     l2712:
  5332   002C66  A003               	btfss	___fladd@b^0,0,c
  5333   002C68  EF38  F016         	goto	u2331
  5334   002C6C  EF3A  F016         	goto	u2330
  5335   002C70                     u2331:
  5336   002C70  EF3B  F016         	goto	l2716
  5337   002C74                     u2330:
  5338   002C74  8E12               	bsf	___fladd@grs^0,7,c
  5339   002C76                     l2716:
  5340   002C76  3406               	rlcf	(___fladd@b+3)^0,w,c
  5341   002C78  3206               	rrcf	(___fladd@b+3)^0,f,c
  5342   002C7A  3205               	rrcf	(___fladd@b+2)^0,f,c
  5343   002C7C  3204               	rrcf	(___fladd@b+1)^0,f,c
  5344   002C7E  3203               	rrcf	___fladd@b^0,f,c
  5345   002C80  2A11               	incf	___fladd@bexp^0,f,c
  5346   002C82  EFD0  F016         	goto	l783
  5347   002C86                     l2720:
  5348   002C86  5007               	movf	___fladd@a^0,w,c
  5349   002C88  5C03               	subwf	___fladd@b^0,w,c
  5350   002C8A  5008               	movf	(___fladd@a+1)^0,w,c
  5351   002C8C  5804               	subwfb	(___fladd@b+1)^0,w,c
  5352   002C8E  5009               	movf	(___fladd@a+2)^0,w,c
  5353   002C90  5805               	subwfb	(___fladd@b+2)^0,w,c
  5354   002C92  5006               	movf	(___fladd@b+3)^0,w,c
  5355   002C94  0A80               	xorlw	128
  5356   002C96  6E0B               	movwf	??___fladd^0,c
  5357   002C98  500A               	movf	(___fladd@a+3)^0,w,c
  5358   002C9A  0A80               	xorlw	128
  5359   002C9C  580B               	subwfb	??___fladd^0,w,c
  5360   002C9E  B0D8               	btfsc	status,0,c
  5361   002CA0  EF54  F016         	goto	u2341
  5362   002CA4  EF56  F016         	goto	u2340
  5363   002CA8                     u2341:
  5364   002CA8  EF81  F016         	goto	l2730
  5365   002CAC                     u2340:
  5366   002CAC  5003               	movf	___fladd@b^0,w,c
  5367   002CAE  5C07               	subwf	___fladd@a^0,w,c
  5368   002CB0  6E0B               	movwf	??___fladd^0,c
  5369   002CB2  5004               	movf	(___fladd@b+1)^0,w,c
  5370   002CB4  5808               	subwfb	(___fladd@a+1)^0,w,c
  5371   002CB6  6E0C               	movwf	(??___fladd+1)^0,c
  5372   002CB8  5005               	movf	(___fladd@b+2)^0,w,c
  5373   002CBA  5809               	subwfb	(___fladd@a+2)^0,w,c
  5374   002CBC  6E0D               	movwf	(??___fladd+2)^0,c
  5375   002CBE  5006               	movf	(___fladd@b+3)^0,w,c
  5376   002CC0  580A               	subwfb	(___fladd@a+3)^0,w,c
  5377   002CC2  6E0E               	movwf	(??___fladd+3)^0,c
  5378   002CC4  0EFF               	movlw	255
  5379   002CC6  240B               	addwf	??___fladd^0,w,c
  5380   002CC8  6E03               	movwf	___fladd@b^0,c
  5381   002CCA  0EFF               	movlw	255
  5382   002CCC  200C               	addwfc	(??___fladd+1)^0,w,c
  5383   002CCE  6E04               	movwf	(___fladd@b+1)^0,c
  5384   002CD0  0EFF               	movlw	255
  5385   002CD2  200D               	addwfc	(??___fladd+2)^0,w,c
  5386   002CD4  6E05               	movwf	(___fladd@b+2)^0,c
  5387   002CD6  0EFF               	movlw	255
  5388   002CD8  200E               	addwfc	(??___fladd+3)^0,w,c
  5389   002CDA  6E06               	movwf	(___fladd@b+3)^0,c
  5390   002CDC  0E80               	movlw	128
  5391   002CDE  1A0F               	xorwf	___fladd@signs^0,f,c
  5392   002CE0  6C12               	negf	___fladd@grs^0,c
  5393   002CE2  5012               	movf	___fladd@grs^0,w,c
  5394   002CE4  A4D8               	btfss	status,2,c
  5395   002CE6  EF77  F016         	goto	u2351
  5396   002CEA  EF79  F016         	goto	u2350
  5397   002CEE                     u2351:
  5398   002CEE  EF89  F016         	goto	l786
  5399   002CF2                     u2350:
  5400   002CF2  0E01               	movlw	1
  5401   002CF4  2603               	addwf	___fladd@b^0,f,c
  5402   002CF6  0E00               	movlw	0
  5403   002CF8  2204               	addwfc	(___fladd@b+1)^0,f,c
  5404   002CFA  2205               	addwfc	(___fladd@b+2)^0,f,c
  5405   002CFC  2206               	addwfc	(___fladd@b+3)^0,f,c
  5406   002CFE  EF89  F016         	goto	l786
  5407   002D02                     l2730:
  5408   002D02  5007               	movf	___fladd@a^0,w,c
  5409   002D04  5E03               	subwf	___fladd@b^0,f,c
  5410   002D06  5008               	movf	(___fladd@a+1)^0,w,c
  5411   002D08  5A04               	subwfb	(___fladd@b+1)^0,f,c
  5412   002D0A  5009               	movf	(___fladd@a+2)^0,w,c
  5413   002D0C  5A05               	subwfb	(___fladd@b+2)^0,f,c
  5414   002D0E  500A               	movf	(___fladd@a+3)^0,w,c
  5415   002D10  5A06               	subwfb	(___fladd@b+3)^0,f,c
  5416   002D12                     l786:
  5417   002D12  5003               	movf	___fladd@b^0,w,c
  5418   002D14  1004               	iorwf	(___fladd@b+1)^0,w,c
  5419   002D16  1005               	iorwf	(___fladd@b+2)^0,w,c
  5420   002D18  1006               	iorwf	(___fladd@b+3)^0,w,c
  5421   002D1A  A4D8               	btfss	status,2,c
  5422   002D1C  EF92  F016         	goto	u2361
  5423   002D20  EF94  F016         	goto	u2360
  5424   002D24                     u2361:
  5425   002D24  EFC9  F016         	goto	l2754
  5426   002D28                     u2360:
  5427   002D28  5012               	movf	___fladd@grs^0,w,c
  5428   002D2A  A4D8               	btfss	status,2,c
  5429   002D2C  EF9A  F016         	goto	u2371
  5430   002D30  EF9C  F016         	goto	u2370
  5431   002D34                     u2371:
  5432   002D34  EFC9  F016         	goto	l2754
  5433   002D38                     u2370:
  5434   002D38  0E00               	movlw	0
  5435   002D3A  6E03               	movwf	?___fladd^0,c
  5436   002D3C  0E00               	movlw	0
  5437   002D3E  6E04               	movwf	(?___fladd+1)^0,c
  5438   002D40  0E00               	movlw	0
  5439   002D42  6E05               	movwf	(?___fladd+2)^0,c
  5440   002D44  0E00               	movlw	0
  5441   002D46  6E06               	movwf	(?___fladd+3)^0,c
  5442   002D48  EF62  F017         	goto	l778
  5443   002D4C                     l2738:
  5444   002D4C  90D8               	bcf	status,0,c
  5445   002D4E  3603               	rlcf	___fladd@b^0,f,c
  5446   002D50  3604               	rlcf	(___fladd@b+1)^0,f,c
  5447   002D52  3605               	rlcf	(___fladd@b+2)^0,f,c
  5448   002D54  3606               	rlcf	(___fladd@b+3)^0,f,c
  5449   002D56  AE12               	btfss	___fladd@grs^0,7,c
  5450   002D58  EFB0  F016         	goto	u2381
  5451   002D5C  EFB2  F016         	goto	u2380
  5452   002D60                     u2381:
  5453   002D60  EFB3  F016         	goto	l2744
  5454   002D64                     u2380:
  5455   002D64  8003               	bsf	___fladd@b^0,0,c
  5456   002D66                     l2744:
  5457   002D66  A012               	btfss	___fladd@grs^0,0,c
  5458   002D68  EFB8  F016         	goto	u2391
  5459   002D6C  EFBA  F016         	goto	u2390
  5460   002D70                     u2391:
  5461   002D70  EFBE  F016         	goto	l2748
  5462   002D74                     u2390:
  5463   002D74  80D8               	bsf	status,0,c
  5464   002D76  3612               	rlcf	___fladd@grs^0,f,c
  5465   002D78  EFC0  F016         	goto	l2750
  5466   002D7C                     l2748:
  5467   002D7C  90D8               	bcf	status,0,c
  5468   002D7E  3612               	rlcf	___fladd@grs^0,f,c
  5469   002D80                     l2750:
  5470   002D80  5011               	movf	___fladd@bexp^0,w,c
  5471   002D82  B4D8               	btfsc	status,2,c
  5472   002D84  EFC6  F016         	goto	u2401
  5473   002D88  EFC8  F016         	goto	u2400
  5474   002D8C                     u2401:
  5475   002D8C  EFC9  F016         	goto	l2754
  5476   002D90                     u2400:
  5477   002D90  0611               	decf	___fladd@bexp^0,f,c
  5478   002D92                     l2754:
  5479   002D92  AE05               	btfss	(___fladd@b+2)^0,7,c
  5480   002D94  EFCE  F016         	goto	u2411
  5481   002D98  EFD0  F016         	goto	u2410
  5482   002D9C                     u2411:
  5483   002D9C  EFA6  F016         	goto	l2738
  5484   002DA0                     u2410:
  5485   002DA0                     l783:
  5486   002DA0  6A10               	clrf	___fladd@aexp^0,c
  5487   002DA2  AE12               	btfss	___fladd@grs^0,7,c
  5488   002DA4  EFD6  F016         	goto	u2421
  5489   002DA8  EFD8  F016         	goto	u2420
  5490   002DAC                     u2421:
  5491   002DAC  EFF0  F016         	goto	l795
  5492   002DB0                     u2420:
  5493   002DB0  C012  F00B         	movff	___fladd@grs,??___fladd
  5494   002DB4  0E7F               	movlw	127
  5495   002DB6  160B               	andwf	??___fladd^0,f,c
  5496   002DB8  B4D8               	btfsc	status,2,c
  5497   002DBA  EFE1  F016         	goto	u2431
  5498   002DBE  EFE3  F016         	goto	u2430
  5499   002DC2                     u2431:
  5500   002DC2  EFE7  F016         	goto	l796
  5501   002DC6                     u2430:
  5502   002DC6                     l2758:
  5503   002DC6  0E01               	movlw	1
  5504   002DC8  6E10               	movwf	___fladd@aexp^0,c
  5505   002DCA  EFF0  F016         	goto	l795
  5506   002DCE                     l796:
  5507   002DCE  A003               	btfss	___fladd@b^0,0,c
  5508   002DD0  EFEC  F016         	goto	u2441
  5509   002DD4  EFEE  F016         	goto	u2440
  5510   002DD8                     u2441:
  5511   002DD8  EFF0  F016         	goto	l795
  5512   002DDC                     u2440:
  5513   002DDC  EFE3  F016         	goto	l2758
  5514   002DE0                     l795:
  5515   002DE0  5010               	movf	___fladd@aexp^0,w,c
  5516   002DE2  B4D8               	btfsc	status,2,c
  5517   002DE4  EFF6  F016         	goto	u2451
  5518   002DE8  EFF8  F016         	goto	u2450
  5519   002DEC                     u2451:
  5520   002DEC  EF23  F017         	goto	l2770
  5521   002DF0                     u2450:
  5522   002DF0  0E01               	movlw	1
  5523   002DF2  2603               	addwf	___fladd@b^0,f,c
  5524   002DF4  0E00               	movlw	0
  5525   002DF6  2204               	addwfc	(___fladd@b+1)^0,f,c
  5526   002DF8  2205               	addwfc	(___fladd@b+2)^0,f,c
  5527   002DFA  2206               	addwfc	(___fladd@b+3)^0,f,c
  5528   002DFC  A006               	btfss	(___fladd@b+3)^0,0,c
  5529   002DFE  EF03  F017         	goto	u2461
  5530   002E02  EF05  F017         	goto	u2460
  5531   002E06                     u2461:
  5532   002E06  EF23  F017         	goto	l2770
  5533   002E0A                     u2460:
  5534   002E0A  C003  F00B         	movff	___fladd@b,??___fladd
  5535   002E0E  C004  F00C         	movff	___fladd@b+1,??___fladd+1
  5536   002E12  C005  F00D         	movff	___fladd@b+2,??___fladd+2
  5537   002E16  C006  F00E         	movff	___fladd@b+3,??___fladd+3
  5538   002E1A  340E               	rlcf	(??___fladd+3)^0,w,c
  5539   002E1C  320E               	rrcf	(??___fladd+3)^0,f,c
  5540   002E1E  320D               	rrcf	(??___fladd+2)^0,f,c
  5541   002E20  320C               	rrcf	(??___fladd+1)^0,f,c
  5542   002E22  320B               	rrcf	??___fladd^0,f,c
  5543   002E24  C00B  F003         	movff	??___fladd,___fladd@b
  5544   002E28  C00C  F004         	movff	??___fladd+1,___fladd@b+1
  5545   002E2C  C00D  F005         	movff	??___fladd+2,___fladd@b+2
  5546   002E30  C00E  F006         	movff	??___fladd+3,___fladd@b+3
  5547   002E34  2811               	incf	___fladd@bexp^0,w,c
  5548   002E36  B4D8               	btfsc	status,2,c
  5549   002E38  EF20  F017         	goto	u2471
  5550   002E3C  EF22  F017         	goto	u2470
  5551   002E40                     u2471:
  5552   002E40  EF23  F017         	goto	l2770
  5553   002E44                     u2470:
  5554   002E44  2A11               	incf	___fladd@bexp^0,f,c
  5555   002E46                     l2770:
  5556   002E46  2811               	incf	___fladd@bexp^0,w,c
  5557   002E48  B4D8               	btfsc	status,2,c
  5558   002E4A  EF29  F017         	goto	u2481
  5559   002E4E  EF2B  F017         	goto	u2480
  5560   002E52                     u2481:
  5561   002E52  EF33  F017         	goto	l2774
  5562   002E56                     u2480:
  5563   002E56  5011               	movf	___fladd@bexp^0,w,c
  5564   002E58  A4D8               	btfss	status,2,c
  5565   002E5A  EF31  F017         	goto	u2491
  5566   002E5E  EF33  F017         	goto	u2490
  5567   002E62                     u2491:
  5568   002E62  EF44  F017         	goto	l802
  5569   002E66                     u2490:
  5570   002E66                     l2774:
  5571   002E66  0E00               	movlw	0
  5572   002E68  6E03               	movwf	___fladd@b^0,c
  5573   002E6A  0E00               	movlw	0
  5574   002E6C  6E04               	movwf	(___fladd@b+1)^0,c
  5575   002E6E  0E00               	movlw	0
  5576   002E70  6E05               	movwf	(___fladd@b+2)^0,c
  5577   002E72  0E00               	movlw	0
  5578   002E74  6E06               	movwf	(___fladd@b+3)^0,c
  5579   002E76  5011               	movf	___fladd@bexp^0,w,c
  5580   002E78  A4D8               	btfss	status,2,c
  5581   002E7A  EF41  F017         	goto	u2501
  5582   002E7E  EF43  F017         	goto	u2500
  5583   002E82                     u2501:
  5584   002E82  EF44  F017         	goto	l802
  5585   002E86                     u2500:
  5586   002E86  6A0F               	clrf	___fladd@signs^0,c
  5587   002E88                     l802:
  5588   002E88  A011               	btfss	___fladd@bexp^0,0,c
  5589   002E8A  EF49  F017         	goto	u2511
  5590   002E8E  EF4B  F017         	goto	u2510
  5591   002E92                     u2511:
  5592   002E92  EF4E  F017         	goto	l2780
  5593   002E96                     u2510:
  5594   002E96  8E05               	bsf	(___fladd@b+2)^0,7,c
  5595   002E98  EF4F  F017         	goto	l2782
  5596   002E9C                     l2780:
  5597   002E9C  9E05               	bcf	(___fladd@b+2)^0,7,c
  5598   002E9E                     l2782:
  5599   002E9E  90D8               	bcf	status,0,c
  5600   002EA0  3011               	rrcf	___fladd@bexp^0,w,c
  5601   002EA2  6E06               	movwf	(___fladd@b+3)^0,c
  5602   002EA4  AE0F               	btfss	___fladd@signs^0,7,c
  5603   002EA6  EF57  F017         	goto	u2521
  5604   002EAA  EF59  F017         	goto	u2520
  5605   002EAE                     u2521:
  5606   002EAE  EF5A  F017         	goto	l2788
  5607   002EB2                     u2520:
  5608   002EB2  8E06               	bsf	(___fladd@b+3)^0,7,c
  5609   002EB4                     l2788:
  5610   002EB4  C003  F003         	movff	___fladd@b,?___fladd
  5611   002EB8  C004  F004         	movff	___fladd@b+1,?___fladd+1
  5612   002EBC  C005  F005         	movff	___fladd@b+2,?___fladd+2
  5613   002EC0  C006  F006         	movff	___fladd@b+3,?___fladd+3
  5614   002EC4                     l778:
  5615   002EC4  0012               	return		;funcret
  5616   002EC6                     __end_of___fladd:
  5617                           	callstack 0
  5618                           
  5619 ;; *************** function ___flneg *****************
  5620 ;; Defined at:
  5621 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flneg.c"
  5622 ;; Parameters:    Size  Location     Type
  5623 ;;  f1              4    2[COMRAM] unsigned char 
  5624 ;; Auto vars:     Size  Location     Type
  5625 ;;		None
  5626 ;; Return value:  Size  Location     Type
  5627 ;;                  4    2[COMRAM] unsigned char 
  5628 ;; Registers used:
  5629 ;;		wreg, status,2, status,0
  5630 ;; Tracked objects:
  5631 ;;		On entry : 0/0
  5632 ;;		On exit  : 0/0
  5633 ;;		Unchanged: 0/0
  5634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5635 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5638 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5639 ;;Total ram usage:        4 bytes
  5640 ;; Hardware stack levels used: 1
  5641 ;; Hardware stack levels required when called: 1
  5642 ;; This function calls:
  5643 ;;		Nothing
  5644 ;; This function is called by:
  5645 ;;		_efgtoa
  5646 ;; This function uses a non-reentrant model
  5647 ;;
  5648                           
  5649                           	psect	text15
  5650   004A62                     __ptext15:
  5651                           	callstack 0
  5652   004A62                     ___flneg:
  5653                           	callstack 24
  5654   004A62  5003               	movf	___flneg@f1^0,w,c
  5655   004A64  1004               	iorwf	(___flneg@f1+1)^0,w,c
  5656   004A66  1005               	iorwf	(___flneg@f1+2)^0,w,c
  5657   004A68  1006               	iorwf	(___flneg@f1+3)^0,w,c
  5658   004A6A  B4D8               	btfsc	status,2,c
  5659   004A6C  EF3A  F025         	goto	u3161
  5660   004A70  EF3C  F025         	goto	u3160
  5661   004A74                     u3161:
  5662   004A74  EF44  F025         	goto	l3192
  5663   004A78                     u3160:
  5664   004A78  0E00               	movlw	0
  5665   004A7A  1A03               	xorwf	___flneg@f1^0,f,c
  5666   004A7C  0E00               	movlw	0
  5667   004A7E  1A04               	xorwf	(___flneg@f1+1)^0,f,c
  5668   004A80  0E00               	movlw	0
  5669   004A82  1A05               	xorwf	(___flneg@f1+2)^0,f,c
  5670   004A84  0E80               	movlw	128
  5671   004A86  1A06               	xorwf	(___flneg@f1+3)^0,f,c
  5672   004A88                     l3192:
  5673   004A88  C003  F003         	movff	___flneg@f1,?___flneg
  5674   004A8C  C004  F004         	movff	___flneg@f1+1,?___flneg+1
  5675   004A90  C005  F005         	movff	___flneg@f1+2,?___flneg+2
  5676   004A94  C006  F006         	movff	___flneg@f1+3,?___flneg+3
  5677   004A98  0012               	return		;funcret
  5678   004A9A                     __end_of___flneg:
  5679                           	callstack 0
  5680                           
  5681 ;; *************** function ___flmul *****************
  5682 ;; Defined at:
  5683 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
  5684 ;; Parameters:    Size  Location     Type
  5685 ;;  b               4    2[COMRAM] unsigned char 
  5686 ;;  a               4    6[COMRAM] unsigned char 
  5687 ;; Auto vars:     Size  Location     Type
  5688 ;;  prod            4   21[COMRAM] struct .
  5689 ;;  grs             4   15[COMRAM] unsigned long 
  5690 ;;  temp            2   25[COMRAM] struct .
  5691 ;;  bexp            1   20[COMRAM] unsigned char 
  5692 ;;  aexp            1   19[COMRAM] unsigned char 
  5693 ;;  sign            1   14[COMRAM] unsigned char 
  5694 ;; Return value:  Size  Location     Type
  5695 ;;                  4    2[COMRAM] unsigned char 
  5696 ;; Registers used:
  5697 ;;		wreg, status,2, status,0, prodl, prodh
  5698 ;; Tracked objects:
  5699 ;;		On entry : 0/0
  5700 ;;		On exit  : 0/0
  5701 ;;		Unchanged: 0/0
  5702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5703 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5704 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5705 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5706 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5707 ;;Total ram usage:       25 bytes
  5708 ;; Hardware stack levels used: 1
  5709 ;; Hardware stack levels required when called: 1
  5710 ;; This function calls:
  5711 ;;		Nothing
  5712 ;; This function is called by:
  5713 ;;		_efgtoa
  5714 ;;		_readADC
  5715 ;; This function uses a non-reentrant model
  5716 ;;
  5717                           
  5718                           	psect	text16
  5719   002EC6                     __ptext16:
  5720                           	callstack 0
  5721   002EC6                     ___flmul:
  5722                           	callstack 24
  5723   002EC6  5006               	movf	(___flmul@b+3)^0,w,c
  5724   002EC8  0B80               	andlw	128
  5725   002ECA  6E0F               	movwf	___flmul@sign^0,c
  5726   002ECC  5006               	movf	(___flmul@b+3)^0,w,c
  5727   002ECE  2406               	addwf	(___flmul@b+3)^0,w,c
  5728   002ED0  6E15               	movwf	___flmul@bexp^0,c
  5729   002ED2  AE05               	btfss	(___flmul@b+2)^0,7,c
  5730   002ED4  EF6E  F017         	goto	u2771
  5731   002ED8  EF70  F017         	goto	u2770
  5732   002EDC                     u2771:
  5733   002EDC  EF71  F017         	goto	l2942
  5734   002EE0                     u2770:
  5735   002EE0  8015               	bsf	___flmul@bexp^0,0,c
  5736   002EE2                     l2942:
  5737   002EE2  5015               	movf	___flmul@bexp^0,w,c
  5738   002EE4  B4D8               	btfsc	status,2,c
  5739   002EE6  EF77  F017         	goto	u2781
  5740   002EEA  EF79  F017         	goto	u2780
  5741   002EEE                     u2781:
  5742   002EEE  EF8C  F017         	goto	l2950
  5743   002EF2                     u2780:
  5744   002EF2  2815               	incf	___flmul@bexp^0,w,c
  5745   002EF4  A4D8               	btfss	status,2,c
  5746   002EF6  EF7F  F017         	goto	u2791
  5747   002EFA  EF81  F017         	goto	u2790
  5748   002EFE                     u2791:
  5749   002EFE  EF89  F017         	goto	l2948
  5750   002F02                     u2790:
  5751   002F02  0E00               	movlw	0
  5752   002F04  6E03               	movwf	___flmul@b^0,c
  5753   002F06  0E00               	movlw	0
  5754   002F08  6E04               	movwf	(___flmul@b+1)^0,c
  5755   002F0A  0E00               	movlw	0
  5756   002F0C  6E05               	movwf	(___flmul@b+2)^0,c
  5757   002F0E  0E00               	movlw	0
  5758   002F10  6E06               	movwf	(___flmul@b+3)^0,c
  5759   002F12                     l2948:
  5760   002F12  8E05               	bsf	(___flmul@b+2)^0,7,c
  5761   002F14  EF94  F017         	goto	l2952
  5762   002F18                     l2950:
  5763   002F18  0E00               	movlw	0
  5764   002F1A  6E03               	movwf	___flmul@b^0,c
  5765   002F1C  0E00               	movlw	0
  5766   002F1E  6E04               	movwf	(___flmul@b+1)^0,c
  5767   002F20  0E00               	movlw	0
  5768   002F22  6E05               	movwf	(___flmul@b+2)^0,c
  5769   002F24  0E00               	movlw	0
  5770   002F26  6E06               	movwf	(___flmul@b+3)^0,c
  5771   002F28                     l2952:
  5772   002F28  500A               	movf	(___flmul@a+3)^0,w,c
  5773   002F2A  0B80               	andlw	128
  5774   002F2C  1A0F               	xorwf	___flmul@sign^0,f,c
  5775   002F2E  500A               	movf	(___flmul@a+3)^0,w,c
  5776   002F30  240A               	addwf	(___flmul@a+3)^0,w,c
  5777   002F32  6E14               	movwf	___flmul@aexp^0,c
  5778   002F34  AE09               	btfss	(___flmul@a+2)^0,7,c
  5779   002F36  EF9F  F017         	goto	u2801
  5780   002F3A  EFA1  F017         	goto	u2800
  5781   002F3E                     u2801:
  5782   002F3E  EFA2  F017         	goto	l2960
  5783   002F42                     u2800:
  5784   002F42  8014               	bsf	___flmul@aexp^0,0,c
  5785   002F44                     l2960:
  5786   002F44  5014               	movf	___flmul@aexp^0,w,c
  5787   002F46  B4D8               	btfsc	status,2,c
  5788   002F48  EFA8  F017         	goto	u2811
  5789   002F4C  EFAA  F017         	goto	u2810
  5790   002F50                     u2811:
  5791   002F50  EFBD  F017         	goto	l2968
  5792   002F54                     u2810:
  5793   002F54  2814               	incf	___flmul@aexp^0,w,c
  5794   002F56  A4D8               	btfss	status,2,c
  5795   002F58  EFB0  F017         	goto	u2821
  5796   002F5C  EFB2  F017         	goto	u2820
  5797   002F60                     u2821:
  5798   002F60  EFBA  F017         	goto	l2966
  5799   002F64                     u2820:
  5800   002F64  0E00               	movlw	0
  5801   002F66  6E07               	movwf	___flmul@a^0,c
  5802   002F68  0E00               	movlw	0
  5803   002F6A  6E08               	movwf	(___flmul@a+1)^0,c
  5804   002F6C  0E00               	movlw	0
  5805   002F6E  6E09               	movwf	(___flmul@a+2)^0,c
  5806   002F70  0E00               	movlw	0
  5807   002F72  6E0A               	movwf	(___flmul@a+3)^0,c
  5808   002F74                     l2966:
  5809   002F74  8E09               	bsf	(___flmul@a+2)^0,7,c
  5810   002F76  EFC5  F017         	goto	l855
  5811   002F7A                     l2968:
  5812   002F7A  0E00               	movlw	0
  5813   002F7C  6E07               	movwf	___flmul@a^0,c
  5814   002F7E  0E00               	movlw	0
  5815   002F80  6E08               	movwf	(___flmul@a+1)^0,c
  5816   002F82  0E00               	movlw	0
  5817   002F84  6E09               	movwf	(___flmul@a+2)^0,c
  5818   002F86  0E00               	movlw	0
  5819   002F88  6E0A               	movwf	(___flmul@a+3)^0,c
  5820   002F8A                     l855:
  5821   002F8A  5014               	movf	___flmul@aexp^0,w,c
  5822   002F8C  B4D8               	btfsc	status,2,c
  5823   002F8E  EFCB  F017         	goto	u2831
  5824   002F92  EFCD  F017         	goto	u2830
  5825   002F96                     u2831:
  5826   002F96  EFD5  F017         	goto	l2972
  5827   002F9A                     u2830:
  5828   002F9A  5015               	movf	___flmul@bexp^0,w,c
  5829   002F9C  A4D8               	btfss	status,2,c
  5830   002F9E  EFD3  F017         	goto	u2841
  5831   002FA2  EFD5  F017         	goto	u2840
  5832   002FA6                     u2841:
  5833   002FA6  EFDF  F017         	goto	l2976
  5834   002FAA                     u2840:
  5835   002FAA                     l2972:
  5836   002FAA  0E00               	movlw	0
  5837   002FAC  6E03               	movwf	?___flmul^0,c
  5838   002FAE  0E00               	movlw	0
  5839   002FB0  6E04               	movwf	(?___flmul+1)^0,c
  5840   002FB2  0E00               	movlw	0
  5841   002FB4  6E05               	movwf	(?___flmul+2)^0,c
  5842   002FB6  0E00               	movlw	0
  5843   002FB8  6E06               	movwf	(?___flmul+3)^0,c
  5844   002FBA  EF87  F019         	goto	l859
  5845   002FBE                     l2976:
  5846   002FBE  5009               	movf	(___flmul@a+2)^0,w,c
  5847   002FC0  0203               	mulwf	___flmul@b^0,c
  5848   002FC2  006F FFCC  F01A    	movff	prodl,___flmul@temp
  5849   002FC8  006F FFD0  F01B    	movff	prodh,___flmul@temp+1
  5850   002FCE  501A               	movf	___flmul@temp^0,w,c
  5851   002FD0  6E10               	movwf	___flmul@grs^0,c
  5852   002FD2  6A11               	clrf	(___flmul@grs+1)^0,c
  5853   002FD4  6A12               	clrf	(___flmul@grs+2)^0,c
  5854   002FD6  6A13               	clrf	(___flmul@grs+3)^0,c
  5855   002FD8  501B               	movf	(___flmul@temp+1)^0,w,c
  5856   002FDA  6E16               	movwf	___flmul@prod^0,c
  5857   002FDC  6A17               	clrf	(___flmul@prod+1)^0,c
  5858   002FDE  6A18               	clrf	(___flmul@prod+2)^0,c
  5859   002FE0  6A19               	clrf	(___flmul@prod+3)^0,c
  5860   002FE2  5008               	movf	(___flmul@a+1)^0,w,c
  5861   002FE4  0204               	mulwf	(___flmul@b+1)^0,c
  5862   002FE6  006F FFCC  F01A    	movff	prodl,___flmul@temp
  5863   002FEC  006F FFD0  F01B    	movff	prodh,___flmul@temp+1
  5864   002FF2  501A               	movf	___flmul@temp^0,w,c
  5865   002FF4  2610               	addwf	___flmul@grs^0,f,c
  5866   002FF6  0E00               	movlw	0
  5867   002FF8  2211               	addwfc	(___flmul@grs+1)^0,f,c
  5868   002FFA  2212               	addwfc	(___flmul@grs+2)^0,f,c
  5869   002FFC  2213               	addwfc	(___flmul@grs+3)^0,f,c
  5870   002FFE  501B               	movf	(___flmul@temp+1)^0,w,c
  5871   003000  2616               	addwf	___flmul@prod^0,f,c
  5872   003002  0E00               	movlw	0
  5873   003004  2217               	addwfc	(___flmul@prod+1)^0,f,c
  5874   003006  2218               	addwfc	(___flmul@prod+2)^0,f,c
  5875   003008  2219               	addwfc	(___flmul@prod+3)^0,f,c
  5876   00300A  5007               	movf	___flmul@a^0,w,c
  5877   00300C  0205               	mulwf	(___flmul@b+2)^0,c
  5878   00300E  006F FFCC  F01A    	movff	prodl,___flmul@temp
  5879   003014  006F FFD0  F01B    	movff	prodh,___flmul@temp+1
  5880   00301A  501A               	movf	___flmul@temp^0,w,c
  5881   00301C  2610               	addwf	___flmul@grs^0,f,c
  5882   00301E  0E00               	movlw	0
  5883   003020  2211               	addwfc	(___flmul@grs+1)^0,f,c
  5884   003022  2212               	addwfc	(___flmul@grs+2)^0,f,c
  5885   003024  2213               	addwfc	(___flmul@grs+3)^0,f,c
  5886   003026  501B               	movf	(___flmul@temp+1)^0,w,c
  5887   003028  2616               	addwf	___flmul@prod^0,f,c
  5888   00302A  0E00               	movlw	0
  5889   00302C  2217               	addwfc	(___flmul@prod+1)^0,f,c
  5890   00302E  2218               	addwfc	(___flmul@prod+2)^0,f,c
  5891   003030  2219               	addwfc	(___flmul@prod+3)^0,f,c
  5892   003032  C012  F013         	movff	___flmul@grs+2,___flmul@grs+3
  5893   003036  C011  F012         	movff	___flmul@grs+1,___flmul@grs+2
  5894   00303A  C010  F011         	movff	___flmul@grs,___flmul@grs+1
  5895   00303E  6A10               	clrf	___flmul@grs^0,c
  5896   003040  5007               	movf	___flmul@a^0,w,c
  5897   003042  0204               	mulwf	(___flmul@b+1)^0,c
  5898   003044  006F FFCC  F01A    	movff	prodl,___flmul@temp
  5899   00304A  006F FFD0  F01B    	movff	prodh,___flmul@temp+1
  5900   003050  501A               	movf	___flmul@temp^0,w,c
  5901   003052  2610               	addwf	___flmul@grs^0,f,c
  5902   003054  501B               	movf	(___flmul@temp+1)^0,w,c
  5903   003056  2211               	addwfc	(___flmul@grs+1)^0,f,c
  5904   003058  0E00               	movlw	0
  5905   00305A  2212               	addwfc	(___flmul@grs+2)^0,f,c
  5906   00305C  0E00               	movlw	0
  5907   00305E  2213               	addwfc	(___flmul@grs+3)^0,f,c
  5908   003060  5008               	movf	(___flmul@a+1)^0,w,c
  5909   003062  0203               	mulwf	___flmul@b^0,c
  5910   003064  006F FFCC  F01A    	movff	prodl,___flmul@temp
  5911   00306A  006F FFD0  F01B    	movff	prodh,___flmul@temp+1
  5912   003070  501A               	movf	___flmul@temp^0,w,c
  5913   003072  2610               	addwf	___flmul@grs^0,f,c
  5914   003074  501B               	movf	(___flmul@temp+1)^0,w,c
  5915   003076  2211               	addwfc	(___flmul@grs+1)^0,f,c
  5916   003078  0E00               	movlw	0
  5917   00307A  2212               	addwfc	(___flmul@grs+2)^0,f,c
  5918   00307C  0E00               	movlw	0
  5919   00307E  2213               	addwfc	(___flmul@grs+3)^0,f,c
  5920   003080  C012  F013         	movff	___flmul@grs+2,___flmul@grs+3
  5921   003084  C011  F012         	movff	___flmul@grs+1,___flmul@grs+2
  5922   003088  C010  F011         	movff	___flmul@grs,___flmul@grs+1
  5923   00308C  6A10               	clrf	___flmul@grs^0,c
  5924   00308E  5007               	movf	___flmul@a^0,w,c
  5925   003090  0203               	mulwf	___flmul@b^0,c
  5926   003092  006F FFCC  F01A    	movff	prodl,___flmul@temp
  5927   003098  006F FFD0  F01B    	movff	prodh,___flmul@temp+1
  5928   00309E  501A               	movf	___flmul@temp^0,w,c
  5929   0030A0  2610               	addwf	___flmul@grs^0,f,c
  5930   0030A2  501B               	movf	(___flmul@temp+1)^0,w,c
  5931   0030A4  2211               	addwfc	(___flmul@grs+1)^0,f,c
  5932   0030A6  0E00               	movlw	0
  5933   0030A8  2212               	addwfc	(___flmul@grs+2)^0,f,c
  5934   0030AA  0E00               	movlw	0
  5935   0030AC  2213               	addwfc	(___flmul@grs+3)^0,f,c
  5936   0030AE  5009               	movf	(___flmul@a+2)^0,w,c
  5937   0030B0  0204               	mulwf	(___flmul@b+1)^0,c
  5938   0030B2  006F FFCC  F01A    	movff	prodl,___flmul@temp
  5939   0030B8  006F FFD0  F01B    	movff	prodh,___flmul@temp+1
  5940   0030BE  501A               	movf	___flmul@temp^0,w,c
  5941   0030C0  2616               	addwf	___flmul@prod^0,f,c
  5942   0030C2  501B               	movf	(___flmul@temp+1)^0,w,c
  5943   0030C4  2217               	addwfc	(___flmul@prod+1)^0,f,c
  5944   0030C6  0E00               	movlw	0
  5945   0030C8  2218               	addwfc	(___flmul@prod+2)^0,f,c
  5946   0030CA  0E00               	movlw	0
  5947   0030CC  2219               	addwfc	(___flmul@prod+3)^0,f,c
  5948   0030CE  5008               	movf	(___flmul@a+1)^0,w,c
  5949   0030D0  0205               	mulwf	(___flmul@b+2)^0,c
  5950   0030D2  006F FFCC  F01A    	movff	prodl,___flmul@temp
  5951   0030D8  006F FFD0  F01B    	movff	prodh,___flmul@temp+1
  5952   0030DE  501A               	movf	___flmul@temp^0,w,c
  5953   0030E0  2616               	addwf	___flmul@prod^0,f,c
  5954   0030E2  501B               	movf	(___flmul@temp+1)^0,w,c
  5955   0030E4  2217               	addwfc	(___flmul@prod+1)^0,f,c
  5956   0030E6  0E00               	movlw	0
  5957   0030E8  2218               	addwfc	(___flmul@prod+2)^0,f,c
  5958   0030EA  0E00               	movlw	0
  5959   0030EC  2219               	addwfc	(___flmul@prod+3)^0,f,c
  5960   0030EE  5009               	movf	(___flmul@a+2)^0,w,c
  5961   0030F0  0205               	mulwf	(___flmul@b+2)^0,c
  5962   0030F2  006F FFCC  F01A    	movff	prodl,___flmul@temp
  5963   0030F8  006F FFD0  F01B    	movff	prodh,___flmul@temp+1
  5964   0030FE  501A               	movf	___flmul@temp^0,w,c
  5965   003100  6E0B               	movwf	??___flmul^0,c
  5966   003102  501B               	movf	(___flmul@temp+1)^0,w,c
  5967   003104  6E0C               	movwf	(??___flmul+1)^0,c
  5968   003106  6A0D               	clrf	(??___flmul+2)^0,c
  5969   003108  6A0E               	clrf	(??___flmul+3)^0,c
  5970   00310A  C00D  F00E         	movff	??___flmul+2,??___flmul+3
  5971   00310E  C00C  F00D         	movff	??___flmul+1,??___flmul+2
  5972   003112  C00B  F00C         	movff	??___flmul,??___flmul+1
  5973   003116  6A0B               	clrf	??___flmul^0,c
  5974   003118  500B               	movf	??___flmul^0,w,c
  5975   00311A  2616               	addwf	___flmul@prod^0,f,c
  5976   00311C  500C               	movf	(??___flmul+1)^0,w,c
  5977   00311E  2217               	addwfc	(___flmul@prod+1)^0,f,c
  5978   003120  500D               	movf	(??___flmul+2)^0,w,c
  5979   003122  2218               	addwfc	(___flmul@prod+2)^0,f,c
  5980   003124  500E               	movf	(??___flmul+3)^0,w,c
  5981   003126  2219               	addwfc	(___flmul@prod+3)^0,f,c
  5982   003128  C010  F00B         	movff	___flmul@grs,??___flmul
  5983   00312C  C011  F00C         	movff	___flmul@grs+1,??___flmul+1
  5984   003130  C012  F00D         	movff	___flmul@grs+2,??___flmul+2
  5985   003134  C013  F00E         	movff	___flmul@grs+3,??___flmul+3
  5986   003138  0E19               	movlw	25
  5987   00313A  EFA4  F018         	goto	u2850
  5988   00313E                     u2855:
  5989   00313E  90D8               	bcf	status,0,c
  5990   003140  320E               	rrcf	(??___flmul+3)^0,f,c
  5991   003142  320D               	rrcf	(??___flmul+2)^0,f,c
  5992   003144  320C               	rrcf	(??___flmul+1)^0,f,c
  5993   003146  320B               	rrcf	??___flmul^0,f,c
  5994   003148                     u2850:
  5995   003148  2EE8               	decfsz	wreg,f,c
  5996   00314A  EF9F  F018         	goto	u2855
  5997   00314E  500B               	movf	??___flmul^0,w,c
  5998   003150  2616               	addwf	___flmul@prod^0,f,c
  5999   003152  500C               	movf	(??___flmul+1)^0,w,c
  6000   003154  2217               	addwfc	(___flmul@prod+1)^0,f,c
  6001   003156  500D               	movf	(??___flmul+2)^0,w,c
  6002   003158  2218               	addwfc	(___flmul@prod+2)^0,f,c
  6003   00315A  500E               	movf	(??___flmul+3)^0,w,c
  6004   00315C  2219               	addwfc	(___flmul@prod+3)^0,f,c
  6005   00315E  C012  F013         	movff	___flmul@grs+2,___flmul@grs+3
  6006   003162  C011  F012         	movff	___flmul@grs+1,___flmul@grs+2
  6007   003166  C010  F011         	movff	___flmul@grs,___flmul@grs+1
  6008   00316A  6A10               	clrf	___flmul@grs^0,c
  6009   00316C  5014               	movf	___flmul@aexp^0,w,c
  6010   00316E  C015  F00B         	movff	___flmul@bexp,??___flmul
  6011   003172  6A0C               	clrf	(??___flmul+1)^0,c
  6012   003174  260B               	addwf	??___flmul^0,f,c
  6013   003176  0E00               	movlw	0
  6014   003178  220C               	addwfc	(??___flmul+1)^0,f,c
  6015   00317A  0E82               	movlw	130
  6016   00317C  240B               	addwf	??___flmul^0,w,c
  6017   00317E  6E1A               	movwf	___flmul@temp^0,c
  6018   003180  0EFF               	movlw	255
  6019   003182  200C               	addwfc	(??___flmul+1)^0,w,c
  6020   003184  6E1B               	movwf	(___flmul@temp+1)^0,c
  6021   003186  EFDA  F018         	goto	l3024
  6022   00318A                     l3018:
  6023   00318A  90D8               	bcf	status,0,c
  6024   00318C  3616               	rlcf	___flmul@prod^0,f,c
  6025   00318E  3617               	rlcf	(___flmul@prod+1)^0,f,c
  6026   003190  3618               	rlcf	(___flmul@prod+2)^0,f,c
  6027   003192  3619               	rlcf	(___flmul@prod+3)^0,f,c
  6028   003194  AE13               	btfss	(___flmul@grs+3)^0,7,c
  6029   003196  EFCF  F018         	goto	u2861
  6030   00319A  EFD1  F018         	goto	u2860
  6031   00319E                     u2861:
  6032   00319E  EFD2  F018         	goto	l862
  6033   0031A2                     u2860:
  6034   0031A2  8016               	bsf	___flmul@prod^0,0,c
  6035   0031A4                     l862:
  6036   0031A4  90D8               	bcf	status,0,c
  6037   0031A6  3610               	rlcf	___flmul@grs^0,f,c
  6038   0031A8  3611               	rlcf	(___flmul@grs+1)^0,f,c
  6039   0031AA  3612               	rlcf	(___flmul@grs+2)^0,f,c
  6040   0031AC  3613               	rlcf	(___flmul@grs+3)^0,f,c
  6041   0031AE  061A               	decf	___flmul@temp^0,f,c
  6042   0031B0  A0D8               	btfss	status,0,c
  6043   0031B2  061B               	decf	(___flmul@temp+1)^0,f,c
  6044   0031B4                     l3024:
  6045   0031B4  AE18               	btfss	(___flmul@prod+2)^0,7,c
  6046   0031B6  EFDF  F018         	goto	u2871
  6047   0031BA  EFE1  F018         	goto	u2870
  6048   0031BE                     u2871:
  6049   0031BE  EFC5  F018         	goto	l3018
  6050   0031C2                     u2870:
  6051   0031C2  6A14               	clrf	___flmul@aexp^0,c
  6052   0031C4  AE13               	btfss	(___flmul@grs+3)^0,7,c
  6053   0031C6  EFE7  F018         	goto	u2881
  6054   0031CA  EFE9  F018         	goto	u2880
  6055   0031CE                     u2881:
  6056   0031CE  EF0D  F019         	goto	l864
  6057   0031D2                     u2880:
  6058   0031D2  0EFF               	movlw	255
  6059   0031D4  1410               	andwf	___flmul@grs^0,w,c
  6060   0031D6  6E0B               	movwf	??___flmul^0,c
  6061   0031D8  0EFF               	movlw	255
  6062   0031DA  1411               	andwf	(___flmul@grs+1)^0,w,c
  6063   0031DC  6E0C               	movwf	(??___flmul+1)^0,c
  6064   0031DE  0EFF               	movlw	255
  6065   0031E0  1412               	andwf	(___flmul@grs+2)^0,w,c
  6066   0031E2  6E0D               	movwf	(??___flmul+2)^0,c
  6067   0031E4  0E7F               	movlw	127
  6068   0031E6  1413               	andwf	(___flmul@grs+3)^0,w,c
  6069   0031E8  6E0E               	movwf	(??___flmul+3)^0,c
  6070   0031EA  500B               	movf	??___flmul^0,w,c
  6071   0031EC  100C               	iorwf	(??___flmul+1)^0,w,c
  6072   0031EE  100D               	iorwf	(??___flmul+2)^0,w,c
  6073   0031F0  100E               	iorwf	(??___flmul+3)^0,w,c
  6074   0031F2  B4D8               	btfsc	status,2,c
  6075   0031F4  EFFE  F018         	goto	u2891
  6076   0031F8  EF00  F019         	goto	u2890
  6077   0031FC                     u2891:
  6078   0031FC  EF04  F019         	goto	l865
  6079   003200                     u2890:
  6080   003200                     l3028:
  6081   003200  0E01               	movlw	1
  6082   003202  6E14               	movwf	___flmul@aexp^0,c
  6083   003204  EF0D  F019         	goto	l864
  6084   003208                     l865:
  6085   003208  A016               	btfss	___flmul@prod^0,0,c
  6086   00320A  EF09  F019         	goto	u2901
  6087   00320E  EF0B  F019         	goto	u2900
  6088   003212                     u2901:
  6089   003212  EF0D  F019         	goto	l864
  6090   003216                     u2900:
  6091   003216  EF00  F019         	goto	l3028
  6092   00321A                     l864:
  6093   00321A  5014               	movf	___flmul@aexp^0,w,c
  6094   00321C  B4D8               	btfsc	status,2,c
  6095   00321E  EF13  F019         	goto	u2911
  6096   003222  EF15  F019         	goto	u2910
  6097   003226                     u2911:
  6098   003226  EF39  F019         	goto	l3040
  6099   00322A                     u2910:
  6100   00322A  0E01               	movlw	1
  6101   00322C  2616               	addwf	___flmul@prod^0,f,c
  6102   00322E  0E00               	movlw	0
  6103   003230  2217               	addwfc	(___flmul@prod+1)^0,f,c
  6104   003232  2218               	addwfc	(___flmul@prod+2)^0,f,c
  6105   003234  2219               	addwfc	(___flmul@prod+3)^0,f,c
  6106   003236  A019               	btfss	(___flmul@prod+3)^0,0,c
  6107   003238  EF20  F019         	goto	u2921
  6108   00323C  EF22  F019         	goto	u2920
  6109   003240                     u2921:
  6110   003240  EF39  F019         	goto	l3040
  6111   003244                     u2920:
  6112   003244  C016  F00B         	movff	___flmul@prod,??___flmul
  6113   003248  C017  F00C         	movff	___flmul@prod+1,??___flmul+1
  6114   00324C  C018  F00D         	movff	___flmul@prod+2,??___flmul+2
  6115   003250  C019  F00E         	movff	___flmul@prod+3,??___flmul+3
  6116   003254  340E               	rlcf	(??___flmul+3)^0,w,c
  6117   003256  320E               	rrcf	(??___flmul+3)^0,f,c
  6118   003258  320D               	rrcf	(??___flmul+2)^0,f,c
  6119   00325A  320C               	rrcf	(??___flmul+1)^0,f,c
  6120   00325C  320B               	rrcf	??___flmul^0,f,c
  6121   00325E  C00B  F016         	movff	??___flmul,___flmul@prod
  6122   003262  C00C  F017         	movff	??___flmul+1,___flmul@prod+1
  6123   003266  C00D  F018         	movff	??___flmul+2,___flmul@prod+2
  6124   00326A  C00E  F019         	movff	??___flmul+3,___flmul@prod+3
  6125   00326E  4A1A               	infsnz	___flmul@temp^0,f,c
  6126   003270  2A1B               	incf	(___flmul@temp+1)^0,f,c
  6127   003272                     l3040:
  6128   003272  BE1B               	btfsc	(___flmul@temp+1)^0,7,c
  6129   003274  EF44  F019         	goto	u2931
  6130   003278  501B               	movf	(___flmul@temp+1)^0,w,c
  6131   00327A  E108               	bnz	u2930
  6132   00327C  281A               	incf	___flmul@temp^0,w,c
  6133   00327E  A0D8               	btfss	status,0,c
  6134   003280  EF44  F019         	goto	u2931
  6135   003284  EF46  F019         	goto	u2930
  6136   003288                     u2931:
  6137   003288  EF50  F019         	goto	l3044
  6138   00328C                     u2930:
  6139   00328C  0E00               	movlw	0
  6140   00328E  6E16               	movwf	___flmul@prod^0,c
  6141   003290  0E00               	movlw	0
  6142   003292  6E17               	movwf	(___flmul@prod+1)^0,c
  6143   003294  0E80               	movlw	128
  6144   003296  6E18               	movwf	(___flmul@prod+2)^0,c
  6145   003298  0E7F               	movlw	127
  6146   00329A  6E19               	movwf	(___flmul@prod+3)^0,c
  6147   00329C  EF7D  F019         	goto	l3058
  6148   0032A0                     l3044:
  6149   0032A0  BE1B               	btfsc	(___flmul@temp+1)^0,7,c
  6150   0032A2  EF5D  F019         	goto	u2940
  6151   0032A6  501B               	movf	(___flmul@temp+1)^0,w,c
  6152   0032A8  E106               	bnz	u2941
  6153   0032AA  041A               	decf	___flmul@temp^0,w,c
  6154   0032AC  B0D8               	btfsc	status,0,c
  6155   0032AE  EF5B  F019         	goto	u2941
  6156   0032B2  EF5D  F019         	goto	u2940
  6157   0032B6                     u2941:
  6158   0032B6  EF68  F019         	goto	l872
  6159   0032BA                     u2940:
  6160   0032BA  0E00               	movlw	0
  6161   0032BC  6E16               	movwf	___flmul@prod^0,c
  6162   0032BE  0E00               	movlw	0
  6163   0032C0  6E17               	movwf	(___flmul@prod+1)^0,c
  6164   0032C2  0E00               	movlw	0
  6165   0032C4  6E18               	movwf	(___flmul@prod+2)^0,c
  6166   0032C6  0E00               	movlw	0
  6167   0032C8  6E19               	movwf	(___flmul@prod+3)^0,c
  6168   0032CA  6A0F               	clrf	___flmul@sign^0,c
  6169   0032CC  EF7D  F019         	goto	l3058
  6170   0032D0                     l872:
  6171   0032D0  C01A  F015         	movff	___flmul@temp,___flmul@bexp
  6172   0032D4  0EFF               	movlw	255
  6173   0032D6  1616               	andwf	___flmul@prod^0,f,c
  6174   0032D8  0EFF               	movlw	255
  6175   0032DA  1617               	andwf	(___flmul@prod+1)^0,f,c
  6176   0032DC  0E7F               	movlw	127
  6177   0032DE  1618               	andwf	(___flmul@prod+2)^0,f,c
  6178   0032E0  0E00               	movlw	0
  6179   0032E2  1619               	andwf	(___flmul@prod+3)^0,f,c
  6180   0032E4  A015               	btfss	___flmul@bexp^0,0,c
  6181   0032E6  EF77  F019         	goto	u2951
  6182   0032EA  EF79  F019         	goto	u2950
  6183   0032EE                     u2951:
  6184   0032EE  EF7A  F019         	goto	l3056
  6185   0032F2                     u2950:
  6186   0032F2  8E18               	bsf	(___flmul@prod+2)^0,7,c
  6187   0032F4                     l3056:
  6188   0032F4  90D8               	bcf	status,0,c
  6189   0032F6  3015               	rrcf	___flmul@bexp^0,w,c
  6190   0032F8  6E19               	movwf	(___flmul@prod+3)^0,c
  6191   0032FA                     l3058:
  6192   0032FA  500F               	movf	___flmul@sign^0,w,c
  6193   0032FC  1219               	iorwf	(___flmul@prod+3)^0,f,c
  6194   0032FE  C016  F003         	movff	___flmul@prod,?___flmul
  6195   003302  C017  F004         	movff	___flmul@prod+1,?___flmul+1
  6196   003306  C018  F005         	movff	___flmul@prod+2,?___flmul+2
  6197   00330A  C019  F006         	movff	___flmul@prod+3,?___flmul+3
  6198   00330E                     l859:
  6199   00330E  0012               	return		;funcret
  6200   003310                     __end_of___flmul:
  6201                           	callstack 0
  6202                           
  6203 ;; *************** function ___flge *****************
  6204 ;; Defined at:
  6205 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flge.c"
  6206 ;; Parameters:    Size  Location     Type
  6207 ;;  ff1             4   27[COMRAM] unsigned char 
  6208 ;;  ff2             4   31[COMRAM] unsigned char 
  6209 ;; Auto vars:     Size  Location     Type
  6210 ;;		None
  6211 ;; Return value:  Size  Location     Type
  6212 ;;		None               void
  6213 ;; Registers used:
  6214 ;;		wreg, status,2, status,0
  6215 ;; Tracked objects:
  6216 ;;		On entry : 0/0
  6217 ;;		On exit  : 0/0
  6218 ;;		Unchanged: 0/0
  6219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6220 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6222 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6223 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6224 ;;Total ram usage:       12 bytes
  6225 ;; Hardware stack levels used: 1
  6226 ;; Hardware stack levels required when called: 1
  6227 ;; This function calls:
  6228 ;;		Nothing
  6229 ;; This function is called by:
  6230 ;;		_efgtoa
  6231 ;; This function uses a non-reentrant model
  6232 ;;
  6233                           
  6234                           	psect	text17
  6235   003FC2                     __ptext17:
  6236                           	callstack 0
  6237   003FC2                     ___flge:
  6238                           	callstack 24
  6239   003FC2  0E00               	movlw	0
  6240   003FC4  141C               	andwf	___flge@ff1^0,w,c
  6241   003FC6  6E24               	movwf	??___flge^0,c
  6242   003FC8  0E00               	movlw	0
  6243   003FCA  141D               	andwf	(___flge@ff1+1)^0,w,c
  6244   003FCC  6E25               	movwf	(??___flge+1)^0,c
  6245   003FCE  0E80               	movlw	128
  6246   003FD0  141E               	andwf	(___flge@ff1+2)^0,w,c
  6247   003FD2  6E26               	movwf	(??___flge+2)^0,c
  6248   003FD4  0E7F               	movlw	127
  6249   003FD6  141F               	andwf	(___flge@ff1+3)^0,w,c
  6250   003FD8  6E27               	movwf	(??___flge+3)^0,c
  6251   003FDA  5024               	movf	??___flge^0,w,c
  6252   003FDC  1025               	iorwf	(??___flge+1)^0,w,c
  6253   003FDE  1026               	iorwf	(??___flge+2)^0,w,c
  6254   003FE0  1027               	iorwf	(??___flge+3)^0,w,c
  6255   003FE2  A4D8               	btfss	status,2,c
  6256   003FE4  EFF6  F01F         	goto	u3111
  6257   003FE8  EFF8  F01F         	goto	u3110
  6258   003FEC                     u3111:
  6259   003FEC  EF00  F020         	goto	l3170
  6260   003FF0                     u3110:
  6261   003FF0  0E00               	movlw	0
  6262   003FF2  6E1C               	movwf	___flge@ff1^0,c
  6263   003FF4  0E00               	movlw	0
  6264   003FF6  6E1D               	movwf	(___flge@ff1+1)^0,c
  6265   003FF8  0E00               	movlw	0
  6266   003FFA  6E1E               	movwf	(___flge@ff1+2)^0,c
  6267   003FFC  0E00               	movlw	0
  6268   003FFE  6E1F               	movwf	(___flge@ff1+3)^0,c
  6269   004000                     l3170:
  6270   004000  0E00               	movlw	0
  6271   004002  1420               	andwf	___flge@ff2^0,w,c
  6272   004004  6E24               	movwf	??___flge^0,c
  6273   004006  0E00               	movlw	0
  6274   004008  1421               	andwf	(___flge@ff2+1)^0,w,c
  6275   00400A  6E25               	movwf	(??___flge+1)^0,c
  6276   00400C  0E80               	movlw	128
  6277   00400E  1422               	andwf	(___flge@ff2+2)^0,w,c
  6278   004010  6E26               	movwf	(??___flge+2)^0,c
  6279   004012  0E7F               	movlw	127
  6280   004014  1423               	andwf	(___flge@ff2+3)^0,w,c
  6281   004016  6E27               	movwf	(??___flge+3)^0,c
  6282   004018  5024               	movf	??___flge^0,w,c
  6283   00401A  1025               	iorwf	(??___flge+1)^0,w,c
  6284   00401C  1026               	iorwf	(??___flge+2)^0,w,c
  6285   00401E  1027               	iorwf	(??___flge+3)^0,w,c
  6286   004020  A4D8               	btfss	status,2,c
  6287   004022  EF15  F020         	goto	u3121
  6288   004026  EF17  F020         	goto	u3120
  6289   00402A                     u3121:
  6290   00402A  EF1F  F020         	goto	l3174
  6291   00402E                     u3120:
  6292   00402E  0E00               	movlw	0
  6293   004030  6E20               	movwf	___flge@ff2^0,c
  6294   004032  0E00               	movlw	0
  6295   004034  6E21               	movwf	(___flge@ff2+1)^0,c
  6296   004036  0E00               	movlw	0
  6297   004038  6E22               	movwf	(___flge@ff2+2)^0,c
  6298   00403A  0E00               	movlw	0
  6299   00403C  6E23               	movwf	(___flge@ff2+3)^0,c
  6300   00403E                     l3174:
  6301   00403E  AE1F               	btfss	(___flge@ff1+3)^0,7,c
  6302   004040  EF24  F020         	goto	u3131
  6303   004044  EF26  F020         	goto	u3130
  6304   004048                     u3131:
  6305   004048  EF2F  F020         	goto	l3178
  6306   00404C                     u3130:
  6307   00404C  6C1C               	negf	___flge@ff1^0,c
  6308   00404E  1E1D               	comf	(___flge@ff1+1)^0,f,c
  6309   004050  B0D8               	btfsc	status,0,c
  6310   004052  2A1D               	incf	(___flge@ff1+1)^0,f,c
  6311   004054  1E1E               	comf	(___flge@ff1+2)^0,f,c
  6312   004056  B0D8               	btfsc	status,0,c
  6313   004058  2A1E               	incf	(___flge@ff1+2)^0,f,c
  6314   00405A  0E80               	movlw	128
  6315   00405C  561F               	subfwb	(___flge@ff1+3)^0,f,c
  6316   00405E                     l3178:
  6317   00405E  AE23               	btfss	(___flge@ff2+3)^0,7,c
  6318   004060  EF34  F020         	goto	u3141
  6319   004064  EF36  F020         	goto	u3140
  6320   004068                     u3141:
  6321   004068  EF3F  F020         	goto	l506
  6322   00406C                     u3140:
  6323   00406C  6C20               	negf	___flge@ff2^0,c
  6324   00406E  1E21               	comf	(___flge@ff2+1)^0,f,c
  6325   004070  B0D8               	btfsc	status,0,c
  6326   004072  2A21               	incf	(___flge@ff2+1)^0,f,c
  6327   004074  1E22               	comf	(___flge@ff2+2)^0,f,c
  6328   004076  B0D8               	btfsc	status,0,c
  6329   004078  2A22               	incf	(___flge@ff2+2)^0,f,c
  6330   00407A  0E80               	movlw	128
  6331   00407C  5623               	subfwb	(___flge@ff2+3)^0,f,c
  6332   00407E                     l506:
  6333   00407E  0E00               	movlw	0
  6334   004080  1A1C               	xorwf	___flge@ff1^0,f,c
  6335   004082  0E00               	movlw	0
  6336   004084  1A1D               	xorwf	(___flge@ff1+1)^0,f,c
  6337   004086  0E00               	movlw	0
  6338   004088  1A1E               	xorwf	(___flge@ff1+2)^0,f,c
  6339   00408A  0E80               	movlw	128
  6340   00408C  1A1F               	xorwf	(___flge@ff1+3)^0,f,c
  6341   00408E  0E00               	movlw	0
  6342   004090  1A20               	xorwf	___flge@ff2^0,f,c
  6343   004092  0E00               	movlw	0
  6344   004094  1A21               	xorwf	(___flge@ff2+1)^0,f,c
  6345   004096  0E00               	movlw	0
  6346   004098  1A22               	xorwf	(___flge@ff2+2)^0,f,c
  6347   00409A  0E80               	movlw	128
  6348   00409C  1A23               	xorwf	(___flge@ff2+3)^0,f,c
  6349   00409E  5020               	movf	___flge@ff2^0,w,c
  6350   0040A0  5C1C               	subwf	___flge@ff1^0,w,c
  6351   0040A2  5021               	movf	(___flge@ff2+1)^0,w,c
  6352   0040A4  581D               	subwfb	(___flge@ff1+1)^0,w,c
  6353   0040A6  5022               	movf	(___flge@ff2+2)^0,w,c
  6354   0040A8  581E               	subwfb	(___flge@ff1+2)^0,w,c
  6355   0040AA  5023               	movf	(___flge@ff2+3)^0,w,c
  6356   0040AC  581F               	subwfb	(___flge@ff1+3)^0,w,c
  6357   0040AE  B0D8               	btfsc	status,0,c
  6358   0040B0  EF5C  F020         	goto	u3151
  6359   0040B4  EF5E  F020         	goto	u3150
  6360   0040B8                     u3151:
  6361   0040B8  EF61  F020         	goto	l3184
  6362   0040BC                     u3150:
  6363   0040BC  90D8               	bcf	status,0,c
  6364   0040BE  EF62  F020         	goto	l511
  6365   0040C2                     l3184:
  6366   0040C2  80D8               	bsf	status,0,c
  6367   0040C4                     l511:
  6368   0040C4  0012               	return		;funcret
  6369   0040C6                     __end_of___flge:
  6370                           	callstack 0
  6371                           
  6372 ;; *************** function ___fleq *****************
  6373 ;; Defined at:
  6374 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fleq.c"
  6375 ;; Parameters:    Size  Location     Type
  6376 ;;  ff1             4    2[COMRAM] unsigned char 
  6377 ;;  ff2             4    6[COMRAM] unsigned char 
  6378 ;; Auto vars:     Size  Location     Type
  6379 ;;		None
  6380 ;; Return value:  Size  Location     Type
  6381 ;;		None               void
  6382 ;; Registers used:
  6383 ;;		wreg, status,2, status,0
  6384 ;; Tracked objects:
  6385 ;;		On entry : 0/0
  6386 ;;		On exit  : 0/0
  6387 ;;		Unchanged: 0/0
  6388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6389 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6391 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6392 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6393 ;;Total ram usage:       12 bytes
  6394 ;; Hardware stack levels used: 1
  6395 ;; Hardware stack levels required when called: 1
  6396 ;; This function calls:
  6397 ;;		Nothing
  6398 ;; This function is called by:
  6399 ;;		_efgtoa
  6400 ;; This function uses a non-reentrant model
  6401 ;;
  6402                           
  6403                           	psect	text18
  6404   004498                     __ptext18:
  6405                           	callstack 0
  6406   004498                     ___fleq:
  6407                           	callstack 24
  6408   004498  0E00               	movlw	0
  6409   00449A  1403               	andwf	___fleq@ff1^0,w,c
  6410   00449C  6E0B               	movwf	??___fleq^0,c
  6411   00449E  0E00               	movlw	0
  6412   0044A0  1404               	andwf	(___fleq@ff1+1)^0,w,c
  6413   0044A2  6E0C               	movwf	(??___fleq+1)^0,c
  6414   0044A4  0E80               	movlw	128
  6415   0044A6  1405               	andwf	(___fleq@ff1+2)^0,w,c
  6416   0044A8  6E0D               	movwf	(??___fleq+2)^0,c
  6417   0044AA  0E7F               	movlw	127
  6418   0044AC  1406               	andwf	(___fleq@ff1+3)^0,w,c
  6419   0044AE  6E0E               	movwf	(??___fleq+3)^0,c
  6420   0044B0  500B               	movf	??___fleq^0,w,c
  6421   0044B2  100C               	iorwf	(??___fleq+1)^0,w,c
  6422   0044B4  100D               	iorwf	(??___fleq+2)^0,w,c
  6423   0044B6  100E               	iorwf	(??___fleq+3)^0,w,c
  6424   0044B8  A4D8               	btfss	status,2,c
  6425   0044BA  EF61  F022         	goto	u3081
  6426   0044BE  EF63  F022         	goto	u3080
  6427   0044C2                     u3081:
  6428   0044C2  EF6B  F022         	goto	l3154
  6429   0044C6                     u3080:
  6430   0044C6  0E00               	movlw	0
  6431   0044C8  6E03               	movwf	___fleq@ff1^0,c
  6432   0044CA  0E00               	movlw	0
  6433   0044CC  6E04               	movwf	(___fleq@ff1+1)^0,c
  6434   0044CE  0E00               	movlw	0
  6435   0044D0  6E05               	movwf	(___fleq@ff1+2)^0,c
  6436   0044D2  0E00               	movlw	0
  6437   0044D4  6E06               	movwf	(___fleq@ff1+3)^0,c
  6438   0044D6                     l3154:
  6439   0044D6  0E00               	movlw	0
  6440   0044D8  1407               	andwf	___fleq@ff2^0,w,c
  6441   0044DA  6E0B               	movwf	??___fleq^0,c
  6442   0044DC  0E00               	movlw	0
  6443   0044DE  1408               	andwf	(___fleq@ff2+1)^0,w,c
  6444   0044E0  6E0C               	movwf	(??___fleq+1)^0,c
  6445   0044E2  0E80               	movlw	128
  6446   0044E4  1409               	andwf	(___fleq@ff2+2)^0,w,c
  6447   0044E6  6E0D               	movwf	(??___fleq+2)^0,c
  6448   0044E8  0E7F               	movlw	127
  6449   0044EA  140A               	andwf	(___fleq@ff2+3)^0,w,c
  6450   0044EC  6E0E               	movwf	(??___fleq+3)^0,c
  6451   0044EE  500B               	movf	??___fleq^0,w,c
  6452   0044F0  100C               	iorwf	(??___fleq+1)^0,w,c
  6453   0044F2  100D               	iorwf	(??___fleq+2)^0,w,c
  6454   0044F4  100E               	iorwf	(??___fleq+3)^0,w,c
  6455   0044F6  A4D8               	btfss	status,2,c
  6456   0044F8  EF80  F022         	goto	u3091
  6457   0044FC  EF82  F022         	goto	u3090
  6458   004500                     u3091:
  6459   004500  EF8A  F022         	goto	l3158
  6460   004504                     u3090:
  6461   004504  0E00               	movlw	0
  6462   004506  6E07               	movwf	___fleq@ff2^0,c
  6463   004508  0E00               	movlw	0
  6464   00450A  6E08               	movwf	(___fleq@ff2+1)^0,c
  6465   00450C  0E00               	movlw	0
  6466   00450E  6E09               	movwf	(___fleq@ff2+2)^0,c
  6467   004510  0E00               	movlw	0
  6468   004512  6E0A               	movwf	(___fleq@ff2+3)^0,c
  6469   004514                     l3158:
  6470   004514  5007               	movf	___fleq@ff2^0,w,c
  6471   004516  1803               	xorwf	___fleq@ff1^0,w,c
  6472   004518  E10F               	bnz	u3100
  6473   00451A  5008               	movf	(___fleq@ff2+1)^0,w,c
  6474   00451C  1804               	xorwf	(___fleq@ff1+1)^0,w,c
  6475   00451E  E10C               	bnz	u3100
  6476   004520  5009               	movf	(___fleq@ff2+2)^0,w,c
  6477   004522  1805               	xorwf	(___fleq@ff1+2)^0,w,c
  6478   004524  E109               	bnz	u3100
  6479   004526  500A               	movf	(___fleq@ff2+3)^0,w,c
  6480   004528  1806               	xorwf	(___fleq@ff1+3)^0,w,c
  6481   00452A  B4D8               	btfsc	status,2,c
  6482   00452C  EF9A  F022         	goto	u3101
  6483   004530  EF9C  F022         	goto	u3100
  6484   004534                     u3101:
  6485   004534  EF9F  F022         	goto	l3162
  6486   004538                     u3100:
  6487   004538  90D8               	bcf	status,0,c
  6488   00453A  EFA0  F022         	goto	l500
  6489   00453E                     l3162:
  6490   00453E  80D8               	bsf	status,0,c
  6491   004540                     l500:
  6492   004540  0012               	return		;funcret
  6493   004542                     __end_of___fleq:
  6494                           	callstack 0
  6495                           
  6496 ;; *************** function ___fldiv *****************
  6497 ;; Defined at:
  6498 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
  6499 ;; Parameters:    Size  Location     Type
  6500 ;;  b               4    2[COMRAM] unsigned char 
  6501 ;;  a               4    6[COMRAM] unsigned char 
  6502 ;; Auto vars:     Size  Location     Type
  6503 ;;  grs             4   21[COMRAM] unsigned long 
  6504 ;;  rem             4   14[COMRAM] unsigned long 
  6505 ;;  new_exp         2   19[COMRAM] short 
  6506 ;;  aexp            1   26[COMRAM] unsigned char 
  6507 ;;  bexp            1   25[COMRAM] unsigned char 
  6508 ;;  sign            1   18[COMRAM] unsigned char 
  6509 ;; Return value:  Size  Location     Type
  6510 ;;                  4    2[COMRAM] unsigned char 
  6511 ;; Registers used:
  6512 ;;		wreg, status,2, status,0
  6513 ;; Tracked objects:
  6514 ;;		On entry : 0/0
  6515 ;;		On exit  : 0/0
  6516 ;;		Unchanged: 0/0
  6517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6518 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6519 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6520 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6521 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6522 ;;Total ram usage:       25 bytes
  6523 ;; Hardware stack levels used: 1
  6524 ;; Hardware stack levels required when called: 1
  6525 ;; This function calls:
  6526 ;;		Nothing
  6527 ;; This function is called by:
  6528 ;;		_efgtoa
  6529 ;;		_readADC
  6530 ;; This function uses a non-reentrant model
  6531 ;;
  6532                           
  6533                           	psect	text19
  6534   003310                     __ptext19:
  6535                           	callstack 0
  6536   003310                     ___fldiv:
  6537                           	callstack 24
  6538   003310  5006               	movf	(___fldiv@b+3)^0,w,c
  6539   003312  0B80               	andlw	128
  6540   003314  6E13               	movwf	___fldiv@sign^0,c
  6541   003316  5006               	movf	(___fldiv@b+3)^0,w,c
  6542   003318  2406               	addwf	(___fldiv@b+3)^0,w,c
  6543   00331A  6E1A               	movwf	___fldiv@bexp^0,c
  6544   00331C  AE05               	btfss	(___fldiv@b+2)^0,7,c
  6545   00331E  EF93  F019         	goto	u2541
  6546   003322  EF95  F019         	goto	u2540
  6547   003326                     u2541:
  6548   003326  EF96  F019         	goto	l2806
  6549   00332A                     u2540:
  6550   00332A  801A               	bsf	___fldiv@bexp^0,0,c
  6551   00332C                     l2806:
  6552   00332C  501A               	movf	___fldiv@bexp^0,w,c
  6553   00332E  B4D8               	btfsc	status,2,c
  6554   003330  EF9C  F019         	goto	u2551
  6555   003334  EF9E  F019         	goto	u2550
  6556   003338                     u2551:
  6557   003338  EFB2  F019         	goto	l2816
  6558   00333C                     u2550:
  6559   00333C  281A               	incf	___fldiv@bexp^0,w,c
  6560   00333E  A4D8               	btfss	status,2,c
  6561   003340  EFA4  F019         	goto	u2561
  6562   003344  EFA6  F019         	goto	u2560
  6563   003348                     u2561:
  6564   003348  EFAE  F019         	goto	l2812
  6565   00334C                     u2560:
  6566   00334C  0E00               	movlw	0
  6567   00334E  6E03               	movwf	___fldiv@b^0,c
  6568   003350  0E00               	movlw	0
  6569   003352  6E04               	movwf	(___fldiv@b+1)^0,c
  6570   003354  0E00               	movlw	0
  6571   003356  6E05               	movwf	(___fldiv@b+2)^0,c
  6572   003358  0E00               	movlw	0
  6573   00335A  6E06               	movwf	(___fldiv@b+3)^0,c
  6574   00335C                     l2812:
  6575   00335C  8E05               	bsf	(___fldiv@b+2)^0,7,c
  6576   00335E  6A06               	clrf	(___fldiv@b+3)^0,c
  6577   003360  EFBA  F019         	goto	l2818
  6578   003364                     l2816:
  6579   003364  0E00               	movlw	0
  6580   003366  6E03               	movwf	___fldiv@b^0,c
  6581   003368  0E00               	movlw	0
  6582   00336A  6E04               	movwf	(___fldiv@b+1)^0,c
  6583   00336C  0E00               	movlw	0
  6584   00336E  6E05               	movwf	(___fldiv@b+2)^0,c
  6585   003370  0E00               	movlw	0
  6586   003372  6E06               	movwf	(___fldiv@b+3)^0,c
  6587   003374                     l2818:
  6588   003374  500A               	movf	(___fldiv@a+3)^0,w,c
  6589   003376  0B80               	andlw	128
  6590   003378  1A13               	xorwf	___fldiv@sign^0,f,c
  6591   00337A  500A               	movf	(___fldiv@a+3)^0,w,c
  6592   00337C  240A               	addwf	(___fldiv@a+3)^0,w,c
  6593   00337E  6E1B               	movwf	___fldiv@aexp^0,c
  6594   003380  AE09               	btfss	(___fldiv@a+2)^0,7,c
  6595   003382  EFC5  F019         	goto	u2571
  6596   003386  EFC7  F019         	goto	u2570
  6597   00338A                     u2571:
  6598   00338A  EFC8  F019         	goto	l2826
  6599   00338E                     u2570:
  6600   00338E  801B               	bsf	___fldiv@aexp^0,0,c
  6601   003390                     l2826:
  6602   003390  501B               	movf	___fldiv@aexp^0,w,c
  6603   003392  B4D8               	btfsc	status,2,c
  6604   003394  EFCE  F019         	goto	u2581
  6605   003398  EFD0  F019         	goto	u2580
  6606   00339C                     u2581:
  6607   00339C  EFE4  F019         	goto	l2836
  6608   0033A0                     u2580:
  6609   0033A0  281B               	incf	___fldiv@aexp^0,w,c
  6610   0033A2  A4D8               	btfss	status,2,c
  6611   0033A4  EFD6  F019         	goto	u2591
  6612   0033A8  EFD8  F019         	goto	u2590
  6613   0033AC                     u2591:
  6614   0033AC  EFE0  F019         	goto	l2832
  6615   0033B0                     u2590:
  6616   0033B0  0E00               	movlw	0
  6617   0033B2  6E07               	movwf	___fldiv@a^0,c
  6618   0033B4  0E00               	movlw	0
  6619   0033B6  6E08               	movwf	(___fldiv@a+1)^0,c
  6620   0033B8  0E00               	movlw	0
  6621   0033BA  6E09               	movwf	(___fldiv@a+2)^0,c
  6622   0033BC  0E00               	movlw	0
  6623   0033BE  6E0A               	movwf	(___fldiv@a+3)^0,c
  6624   0033C0                     l2832:
  6625   0033C0  8E09               	bsf	(___fldiv@a+2)^0,7,c
  6626   0033C2  6A0A               	clrf	(___fldiv@a+3)^0,c
  6627   0033C4  EFEC  F019         	goto	l2838
  6628   0033C8                     l2836:
  6629   0033C8  0E00               	movlw	0
  6630   0033CA  6E07               	movwf	___fldiv@a^0,c
  6631   0033CC  0E00               	movlw	0
  6632   0033CE  6E08               	movwf	(___fldiv@a+1)^0,c
  6633   0033D0  0E00               	movlw	0
  6634   0033D2  6E09               	movwf	(___fldiv@a+2)^0,c
  6635   0033D4  0E00               	movlw	0
  6636   0033D6  6E0A               	movwf	(___fldiv@a+3)^0,c
  6637   0033D8                     l2838:
  6638   0033D8  5007               	movf	___fldiv@a^0,w,c
  6639   0033DA  1008               	iorwf	(___fldiv@a+1)^0,w,c
  6640   0033DC  1009               	iorwf	(___fldiv@a+2)^0,w,c
  6641   0033DE  100A               	iorwf	(___fldiv@a+3)^0,w,c
  6642   0033E0  A4D8               	btfss	status,2,c
  6643   0033E2  EFF5  F019         	goto	u2601
  6644   0033E6  EFF7  F019         	goto	u2600
  6645   0033EA                     u2601:
  6646   0033EA  EF0F  F01A         	goto	l2850
  6647   0033EE                     u2600:
  6648   0033EE  0E00               	movlw	0
  6649   0033F0  6E03               	movwf	___fldiv@b^0,c
  6650   0033F2  0E00               	movlw	0
  6651   0033F4  6E04               	movwf	(___fldiv@b+1)^0,c
  6652   0033F6  0E00               	movlw	0
  6653   0033F8  6E05               	movwf	(___fldiv@b+2)^0,c
  6654   0033FA  0E00               	movlw	0
  6655   0033FC  6E06               	movwf	(___fldiv@b+3)^0,c
  6656   0033FE  0E80               	movlw	128
  6657   003400  1205               	iorwf	(___fldiv@b+2)^0,f,c
  6658   003402  0E7F               	movlw	127
  6659   003404  1206               	iorwf	(___fldiv@b+3)^0,f,c
  6660   003406                     l2844:
  6661   003406  5013               	movf	___fldiv@sign^0,w,c
  6662   003408  1206               	iorwf	(___fldiv@b+3)^0,f,c
  6663   00340A  C003  F003         	movff	___fldiv@b,?___fldiv
  6664   00340E  C004  F004         	movff	___fldiv@b+1,?___fldiv+1
  6665   003412  C005  F005         	movff	___fldiv@b+2,?___fldiv+2
  6666   003416  C006  F006         	movff	___fldiv@b+3,?___fldiv+3
  6667   00341A  EF4F  F01B         	goto	l823
  6668   00341E                     l2850:
  6669   00341E  501A               	movf	___fldiv@bexp^0,w,c
  6670   003420  A4D8               	btfss	status,2,c
  6671   003422  EF15  F01A         	goto	u2611
  6672   003426  EF17  F01A         	goto	u2610
  6673   00342A                     u2611:
  6674   00342A  EF21  F01A         	goto	l2858
  6675   00342E                     u2610:
  6676   00342E  0E00               	movlw	0
  6677   003430  6E03               	movwf	?___fldiv^0,c
  6678   003432  0E00               	movlw	0
  6679   003434  6E04               	movwf	(?___fldiv+1)^0,c
  6680   003436  0E00               	movlw	0
  6681   003438  6E05               	movwf	(?___fldiv+2)^0,c
  6682   00343A  0E00               	movlw	0
  6683   00343C  6E06               	movwf	(?___fldiv+3)^0,c
  6684   00343E  EF4F  F01B         	goto	l823
  6685   003442                     l2858:
  6686   003442  501B               	movf	___fldiv@aexp^0,w,c
  6687   003444  C01A  F00B         	movff	___fldiv@bexp,??___fldiv
  6688   003448  6A0C               	clrf	(??___fldiv+1)^0,c
  6689   00344A  5E0B               	subwf	??___fldiv^0,f,c
  6690   00344C  0E00               	movlw	0
  6691   00344E  5A0C               	subwfb	(??___fldiv+1)^0,f,c
  6692   003450  0E7F               	movlw	127
  6693   003452  240B               	addwf	??___fldiv^0,w,c
  6694   003454  6E14               	movwf	___fldiv@new_exp^0,c
  6695   003456  0E00               	movlw	0
  6696   003458  200C               	addwfc	(??___fldiv+1)^0,w,c
  6697   00345A  6E15               	movwf	(___fldiv@new_exp+1)^0,c
  6698   00345C  C003  F00F         	movff	___fldiv@b,___fldiv@rem
  6699   003460  C004  F010         	movff	___fldiv@b+1,___fldiv@rem+1
  6700   003464  C005  F011         	movff	___fldiv@b+2,___fldiv@rem+2
  6701   003468  C006  F012         	movff	___fldiv@b+3,___fldiv@rem+3
  6702   00346C  0E00               	movlw	0
  6703   00346E  6E03               	movwf	___fldiv@b^0,c
  6704   003470  0E00               	movlw	0
  6705   003472  6E04               	movwf	(___fldiv@b+1)^0,c
  6706   003474  0E00               	movlw	0
  6707   003476  6E05               	movwf	(___fldiv@b+2)^0,c
  6708   003478  0E00               	movlw	0
  6709   00347A  6E06               	movwf	(___fldiv@b+3)^0,c
  6710   00347C  0E00               	movlw	0
  6711   00347E  6E16               	movwf	___fldiv@grs^0,c
  6712   003480  0E00               	movlw	0
  6713   003482  6E17               	movwf	(___fldiv@grs+1)^0,c
  6714   003484  0E00               	movlw	0
  6715   003486  6E18               	movwf	(___fldiv@grs+2)^0,c
  6716   003488  0E00               	movlw	0
  6717   00348A  6E19               	movwf	(___fldiv@grs+3)^0,c
  6718   00348C  6A1B               	clrf	___fldiv@aexp^0,c
  6719   00348E  EF81  F01A         	goto	l825
  6720   003492                     l2868:
  6721   003492  501B               	movf	___fldiv@aexp^0,w,c
  6722   003494  B4D8               	btfsc	status,2,c
  6723   003496  EF4F  F01A         	goto	u2621
  6724   00349A  EF51  F01A         	goto	u2620
  6725   00349E                     u2621:
  6726   00349E  EF68  F01A         	goto	l2876
  6727   0034A2                     u2620:
  6728   0034A2  90D8               	bcf	status,0,c
  6729   0034A4  360F               	rlcf	___fldiv@rem^0,f,c
  6730   0034A6  3610               	rlcf	(___fldiv@rem+1)^0,f,c
  6731   0034A8  3611               	rlcf	(___fldiv@rem+2)^0,f,c
  6732   0034AA  3612               	rlcf	(___fldiv@rem+3)^0,f,c
  6733   0034AC  90D8               	bcf	status,0,c
  6734   0034AE  3603               	rlcf	___fldiv@b^0,f,c
  6735   0034B0  3604               	rlcf	(___fldiv@b+1)^0,f,c
  6736   0034B2  3605               	rlcf	(___fldiv@b+2)^0,f,c
  6737   0034B4  3606               	rlcf	(___fldiv@b+3)^0,f,c
  6738   0034B6  AE19               	btfss	(___fldiv@grs+3)^0,7,c
  6739   0034B8  EF60  F01A         	goto	u2631
  6740   0034BC  EF62  F01A         	goto	u2630
  6741   0034C0                     u2631:
  6742   0034C0  EF63  F01A         	goto	l828
  6743   0034C4                     u2630:
  6744   0034C4  8003               	bsf	___fldiv@b^0,0,c
  6745   0034C6                     l828:
  6746   0034C6  90D8               	bcf	status,0,c
  6747   0034C8  3616               	rlcf	___fldiv@grs^0,f,c
  6748   0034CA  3617               	rlcf	(___fldiv@grs+1)^0,f,c
  6749   0034CC  3618               	rlcf	(___fldiv@grs+2)^0,f,c
  6750   0034CE  3619               	rlcf	(___fldiv@grs+3)^0,f,c
  6751   0034D0                     l2876:
  6752   0034D0  5007               	movf	___fldiv@a^0,w,c
  6753   0034D2  5C0F               	subwf	___fldiv@rem^0,w,c
  6754   0034D4  5008               	movf	(___fldiv@a+1)^0,w,c
  6755   0034D6  5810               	subwfb	(___fldiv@rem+1)^0,w,c
  6756   0034D8  5009               	movf	(___fldiv@a+2)^0,w,c
  6757   0034DA  5811               	subwfb	(___fldiv@rem+2)^0,w,c
  6758   0034DC  500A               	movf	(___fldiv@a+3)^0,w,c
  6759   0034DE  5812               	subwfb	(___fldiv@rem+3)^0,w,c
  6760   0034E0  A0D8               	btfss	status,0,c
  6761   0034E2  EF75  F01A         	goto	u2641
  6762   0034E6  EF77  F01A         	goto	u2640
  6763   0034EA                     u2641:
  6764   0034EA  EF80  F01A         	goto	l2882
  6765   0034EE                     u2640:
  6766   0034EE  8C19               	bsf	(___fldiv@grs+3)^0,6,c
  6767   0034F0  5007               	movf	___fldiv@a^0,w,c
  6768   0034F2  5E0F               	subwf	___fldiv@rem^0,f,c
  6769   0034F4  5008               	movf	(___fldiv@a+1)^0,w,c
  6770   0034F6  5A10               	subwfb	(___fldiv@rem+1)^0,f,c
  6771   0034F8  5009               	movf	(___fldiv@a+2)^0,w,c
  6772   0034FA  5A11               	subwfb	(___fldiv@rem+2)^0,f,c
  6773   0034FC  500A               	movf	(___fldiv@a+3)^0,w,c
  6774   0034FE  5A12               	subwfb	(___fldiv@rem+3)^0,f,c
  6775   003500                     l2882:
  6776   003500  2A1B               	incf	___fldiv@aexp^0,f,c
  6777   003502                     l825:
  6778   003502  0E19               	movlw	25
  6779   003504  641B               	cpfsgt	___fldiv@aexp^0,c
  6780   003506  EF87  F01A         	goto	u2651
  6781   00350A  EF89  F01A         	goto	u2650
  6782   00350E                     u2651:
  6783   00350E  EF49  F01A         	goto	l2868
  6784   003512                     u2650:
  6785   003512  500F               	movf	___fldiv@rem^0,w,c
  6786   003514  1010               	iorwf	(___fldiv@rem+1)^0,w,c
  6787   003516  1011               	iorwf	(___fldiv@rem+2)^0,w,c
  6788   003518  1012               	iorwf	(___fldiv@rem+3)^0,w,c
  6789   00351A  B4D8               	btfsc	status,2,c
  6790   00351C  EF92  F01A         	goto	u2661
  6791   003520  EF94  F01A         	goto	u2660
  6792   003524                     u2661:
  6793   003524  EFAC  F01A         	goto	l2894
  6794   003528                     u2660:
  6795   003528  8016               	bsf	___fldiv@grs^0,0,c
  6796   00352A  EFAC  F01A         	goto	l2894
  6797   00352E                     l2888:
  6798   00352E  90D8               	bcf	status,0,c
  6799   003530  3603               	rlcf	___fldiv@b^0,f,c
  6800   003532  3604               	rlcf	(___fldiv@b+1)^0,f,c
  6801   003534  3605               	rlcf	(___fldiv@b+2)^0,f,c
  6802   003536  3606               	rlcf	(___fldiv@b+3)^0,f,c
  6803   003538  AE19               	btfss	(___fldiv@grs+3)^0,7,c
  6804   00353A  EFA1  F01A         	goto	u2671
  6805   00353E  EFA3  F01A         	goto	u2670
  6806   003542                     u2671:
  6807   003542  EFA4  F01A         	goto	l834
  6808   003546                     u2670:
  6809   003546  8003               	bsf	___fldiv@b^0,0,c
  6810   003548                     l834:
  6811   003548  90D8               	bcf	status,0,c
  6812   00354A  3616               	rlcf	___fldiv@grs^0,f,c
  6813   00354C  3617               	rlcf	(___fldiv@grs+1)^0,f,c
  6814   00354E  3618               	rlcf	(___fldiv@grs+2)^0,f,c
  6815   003550  3619               	rlcf	(___fldiv@grs+3)^0,f,c
  6816   003552  0614               	decf	___fldiv@new_exp^0,f,c
  6817   003554  A0D8               	btfss	status,0,c
  6818   003556  0615               	decf	(___fldiv@new_exp+1)^0,f,c
  6819   003558                     l2894:
  6820   003558  AE05               	btfss	(___fldiv@b+2)^0,7,c
  6821   00355A  EFB1  F01A         	goto	u2681
  6822   00355E  EFB3  F01A         	goto	u2680
  6823   003562                     u2681:
  6824   003562  EF97  F01A         	goto	l2888
  6825   003566                     u2680:
  6826   003566  6A1B               	clrf	___fldiv@aexp^0,c
  6827   003568  AE19               	btfss	(___fldiv@grs+3)^0,7,c
  6828   00356A  EFB9  F01A         	goto	u2691
  6829   00356E  EFBB  F01A         	goto	u2690
  6830   003572                     u2691:
  6831   003572  EFDF  F01A         	goto	l836
  6832   003576                     u2690:
  6833   003576  0EFF               	movlw	255
  6834   003578  1416               	andwf	___fldiv@grs^0,w,c
  6835   00357A  6E0B               	movwf	??___fldiv^0,c
  6836   00357C  0EFF               	movlw	255
  6837   00357E  1417               	andwf	(___fldiv@grs+1)^0,w,c
  6838   003580  6E0C               	movwf	(??___fldiv+1)^0,c
  6839   003582  0EFF               	movlw	255
  6840   003584  1418               	andwf	(___fldiv@grs+2)^0,w,c
  6841   003586  6E0D               	movwf	(??___fldiv+2)^0,c
  6842   003588  0E7F               	movlw	127
  6843   00358A  1419               	andwf	(___fldiv@grs+3)^0,w,c
  6844   00358C  6E0E               	movwf	(??___fldiv+3)^0,c
  6845   00358E  500B               	movf	??___fldiv^0,w,c
  6846   003590  100C               	iorwf	(??___fldiv+1)^0,w,c
  6847   003592  100D               	iorwf	(??___fldiv+2)^0,w,c
  6848   003594  100E               	iorwf	(??___fldiv+3)^0,w,c
  6849   003596  B4D8               	btfsc	status,2,c
  6850   003598  EFD0  F01A         	goto	u2701
  6851   00359C  EFD2  F01A         	goto	u2700
  6852   0035A0                     u2701:
  6853   0035A0  EFD6  F01A         	goto	l837
  6854   0035A4                     u2700:
  6855   0035A4                     l2898:
  6856   0035A4  0E01               	movlw	1
  6857   0035A6  6E1B               	movwf	___fldiv@aexp^0,c
  6858   0035A8  EFDF  F01A         	goto	l836
  6859   0035AC                     l837:
  6860   0035AC  A003               	btfss	___fldiv@b^0,0,c
  6861   0035AE  EFDB  F01A         	goto	u2711
  6862   0035B2  EFDD  F01A         	goto	u2710
  6863   0035B6                     u2711:
  6864   0035B6  EFDF  F01A         	goto	l836
  6865   0035BA                     u2710:
  6866   0035BA  EFD2  F01A         	goto	l2898
  6867   0035BE                     l836:
  6868   0035BE  501B               	movf	___fldiv@aexp^0,w,c
  6869   0035C0  B4D8               	btfsc	status,2,c
  6870   0035C2  EFE5  F01A         	goto	u2721
  6871   0035C6  EFE7  F01A         	goto	u2720
  6872   0035CA                     u2721:
  6873   0035CA  EF0B  F01B         	goto	l2910
  6874   0035CE                     u2720:
  6875   0035CE  0E01               	movlw	1
  6876   0035D0  2603               	addwf	___fldiv@b^0,f,c
  6877   0035D2  0E00               	movlw	0
  6878   0035D4  2204               	addwfc	(___fldiv@b+1)^0,f,c
  6879   0035D6  2205               	addwfc	(___fldiv@b+2)^0,f,c
  6880   0035D8  2206               	addwfc	(___fldiv@b+3)^0,f,c
  6881   0035DA  A006               	btfss	(___fldiv@b+3)^0,0,c
  6882   0035DC  EFF2  F01A         	goto	u2731
  6883   0035E0  EFF4  F01A         	goto	u2730
  6884   0035E4                     u2731:
  6885   0035E4  EF0B  F01B         	goto	l2910
  6886   0035E8                     u2730:
  6887   0035E8  C003  F00B         	movff	___fldiv@b,??___fldiv
  6888   0035EC  C004  F00C         	movff	___fldiv@b+1,??___fldiv+1
  6889   0035F0  C005  F00D         	movff	___fldiv@b+2,??___fldiv+2
  6890   0035F4  C006  F00E         	movff	___fldiv@b+3,??___fldiv+3
  6891   0035F8  340E               	rlcf	(??___fldiv+3)^0,w,c
  6892   0035FA  320E               	rrcf	(??___fldiv+3)^0,f,c
  6893   0035FC  320D               	rrcf	(??___fldiv+2)^0,f,c
  6894   0035FE  320C               	rrcf	(??___fldiv+1)^0,f,c
  6895   003600  320B               	rrcf	??___fldiv^0,f,c
  6896   003602  C00B  F003         	movff	??___fldiv,___fldiv@b
  6897   003606  C00C  F004         	movff	??___fldiv+1,___fldiv@b+1
  6898   00360A  C00D  F005         	movff	??___fldiv+2,___fldiv@b+2
  6899   00360E  C00E  F006         	movff	??___fldiv+3,___fldiv@b+3
  6900   003612  4A14               	infsnz	___fldiv@new_exp^0,f,c
  6901   003614  2A15               	incf	(___fldiv@new_exp+1)^0,f,c
  6902   003616                     l2910:
  6903   003616  BE15               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6904   003618  EF16  F01B         	goto	u2741
  6905   00361C  5015               	movf	(___fldiv@new_exp+1)^0,w,c
  6906   00361E  E108               	bnz	u2740
  6907   003620  2814               	incf	___fldiv@new_exp^0,w,c
  6908   003622  A0D8               	btfss	status,0,c
  6909   003624  EF16  F01B         	goto	u2741
  6910   003628  EF18  F01B         	goto	u2740
  6911   00362C                     u2741:
  6912   00362C  EF23  F01B         	goto	l2914
  6913   003630                     u2740:
  6914   003630  0E00               	movlw	0
  6915   003632  6E15               	movwf	(___fldiv@new_exp+1)^0,c
  6916   003634  6814               	setf	___fldiv@new_exp^0,c
  6917   003636  0E00               	movlw	0
  6918   003638  6E03               	movwf	___fldiv@b^0,c
  6919   00363A  0E00               	movlw	0
  6920   00363C  6E04               	movwf	(___fldiv@b+1)^0,c
  6921   00363E  0E00               	movlw	0
  6922   003640  6E05               	movwf	(___fldiv@b+2)^0,c
  6923   003642  0E00               	movlw	0
  6924   003644  6E06               	movwf	(___fldiv@b+3)^0,c
  6925   003646                     l2914:
  6926   003646  BE15               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6927   003648  EF30  F01B         	goto	u2750
  6928   00364C  5015               	movf	(___fldiv@new_exp+1)^0,w,c
  6929   00364E  E106               	bnz	u2751
  6930   003650  0414               	decf	___fldiv@new_exp^0,w,c
  6931   003652  B0D8               	btfsc	status,0,c
  6932   003654  EF2E  F01B         	goto	u2751
  6933   003658  EF30  F01B         	goto	u2750
  6934   00365C                     u2751:
  6935   00365C  EF3D  F01B         	goto	l2920
  6936   003660                     u2750:
  6937   003660  0E00               	movlw	0
  6938   003662  6E15               	movwf	(___fldiv@new_exp+1)^0,c
  6939   003664  0E00               	movlw	0
  6940   003666  6E14               	movwf	___fldiv@new_exp^0,c
  6941   003668  0E00               	movlw	0
  6942   00366A  6E03               	movwf	___fldiv@b^0,c
  6943   00366C  0E00               	movlw	0
  6944   00366E  6E04               	movwf	(___fldiv@b+1)^0,c
  6945   003670  0E00               	movlw	0
  6946   003672  6E05               	movwf	(___fldiv@b+2)^0,c
  6947   003674  0E00               	movlw	0
  6948   003676  6E06               	movwf	(___fldiv@b+3)^0,c
  6949   003678  6A13               	clrf	___fldiv@sign^0,c
  6950   00367A                     l2920:
  6951   00367A  C014  F01A         	movff	___fldiv@new_exp,___fldiv@bexp
  6952   00367E  A01A               	btfss	___fldiv@bexp^0,0,c
  6953   003680  EF44  F01B         	goto	u2761
  6954   003684  EF46  F01B         	goto	u2760
  6955   003688                     u2761:
  6956   003688  EF49  F01B         	goto	l2926
  6957   00368C                     u2760:
  6958   00368C  8E05               	bsf	(___fldiv@b+2)^0,7,c
  6959   00368E  EF4A  F01B         	goto	l2928
  6960   003692                     l2926:
  6961   003692  9E05               	bcf	(___fldiv@b+2)^0,7,c
  6962   003694                     l2928:
  6963   003694  90D8               	bcf	status,0,c
  6964   003696  301A               	rrcf	___fldiv@bexp^0,w,c
  6965   003698  6E06               	movwf	(___fldiv@b+3)^0,c
  6966   00369A  EF03  F01A         	goto	l2844
  6967   00369E                     l823:
  6968   00369E  0012               	return		;funcret
  6969   0036A0                     __end_of___fldiv:
  6970                           	callstack 0
  6971                           
  6972 ;; *************** function _dtoa *****************
  6973 ;; Defined at:
  6974 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  6975 ;; Parameters:    Size  Location     Type
  6976 ;;  fp              1   24[COMRAM] PTR struct _IO_FILE
  6977 ;;		 -> sprintf@f(11), 
  6978 ;;  d               2   25[COMRAM] int 
  6979 ;; Auto vars:     Size  Location     Type
  6980 ;;  i               2   34[COMRAM] int 
  6981 ;;  p               2   31[COMRAM] int 
  6982 ;;  w               2   29[COMRAM] int 
  6983 ;;  s               1   33[COMRAM] unsigned char 
  6984 ;; Return value:  Size  Location     Type
  6985 ;;                  1    wreg      void 
  6986 ;; Registers used:
  6987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6988 ;; Tracked objects:
  6989 ;;		On entry : 0/0
  6990 ;;		On exit  : 0/0
  6991 ;;		Unchanged: 0/0
  6992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6993 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6994 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6996 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6997 ;;Total ram usage:       12 bytes
  6998 ;; Hardware stack levels used: 1
  6999 ;; Hardware stack levels required when called: 5
  7000 ;; This function calls:
  7001 ;;		___awdiv
  7002 ;;		___awmod
  7003 ;;		_abs
  7004 ;;		_pad
  7005 ;; This function is called by:
  7006 ;;		_vfpfcnvrt
  7007 ;; This function uses a non-reentrant model
  7008 ;;
  7009                           
  7010                           	psect	text20
  7011   003D42                     __ptext20:
  7012                           	callstack 0
  7013   003D42                     _dtoa:
  7014                           	callstack 21
  7015   003D42                     
  7016                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
  7017   003D42  BE1B               	btfsc	(dtoa@d+1)^0,7,c
  7018   003D44  EFA6  F01E         	goto	u3491
  7019   003D48  EFA9  F01E         	goto	u3490
  7020   003D4C                     u3491:
  7021   003D4C  0E01               	movlw	1
  7022   003D4E  EFAA  F01E         	goto	u3500
  7023   003D52                     u3490:
  7024   003D52  0E00               	movlw	0
  7025   003D54                     u3500:
  7026   003D54  6E22               	movwf	dtoa@s^0,c
  7027                           
  7028                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
  7029   003D56  0100               	movlb	0	; () banked
  7030   003D58  BFD2               	btfsc	(_prec+1)& (0+255),7,b
  7031   003D5A  EFB3  F01E         	goto	u3510
  7032   003D5E  EFB1  F01E         	goto	u3511
  7033   003D62                     u3511:
  7034   003D62  EFB9  F01E         	goto	l956
  7035   003D66                     u3510:
  7036   003D66                     
  7037                           ; BSR set to: 0
  7038   003D66  0E00               	movlw	0
  7039   003D68  6E21               	movwf	(dtoa@p+1)^0,c
  7040   003D6A  0E01               	movlw	1
  7041   003D6C  6E20               	movwf	dtoa@p^0,c
  7042   003D6E  EFBD  F01E         	goto	l958
  7043   003D72                     l956:
  7044                           
  7045                           ; BSR set to: 0
  7046   003D72  C0D1  F020         	movff	_prec,dtoa@p
  7047   003D76  C0D2  F021         	movff	_prec+1,dtoa@p+1
  7048   003D7A                     l958:
  7049                           
  7050                           ; BSR set to: 0
  7051                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  7052   003D7A  C0CF  F01E         	movff	_width,dtoa@w
  7053   003D7E  C0D0  F01F         	movff	_width+1,dtoa@w+1
  7054   003D82                     
  7055                           ; BSR set to: 0
  7056                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 536:     if (s
  7057   003D82  5022               	movf	dtoa@s^0,w,c
  7058   003D84  B4D8               	btfsc	status,2,c
  7059   003D86  EFC7  F01E         	goto	u3521
  7060   003D8A  EFC9  F01E         	goto	u3520
  7061   003D8E                     u3521:
  7062   003D8E  EFE0  F01E         	goto	l959
  7063   003D92                     u3520:
  7064   003D92                     
  7065                           ; BSR set to: 0
  7066                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 541:         --w;
  7067   003D92  061E               	decf	dtoa@w^0,f,c
  7068   003D94  A0D8               	btfss	status,0,c
  7069   003D96  061F               	decf	(dtoa@w+1)^0,f,c
  7070   003D98                     
  7071                           ; BSR set to: 0
  7072                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  7073   003D98  5022               	movf	dtoa@s^0,w,c
  7074   003D9A  A4D8               	btfss	status,2,c
  7075   003D9C  EFD2  F01E         	goto	u3531
  7076   003DA0  EFD4  F01E         	goto	u3530
  7077   003DA4                     u3531:
  7078   003DA4  EFDA  F01E         	goto	l3358
  7079   003DA8                     u3530:
  7080   003DA8                     
  7081                           ; BSR set to: 0
  7082   003DA8  0E00               	movlw	0
  7083   003DAA  6E1D               	movwf	(_dtoa$1302+1)^0,c
  7084   003DAC  0E2B               	movlw	43
  7085   003DAE  6E1C               	movwf	_dtoa$1302^0,c
  7086   003DB0  EFDE  F01E         	goto	l3360
  7087   003DB4                     l3358:
  7088                           
  7089                           ; BSR set to: 0
  7090   003DB4  0E00               	movlw	0
  7091   003DB6  6E1D               	movwf	(_dtoa$1302+1)^0,c
  7092   003DB8  0E2D               	movlw	45
  7093   003DBA  6E1C               	movwf	_dtoa$1302^0,c
  7094   003DBC                     l3360:
  7095                           
  7096                           ; BSR set to: 0
  7097   003DBC  C01C  F022         	movff	_dtoa$1302,dtoa@s
  7098   003DC0                     l959:
  7099                           
  7100                           ; BSR set to: 0
  7101                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  7102   003DC0  0E00               	movlw	0
  7103   003DC2  6E24               	movwf	(dtoa@i+1)^0,c
  7104   003DC4  0E4F               	movlw	79
  7105   003DC6  6E23               	movwf	dtoa@i^0,c
  7106   003DC8                     
  7107                           ; BSR set to: 0
  7108                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  7109   003DC8  0101               	movlb	1	; () banked
  7110   003DCA  6B4F               	clrf	(_dbuf+79)& (0+255),b
  7111                           
  7112                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  7113   003DCC  EF18  F01F         	goto	l3374
  7114   003DD0                     l3364:
  7115                           
  7116                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 564:         --i;
  7117   003DD0  0623               	decf	dtoa@i^0,f,c
  7118   003DD2  A0D8               	btfss	status,0,c
  7119   003DD4  0624               	decf	(dtoa@i+1)^0,f,c
  7120   003DD6                     
  7121                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  7122   003DD6  0E00               	movlw	low _dbuf
  7123   003DD8  2423               	addwf	dtoa@i^0,w,c
  7124   003DDA  6ED9               	movwf	fsr2l,c
  7125   003DDC  0E01               	movlw	high _dbuf
  7126   003DDE  2024               	addwfc	(dtoa@i+1)^0,w,c
  7127   003DE0  6EDA               	movwf	fsr2h,c
  7128   003DE2  C01A  F003         	movff	dtoa@d,___awmod@dividend
  7129   003DE6  C01B  F004         	movff	dtoa@d+1,___awmod@dividend+1
  7130   003DEA  0E00               	movlw	0
  7131   003DEC  6E06               	movwf	(___awmod@divisor+1)^0,c
  7132   003DEE  0E0A               	movlw	10
  7133   003DF0  6E05               	movwf	___awmod@divisor^0,c
  7134   003DF2  EC9F  F021         	call	___awmod	;wreg free
  7135   003DF6  C003  F009         	movff	?___awmod,abs@a
  7136   003DFA  C004  F00A         	movff	?___awmod+1,abs@a+1
  7137   003DFE  EC68  F025         	call	_abs	;wreg free
  7138   003E02  5009               	movf	?_abs^0,w,c
  7139   003E04  0F30               	addlw	48
  7140   003E06  6EDF               	movwf	indf2,c
  7141   003E08                     
  7142                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 567:         --p;
  7143   003E08  0620               	decf	dtoa@p^0,f,c
  7144   003E0A  A0D8               	btfss	status,0,c
  7145   003E0C  0621               	decf	(dtoa@p+1)^0,f,c
  7146   003E0E                     
  7147                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 571:         --w;
  7148   003E0E  061E               	decf	dtoa@w^0,f,c
  7149   003E10  A0D8               	btfss	status,0,c
  7150   003E12  061F               	decf	(dtoa@w+1)^0,f,c
  7151   003E14                     
  7152                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  7153   003E14  C01A  F003         	movff	dtoa@d,___awdiv@dividend
  7154   003E18  C01B  F004         	movff	dtoa@d+1,___awdiv@dividend+1
  7155   003E1C  0E00               	movlw	0
  7156   003E1E  6E06               	movwf	(___awdiv@divisor+1)^0,c
  7157   003E20  0E0A               	movlw	10
  7158   003E22  6E05               	movwf	___awdiv@divisor^0,c
  7159   003E24  ECE2  F020         	call	___awdiv	;wreg free
  7160   003E28  C003  F01A         	movff	?___awdiv,dtoa@d
  7161   003E2C  C004  F01B         	movff	?___awdiv+1,dtoa@d+1
  7162   003E30                     l3374:
  7163                           
  7164                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  7165   003E30  BE24               	btfsc	(dtoa@i+1)^0,7,c
  7166   003E32  EF23  F01F         	goto	u3541
  7167   003E36  5024               	movf	(dtoa@i+1)^0,w,c
  7168   003E38  E108               	bnz	u3540
  7169   003E3A  0423               	decf	dtoa@i^0,w,c
  7170   003E3C  A0D8               	btfss	status,0,c
  7171   003E3E  EF23  F01F         	goto	u3541
  7172   003E42  EF25  F01F         	goto	u3540
  7173   003E46                     u3541:
  7174   003E46  EF3B  F01F         	goto	l3380
  7175   003E4A                     u3540:
  7176   003E4A  501A               	movf	dtoa@d^0,w,c
  7177   003E4C  101B               	iorwf	(dtoa@d+1)^0,w,c
  7178   003E4E  A4D8               	btfss	status,2,c
  7179   003E50  EF2C  F01F         	goto	u3551
  7180   003E54  EF2E  F01F         	goto	u3550
  7181   003E58                     u3551:
  7182   003E58  EFE8  F01E         	goto	l3364
  7183   003E5C                     u3550:
  7184   003E5C  BE21               	btfsc	(dtoa@p+1)^0,7,c
  7185   003E5E  EF3B  F01F         	goto	u3560
  7186   003E62  5021               	movf	(dtoa@p+1)^0,w,c
  7187   003E64  E106               	bnz	u3561
  7188   003E66  0420               	decf	dtoa@p^0,w,c
  7189   003E68  B0D8               	btfsc	status,0,c
  7190   003E6A  EF39  F01F         	goto	u3561
  7191   003E6E  EF3B  F01F         	goto	u3560
  7192   003E72                     u3561:
  7193   003E72  EFE8  F01E         	goto	l3364
  7194   003E76                     u3560:
  7195   003E76                     l3380:
  7196                           
  7197                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  7198   003E76  5022               	movf	dtoa@s^0,w,c
  7199   003E78  B4D8               	btfsc	status,2,c
  7200   003E7A  EF41  F01F         	goto	u3571
  7201   003E7E  EF43  F01F         	goto	u3570
  7202   003E82                     u3571:
  7203   003E82  EF4F  F01F         	goto	l3386
  7204   003E86                     u3570:
  7205   003E86                     
  7206                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 577:         --i;
  7207   003E86  0623               	decf	dtoa@i^0,f,c
  7208   003E88  A0D8               	btfss	status,0,c
  7209   003E8A  0624               	decf	(dtoa@i+1)^0,f,c
  7210   003E8C                     
  7211                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  7212   003E8C  0E00               	movlw	low _dbuf
  7213   003E8E  2423               	addwf	dtoa@i^0,w,c
  7214   003E90  6ED9               	movwf	fsr2l,c
  7215   003E92  0E01               	movlw	high _dbuf
  7216   003E94  2024               	addwfc	(dtoa@i+1)^0,w,c
  7217   003E96  6EDA               	movwf	fsr2h,c
  7218   003E98  0060  F08B  FFDF   	movff	dtoa@s,indf2
  7219   003E9E                     l3386:
  7220                           
  7221                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  7222   003E9E  C019  F011         	movff	dtoa@fp,pad@fp
  7223   003EA2  0E00               	movlw	low _dbuf
  7224   003EA4  2423               	addwf	dtoa@i^0,w,c
  7225   003EA6  6E12               	movwf	pad@buf^0,c
  7226   003EA8  0E01               	movlw	high _dbuf
  7227   003EAA  2024               	addwfc	(dtoa@i+1)^0,w,c
  7228   003EAC  6E13               	movwf	(pad@buf+1)^0,c
  7229   003EAE  C01E  F014         	movff	dtoa@w,pad@p
  7230   003EB2  C01F  F015         	movff	dtoa@w+1,pad@p+1
  7231   003EB6  EC61  F023         	call	_pad	;wreg free
  7232   003EBA  0012               	return		;funcret
  7233   003EBC                     __end_of_dtoa:
  7234                           	callstack 0
  7235                           
  7236 ;; *************** function _pad *****************
  7237 ;; Defined at:
  7238 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  7239 ;; Parameters:    Size  Location     Type
  7240 ;;  fp              1   16[COMRAM] PTR struct _IO_FILE
  7241 ;;		 -> sprintf@f(11), 
  7242 ;;  buf             2   17[COMRAM] PTR unsigned char 
  7243 ;;		 -> dbuf(80), 
  7244 ;;  p               2   19[COMRAM] int 
  7245 ;; Auto vars:     Size  Location     Type
  7246 ;;  i               2   22[COMRAM] int 
  7247 ;; Return value:  Size  Location     Type
  7248 ;;                  1    wreg      void 
  7249 ;; Registers used:
  7250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7251 ;; Tracked objects:
  7252 ;;		On entry : 0/0
  7253 ;;		On exit  : 0/0
  7254 ;;		Unchanged: 0/0
  7255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7256 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7257 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7258 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7259 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7260 ;;Total ram usage:        8 bytes
  7261 ;; Hardware stack levels used: 1
  7262 ;; Hardware stack levels required when called: 4
  7263 ;; This function calls:
  7264 ;;		_fputc
  7265 ;;		_fputs
  7266 ;; This function is called by:
  7267 ;;		_dtoa
  7268 ;;		_efgtoa
  7269 ;; This function uses a non-reentrant model
  7270 ;;
  7271                           
  7272                           	psect	text21
  7273   0046C2                     __ptext21:
  7274                           	callstack 0
  7275   0046C2                     _pad:
  7276                           	callstack 21
  7277   0046C2                     
  7278                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  7279   0046C2  BE15               	btfsc	(pad@p+1)^0,7,c
  7280   0046C4  EF68  F023         	goto	u3240
  7281   0046C8  EF66  F023         	goto	u3241
  7282   0046CC                     u3241:
  7283   0046CC  EF6C  F023         	goto	l948
  7284   0046D0                     u3240:
  7285   0046D0                     
  7286                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  7287   0046D0  0E00               	movlw	0
  7288   0046D2  6E15               	movwf	(pad@p+1)^0,c
  7289   0046D4  0E00               	movlw	0
  7290   0046D6  6E14               	movwf	pad@p^0,c
  7291   0046D8                     l948:
  7292                           
  7293                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  7294   0046D8  0E00               	movlw	0
  7295   0046DA  6E18               	movwf	(pad@i+1)^0,c
  7296   0046DC  0E00               	movlw	0
  7297   0046DE  6E17               	movwf	pad@i^0,c
  7298                           
  7299                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  7300   0046E0  EF7C  F023         	goto	l3248
  7301   0046E4                     l3244:
  7302                           
  7303                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  7304   0046E4  0E00               	movlw	0
  7305   0046E6  6E04               	movwf	(fputc@c+1)^0,c
  7306   0046E8  0E20               	movlw	32
  7307   0046EA  6E03               	movwf	fputc@c^0,c
  7308   0046EC  C011  F005         	movff	pad@fp,fputc@fp
  7309   0046F0  ECF6  F021         	call	_fputc	;wreg free
  7310   0046F4                     
  7311                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
  7312   0046F4  4A17               	infsnz	pad@i^0,f,c
  7313   0046F6  2A18               	incf	(pad@i+1)^0,f,c
  7314   0046F8                     l3248:
  7315                           
  7316                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  7317   0046F8  5014               	movf	pad@p^0,w,c
  7318   0046FA  5C17               	subwf	pad@i^0,w,c
  7319   0046FC  5018               	movf	(pad@i+1)^0,w,c
  7320   0046FE  0A80               	xorlw	128
  7321   004700  6E16               	movwf	??_pad^0,c
  7322   004702  5015               	movf	(pad@p+1)^0,w,c
  7323   004704  0A80               	xorlw	128
  7324   004706  5816               	subwfb	??_pad^0,w,c
  7325   004708  A0D8               	btfss	status,0,c
  7326   00470A  EF89  F023         	goto	u3251
  7327   00470E  EF8B  F023         	goto	u3250
  7328   004712                     u3251:
  7329   004712  EF72  F023         	goto	l3244
  7330   004716                     u3250:
  7331   004716                     
  7332                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  7333   004716  C012  F00B         	movff	pad@buf,fputs@s
  7334   00471A  C013  F00C         	movff	pad@buf+1,fputs@s+1
  7335   00471E  C011  F00D         	movff	pad@fp,fputs@fp
  7336   004722  ECF1  F024         	call	_fputs	;wreg free
  7337   004726  0012               	return		;funcret
  7338   004728                     __end_of_pad:
  7339                           	callstack 0
  7340                           
  7341 ;; *************** function _fputs *****************
  7342 ;; Defined at:
  7343 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
  7344 ;; Parameters:    Size  Location     Type
  7345 ;;  s               2   10[COMRAM] PTR const unsigned char 
  7346 ;;		 -> dbuf(80), 
  7347 ;;  fp              1   12[COMRAM] PTR struct _IO_FILE
  7348 ;;		 -> sprintf@f(11), 
  7349 ;; Auto vars:     Size  Location     Type
  7350 ;;  i               2   14[COMRAM] int 
  7351 ;;  c               1   13[COMRAM] unsigned char 
  7352 ;; Return value:  Size  Location     Type
  7353 ;;                  2   10[COMRAM] int 
  7354 ;; Registers used:
  7355 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7356 ;; Tracked objects:
  7357 ;;		On entry : 0/0
  7358 ;;		On exit  : 0/0
  7359 ;;		Unchanged: 0/0
  7360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7361 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7362 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7364 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7365 ;;Total ram usage:        6 bytes
  7366 ;; Hardware stack levels used: 1
  7367 ;; Hardware stack levels required when called: 3
  7368 ;; This function calls:
  7369 ;;		_fputc
  7370 ;; This function is called by:
  7371 ;;		_pad
  7372 ;; This function uses a non-reentrant model
  7373 ;;
  7374                           
  7375                           	psect	text22
  7376   0049E2                     __ptext22:
  7377                           	callstack 0
  7378   0049E2                     _fputs:
  7379                           	callstack 21
  7380   0049E2  0E00               	movlw	0
  7381   0049E4  6E10               	movwf	(fputs@i+1)^0,c
  7382   0049E6  0E00               	movlw	0
  7383   0049E8  6E0F               	movwf	fputs@i^0,c
  7384   0049EA  EF00  F025         	goto	l2798
  7385   0049EE                     l2794:
  7386   0049EE  C00E  F003         	movff	fputs@c,fputc@c
  7387   0049F2  6A04               	clrf	(fputc@c+1)^0,c
  7388   0049F4  C00D  F005         	movff	fputs@fp,fputc@fp
  7389   0049F8  ECF6  F021         	call	_fputc	;wreg free
  7390   0049FC  4A0F               	infsnz	fputs@i^0,f,c
  7391   0049FE  2A10               	incf	(fputs@i+1)^0,f,c
  7392   004A00                     l2798:
  7393   004A00  500F               	movf	fputs@i^0,w,c
  7394   004A02  240B               	addwf	fputs@s^0,w,c
  7395   004A04  6ED9               	movwf	fsr2l,c
  7396   004A06  5010               	movf	(fputs@i+1)^0,w,c
  7397   004A08  200C               	addwfc	(fputs@s+1)^0,w,c
  7398   004A0A  6EDA               	movwf	fsr2h,c
  7399   004A0C  50DF               	movf	indf2,w,c
  7400   004A0E  6E0E               	movwf	fputs@c^0,c
  7401   004A10  500E               	movf	fputs@c^0,w,c
  7402   004A12  A4D8               	btfss	status,2,c
  7403   004A14  EF0E  F025         	goto	u2531
  7404   004A18  EF10  F025         	goto	u2530
  7405   004A1C                     u2531:
  7406   004A1C  EFF7  F024         	goto	l2794
  7407   004A20                     u2530:
  7408   004A20  0012               	return		;funcret
  7409   004A22                     __end_of_fputs:
  7410                           	callstack 0
  7411                           
  7412 ;; *************** function _fputc *****************
  7413 ;; Defined at:
  7414 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  7415 ;; Parameters:    Size  Location     Type
  7416 ;;  c               2    2[COMRAM] int 
  7417 ;;  fp              1    4[COMRAM] PTR struct _IO_FILE
  7418 ;;		 -> sprintf@f(11), 
  7419 ;; Auto vars:     Size  Location     Type
  7420 ;;		None
  7421 ;; Return value:  Size  Location     Type
  7422 ;;                  2    2[COMRAM] int 
  7423 ;; Registers used:
  7424 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7425 ;; Tracked objects:
  7426 ;;		On entry : 0/0
  7427 ;;		On exit  : 0/0
  7428 ;;		Unchanged: 0/0
  7429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7430 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7432 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7433 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7434 ;;Total ram usage:        8 bytes
  7435 ;; Hardware stack levels used: 1
  7436 ;; Hardware stack levels required when called: 2
  7437 ;; This function calls:
  7438 ;;		_putch
  7439 ;; This function is called by:
  7440 ;;		_pad
  7441 ;;		_vfpfcnvrt
  7442 ;;		_fputs
  7443 ;; This function uses a non-reentrant model
  7444 ;;
  7445                           
  7446                           	psect	text23
  7447   0043EC                     __ptext23:
  7448                           	callstack 0
  7449   0043EC                     _fputc:
  7450                           	callstack 24
  7451   0043EC  5005               	movf	fputc@fp^0,w,c
  7452   0043EE  B4D8               	btfsc	status,2,c
  7453   0043F0  EFFC  F021         	goto	u2101
  7454   0043F4  EFFE  F021         	goto	u2100
  7455   0043F8                     u2101:
  7456   0043F8  EF06  F022         	goto	l2588
  7457   0043FC                     u2100:
  7458   0043FC  5005               	movf	fputc@fp^0,w,c
  7459   0043FE  A4D8               	btfss	status,2,c
  7460   004400  EF04  F022         	goto	u2111
  7461   004404  EF06  F022         	goto	u2110
  7462   004408                     u2111:
  7463   004408  EF0B  F022         	goto	l2590
  7464   00440C                     u2110:
  7465   00440C                     l2588:
  7466   00440C  5003               	movf	fputc@c^0,w,c
  7467   00440E  EC27  F026         	call	_putch
  7468   004412  EF4B  F022         	goto	l1116
  7469   004416                     l2590:
  7470   004416  5005               	movf	fputc@fp^0,w,c
  7471   004418  6ED9               	movwf	fsr2l,c
  7472   00441A  6ADA               	clrf	fsr2h,c
  7473   00441C  0E09               	movlw	9
  7474   00441E  26D9               	addwf	fsr2l,f,c
  7475   004420  50DE               	movf	postinc2,w,c
  7476   004422  10DE               	iorwf	postinc2,w,c
  7477   004424  B4D8               	btfsc	status,2,c
  7478   004426  EF17  F022         	goto	u2121
  7479   00442A  EF19  F022         	goto	u2120
  7480   00442E                     u2121:
  7481   00442E  EF32  F022         	goto	l2594
  7482   004432                     u2120:
  7483   004432  5005               	movf	fputc@fp^0,w,c
  7484   004434  6ED9               	movwf	fsr2l,c
  7485   004436  6ADA               	clrf	fsr2h,c
  7486   004438  0E09               	movlw	9
  7487   00443A  26D9               	addwf	fsr2l,f,c
  7488   00443C  5005               	movf	fputc@fp^0,w,c
  7489   00443E  6EE1               	movwf	fsr1l,c
  7490   004440  6AE2               	clrf	fsr1h,c
  7491   004442  0E02               	movlw	2
  7492   004444  26E1               	addwf	fsr1l,f,c
  7493   004446  50DE               	movf	postinc2,w,c
  7494   004448  5CE6               	subwf	postinc1,w,c
  7495   00444A  50E6               	movf	postinc1,w,c
  7496   00444C  0A80               	xorlw	128
  7497   00444E  6E0A               	movwf	(??_fputc+4)^0,c
  7498   004450  50DE               	movf	postinc2,w,c
  7499   004452  0A80               	xorlw	128
  7500   004454  580A               	subwfb	(??_fputc+4)^0,w,c
  7501   004456  B0D8               	btfsc	status,0,c
  7502   004458  EF30  F022         	goto	u2131
  7503   00445C  EF32  F022         	goto	u2130
  7504   004460                     u2131:
  7505   004460  EF4B  F022         	goto	l1116
  7506   004464                     u2130:
  7507   004464                     l2594:
  7508   004464  5005               	movf	fputc@fp^0,w,c
  7509   004466  6ED9               	movwf	fsr2l,c
  7510   004468  6ADA               	clrf	fsr2h,c
  7511   00446A  0E02               	movlw	2
  7512   00446C  26D9               	addwf	fsr2l,f,c
  7513   00446E  50DF               	movf	indf2,w,c
  7514   004470  6E06               	movwf	??_fputc^0,c
  7515   004472  5005               	movf	fputc@fp^0,w,c
  7516   004474  6ED9               	movwf	fsr2l,c
  7517   004476  6ADA               	clrf	fsr2h,c
  7518   004478  50DF               	movf	indf2,w,c
  7519   00447A  2406               	addwf	??_fputc^0,w,c
  7520   00447C  6ED9               	movwf	fsr2l,c
  7521   00447E  6ADA               	clrf	fsr2h,c
  7522   004480  0060  F00F  FFDF   	movff	fputc@c,indf2
  7523   004486  5005               	movf	fputc@fp^0,w,c
  7524   004488  6ED9               	movwf	fsr2l,c
  7525   00448A  6ADA               	clrf	fsr2h,c
  7526   00448C  0E02               	movlw	2
  7527   00448E  26D9               	addwf	fsr2l,f,c
  7528   004490  2ADE               	incf	postinc2,f,c
  7529   004492  0E00               	movlw	0
  7530   004494  22DD               	addwfc	postdec2,f,c
  7531   004496                     l1116:
  7532   004496  0012               	return		;funcret
  7533   004498                     __end_of_fputc:
  7534                           	callstack 0
  7535                           
  7536 ;; *************** function _putch *****************
  7537 ;; Defined at:
  7538 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  7539 ;; Parameters:    Size  Location     Type
  7540 ;;  c               1    wreg     unsigned char 
  7541 ;; Auto vars:     Size  Location     Type
  7542 ;;  c               1    0[COMRAM] unsigned char 
  7543 ;; Return value:  Size  Location     Type
  7544 ;;                  1    wreg      void 
  7545 ;; Registers used:
  7546 ;;		wreg
  7547 ;; Tracked objects:
  7548 ;;		On entry : 0/0
  7549 ;;		On exit  : 0/0
  7550 ;;		Unchanged: 0/0
  7551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7556 ;;Total ram usage:        0 bytes
  7557 ;; Hardware stack levels used: 1
  7558 ;; Hardware stack levels required when called: 1
  7559 ;; This function calls:
  7560 ;;		Nothing
  7561 ;; This function is called by:
  7562 ;;		_fputc
  7563 ;; This function uses a non-reentrant model
  7564 ;;
  7565                           
  7566                           	psect	text24
  7567   004C4E                     __ptext24:
  7568                           	callstack 0
  7569   004C4E                     _putch:
  7570                           	callstack 24
  7571   004C4E  0012               	return		;funcret
  7572   004C50                     __end_of_putch:
  7573                           	callstack 0
  7574                           
  7575 ;; *************** function _abs *****************
  7576 ;; Defined at:
  7577 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
  7578 ;; Parameters:    Size  Location     Type
  7579 ;;  a               2    8[COMRAM] int 
  7580 ;; Auto vars:     Size  Location     Type
  7581 ;;		None
  7582 ;; Return value:  Size  Location     Type
  7583 ;;                  2    8[COMRAM] int 
  7584 ;; Registers used:
  7585 ;;		wreg, status,2, status,0
  7586 ;; Tracked objects:
  7587 ;;		On entry : 0/0
  7588 ;;		On exit  : 0/0
  7589 ;;		Unchanged: 0/0
  7590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7591 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7593 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7594 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7595 ;;Total ram usage:        4 bytes
  7596 ;; Hardware stack levels used: 1
  7597 ;; Hardware stack levels required when called: 1
  7598 ;; This function calls:
  7599 ;;		Nothing
  7600 ;; This function is called by:
  7601 ;;		_dtoa
  7602 ;; This function uses a non-reentrant model
  7603 ;;
  7604                           
  7605                           	psect	text25
  7606   004AD0                     __ptext25:
  7607                           	callstack 0
  7608   004AD0                     _abs:
  7609                           	callstack 24
  7610   004AD0  BE0A               	btfsc	(abs@a+1)^0,7,c
  7611   004AD2  EF6D  F025         	goto	u3261
  7612   004AD6  EF6F  F025         	goto	u3260
  7613   004ADA                     u3261:
  7614   004ADA  EF75  F025         	goto	l1075
  7615   004ADE                     u3260:
  7616   004ADE  C009  F009         	movff	abs@a,?_abs
  7617   004AE2  C00A  F00A         	movff	abs@a+1,?_abs+1
  7618   004AE6  EF81  F025         	goto	l1078
  7619   004AEA                     l1075:
  7620   004AEA  C009  F00B         	movff	abs@a,??_abs
  7621   004AEE  C00A  F00C         	movff	abs@a+1,??_abs+1
  7622   004AF2  1E0B               	comf	??_abs^0,f,c
  7623   004AF4  1E0C               	comf	(??_abs+1)^0,f,c
  7624   004AF6  4A0B               	infsnz	??_abs^0,f,c
  7625   004AF8  2A0C               	incf	(??_abs+1)^0,f,c
  7626   004AFA  C00B  F009         	movff	??_abs,?_abs
  7627   004AFE  C00C  F00A         	movff	??_abs+1,?_abs+1
  7628   004B02                     l1078:
  7629   004B02  0012               	return		;funcret
  7630   004B04                     __end_of_abs:
  7631                           	callstack 0
  7632                           
  7633 ;; *************** function ___awmod *****************
  7634 ;; Defined at:
  7635 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  7636 ;; Parameters:    Size  Location     Type
  7637 ;;  dividend        2    2[COMRAM] int 
  7638 ;;  divisor         2    4[COMRAM] int 
  7639 ;; Auto vars:     Size  Location     Type
  7640 ;;  sign            1    7[COMRAM] unsigned char 
  7641 ;;  counter         1    6[COMRAM] unsigned char 
  7642 ;; Return value:  Size  Location     Type
  7643 ;;                  2    2[COMRAM] int 
  7644 ;; Registers used:
  7645 ;;		wreg, status,2, status,0
  7646 ;; Tracked objects:
  7647 ;;		On entry : 0/0
  7648 ;;		On exit  : 0/0
  7649 ;;		Unchanged: 0/0
  7650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7651 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7652 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7654 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7655 ;;Total ram usage:        6 bytes
  7656 ;; Hardware stack levels used: 1
  7657 ;; Hardware stack levels required when called: 1
  7658 ;; This function calls:
  7659 ;;		Nothing
  7660 ;; This function is called by:
  7661 ;;		_dtoa
  7662 ;; This function uses a non-reentrant model
  7663 ;;
  7664                           
  7665                           	psect	text26
  7666   00433E                     __ptext26:
  7667                           	callstack 0
  7668   00433E                     ___awmod:
  7669                           	callstack 24
  7670   00433E  6A08               	clrf	___awmod@sign^0,c
  7671   004340  BE04               	btfsc	(___awmod@dividend+1)^0,7,c
  7672   004342  EFA7  F021         	goto	u3020
  7673   004346  EFA5  F021         	goto	u3021
  7674   00434A                     u3021:
  7675   00434A  EFAD  F021         	goto	l3122
  7676   00434E                     u3020:
  7677   00434E  6C03               	negf	___awmod@dividend^0,c
  7678   004350  1E04               	comf	(___awmod@dividend+1)^0,f,c
  7679   004352  B0D8               	btfsc	status,0,c
  7680   004354  2A04               	incf	(___awmod@dividend+1)^0,f,c
  7681   004356  0E01               	movlw	1
  7682   004358  6E08               	movwf	___awmod@sign^0,c
  7683   00435A                     l3122:
  7684   00435A  BE06               	btfsc	(___awmod@divisor+1)^0,7,c
  7685   00435C  EFB4  F021         	goto	u3030
  7686   004360  EFB2  F021         	goto	u3031
  7687   004364                     u3031:
  7688   004364  EFB8  F021         	goto	l3126
  7689   004368                     u3030:
  7690   004368  6C05               	negf	___awmod@divisor^0,c
  7691   00436A  1E06               	comf	(___awmod@divisor+1)^0,f,c
  7692   00436C  B0D8               	btfsc	status,0,c
  7693   00436E  2A06               	incf	(___awmod@divisor+1)^0,f,c
  7694   004370                     l3126:
  7695   004370  5005               	movf	___awmod@divisor^0,w,c
  7696   004372  1006               	iorwf	(___awmod@divisor+1)^0,w,c
  7697   004374  B4D8               	btfsc	status,2,c
  7698   004376  EFBF  F021         	goto	u3041
  7699   00437A  EFC1  F021         	goto	u3040
  7700   00437E                     u3041:
  7701   00437E  EFE5  F021         	goto	l3142
  7702   004382                     u3040:
  7703   004382  0E01               	movlw	1
  7704   004384  6E07               	movwf	___awmod@counter^0,c
  7705   004386  EFC9  F021         	goto	l3132
  7706   00438A                     l3130:
  7707   00438A  90D8               	bcf	status,0,c
  7708   00438C  3605               	rlcf	___awmod@divisor^0,f,c
  7709   00438E  3606               	rlcf	(___awmod@divisor+1)^0,f,c
  7710   004390  2A07               	incf	___awmod@counter^0,f,c
  7711   004392                     l3132:
  7712   004392  AE06               	btfss	(___awmod@divisor+1)^0,7,c
  7713   004394  EFCE  F021         	goto	u3051
  7714   004398  EFD0  F021         	goto	u3050
  7715   00439C                     u3051:
  7716   00439C  EFC5  F021         	goto	l3130
  7717   0043A0                     u3050:
  7718   0043A0                     l3134:
  7719   0043A0  5005               	movf	___awmod@divisor^0,w,c
  7720   0043A2  5C03               	subwf	___awmod@dividend^0,w,c
  7721   0043A4  5006               	movf	(___awmod@divisor+1)^0,w,c
  7722   0043A6  5804               	subwfb	(___awmod@dividend+1)^0,w,c
  7723   0043A8  A0D8               	btfss	status,0,c
  7724   0043AA  EFD9  F021         	goto	u3061
  7725   0043AE  EFDB  F021         	goto	u3060
  7726   0043B2                     u3061:
  7727   0043B2  EFDF  F021         	goto	l3138
  7728   0043B6                     u3060:
  7729   0043B6  5005               	movf	___awmod@divisor^0,w,c
  7730   0043B8  5E03               	subwf	___awmod@dividend^0,f,c
  7731   0043BA  5006               	movf	(___awmod@divisor+1)^0,w,c
  7732   0043BC  5A04               	subwfb	(___awmod@dividend+1)^0,f,c
  7733   0043BE                     l3138:
  7734   0043BE  90D8               	bcf	status,0,c
  7735   0043C0  3206               	rrcf	(___awmod@divisor+1)^0,f,c
  7736   0043C2  3205               	rrcf	___awmod@divisor^0,f,c
  7737   0043C4  2E07               	decfsz	___awmod@counter^0,f,c
  7738   0043C6  EFD0  F021         	goto	l3134
  7739   0043CA                     l3142:
  7740   0043CA  5008               	movf	___awmod@sign^0,w,c
  7741   0043CC  B4D8               	btfsc	status,2,c
  7742   0043CE  EFEB  F021         	goto	u3071
  7743   0043D2  EFED  F021         	goto	u3070
  7744   0043D6                     u3071:
  7745   0043D6  EFF1  F021         	goto	l3146
  7746   0043DA                     u3070:
  7747   0043DA  6C03               	negf	___awmod@dividend^0,c
  7748   0043DC  1E04               	comf	(___awmod@dividend+1)^0,f,c
  7749   0043DE  B0D8               	btfsc	status,0,c
  7750   0043E0  2A04               	incf	(___awmod@dividend+1)^0,f,c
  7751   0043E2                     l3146:
  7752   0043E2  C003  F003         	movff	___awmod@dividend,?___awmod
  7753   0043E6  C004  F004         	movff	___awmod@dividend+1,?___awmod+1
  7754   0043EA  0012               	return		;funcret
  7755   0043EC                     __end_of___awmod:
  7756                           	callstack 0
  7757                           
  7758 ;; *************** function ___awdiv *****************
  7759 ;; Defined at:
  7760 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  7761 ;; Parameters:    Size  Location     Type
  7762 ;;  dividend        2    2[COMRAM] int 
  7763 ;;  divisor         2    4[COMRAM] int 
  7764 ;; Auto vars:     Size  Location     Type
  7765 ;;  quotient        2    8[COMRAM] int 
  7766 ;;  sign            1    7[COMRAM] unsigned char 
  7767 ;;  counter         1    6[COMRAM] unsigned char 
  7768 ;; Return value:  Size  Location     Type
  7769 ;;                  2    2[COMRAM] int 
  7770 ;; Registers used:
  7771 ;;		wreg, status,2, status,0
  7772 ;; Tracked objects:
  7773 ;;		On entry : 0/0
  7774 ;;		On exit  : 0/0
  7775 ;;		Unchanged: 0/0
  7776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7777 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7778 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7780 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7781 ;;Total ram usage:        8 bytes
  7782 ;; Hardware stack levels used: 1
  7783 ;; Hardware stack levels required when called: 1
  7784 ;; This function calls:
  7785 ;;		Nothing
  7786 ;; This function is called by:
  7787 ;;		_dtoa
  7788 ;; This function uses a non-reentrant model
  7789 ;;
  7790                           
  7791                           	psect	text27
  7792   0041C4                     __ptext27:
  7793                           	callstack 0
  7794   0041C4                     ___awdiv:
  7795                           	callstack 24
  7796   0041C4  6A08               	clrf	___awdiv@sign^0,c
  7797   0041C6  BE06               	btfsc	(___awdiv@divisor+1)^0,7,c
  7798   0041C8  EFEA  F020         	goto	u2960
  7799   0041CC  EFE8  F020         	goto	u2961
  7800   0041D0                     u2961:
  7801   0041D0  EFF0  F020         	goto	l3078
  7802   0041D4                     u2960:
  7803   0041D4  6C05               	negf	___awdiv@divisor^0,c
  7804   0041D6  1E06               	comf	(___awdiv@divisor+1)^0,f,c
  7805   0041D8  B0D8               	btfsc	status,0,c
  7806   0041DA  2A06               	incf	(___awdiv@divisor+1)^0,f,c
  7807   0041DC  0E01               	movlw	1
  7808   0041DE  6E08               	movwf	___awdiv@sign^0,c
  7809   0041E0                     l3078:
  7810   0041E0  BE04               	btfsc	(___awdiv@dividend+1)^0,7,c
  7811   0041E2  EFF7  F020         	goto	u2970
  7812   0041E6  EFF5  F020         	goto	u2971
  7813   0041EA                     u2971:
  7814   0041EA  EFFD  F020         	goto	l3084
  7815   0041EE                     u2970:
  7816   0041EE  6C03               	negf	___awdiv@dividend^0,c
  7817   0041F0  1E04               	comf	(___awdiv@dividend+1)^0,f,c
  7818   0041F2  B0D8               	btfsc	status,0,c
  7819   0041F4  2A04               	incf	(___awdiv@dividend+1)^0,f,c
  7820   0041F6  0E01               	movlw	1
  7821   0041F8  1A08               	xorwf	___awdiv@sign^0,f,c
  7822   0041FA                     l3084:
  7823   0041FA  0E00               	movlw	0
  7824   0041FC  6E0A               	movwf	(___awdiv@quotient+1)^0,c
  7825   0041FE  0E00               	movlw	0
  7826   004200  6E09               	movwf	___awdiv@quotient^0,c
  7827   004202  5005               	movf	___awdiv@divisor^0,w,c
  7828   004204  1006               	iorwf	(___awdiv@divisor+1)^0,w,c
  7829   004206  B4D8               	btfsc	status,2,c
  7830   004208  EF08  F021         	goto	u2981
  7831   00420C  EF0A  F021         	goto	u2980
  7832   004210                     u2981:
  7833   004210  EF32  F021         	goto	l3106
  7834   004214                     u2980:
  7835   004214  0E01               	movlw	1
  7836   004216  6E07               	movwf	___awdiv@counter^0,c
  7837   004218  EF12  F021         	goto	l3092
  7838   00421C                     l3090:
  7839   00421C  90D8               	bcf	status,0,c
  7840   00421E  3605               	rlcf	___awdiv@divisor^0,f,c
  7841   004220  3606               	rlcf	(___awdiv@divisor+1)^0,f,c
  7842   004222  2A07               	incf	___awdiv@counter^0,f,c
  7843   004224                     l3092:
  7844   004224  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
  7845   004226  EF17  F021         	goto	u2991
  7846   00422A  EF19  F021         	goto	u2990
  7847   00422E                     u2991:
  7848   00422E  EF0E  F021         	goto	l3090
  7849   004232                     u2990:
  7850   004232                     l3094:
  7851   004232  90D8               	bcf	status,0,c
  7852   004234  3609               	rlcf	___awdiv@quotient^0,f,c
  7853   004236  360A               	rlcf	(___awdiv@quotient+1)^0,f,c
  7854   004238  5005               	movf	___awdiv@divisor^0,w,c
  7855   00423A  5C03               	subwf	___awdiv@dividend^0,w,c
  7856   00423C  5006               	movf	(___awdiv@divisor+1)^0,w,c
  7857   00423E  5804               	subwfb	(___awdiv@dividend+1)^0,w,c
  7858   004240  A0D8               	btfss	status,0,c
  7859   004242  EF25  F021         	goto	u3001
  7860   004246  EF27  F021         	goto	u3000
  7861   00424A                     u3001:
  7862   00424A  EF2C  F021         	goto	l3102
  7863   00424E                     u3000:
  7864   00424E  5005               	movf	___awdiv@divisor^0,w,c
  7865   004250  5E03               	subwf	___awdiv@dividend^0,f,c
  7866   004252  5006               	movf	(___awdiv@divisor+1)^0,w,c
  7867   004254  5A04               	subwfb	(___awdiv@dividend+1)^0,f,c
  7868   004256  8009               	bsf	___awdiv@quotient^0,0,c
  7869   004258                     l3102:
  7870   004258  90D8               	bcf	status,0,c
  7871   00425A  3206               	rrcf	(___awdiv@divisor+1)^0,f,c
  7872   00425C  3205               	rrcf	___awdiv@divisor^0,f,c
  7873   00425E  2E07               	decfsz	___awdiv@counter^0,f,c
  7874   004260  EF19  F021         	goto	l3094
  7875   004264                     l3106:
  7876   004264  5008               	movf	___awdiv@sign^0,w,c
  7877   004266  B4D8               	btfsc	status,2,c
  7878   004268  EF38  F021         	goto	u3011
  7879   00426C  EF3A  F021         	goto	u3010
  7880   004270                     u3011:
  7881   004270  EF3E  F021         	goto	l3110
  7882   004274                     u3010:
  7883   004274  6C09               	negf	___awdiv@quotient^0,c
  7884   004276  1E0A               	comf	(___awdiv@quotient+1)^0,f,c
  7885   004278  B0D8               	btfsc	status,0,c
  7886   00427A  2A0A               	incf	(___awdiv@quotient+1)^0,f,c
  7887   00427C                     l3110:
  7888   00427C  C009  F003         	movff	___awdiv@quotient,?___awdiv
  7889   004280  C00A  F004         	movff	___awdiv@quotient+1,?___awdiv+1
  7890   004284  0012               	return		;funcret
  7891   004286                     __end_of___awdiv:
  7892                           	callstack 0
  7893                           
  7894 ;; *************** function ___lmul *****************
  7895 ;; Defined at:
  7896 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\Umul32.c"
  7897 ;; Parameters:    Size  Location     Type
  7898 ;;  multiplier      4    2[COMRAM] unsigned long 
  7899 ;;  multiplicand    4    6[COMRAM] unsigned long 
  7900 ;; Auto vars:     Size  Location     Type
  7901 ;;  product         4   10[COMRAM] unsigned long 
  7902 ;; Return value:  Size  Location     Type
  7903 ;;                  4    2[COMRAM] unsigned long 
  7904 ;; Registers used:
  7905 ;;		wreg, status,2, status,0
  7906 ;; Tracked objects:
  7907 ;;		On entry : 0/0
  7908 ;;		On exit  : 0/0
  7909 ;;		Unchanged: 0/0
  7910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7911 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7912 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7914 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7915 ;;Total ram usage:       12 bytes
  7916 ;; Hardware stack levels used: 1
  7917 ;; Hardware stack levels required when called: 1
  7918 ;; This function calls:
  7919 ;;		Nothing
  7920 ;; This function is called by:
  7921 ;;		_PWM
  7922 ;; This function uses a non-reentrant model
  7923 ;;
  7924                           
  7925                           	psect	text28
  7926   004658                     __ptext28:
  7927                           	callstack 0
  7928   004658                     ___lmul:
  7929                           	callstack 28
  7930   004658  0E00               	movlw	0
  7931   00465A  6E0B               	movwf	___lmul@product^0,c
  7932   00465C  0E00               	movlw	0
  7933   00465E  6E0C               	movwf	(___lmul@product+1)^0,c
  7934   004660  0E00               	movlw	0
  7935   004662  6E0D               	movwf	(___lmul@product+2)^0,c
  7936   004664  0E00               	movlw	0
  7937   004666  6E0E               	movwf	(___lmul@product+3)^0,c
  7938   004668                     l3812:
  7939   004668  A003               	btfss	___lmul@multiplier^0,0,c
  7940   00466A  EF39  F023         	goto	u4051
  7941   00466E  EF3B  F023         	goto	u4050
  7942   004672                     u4051:
  7943   004672  EF43  F023         	goto	l3816
  7944   004676                     u4050:
  7945   004676  5007               	movf	___lmul@multiplicand^0,w,c
  7946   004678  260B               	addwf	___lmul@product^0,f,c
  7947   00467A  5008               	movf	(___lmul@multiplicand+1)^0,w,c
  7948   00467C  220C               	addwfc	(___lmul@product+1)^0,f,c
  7949   00467E  5009               	movf	(___lmul@multiplicand+2)^0,w,c
  7950   004680  220D               	addwfc	(___lmul@product+2)^0,f,c
  7951   004682  500A               	movf	(___lmul@multiplicand+3)^0,w,c
  7952   004684  220E               	addwfc	(___lmul@product+3)^0,f,c
  7953   004686                     l3816:
  7954   004686  90D8               	bcf	status,0,c
  7955   004688  3607               	rlcf	___lmul@multiplicand^0,f,c
  7956   00468A  3608               	rlcf	(___lmul@multiplicand+1)^0,f,c
  7957   00468C  3609               	rlcf	(___lmul@multiplicand+2)^0,f,c
  7958   00468E  360A               	rlcf	(___lmul@multiplicand+3)^0,f,c
  7959   004690  90D8               	bcf	status,0,c
  7960   004692  3206               	rrcf	(___lmul@multiplier+3)^0,f,c
  7961   004694  3205               	rrcf	(___lmul@multiplier+2)^0,f,c
  7962   004696  3204               	rrcf	(___lmul@multiplier+1)^0,f,c
  7963   004698  3203               	rrcf	___lmul@multiplier^0,f,c
  7964   00469A  5003               	movf	___lmul@multiplier^0,w,c
  7965   00469C  1004               	iorwf	(___lmul@multiplier+1)^0,w,c
  7966   00469E  1005               	iorwf	(___lmul@multiplier+2)^0,w,c
  7967   0046A0  1006               	iorwf	(___lmul@multiplier+3)^0,w,c
  7968   0046A2  A4D8               	btfss	status,2,c
  7969   0046A4  EF56  F023         	goto	u4061
  7970   0046A8  EF58  F023         	goto	u4060
  7971   0046AC                     u4061:
  7972   0046AC  EF34  F023         	goto	l3812
  7973   0046B0                     u4060:
  7974   0046B0  C00B  F003         	movff	___lmul@product,?___lmul
  7975   0046B4  C00C  F004         	movff	___lmul@product+1,?___lmul+1
  7976   0046B8  C00D  F005         	movff	___lmul@product+2,?___lmul+2
  7977   0046BC  C00E  F006         	movff	___lmul@product+3,?___lmul+3
  7978   0046C0  0012               	return		;funcret
  7979   0046C2                     __end_of___lmul:
  7980                           	callstack 0
  7981                           
  7982 ;; *************** function ___lldiv *****************
  7983 ;; Defined at:
  7984 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__lldiv.c"
  7985 ;; Parameters:    Size  Location     Type
  7986 ;;  dividend        4   14[COMRAM] unsigned long 
  7987 ;;  divisor         4   18[COMRAM] unsigned long 
  7988 ;; Auto vars:     Size  Location     Type
  7989 ;;  quotient        4   22[COMRAM] unsigned long 
  7990 ;;  counter         1   26[COMRAM] unsigned char 
  7991 ;; Return value:  Size  Location     Type
  7992 ;;                  4   14[COMRAM] unsigned long 
  7993 ;; Registers used:
  7994 ;;		wreg, status,2, status,0
  7995 ;; Tracked objects:
  7996 ;;		On entry : 0/0
  7997 ;;		On exit  : 0/0
  7998 ;;		Unchanged: 0/0
  7999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8000 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8001 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8003 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8004 ;;Total ram usage:       13 bytes
  8005 ;; Hardware stack levels used: 1
  8006 ;; Hardware stack levels required when called: 1
  8007 ;; This function calls:
  8008 ;;		Nothing
  8009 ;; This function is called by:
  8010 ;;		_PWM
  8011 ;; This function uses a non-reentrant model
  8012 ;;
  8013                           
  8014                           	psect	text29
  8015   004542                     __ptext29:
  8016                           	callstack 0
  8017   004542                     ___lldiv:
  8018                           	callstack 28
  8019   004542  0E00               	movlw	0
  8020   004544  6E17               	movwf	___lldiv@quotient^0,c
  8021   004546  0E00               	movlw	0
  8022   004548  6E18               	movwf	(___lldiv@quotient+1)^0,c
  8023   00454A  0E00               	movlw	0
  8024   00454C  6E19               	movwf	(___lldiv@quotient+2)^0,c
  8025   00454E  0E00               	movlw	0
  8026   004550  6E1A               	movwf	(___lldiv@quotient+3)^0,c
  8027   004552  5013               	movf	___lldiv@divisor^0,w,c
  8028   004554  1014               	iorwf	(___lldiv@divisor+1)^0,w,c
  8029   004556  1015               	iorwf	(___lldiv@divisor+2)^0,w,c
  8030   004558  1016               	iorwf	(___lldiv@divisor+3)^0,w,c
  8031   00455A  B4D8               	btfsc	status,2,c
  8032   00455C  EFB2  F022         	goto	u4071
  8033   004560  EFB4  F022         	goto	u4070
  8034   004564                     u4071:
  8035   004564  EFEA  F022         	goto	l268
  8036   004568                     u4070:
  8037   004568  0E01               	movlw	1
  8038   00456A  6E1B               	movwf	___lldiv@counter^0,c
  8039   00456C  EFBE  F022         	goto	l3828
  8040   004570                     l3826:
  8041   004570  90D8               	bcf	status,0,c
  8042   004572  3613               	rlcf	___lldiv@divisor^0,f,c
  8043   004574  3614               	rlcf	(___lldiv@divisor+1)^0,f,c
  8044   004576  3615               	rlcf	(___lldiv@divisor+2)^0,f,c
  8045   004578  3616               	rlcf	(___lldiv@divisor+3)^0,f,c
  8046   00457A  2A1B               	incf	___lldiv@counter^0,f,c
  8047   00457C                     l3828:
  8048   00457C  AE16               	btfss	(___lldiv@divisor+3)^0,7,c
  8049   00457E  EFC3  F022         	goto	u4081
  8050   004582  EFC5  F022         	goto	u4080
  8051   004586                     u4081:
  8052   004586  EFB8  F022         	goto	l3826
  8053   00458A                     u4080:
  8054   00458A                     l3830:
  8055   00458A  90D8               	bcf	status,0,c
  8056   00458C  3617               	rlcf	___lldiv@quotient^0,f,c
  8057   00458E  3618               	rlcf	(___lldiv@quotient+1)^0,f,c
  8058   004590  3619               	rlcf	(___lldiv@quotient+2)^0,f,c
  8059   004592  361A               	rlcf	(___lldiv@quotient+3)^0,f,c
  8060   004594  5013               	movf	___lldiv@divisor^0,w,c
  8061   004596  5C0F               	subwf	___lldiv@dividend^0,w,c
  8062   004598  5014               	movf	(___lldiv@divisor+1)^0,w,c
  8063   00459A  5810               	subwfb	(___lldiv@dividend+1)^0,w,c
  8064   00459C  5015               	movf	(___lldiv@divisor+2)^0,w,c
  8065   00459E  5811               	subwfb	(___lldiv@dividend+2)^0,w,c
  8066   0045A0  5016               	movf	(___lldiv@divisor+3)^0,w,c
  8067   0045A2  5812               	subwfb	(___lldiv@dividend+3)^0,w,c
  8068   0045A4  A0D8               	btfss	status,0,c
  8069   0045A6  EFD7  F022         	goto	u4091
  8070   0045AA  EFD9  F022         	goto	u4090
  8071   0045AE                     u4091:
  8072   0045AE  EFE2  F022         	goto	l3838
  8073   0045B2                     u4090:
  8074   0045B2  5013               	movf	___lldiv@divisor^0,w,c
  8075   0045B4  5E0F               	subwf	___lldiv@dividend^0,f,c
  8076   0045B6  5014               	movf	(___lldiv@divisor+1)^0,w,c
  8077   0045B8  5A10               	subwfb	(___lldiv@dividend+1)^0,f,c
  8078   0045BA  5015               	movf	(___lldiv@divisor+2)^0,w,c
  8079   0045BC  5A11               	subwfb	(___lldiv@dividend+2)^0,f,c
  8080   0045BE  5016               	movf	(___lldiv@divisor+3)^0,w,c
  8081   0045C0  5A12               	subwfb	(___lldiv@dividend+3)^0,f,c
  8082   0045C2  8017               	bsf	___lldiv@quotient^0,0,c
  8083   0045C4                     l3838:
  8084   0045C4  90D8               	bcf	status,0,c
  8085   0045C6  3216               	rrcf	(___lldiv@divisor+3)^0,f,c
  8086   0045C8  3215               	rrcf	(___lldiv@divisor+2)^0,f,c
  8087   0045CA  3214               	rrcf	(___lldiv@divisor+1)^0,f,c
  8088   0045CC  3213               	rrcf	___lldiv@divisor^0,f,c
  8089   0045CE  2E1B               	decfsz	___lldiv@counter^0,f,c
  8090   0045D0  EFC5  F022         	goto	l3830
  8091   0045D4                     l268:
  8092   0045D4  C017  F00F         	movff	___lldiv@quotient,?___lldiv
  8093   0045D8  C018  F010         	movff	___lldiv@quotient+1,?___lldiv+1
  8094   0045DC  C019  F011         	movff	___lldiv@quotient+2,?___lldiv+2
  8095   0045E0  C01A  F012         	movff	___lldiv@quotient+3,?___lldiv+3
  8096   0045E4  0012               	return		;funcret
  8097   0045E6                     __end_of___lldiv:
  8098                           	callstack 0
  8099                           
  8100 ;; *************** function _TMR2_StartTimer *****************
  8101 ;; Defined at:
  8102 ;;		line 55 in file "./PWM.h"
  8103 ;; Parameters:    Size  Location     Type
  8104 ;;		None
  8105 ;; Auto vars:     Size  Location     Type
  8106 ;;		None
  8107 ;; Return value:  Size  Location     Type
  8108 ;;                  1    wreg      void 
  8109 ;; Registers used:
  8110 ;;		cstack
  8111 ;; Tracked objects:
  8112 ;;		On entry : 0/0
  8113 ;;		On exit  : 0/0
  8114 ;;		Unchanged: 0/0
  8115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8120 ;;Total ram usage:        0 bytes
  8121 ;; Hardware stack levels used: 1
  8122 ;; Hardware stack levels required when called: 2
  8123 ;; This function calls:
  8124 ;;		_TMR2_Start
  8125 ;; This function is called by:
  8126 ;;		_PWM
  8127 ;; This function uses a non-reentrant model
  8128 ;;
  8129                           
  8130                           	psect	text30
  8131   004C44                     __ptext30:
  8132                           	callstack 0
  8133   004C44                     _TMR2_StartTimer:
  8134                           	callstack 27
  8135   004C44                     
  8136                           ;./PWM.h: 57:     TMR2_Start();
  8137   004C44  EC25  F026         	call	_TMR2_Start	;wreg free
  8138   004C48  0012               	return		;funcret
  8139   004C4A                     __end_of_TMR2_StartTimer:
  8140                           	callstack 0
  8141                           
  8142 ;; *************** function _TMR2_Start *****************
  8143 ;; Defined at:
  8144 ;;		line 49 in file "./PWM.h"
  8145 ;; Parameters:    Size  Location     Type
  8146 ;;		None
  8147 ;; Auto vars:     Size  Location     Type
  8148 ;;		None
  8149 ;; Return value:  Size  Location     Type
  8150 ;;                  1    wreg      void 
  8151 ;; Registers used:
  8152 ;;		None
  8153 ;; Tracked objects:
  8154 ;;		On entry : 0/0
  8155 ;;		On exit  : 0/0
  8156 ;;		Unchanged: 0/0
  8157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8162 ;;Total ram usage:        0 bytes
  8163 ;; Hardware stack levels used: 1
  8164 ;; Hardware stack levels required when called: 1
  8165 ;; This function calls:
  8166 ;;		Nothing
  8167 ;; This function is called by:
  8168 ;;		_TMR2_StartTimer
  8169 ;; This function uses a non-reentrant model
  8170 ;;
  8171                           
  8172                           	psect	text31
  8173   004C4A                     __ptext31:
  8174                           	callstack 0
  8175   004C4A                     _TMR2_Start:
  8176                           	callstack 27
  8177   004C4A                     
  8178                           ;./PWM.h: 52:     T2CONbits.TMR2ON = 1;
  8179   004C4A  8EAC               	bsf	172,7,c	;volatile
  8180   004C4C  0012               	return		;funcret
  8181   004C4E                     __end_of_TMR2_Start:
  8182                           	callstack 0
  8183                           
  8184 ;; *************** function _TMR2_Initialize *****************
  8185 ;; Defined at:
  8186 ;;		line 11 in file "./PWM.h"
  8187 ;; Parameters:    Size  Location     Type
  8188 ;;		None
  8189 ;; Auto vars:     Size  Location     Type
  8190 ;;		None
  8191 ;; Return value:  Size  Location     Type
  8192 ;;                  1    wreg      void 
  8193 ;; Registers used:
  8194 ;;		wreg, status,2
  8195 ;; Tracked objects:
  8196 ;;		On entry : 0/0
  8197 ;;		On exit  : 0/0
  8198 ;;		Unchanged: 0/0
  8199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8204 ;;Total ram usage:        0 bytes
  8205 ;; Hardware stack levels used: 1
  8206 ;; Hardware stack levels required when called: 1
  8207 ;; This function calls:
  8208 ;;		Nothing
  8209 ;; This function is called by:
  8210 ;;		_PWM
  8211 ;; This function uses a non-reentrant model
  8212 ;;
  8213                           
  8214                           	psect	text32
  8215   004BE8                     __ptext32:
  8216                           	callstack 0
  8217   004BE8                     _TMR2_Initialize:
  8218                           	callstack 28
  8219   004BE8                     
  8220                           ;./PWM.h: 16:     T2CLKCON = 0x01;
  8221   004BE8  0E01               	movlw	1
  8222   004BEA  6EAE               	movwf	174,c	;volatile
  8223   004BEC                     
  8224                           ;./PWM.h: 19:     T2HLT = 0x00;
  8225   004BEC  6AAD               	clrf	173,c	;volatile
  8226   004BEE                     
  8227                           ;./PWM.h: 22:     T2RST = 0x00;
  8228   004BEE  6AAF               	clrf	175,c	;volatile
  8229   004BF0                     
  8230                           ;./PWM.h: 25:     T2PR = 0xFF;
  8231   004BF0  68AB               	setf	171,c	;volatile
  8232   004BF2                     
  8233                           ;./PWM.h: 28:     T2TMR = 0x00;
  8234   004BF2  6AAA               	clrf	170,c	;volatile
  8235   004BF4                     
  8236                           ;./PWM.h: 31:     PIR4bits.TMR2IF = 0;
  8237   004BF4  0139               	movlb	57	; () banked
  8238   004BF6  95A4               	bcf	164,2,b	;volatile
  8239                           
  8240                           ;./PWM.h: 34:     T2CON = 0xB0;
  8241   004BF8  0EB0               	movlw	176
  8242   004BFA  6EAC               	movwf	172,c	;volatile
  8243   004BFC                     
  8244                           ; BSR set to: 57
  8245   004BFC  0012               	return		;funcret
  8246   004BFE                     __end_of_TMR2_Initialize:
  8247                           	callstack 0
  8248                           
  8249 ;; *************** function _PWM_Output_D8_Enable *****************
  8250 ;; Defined at:
  8251 ;;		line 123 in file "./PWM.h"
  8252 ;; Parameters:    Size  Location     Type
  8253 ;;		None
  8254 ;; Auto vars:     Size  Location     Type
  8255 ;;		None
  8256 ;; Return value:  Size  Location     Type
  8257 ;;                  1    wreg      void 
  8258 ;; Registers used:
  8259 ;;		wreg, status,2
  8260 ;; Tracked objects:
  8261 ;;		On entry : 0/0
  8262 ;;		On exit  : 0/0
  8263 ;;		Unchanged: 0/0
  8264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8269 ;;Total ram usage:        0 bytes
  8270 ;; Hardware stack levels used: 1
  8271 ;; Hardware stack levels required when called: 1
  8272 ;; This function calls:
  8273 ;;		Nothing
  8274 ;; This function is called by:
  8275 ;;		_PWM
  8276 ;; This function uses a non-reentrant model
  8277 ;;
  8278                           
  8279                           	psect	text33
  8280   004BCC                     __ptext33:
  8281                           	callstack 0
  8282   004BCC                     _PWM_Output_D8_Enable:
  8283                           	callstack 28
  8284   004BCC                     
  8285                           ;./PWM.h: 124:     PPSLOCK = 0x55;
  8286   004BCC  0E55               	movlw	85
  8287   004BCE  013A               	movlb	58	; () banked
  8288   004BD0  6FBF               	movwf	191,b	;volsfr
  8289                           
  8290                           ;./PWM.h: 125:     PPSLOCK = 0xAA;
  8291   004BD2  0EAA               	movlw	170
  8292   004BD4  6FBF               	movwf	191,b	;volsfr
  8293   004BD6                     
  8294                           ; BSR set to: 58
  8295                           ;./PWM.h: 126:     PPSLOCKbits.PPSLOCKED = 0x00;
  8296   004BD6  91BF               	bcf	191,0,b	;volsfr
  8297                           
  8298                           ;./PWM.h: 129:     RB3PPS = 0x0A;
  8299   004BD8  0E0A               	movlw	10
  8300   004BDA  6F0B               	movwf	11,b	;volatile
  8301                           
  8302                           ;./PWM.h: 131:     PPSLOCK = 0x55;
  8303   004BDC  0E55               	movlw	85
  8304   004BDE  6FBF               	movwf	191,b	;volsfr
  8305                           
  8306                           ;./PWM.h: 132:     PPSLOCK = 0xAA;
  8307   004BE0  0EAA               	movlw	170
  8308   004BE2  6FBF               	movwf	191,b	;volsfr
  8309   004BE4                     
  8310                           ; BSR set to: 58
  8311                           ;./PWM.h: 133:     PPSLOCKbits.PPSLOCKED = 0x01;
  8312   004BE4  81BF               	bsf	191,0,b	;volsfr
  8313   004BE6                     
  8314                           ; BSR set to: 58
  8315   004BE6  0012               	return		;funcret
  8316   004BE8                     __end_of_PWM_Output_D8_Enable:
  8317                           	callstack 0
  8318                           
  8319 ;; *************** function _PWM2_OutputStatusGet *****************
  8320 ;; Defined at:
  8321 ;;		line 186 in file "./PWM.h"
  8322 ;; Parameters:    Size  Location     Type
  8323 ;;		None
  8324 ;; Auto vars:     Size  Location     Type
  8325 ;;		None
  8326 ;; Return value:  Size  Location     Type
  8327 ;;                  1    wreg      _Bool 
  8328 ;; Registers used:
  8329 ;;		wreg
  8330 ;; Tracked objects:
  8331 ;;		On entry : 0/0
  8332 ;;		On exit  : 0/0
  8333 ;;		Unchanged: 0/0
  8334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8339 ;;Total ram usage:        0 bytes
  8340 ;; Hardware stack levels used: 1
  8341 ;; Hardware stack levels required when called: 1
  8342 ;; This function calls:
  8343 ;;		Nothing
  8344 ;; This function is called by:
  8345 ;;		_PWM
  8346 ;; This function uses a non-reentrant model
  8347 ;;
  8348                           
  8349                           	psect	text34
  8350   004C28                     __ptext34:
  8351                           	callstack 0
  8352   004C28                     _PWM2_OutputStatusGet:
  8353                           	callstack 28
  8354   004C28                     
  8355                           ;./PWM.h: 189:     return(CCP2CONbits.OUT);
  8356   004C28  BA7A               	btfsc	122,5,c	;volatile
  8357   004C2A  EF19  F026         	goto	u4041
  8358   004C2E  EF1C  F026         	goto	u4040
  8359   004C32                     u4041:
  8360   004C32  0E01               	movlw	1
  8361   004C34  EF1D  F026         	goto	u4046
  8362   004C38                     u4040:
  8363   004C38  0E00               	movlw	0
  8364   004C3A                     u4046:
  8365   004C3A  0012               	return		;funcret
  8366   004C3C                     __end_of_PWM2_OutputStatusGet:
  8367                           	callstack 0
  8368                           
  8369 ;; *************** function _PWM2_LoadDutyValue *****************
  8370 ;; Defined at:
  8371 ;;		line 168 in file "./PWM.h"
  8372 ;; Parameters:    Size  Location     Type
  8373 ;;  dutyValue       2    2[COMRAM] unsigned short 
  8374 ;; Auto vars:     Size  Location     Type
  8375 ;;		None
  8376 ;; Return value:  Size  Location     Type
  8377 ;;                  1    wreg      void 
  8378 ;; Registers used:
  8379 ;;		wreg, status,2, status,0
  8380 ;; Tracked objects:
  8381 ;;		On entry : 0/0
  8382 ;;		On exit  : 0/0
  8383 ;;		Unchanged: 0/0
  8384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8385 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8388 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8389 ;;Total ram usage:        2 bytes
  8390 ;; Hardware stack levels used: 1
  8391 ;; Hardware stack levels required when called: 1
  8392 ;; This function calls:
  8393 ;;		Nothing
  8394 ;; This function is called by:
  8395 ;;		_PWM
  8396 ;; This function uses a non-reentrant model
  8397 ;;
  8398                           
  8399                           	psect	text35
  8400   004B04                     __ptext35:
  8401                           	callstack 0
  8402   004B04                     _PWM2_LoadDutyValue:
  8403                           	callstack 28
  8404   004B04                     
  8405                           ;./PWM.h: 168: void PWM2_LoadDutyValue(uint16_t dutyValue);./PWM.h: 169: {;./PWM.h: 170:
      +                               dutyValue &= 0x03FF;
  8406   004B04  0EFF               	movlw	255
  8407   004B06  1603               	andwf	PWM2_LoadDutyValue@dutyValue^0,f,c
  8408   004B08  0E03               	movlw	3
  8409   004B0A  1604               	andwf	(PWM2_LoadDutyValue@dutyValue+1)^0,f,c
  8410   004B0C                     
  8411                           ;./PWM.h: 173:     if(CCP2CONbits.FMT)
  8412   004B0C  A87A               	btfss	122,4,c	;volatile
  8413   004B0E  EF8B  F025         	goto	u4021
  8414   004B12  EF8D  F025         	goto	u4020
  8415   004B16                     u4021:
  8416   004B16  EF94  F025         	goto	l3786
  8417   004B1A                     u4020:
  8418   004B1A                     
  8419                           ;./PWM.h: 174:     {;./PWM.h: 175:         dutyValue <<= 6;
  8420   004B1A  0E06               	movlw	6
  8421   004B1C                     u4035:
  8422   004B1C  90D8               	bcf	status,0,c
  8423   004B1E  3603               	rlcf	PWM2_LoadDutyValue@dutyValue^0,f,c
  8424   004B20  3604               	rlcf	(PWM2_LoadDutyValue@dutyValue+1)^0,f,c
  8425   004B22  2EE8               	decfsz	wreg,f,c
  8426   004B24  EF8E  F025         	goto	u4035
  8427   004B28                     l3786:
  8428                           
  8429                           ;./PWM.h: 176:         CCPR2H = dutyValue >> 8;
  8430   004B28  5004               	movf	(PWM2_LoadDutyValue@dutyValue+1)^0,w,c
  8431   004B2A  6E79               	movwf	121,c	;volatile
  8432   004B2C                     
  8433                           ;./PWM.h: 177:         CCPR2L = dutyValue;
  8434   004B2C  0060  F00F  FF78   	movff	PWM2_LoadDutyValue@dutyValue,16248	;volatile
  8435   004B32  0012               	return		;funcret
  8436   004B34                     __end_of_PWM2_LoadDutyValue:
  8437                           	callstack 0
  8438                           
  8439 ;; *************** function _PWM2_Initialize *****************
  8440 ;; Defined at:
  8441 ;;		line 151 in file "./PWM.h"
  8442 ;; Parameters:    Size  Location     Type
  8443 ;;		None
  8444 ;; Auto vars:     Size  Location     Type
  8445 ;;		None
  8446 ;; Return value:  Size  Location     Type
  8447 ;;                  1    wreg      void 
  8448 ;; Registers used:
  8449 ;;		wreg, status,2
  8450 ;; Tracked objects:
  8451 ;;		On entry : 0/0
  8452 ;;		On exit  : 0/0
  8453 ;;		Unchanged: 0/0
  8454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8459 ;;Total ram usage:        0 bytes
  8460 ;; Hardware stack levels used: 1
  8461 ;; Hardware stack levels required when called: 1
  8462 ;; This function calls:
  8463 ;;		Nothing
  8464 ;; This function is called by:
  8465 ;;		_PWM
  8466 ;; This function uses a non-reentrant model
  8467 ;;
  8468                           
  8469                           	psect	text36
  8470   004BFE                     __ptext36:
  8471                           	callstack 0
  8472   004BFE                     _PWM2_Initialize:
  8473                           	callstack 28
  8474   004BFE                     
  8475                           ;./PWM.h: 156:  CCP2CON = 0x8C;
  8476   004BFE  0E8C               	movlw	140
  8477   004C00  6E7A               	movwf	122,c	;volatile
  8478   004C02                     
  8479                           ;./PWM.h: 159:  CCPR2H = 0x0;
  8480   004C02  6A79               	clrf	121,c	;volatile
  8481                           
  8482                           ;./PWM.h: 162:  CCPR2L = 0x0f;
  8483   004C04  0E0F               	movlw	15
  8484   004C06  6E78               	movwf	120,c	;volatile
  8485                           
  8486                           ;./PWM.h: 165:  CCPTMRS0bits.C2TSEL = 0x1;
  8487   004C08  013F               	movlb	63	; () banked
  8488   004C0A  515E               	movf	94,w,b	;volatile
  8489   004C0C  0BF3               	andlw	-13
  8490   004C0E  0904               	iorlw	4
  8491   004C10  6F5E               	movwf	94,b	;volatile
  8492   004C12                     
  8493                           ; BSR set to: 63
  8494   004C12  0012               	return		;funcret
  8495   004C14                     __end_of_PWM2_Initialize:
  8496                           	callstack 0
  8497                           
  8498 ;; *************** function _LCD_String_xy *****************
  8499 ;; Defined at:
  8500 ;;		line 80 in file "./LCD.h"
  8501 ;; Parameters:    Size  Location     Type
  8502 ;;  row             1    wreg     unsigned char 
  8503 ;;  pos             1   11[COMRAM] unsigned char 
  8504 ;;  msg             2   12[COMRAM] PTR const unsigned char 
  8505 ;;		 -> PWM@percent(15), readADC@buffer(12), STR_2(15), STR_1(6), 
  8506 ;; Auto vars:     Size  Location     Type
  8507 ;;  row             1   14[COMRAM] unsigned char 
  8508 ;;  location        1   15[COMRAM] unsigned char 
  8509 ;; Return value:  Size  Location     Type
  8510 ;;                  1    wreg      void 
  8511 ;; Registers used:
  8512 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8513 ;; Tracked objects:
  8514 ;;		On entry : 0/0
  8515 ;;		On exit  : 0/0
  8516 ;;		Unchanged: 0/0
  8517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8518 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8519 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8521 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8522 ;;Total ram usage:        5 bytes
  8523 ;; Hardware stack levels used: 1
  8524 ;; Hardware stack levels required when called: 4
  8525 ;; This function calls:
  8526 ;;		_LCD_Command
  8527 ;;		_LCD_String
  8528 ;; This function is called by:
  8529 ;;		_main
  8530 ;;		_PWM
  8531 ;;		_readADC
  8532 ;; This function uses a non-reentrant model
  8533 ;;
  8534                           
  8535                           	psect	text37
  8536   004A22                     __ptext37:
  8537                           	callstack 0
  8538   004A22                     _LCD_String_xy:
  8539                           	callstack 25
  8540                           
  8541                           ; BSR set to: 63
  8542                           ;incstack = 0
  8543                           ;LCD_String_xy@row stored from wreg
  8544   004A22  6E0F               	movwf	LCD_String_xy@row^0,c
  8545   004A24                     
  8546                           ;./LCD.h: 83:     if(row<=1)
  8547   004A24  0E02               	movlw	2
  8548   004A26  600F               	cpfslt	LCD_String_xy@row^0,c
  8549   004A28  EF18  F025         	goto	u4011
  8550   004A2C  EF1A  F025         	goto	u4010
  8551   004A30                     u4011:
  8552   004A30  EF23  F025         	goto	l3750
  8553   004A34                     u4010:
  8554   004A34                     
  8555                           ;./LCD.h: 84:     {;./LCD.h: 85:         location=(0x80) | ((pos) & 0x0f);
  8556   004A34  500C               	movf	LCD_String_xy@pos^0,w,c
  8557   004A36  0B0F               	andlw	15
  8558   004A38  0980               	iorlw	128
  8559   004A3A  6E10               	movwf	LCD_String_xy@location^0,c
  8560   004A3C                     
  8561                           ;./LCD.h: 86:         LCD_Command(location);
  8562   004A3C  5010               	movf	LCD_String_xy@location^0,w,c
  8563   004A3E  ECC4  F025         	call	_LCD_Command
  8564                           
  8565                           ;./LCD.h: 87:     }
  8566   004A42  EF2A  F025         	goto	l3754
  8567   004A46                     l3750:
  8568                           
  8569                           ;./LCD.h: 89:     {;./LCD.h: 90:         location=(0xC0) | ((pos) & 0x0f);
  8570   004A46  500C               	movf	LCD_String_xy@pos^0,w,c
  8571   004A48  0B0F               	andlw	15
  8572   004A4A  09C0               	iorlw	192
  8573   004A4C  6E10               	movwf	LCD_String_xy@location^0,c
  8574   004A4E                     
  8575                           ;./LCD.h: 91:         LCD_Command(location);
  8576   004A4E  5010               	movf	LCD_String_xy@location^0,w,c
  8577   004A50  ECC4  F025         	call	_LCD_Command
  8578   004A54                     l3754:
  8579                           
  8580                           ;./LCD.h: 93:     LCD_String(msg);
  8581   004A54  C00D  F00A         	movff	LCD_String_xy@msg,LCD_String@msg
  8582   004A58  C00E  F00B         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  8583   004A5C  ECF3  F022         	call	_LCD_String	;wreg free
  8584   004A60  0012               	return		;funcret
  8585   004A62                     __end_of_LCD_String_xy:
  8586                           	callstack 0
  8587                           
  8588 ;; *************** function _LCD_String *****************
  8589 ;; Defined at:
  8590 ;;		line 71 in file "./LCD.h"
  8591 ;; Parameters:    Size  Location     Type
  8592 ;;  msg             2    9[COMRAM] PTR const unsigned char 
  8593 ;;		 -> PWM@percent(15), readADC@buffer(12), STR_2(15), STR_1(6), 
  8594 ;; Auto vars:     Size  Location     Type
  8595 ;;		None
  8596 ;; Return value:  Size  Location     Type
  8597 ;;                  1    wreg      void 
  8598 ;; Registers used:
  8599 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8600 ;; Tracked objects:
  8601 ;;		On entry : 0/0
  8602 ;;		On exit  : 0/0
  8603 ;;		Unchanged: 0/0
  8604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8605 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8608 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8609 ;;Total ram usage:        2 bytes
  8610 ;; Hardware stack levels used: 1
  8611 ;; Hardware stack levels required when called: 3
  8612 ;; This function calls:
  8613 ;;		_LCD_Char
  8614 ;; This function is called by:
  8615 ;;		_LCD_String_xy
  8616 ;; This function uses a non-reentrant model
  8617 ;;
  8618                           
  8619                           	psect	text38
  8620   0045E6                     __ptext38:
  8621                           	callstack 0
  8622   0045E6                     _LCD_String:
  8623                           	callstack 25
  8624   0045E6                     
  8625                           ;./LCD.h: 71: void LCD_String(const char *msg);./LCD.h: 72: {;./LCD.h: 73:     while((*m
      +                          sg)!=0)
  8626   0045E6  EF0E  F023         	goto	l3726
  8627   0045EA                     l3722:
  8628                           
  8629                           ;./LCD.h: 74:     {;./LCD.h: 75:       LCD_Char(*msg);
  8630   0045EA  0060  F02B  FFF6   	movff	LCD_String@msg,tblptrl
  8631   0045F0  0060  F02F  FFF7   	movff	LCD_String@msg+1,tblptrh
  8632   0045F6  0E00               	movlw	low (__smallconst shr (0+16))
  8633   0045F8  6EF8               	movwf	tblptru,c
  8634   0045FA  0E1F               	movlw	(high __ramtop+-1)
  8635   0045FC  64F7               	cpfsgt	tblptrh,c
  8636   0045FE  D003               	bra	u3977
  8637   004600  0008               	tblrd		*
  8638   004602  50F5               	movf	tablat,w,c
  8639   004604  D007               	bra	u3970
  8640   004606                     u3977:
  8641   004606  006F FFDB FFE9     	movff	tblptrl,fsr0l
  8642   00460C  006F FFDF FFEA     	movff	tblptrh,fsr0h
  8643   004612  50EF               	movf	indf0,w,c
  8644   004614                     u3970:
  8645   004614  ECD7  F025         	call	_LCD_Char
  8646   004618                     
  8647                           ;./LCD.h: 76:       msg++;
  8648   004618  4A0A               	infsnz	LCD_String@msg^0,f,c
  8649   00461A  2A0B               	incf	(LCD_String@msg+1)^0,f,c
  8650   00461C                     l3726:
  8651                           
  8652                           ;./LCD.h: 73:     while((*msg)!=0)
  8653   00461C  0060  F02B  FFF6   	movff	LCD_String@msg,tblptrl
  8654   004622  0060  F02F  FFF7   	movff	LCD_String@msg+1,tblptrh
  8655   004628  0E00               	movlw	low (__smallconst shr (0+16))
  8656   00462A  6EF8               	movwf	tblptru,c
  8657   00462C  0E1F               	movlw	(high __ramtop+-1)
  8658   00462E  64F7               	cpfsgt	tblptrh,c
  8659   004630  D003               	bra	u3987
  8660   004632  0008               	tblrd		*
  8661   004634  50F5               	movf	tablat,w,c
  8662   004636  D007               	bra	u3980
  8663   004638                     u3987:
  8664   004638  006F FFDB FFE9     	movff	tblptrl,fsr0l
  8665   00463E  006F FFDF FFEA     	movff	tblptrh,fsr0h
  8666   004644  50EF               	movf	indf0,w,c
  8667   004646                     u3980:
  8668   004646  0900               	iorlw	0
  8669   004648  A4D8               	btfss	status,2,c
  8670   00464A  EF29  F023         	goto	u3991
  8671   00464E  EF2B  F023         	goto	u3990
  8672   004652                     u3991:
  8673   004652  EFF5  F022         	goto	l3722
  8674   004656                     u3990:
  8675   004656  0012               	return		;funcret
  8676   004658                     __end_of_LCD_String:
  8677                           	callstack 0
  8678                           
  8679 ;; *************** function _LCD_Char *****************
  8680 ;; Defined at:
  8681 ;;		line 60 in file "./LCD.h"
  8682 ;; Parameters:    Size  Location     Type
  8683 ;;  dat             1    wreg     unsigned char 
  8684 ;; Auto vars:     Size  Location     Type
  8685 ;;  dat             1    8[COMRAM] unsigned char 
  8686 ;; Return value:  Size  Location     Type
  8687 ;;                  1    wreg      void 
  8688 ;; Registers used:
  8689 ;;		wreg, status,2, status,0, cstack
  8690 ;; Tracked objects:
  8691 ;;		On entry : 0/0
  8692 ;;		On exit  : 0/0
  8693 ;;		Unchanged: 0/0
  8694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8696 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8698 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8699 ;;Total ram usage:        1 bytes
  8700 ;; Hardware stack levels used: 1
  8701 ;; Hardware stack levels required when called: 2
  8702 ;; This function calls:
  8703 ;;		_MSdelay
  8704 ;; This function is called by:
  8705 ;;		_LCD_String
  8706 ;; This function uses a non-reentrant model
  8707 ;;
  8708                           
  8709                           	psect	text39
  8710   004BAE                     __ptext39:
  8711                           	callstack 0
  8712   004BAE                     _LCD_Char:
  8713                           	callstack 25
  8714                           
  8715                           ;incstack = 0
  8716                           ;LCD_Char@dat stored from wreg
  8717   004BAE  6E09               	movwf	LCD_Char@dat^0,c
  8718   004BB0                     
  8719                           ;./LCD.h: 60: void LCD_Char(char dat);./LCD.h: 61: {;./LCD.h: 62:     LATD= dat;
  8720   004BB0  0060  F027  FFBD   	movff	LCD_Char@dat,16317	;volatile
  8721   004BB6                     
  8722                           ;./LCD.h: 63:     LATC3 = 1;
  8723   004BB6  86BC               	bsf	16316,3,c	;volatile
  8724   004BB8                     
  8725                           ;./LCD.h: 64:     LATC4=1;
  8726   004BB8  88BC               	bsf	16316,4,c	;volatile
  8727   004BBA                     
  8728                           ;./LCD.h: 65:     __nop();
  8729   004BBA  0000               	nop	
  8730   004BBC                     
  8731                           ;./LCD.h: 66:     LATC4=0;
  8732   004BBC  98BC               	bcf	16316,4,c	;volatile
  8733   004BBE                     
  8734                           ;./LCD.h: 67:     MSdelay(1);
  8735   004BBE  0E00               	movlw	0
  8736   004BC0  6E04               	movwf	(MSdelay@val+1)^0,c
  8737   004BC2  0E01               	movlw	1
  8738   004BC4  6E03               	movwf	MSdelay@val^0,c
  8739   004BC6  EC41  F024         	call	_MSdelay	;wreg free
  8740   004BCA  0012               	return		;funcret
  8741   004BCC                     __end_of_LCD_Char:
  8742                           	callstack 0
  8743                           
  8744 ;; *************** function _LCD_Clear *****************
  8745 ;; Defined at:
  8746 ;;		line 44 in file "./LCD.h"
  8747 ;; Parameters:    Size  Location     Type
  8748 ;;		None
  8749 ;; Auto vars:     Size  Location     Type
  8750 ;;		None
  8751 ;; Return value:  Size  Location     Type
  8752 ;;                  1    wreg      void 
  8753 ;; Registers used:
  8754 ;;		wreg, status,2, status,0, cstack
  8755 ;; Tracked objects:
  8756 ;;		On entry : 0/0
  8757 ;;		On exit  : 0/0
  8758 ;;		Unchanged: 0/0
  8759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8764 ;;Total ram usage:        0 bytes
  8765 ;; Hardware stack levels used: 1
  8766 ;; Hardware stack levels required when called: 3
  8767 ;; This function calls:
  8768 ;;		_LCD_Command
  8769 ;; This function is called by:
  8770 ;;		_main
  8771 ;;		_PWM
  8772 ;; This function uses a non-reentrant model
  8773 ;;
  8774                           
  8775                           	psect	text40
  8776   004C3C                     __ptext40:
  8777                           	callstack 0
  8778   004C3C                     _LCD_Clear:
  8779                           	callstack 26
  8780   004C3C                     
  8781                           ;./LCD.h: 46:         LCD_Command(0x01);
  8782   004C3C  0E01               	movlw	1
  8783   004C3E  ECC4  F025         	call	_LCD_Command
  8784   004C42  0012               	return		;funcret
  8785   004C44                     __end_of_LCD_Clear:
  8786                           	callstack 0
  8787                           
  8788 ;; *************** function _LCD_Init *****************
  8789 ;; Defined at:
  8790 ;;		line 33 in file "./LCD.h"
  8791 ;; Parameters:    Size  Location     Type
  8792 ;;		None
  8793 ;; Auto vars:     Size  Location     Type
  8794 ;;		None
  8795 ;; Return value:  Size  Location     Type
  8796 ;;                  1    wreg      void 
  8797 ;; Registers used:
  8798 ;;		wreg, status,2, status,0, cstack
  8799 ;; Tracked objects:
  8800 ;;		On entry : 0/0
  8801 ;;		On exit  : 0/0
  8802 ;;		Unchanged: 0/0
  8803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8808 ;;Total ram usage:        0 bytes
  8809 ;; Hardware stack levels used: 1
  8810 ;; Hardware stack levels required when called: 3
  8811 ;; This function calls:
  8812 ;;		_LCD_Command
  8813 ;;		_MSdelay
  8814 ;; This function is called by:
  8815 ;;		_main
  8816 ;; This function uses a non-reentrant model
  8817 ;;
  8818                           
  8819                           	psect	text41
  8820   004B5E                     __ptext41:
  8821                           	callstack 0
  8822   004B5E                     _LCD_Init:
  8823                           	callstack 27
  8824   004B5E                     
  8825                           ;./LCD.h: 35:     MSdelay(15);
  8826   004B5E  0E00               	movlw	0
  8827   004B60  6E04               	movwf	(MSdelay@val+1)^0,c
  8828   004B62  0E0F               	movlw	15
  8829   004B64  6E03               	movwf	MSdelay@val^0,c
  8830   004B66  EC41  F024         	call	_MSdelay	;wreg free
  8831   004B6A                     
  8832                           ;./LCD.h: 36:     TRISD = 0x00;
  8833   004B6A  6AC5               	clrf	197,c	;volatile
  8834   004B6C                     
  8835                           ;./LCD.h: 37:     TRISC = 0x00;
  8836   004B6C  6AC4               	clrf	196,c	;volatile
  8837                           
  8838                           ;./LCD.h: 38:     LCD_Command(0x01);
  8839   004B6E  0E01               	movlw	1
  8840   004B70  ECC4  F025         	call	_LCD_Command
  8841                           
  8842                           ;./LCD.h: 39:     LCD_Command(0x38);
  8843   004B74  0E38               	movlw	56
  8844   004B76  ECC4  F025         	call	_LCD_Command
  8845                           
  8846                           ;./LCD.h: 40:     LCD_Command(0x0c);
  8847   004B7A  0E0C               	movlw	12
  8848   004B7C  ECC4  F025         	call	_LCD_Command
  8849                           
  8850                           ;./LCD.h: 41:     LCD_Command(0x06);
  8851   004B80  0E06               	movlw	6
  8852   004B82  ECC4  F025         	call	_LCD_Command
  8853   004B86  0012               	return		;funcret
  8854   004B88                     __end_of_LCD_Init:
  8855                           	callstack 0
  8856                           
  8857 ;; *************** function _LCD_Command *****************
  8858 ;; Defined at:
  8859 ;;		line 49 in file "./LCD.h"
  8860 ;; Parameters:    Size  Location     Type
  8861 ;;  cmd             1    wreg     unsigned char 
  8862 ;; Auto vars:     Size  Location     Type
  8863 ;;  cmd             1    8[COMRAM] unsigned char 
  8864 ;; Return value:  Size  Location     Type
  8865 ;;                  1    wreg      void 
  8866 ;; Registers used:
  8867 ;;		wreg, status,2, status,0, cstack
  8868 ;; Tracked objects:
  8869 ;;		On entry : 0/0
  8870 ;;		On exit  : 0/0
  8871 ;;		Unchanged: 0/0
  8872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8874 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8876 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8877 ;;Total ram usage:        1 bytes
  8878 ;; Hardware stack levels used: 1
  8879 ;; Hardware stack levels required when called: 2
  8880 ;; This function calls:
  8881 ;;		_MSdelay
  8882 ;; This function is called by:
  8883 ;;		_LCD_Init
  8884 ;;		_LCD_Clear
  8885 ;;		_LCD_String_xy
  8886 ;; This function uses a non-reentrant model
  8887 ;;
  8888                           
  8889                           	psect	text42
  8890   004B88                     __ptext42:
  8891                           	callstack 0
  8892   004B88                     _LCD_Command:
  8893                           	callstack 26
  8894                           
  8895                           ;incstack = 0
  8896                           ;LCD_Command@cmd stored from wreg
  8897   004B88  6E09               	movwf	LCD_Command@cmd^0,c
  8898   004B8A                     
  8899                           ;./LCD.h: 49: void LCD_Command(char cmd );./LCD.h: 50: {;./LCD.h: 51:     LATD= cmd;
  8900   004B8A  0060  F027  FFBD   	movff	LCD_Command@cmd,16317	;volatile
  8901   004B90                     
  8902                           ;./LCD.h: 52:     _delay((unsigned long)((1)*(4000000/4000.0)));
  8903   004B90  0EC8               	movlw	200
  8904   004B92                     u4157:
  8905   004B92  D000               	nop2	
  8906   004B94  2EE8               	decfsz	wreg,f,c
  8907   004B96  D7FD               	bra	u4157
  8908   004B98                     
  8909                           ;./LCD.h: 53:     LATC3 = 0;
  8910   004B98  96BC               	bcf	16316,3,c	;volatile
  8911   004B9A                     
  8912                           ;./LCD.h: 54:     LATC4 = 1;
  8913   004B9A  88BC               	bsf	16316,4,c	;volatile
  8914   004B9C                     
  8915                           ;./LCD.h: 55:     __nop();
  8916   004B9C  0000               	nop	
  8917   004B9E                     
  8918                           ;./LCD.h: 56:     LATC4 = 0;
  8919   004B9E  98BC               	bcf	16316,4,c	;volatile
  8920   004BA0                     
  8921                           ;./LCD.h: 57:     MSdelay(3);
  8922   004BA0  0E00               	movlw	0
  8923   004BA2  6E04               	movwf	(MSdelay@val+1)^0,c
  8924   004BA4  0E03               	movlw	3
  8925   004BA6  6E03               	movwf	MSdelay@val^0,c
  8926   004BA8  EC41  F024         	call	_MSdelay	;wreg free
  8927   004BAC  0012               	return		;funcret
  8928   004BAE                     __end_of_LCD_Command:
  8929                           	callstack 0
  8930                           
  8931 ;; *************** function _MSdelay *****************
  8932 ;; Defined at:
  8933 ;;		line 97 in file "./LCD.h"
  8934 ;; Parameters:    Size  Location     Type
  8935 ;;  val             2    2[COMRAM] unsigned int 
  8936 ;; Auto vars:     Size  Location     Type
  8937 ;;  j               2    6[COMRAM] unsigned int 
  8938 ;;  i               2    4[COMRAM] unsigned int 
  8939 ;; Return value:  Size  Location     Type
  8940 ;;                  1    wreg      void 
  8941 ;; Registers used:
  8942 ;;		wreg, status,2, status,0
  8943 ;; Tracked objects:
  8944 ;;		On entry : 0/0
  8945 ;;		On exit  : 0/0
  8946 ;;		Unchanged: 0/0
  8947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8948 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8949 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8951 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8952 ;;Total ram usage:        6 bytes
  8953 ;; Hardware stack levels used: 1
  8954 ;; Hardware stack levels required when called: 1
  8955 ;; This function calls:
  8956 ;;		Nothing
  8957 ;; This function is called by:
  8958 ;;		_LCD_Init
  8959 ;;		_LCD_Command
  8960 ;;		_LCD_Char
  8961 ;; This function uses a non-reentrant model
  8962 ;;
  8963                           
  8964                           	psect	text43
  8965   004882                     __ptext43:
  8966                           	callstack 0
  8967   004882                     _MSdelay:
  8968                           	callstack 25
  8969   004882                     
  8970                           ;./LCD.h: 97: void MSdelay(unsigned int val);./LCD.h: 98: {;./LCD.h: 99:      unsigned i
      +                          nt i,j;;./LCD.h: 100:         for(i=0;i<val;i++)
  8971   004882  0E00               	movlw	0
  8972   004884  6E06               	movwf	(MSdelay@i+1)^0,c
  8973   004886  0E00               	movlw	0
  8974   004888  6E05               	movwf	MSdelay@i^0,c
  8975   00488A  EF5A  F024         	goto	l3344
  8976   00488E                     l3332:
  8977                           
  8978                           ;./LCD.h: 101:             for(j=0;j<165;j++);
  8979   00488E  0E00               	movlw	0
  8980   004890  6E08               	movwf	(MSdelay@j+1)^0,c
  8981   004892  0E00               	movlw	0
  8982   004894  6E07               	movwf	MSdelay@j^0,c
  8983   004896                     l3338:
  8984   004896  4A07               	infsnz	MSdelay@j^0,f,c
  8985   004898  2A08               	incf	(MSdelay@j+1)^0,f,c
  8986   00489A  5008               	movf	(MSdelay@j+1)^0,w,c
  8987   00489C  E109               	bnz	u3470
  8988   00489E  0EA5               	movlw	165
  8989   0048A0  5C07               	subwf	MSdelay@j^0,w,c
  8990   0048A2  A0D8               	btfss	status,0,c
  8991   0048A4  EF56  F024         	goto	u3471
  8992   0048A8  EF58  F024         	goto	u3470
  8993   0048AC                     u3471:
  8994   0048AC  EF4B  F024         	goto	l3338
  8995   0048B0                     u3470:
  8996   0048B0  4A05               	infsnz	MSdelay@i^0,f,c
  8997   0048B2  2A06               	incf	(MSdelay@i+1)^0,f,c
  8998   0048B4                     l3344:
  8999   0048B4  5003               	movf	MSdelay@val^0,w,c
  9000   0048B6  5C05               	subwf	MSdelay@i^0,w,c
  9001   0048B8  5004               	movf	(MSdelay@val+1)^0,w,c
  9002   0048BA  5806               	subwfb	(MSdelay@i+1)^0,w,c
  9003   0048BC  A0D8               	btfss	status,0,c
  9004   0048BE  EF63  F024         	goto	u3481
  9005   0048C2  EF65  F024         	goto	u3480
  9006   0048C6                     u3481:
  9007   0048C6  EF47  F024         	goto	l3332
  9008   0048CA                     u3480:
  9009   0048CA  0012               	return		;funcret
  9010   0048CC                     __end_of_MSdelay:
  9011                           	callstack 0
  9012                           
  9013 ;; *************** function _Initialize *****************
  9014 ;; Defined at:
  9015 ;;		line 11 in file "./init.h"
  9016 ;; Parameters:    Size  Location     Type
  9017 ;;		None
  9018 ;; Auto vars:     Size  Location     Type
  9019 ;;		None
  9020 ;; Return value:  Size  Location     Type
  9021 ;;                  1    wreg      void 
  9022 ;; Registers used:
  9023 ;;		wreg, status,2
  9024 ;; Tracked objects:
  9025 ;;		On entry : 0/0
  9026 ;;		On exit  : 0/0
  9027 ;;		Unchanged: 0/0
  9028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9033 ;;Total ram usage:        0 bytes
  9034 ;; Hardware stack levels used: 1
  9035 ;; Hardware stack levels required when called: 1
  9036 ;; This function calls:
  9037 ;;		Nothing
  9038 ;; This function is called by:
  9039 ;;		_main
  9040 ;; This function uses a non-reentrant model
  9041 ;;
  9042                           
  9043                           	psect	text44
  9044   004958                     __ptext44:
  9045                           	callstack 0
  9046   004958                     _Initialize:
  9047                           	callstack 29
  9048   004958                     
  9049                           ;./init.h: 12:     TRISD = 0x00;
  9050   004958  6AC5               	clrf	197,c	;volatile
  9051   00495A                     
  9052                           ;./init.h: 13:     TRISC = 0b11000111;
  9053   00495A  0EC7               	movlw	199
  9054   00495C  6EC4               	movwf	196,c	;volatile
  9055   00495E                     
  9056                           ;./init.h: 14:     TRISE = 0xFF;
  9057   00495E  68C6               	setf	198,c	;volatile
  9058   004960                     
  9059                           ;./init.h: 15:     ANSELE = 0x00;
  9060   004960  013A               	movlb	58	; () banked
  9061   004962  6B80               	clrf	128,b	;volatile
  9062   004964                     
  9063                           ; BSR set to: 58
  9064                           ;./init.h: 16:     ANSELD = 0x00;
  9065   004964  6B70               	clrf	112,b	;volatile
  9066   004966                     
  9067                           ; BSR set to: 58
  9068                           ;./init.h: 17:     ANSELC = 0x00;
  9069   004966  6B60               	clrf	96,b	;volatile
  9070   004968                     
  9071                           ; BSR set to: 58
  9072                           ;./init.h: 19:     TRISAbits.TRISA0 = 1;
  9073   004968  80C2               	bsf	194,0,c	;volatile
  9074   00496A                     
  9075                           ; BSR set to: 58
  9076                           ;./init.h: 20:     ANSELAbits.ANSELA0 = 1;
  9077   00496A  8140               	bsf	64,0,b	;volatile
  9078                           
  9079                           ;./init.h: 23:     ADCON0bits.FM = 1;
  9080   00496C  013E               	movlb	62	; () banked
  9081   00496E  51F8               	movf	248,w,b	;volatile
  9082   004970  0BF3               	andlw	-13
  9083   004972  0904               	iorlw	4
  9084   004974  6FF8               	movwf	248,b	;volatile
  9085   004976                     
  9086                           ; BSR set to: 62
  9087                           ;./init.h: 24:     ADCON0bits.CS = 1;
  9088   004976  89F8               	bsf	248,4,b	;volatile
  9089   004978                     
  9090                           ; BSR set to: 62
  9091                           ;./init.h: 25:     ADCLK = 0x00;
  9092   004978  6BFF               	clrf	255,b	;volatile
  9093   00497A                     
  9094                           ; BSR set to: 62
  9095                           ;./init.h: 26:     ADPCH = 0x00;
  9096   00497A  6BF1               	clrf	241,b	;volatile
  9097   00497C                     
  9098                           ; BSR set to: 62
  9099                           ;./init.h: 27:     ADCAP = 0x00;
  9100   00497C  6BF5               	clrf	245,b	;volatile
  9101   00497E                     
  9102                           ; BSR set to: 62
  9103                           ;./init.h: 28:     ADREF = 0x00;
  9104   00497E  6BFD               	clrf	253,b	;volatile
  9105   004980                     
  9106                           ; BSR set to: 62
  9107                           ;./init.h: 29:     ADPREL = 0x00;
  9108   004980  6BF6               	clrf	246,b	;volatile
  9109   004982                     
  9110                           ; BSR set to: 62
  9111                           ;./init.h: 30:     ADPREH = 0x00;
  9112   004982  6BF7               	clrf	247,b	;volatile
  9113   004984                     
  9114                           ; BSR set to: 62
  9115                           ;./init.h: 31:     ADACQL = 0x00;
  9116   004984  6BF3               	clrf	243,b	;volatile
  9117   004986                     
  9118                           ; BSR set to: 62
  9119                           ;./init.h: 32:     ADACQH = 0x00;
  9120   004986  6BF4               	clrf	244,b	;volatile
  9121   004988                     
  9122                           ; BSR set to: 62
  9123                           ;./init.h: 33:     ADCON0bits.ON = 1;
  9124   004988  8FF8               	bsf	248,7,b	;volatile
  9125   00498A                     
  9126                           ; BSR set to: 62
  9127                           ;./init.h: 37:     IOCCPbits.IOCCP2 = 1;
  9128   00498A  013A               	movlb	58	; () banked
  9129   00498C  8565               	bsf	101,2,b	;volatile
  9130   00498E                     
  9131                           ; BSR set to: 58
  9132                           ;./init.h: 38:     PIE0bits.IOCIE = 1;
  9133   00498E  0139               	movlb	57	; () banked
  9134   004990  8F90               	bsf	144,7,b	;volatile
  9135   004992                     
  9136                           ; BSR set to: 57
  9137                           ;./init.h: 39:     INTCON0bits.IPEN = 1;
  9138   004992  8AD2               	bsf	210,5,c	;volatile
  9139   004994                     
  9140                           ; BSR set to: 57
  9141                           ;./init.h: 40:     INTCON0bits.GIEH = 1;
  9142   004994  8ED2               	bsf	210,7,c	;volatile
  9143   004996                     
  9144                           ; BSR set to: 57
  9145                           ;./init.h: 41:     IOCCFbits.IOCCF2 = 0;
  9146   004996  013A               	movlb	58	; () banked
  9147   004998  9567               	bcf	103,2,b	;volatile
  9148   00499A                     
  9149                           ; BSR set to: 58
  9150                           ;./init.h: 42:     WPUCbits.WPUC2 = 1;
  9151   00499A  8561               	bsf	97,2,b	;volatile
  9152   00499C                     
  9153                           ; BSR set to: 58
  9154   00499C  0012               	return		;funcret
  9155   00499E                     __end_of_Initialize:
  9156                           	callstack 0
  9157                           
  9158 ;; *************** function _ISR *****************
  9159 ;; Defined at:
  9160 ;;		line 45 in file "./init.h"
  9161 ;; Parameters:    Size  Location     Type
  9162 ;;		None
  9163 ;; Auto vars:     Size  Location     Type
  9164 ;;  i               2    0[COMRAM] int 
  9165 ;; Return value:  Size  Location     Type
  9166 ;;                  1    wreg      void 
  9167 ;; Registers used:
  9168 ;;		wreg, status,2, status,0
  9169 ;; Tracked objects:
  9170 ;;		On entry : 0/0
  9171 ;;		On exit  : 0/0
  9172 ;;		Unchanged: 0/0
  9173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9175 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9177 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9178 ;;Total ram usage:        2 bytes
  9179 ;; Hardware stack levels used: 1
  9180 ;; This function calls:
  9181 ;;		Nothing
  9182 ;; This function is called by:
  9183 ;;		Interrupt level 2
  9184 ;; This function uses a non-reentrant model
  9185 ;;
  9186                           
  9187                           	psect	text45
  9188   004830                     __ptext45:
  9189                           	callstack 0
  9190   004830                     _ISR:
  9191                           	callstack 21
  9192   004830                     
  9193                           ;./init.h: 46:     if (IOCCFbits.IOCCF2) {
  9194   004830  013A               	movlb	58	; () banked
  9195   004832  A567               	btfss	103,2,b	;volatile
  9196   004834  EF1E  F024         	goto	i2u205_41
  9197   004838  EF20  F024         	goto	i2u205_40
  9198   00483C                     i2u205_41:
  9199   00483C  EF40  F024         	goto	i2l164
  9200   004840                     i2u205_40:
  9201   004840                     
  9202                           ; BSR set to: 58
  9203                           ;./init.h: 48:         for (int i = 0; i < 30; i++) {
  9204   004840  0E00               	movlw	0
  9205   004842  6E02               	movwf	(ISR@i+1)^0,c
  9206   004844  0E00               	movlw	0
  9207   004846  6E01               	movwf	ISR@i^0,c
  9208   004848                     i2l162:
  9209                           
  9210                           ;./init.h: 49:             LATC5 = ~LATC5;
  9211   004848  AABC               	btfss	16316,5,c	;volatile
  9212   00484A  EF29  F024         	goto	i2u206_41
  9213   00484E  EF2C  F024         	goto	i2u206_40
  9214   004852                     i2u206_41:
  9215   004852  8ABC               	bsf	16316,5,c	;volatile
  9216   004854  EF2D  F024         	goto	i2u207_45
  9217   004858                     i2u206_40:
  9218   004858  9ABC               	bcf	16316,5,c	;volatile
  9219   00485A                     i2u207_45:
  9220   00485A                     
  9221                           ;./init.h: 51:         }
  9222   00485A  4A01               	infsnz	ISR@i^0,f,c
  9223   00485C  2A02               	incf	(ISR@i+1)^0,f,c
  9224   00485E  BE02               	btfsc	(ISR@i+1)^0,7,c
  9225   004860  EF3B  F024         	goto	i2u208_41
  9226   004864  5002               	movf	(ISR@i+1)^0,w,c
  9227   004866  E109               	bnz	i2u208_40
  9228   004868  0E1E               	movlw	30
  9229   00486A  5C01               	subwf	ISR@i^0,w,c
  9230   00486C  A0D8               	btfss	status,0,c
  9231   00486E  EF3B  F024         	goto	i2u208_41
  9232   004872  EF3D  F024         	goto	i2u208_40
  9233   004876                     i2u208_41:
  9234   004876  EF24  F024         	goto	i2l162
  9235   00487A                     i2u208_40:
  9236   00487A                     
  9237                           ;./init.h: 52:         LATC5 = 0;
  9238   00487A  9ABC               	bcf	16316,5,c	;volatile
  9239                           
  9240                           ;./init.h: 53:         IOCCFbits.IOCCF2 = 0;
  9241   00487C  013A               	movlb	58	; () banked
  9242   00487E  9567               	bcf	103,2,b	;volatile
  9243   004880                     i2l164:
  9244                           
  9245                           ; BSR set to: 58
  9246   004880  0011               	retfie		f
  9247   004882                     __end_of_ISR:
  9248                           	callstack 0
  9249                           
  9250                           ;
  9251                           ; H/W Interrupt Vector Table @ 0x8
  9252                           ;
  9253                           
  9254                           	psect	ivt0x8
  9255   000008                     __pivt0x8:
  9256                           	callstack 0
  9257   000008                     ivt0x8_base:
  9258                           	callstack 0
  9259                           
  9260                           ; Vector 0 : SWINT
  9261   000008  002B               	dw	ivt0x8_undefint shr (0+2)
  9262                           
  9263                           ; Vector 1 : HLVD
  9264   00000A  002B               	dw	ivt0x8_undefint shr (0+2)
  9265                           
  9266                           ; Vector 2 : OSF
  9267   00000C  002B               	dw	ivt0x8_undefint shr (0+2)
  9268                           
  9269                           ; Vector 3 : CSW
  9270   00000E  002B               	dw	ivt0x8_undefint shr (0+2)
  9271                           
  9272                           ; Vector 4 : NVM
  9273   000010  002B               	dw	ivt0x8_undefint shr (0+2)
  9274                           
  9275                           ; Vector 5 : SCAN
  9276   000012  002B               	dw	ivt0x8_undefint shr (0+2)
  9277                           
  9278                           ; Vector 6 : CRC
  9279   000014  002B               	dw	ivt0x8_undefint shr (0+2)
  9280                           
  9281                           ; Vector 7 : IOC
  9282   000016  120C               	dw	_ISR shr (0+2)
  9283                           
  9284                           ; Vector 8 : INT0
  9285   000018  002B               	dw	ivt0x8_undefint shr (0+2)
  9286                           
  9287                           ; Vector 9 : ZCD
  9288   00001A  002B               	dw	ivt0x8_undefint shr (0+2)
  9289                           
  9290                           ; Vector 10 : AD
  9291   00001C  002B               	dw	ivt0x8_undefint shr (0+2)
  9292                           
  9293                           ; Vector 11 : ADT
  9294   00001E  002B               	dw	ivt0x8_undefint shr (0+2)
  9295                           
  9296                           ; Vector 12 : CMP1
  9297   000020  002B               	dw	ivt0x8_undefint shr (0+2)
  9298                           
  9299                           ; Vector 13 : SMT1
  9300   000022  002B               	dw	ivt0x8_undefint shr (0+2)
  9301                           
  9302                           ; Vector 14 : SMT1PRA
  9303   000024  002B               	dw	ivt0x8_undefint shr (0+2)
  9304                           
  9305                           ; Vector 15 : SMT1PRW
  9306   000026  002B               	dw	ivt0x8_undefint shr (0+2)
  9307                           
  9308                           ; Vector 16 : DMA1SCNT
  9309   000028  002B               	dw	ivt0x8_undefint shr (0+2)
  9310                           
  9311                           ; Vector 17 : DMA1DCNT
  9312   00002A  002B               	dw	ivt0x8_undefint shr (0+2)
  9313                           
  9314                           ; Vector 18 : DMA1OR
  9315   00002C  002B               	dw	ivt0x8_undefint shr (0+2)
  9316                           
  9317                           ; Vector 19 : DMA1A
  9318   00002E  002B               	dw	ivt0x8_undefint shr (0+2)
  9319                           
  9320                           ; Vector 20 : SPI1RX
  9321   000030  002B               	dw	ivt0x8_undefint shr (0+2)
  9322                           
  9323                           ; Vector 21 : SPI1TX
  9324   000032  002B               	dw	ivt0x8_undefint shr (0+2)
  9325                           
  9326                           ; Vector 22 : SPI1
  9327   000034  002B               	dw	ivt0x8_undefint shr (0+2)
  9328                           
  9329                           ; Vector 23 : I2C1RX
  9330   000036  002B               	dw	ivt0x8_undefint shr (0+2)
  9331                           
  9332                           ; Vector 24 : I2C1TX
  9333   000038  002B               	dw	ivt0x8_undefint shr (0+2)
  9334                           
  9335                           ; Vector 25 : I2C1
  9336   00003A  002B               	dw	ivt0x8_undefint shr (0+2)
  9337                           
  9338                           ; Vector 26 : I2C1E
  9339   00003C  002B               	dw	ivt0x8_undefint shr (0+2)
  9340                           
  9341                           ; Vector 27 : U1RX
  9342   00003E  002B               	dw	ivt0x8_undefint shr (0+2)
  9343                           
  9344                           ; Vector 28 : U1TX
  9345   000040  002B               	dw	ivt0x8_undefint shr (0+2)
  9346                           
  9347                           ; Vector 29 : U1E
  9348   000042  002B               	dw	ivt0x8_undefint shr (0+2)
  9349                           
  9350                           ; Vector 30 : U1
  9351   000044  002B               	dw	ivt0x8_undefint shr (0+2)
  9352                           
  9353                           ; Vector 31 : TMR0
  9354   000046  002B               	dw	ivt0x8_undefint shr (0+2)
  9355                           
  9356                           ; Vector 32 : TMR1
  9357   000048  002B               	dw	ivt0x8_undefint shr (0+2)
  9358                           
  9359                           ; Vector 33 : TMR1G
  9360   00004A  002B               	dw	ivt0x8_undefint shr (0+2)
  9361                           
  9362                           ; Vector 34 : TMR2
  9363   00004C  002B               	dw	ivt0x8_undefint shr (0+2)
  9364                           
  9365                           ; Vector 35 : CCP1
  9366   00004E  002B               	dw	ivt0x8_undefint shr (0+2)
  9367                           
  9368                           ; Vector 36 : Undefined
  9369   000050  002B               	dw	ivt0x8_undefint shr (0+2)
  9370                           
  9371                           ; Vector 37 : NCO1
  9372   000052  002B               	dw	ivt0x8_undefint shr (0+2)
  9373                           
  9374                           ; Vector 38 : CWG1
  9375   000054  002B               	dw	ivt0x8_undefint shr (0+2)
  9376                           
  9377                           ; Vector 39 : CLC1
  9378   000056  002B               	dw	ivt0x8_undefint shr (0+2)
  9379                           
  9380                           ; Vector 40 : INT1
  9381   000058  002B               	dw	ivt0x8_undefint shr (0+2)
  9382                           
  9383                           ; Vector 41 : CMP2
  9384   00005A  002B               	dw	ivt0x8_undefint shr (0+2)
  9385                           
  9386                           ; Vector 42 : DMA2SCNT
  9387   00005C  002B               	dw	ivt0x8_undefint shr (0+2)
  9388                           
  9389                           ; Vector 43 : DMA2DCNT
  9390   00005E  002B               	dw	ivt0x8_undefint shr (0+2)
  9391                           
  9392                           ; Vector 44 : DMA2OR
  9393   000060  002B               	dw	ivt0x8_undefint shr (0+2)
  9394                           
  9395                           ; Vector 45 : DMA2A
  9396   000062  002B               	dw	ivt0x8_undefint shr (0+2)
  9397                           
  9398                           ; Vector 46 : I2C2RX
  9399   000064  002B               	dw	ivt0x8_undefint shr (0+2)
  9400                           
  9401                           ; Vector 47 : I2C2TX
  9402   000066  002B               	dw	ivt0x8_undefint shr (0+2)
  9403                           
  9404                           ; Vector 48 : I2C2
  9405   000068  002B               	dw	ivt0x8_undefint shr (0+2)
  9406                           
  9407                           ; Vector 49 : I2C2E
  9408   00006A  002B               	dw	ivt0x8_undefint shr (0+2)
  9409                           
  9410                           ; Vector 50 : U2RX
  9411   00006C  002B               	dw	ivt0x8_undefint shr (0+2)
  9412                           
  9413                           ; Vector 51 : U2TX
  9414   00006E  002B               	dw	ivt0x8_undefint shr (0+2)
  9415                           
  9416                           ; Vector 52 : U2E
  9417   000070  002B               	dw	ivt0x8_undefint shr (0+2)
  9418                           
  9419                           ; Vector 53 : U2
  9420   000072  002B               	dw	ivt0x8_undefint shr (0+2)
  9421                           
  9422                           ; Vector 54 : TMR3
  9423   000074  002B               	dw	ivt0x8_undefint shr (0+2)
  9424                           
  9425                           ; Vector 55 : TMR3G
  9426   000076  002B               	dw	ivt0x8_undefint shr (0+2)
  9427                           
  9428                           ; Vector 56 : TMR4
  9429   000078  002B               	dw	ivt0x8_undefint shr (0+2)
  9430                           
  9431                           ; Vector 57 : CCP2
  9432   00007A  002B               	dw	ivt0x8_undefint shr (0+2)
  9433                           
  9434                           ; Vector 58 : Undefined
  9435   00007C  002B               	dw	ivt0x8_undefint shr (0+2)
  9436                           
  9437                           ; Vector 59 : CWG2
  9438   00007E  002B               	dw	ivt0x8_undefint shr (0+2)
  9439                           
  9440                           ; Vector 60 : CLC2
  9441   000080  002B               	dw	ivt0x8_undefint shr (0+2)
  9442                           
  9443                           ; Vector 61 : INT2
  9444   000082  002B               	dw	ivt0x8_undefint shr (0+2)
  9445                           
  9446                           ; Vector 62 : Undefined
  9447   000084  002B               	dw	ivt0x8_undefint shr (0+2)
  9448                           
  9449                           ; Vector 63 : Undefined
  9450   000086  002B               	dw	ivt0x8_undefint shr (0+2)
  9451                           
  9452                           ; Vector 64 : Undefined
  9453   000088  002B               	dw	ivt0x8_undefint shr (0+2)
  9454                           
  9455                           ; Vector 65 : Undefined
  9456   00008A  002B               	dw	ivt0x8_undefint shr (0+2)
  9457                           
  9458                           ; Vector 66 : Undefined
  9459   00008C  002B               	dw	ivt0x8_undefint shr (0+2)
  9460                           
  9461                           ; Vector 67 : Undefined
  9462   00008E  002B               	dw	ivt0x8_undefint shr (0+2)
  9463                           
  9464                           ; Vector 68 : Undefined
  9465   000090  002B               	dw	ivt0x8_undefint shr (0+2)
  9466                           
  9467                           ; Vector 69 : Undefined
  9468   000092  002B               	dw	ivt0x8_undefint shr (0+2)
  9469                           
  9470                           ; Vector 70 : TMR5
  9471   000094  002B               	dw	ivt0x8_undefint shr (0+2)
  9472                           
  9473                           ; Vector 71 : TMR5G
  9474   000096  002B               	dw	ivt0x8_undefint shr (0+2)
  9475                           
  9476                           ; Vector 72 : TMR6
  9477   000098  002B               	dw	ivt0x8_undefint shr (0+2)
  9478                           
  9479                           ; Vector 73 : CCP3
  9480   00009A  002B               	dw	ivt0x8_undefint shr (0+2)
  9481                           
  9482                           ; Vector 74 : CWG3
  9483   00009C  002B               	dw	ivt0x8_undefint shr (0+2)
  9484                           
  9485                           ; Vector 75 : CLC3
  9486   00009E  002B               	dw	ivt0x8_undefint shr (0+2)
  9487                           
  9488                           ; Vector 76 : Undefined
  9489   0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
  9490                           
  9491                           ; Vector 77 : Undefined
  9492   0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
  9493                           
  9494                           ; Vector 78 : Undefined
  9495   0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
  9496                           
  9497                           ; Vector 79 : Undefined
  9498   0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
  9499                           
  9500                           ; Vector 80 : CCP4
  9501   0000A8  002B               	dw	ivt0x8_undefint shr (0+2)
  9502                           
  9503                           ; Vector 81 : CLC4
  9504   0000AA  002B               	dw	ivt0x8_undefint shr (0+2)
  9505   0000AC                     ivt0x8_undefint:
  9506                           	callstack 0
  9507   0000AC  00FF               	reset	
  9508                           
  9509                           	psect	rparam
  9510   000001                     ___rparam_used  equ	1
  9511   000000                     ___param_bank   equ	0
  9512   000000                     __Lparam        equ	__Lrparam
  9513   000000                     __Hparam        equ	__Hrparam
  9514                           
  9515                           	psect	config
  9516                           
  9517                           ;Config register CONFIG1L @ 0x300000
  9518                           ;	External Oscillator Selection
  9519                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  9520                           ;	Reset Oscillator Selection
  9521                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  9522   300000                     	org	3145728
  9523   300000  F8                 	db	248
  9524                           
  9525                           ;Config register CONFIG1H @ 0x300001
  9526                           ;	Clock out Enable bit
  9527                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  9528                           ;	PRLOCKED One-Way Set Enable bit
  9529                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  9530                           ;	Clock Switch Enable bit
  9531                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  9532                           ;	Fail-Safe Clock Monitor Enable bit
  9533                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  9534   300001                     	org	3145729
  9535   300001  FF                 	db	255
  9536                           
  9537                           ;Config register CONFIG2L @ 0x300002
  9538                           ;	MCLR Enable bit
  9539                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  9540                           ;	Power-up timer selection bits
  9541                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  9542                           ;	Multi-vector enable bit
  9543                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  9544                           ;	IVTLOCK bit One-way set enable bit
  9545                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  9546                           ;	Low Power BOR Enable bit
  9547                           ;	LPBOREN = OFF, ULPBOR disabled
  9548                           ;	Brown-out Reset Enable bits
  9549                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  9550   300002                     	org	3145730
  9551   300002  FF                 	db	255
  9552                           
  9553                           ;Config register CONFIG2H @ 0x300003
  9554                           ;	Brown-out Reset Voltage Selection bits
  9555                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  9556                           ;	ZCD Disable bit
  9557                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  9558                           ;	PPSLOCK bit One-Way Set Enable bit
  9559                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  9560                           ;	Stack Full/Underflow Reset Enable bit
  9561                           ;	STVREN = ON, Stack full/underflow will cause Reset
  9562                           ;	Debugger Enable bit
  9563                           ;	DEBUG = OFF, Background debugger disabled
  9564                           ;	Extended Instruction Set Enable bit
  9565                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  9566   300003                     	org	3145731
  9567   300003  FF                 	db	255
  9568                           
  9569                           ;Config register CONFIG3L @ 0x300004
  9570                           ;	WDT Period selection bits
  9571                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9572                           ;	WDT operating mode
  9573                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  9574   300004                     	org	3145732
  9575   300004  9F                 	db	159
  9576                           
  9577                           ;Config register CONFIG3H @ 0x300005
  9578                           ;	WDT Window Select bits
  9579                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  9580                           ;	WDT input clock selector
  9581                           ;	WDTCCS = SC, Software Control
  9582   300005                     	org	3145733
  9583   300005  FF                 	db	255
  9584                           
  9585                           ;Config register CONFIG4L @ 0x300006
  9586                           ;	Boot Block Size selection bits
  9587                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  9588                           ;	Boot Block enable bit
  9589                           ;	BBEN = OFF, Boot block disabled
  9590                           ;	Storage Area Flash enable bit
  9591                           ;	SAFEN = OFF, SAF disabled
  9592                           ;	Application Block write protection bit
  9593                           ;	WRTAPP = OFF, Application Block not write protected
  9594   300006                     	org	3145734
  9595   300006  FF                 	db	255
  9596                           
  9597                           ;Config register CONFIG4H @ 0x300007
  9598                           ;	Boot Block Write Protection bit
  9599                           ;	WRTB = OFF, Boot Block not write-protected
  9600                           ;	Configuration Register Write Protection bit
  9601                           ;	WRTC = OFF, Configuration registers not write-protected
  9602                           ;	Data EEPROM Write Protection bit
  9603                           ;	WRTD = OFF, Data EEPROM not write-protected
  9604                           ;	SAF Write protection bit
  9605                           ;	WRTSAF = OFF, SAF not Write Protected
  9606                           ;	Low Voltage Programming Enable bit
  9607                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  9608   300007                     	org	3145735
  9609   300007  FF                 	db	255
  9610                           
  9611                           ;Config register CONFIG5L @ 0x300008
  9612                           ;	PFM and Data EEPROM Code Protection bit
  9613                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  9614   300008                     	org	3145736
  9615   300008  FF                 	db	255
  9616                           
  9617                           ;Config register CONFIG5H @ 0x300009
  9618                           ;	unspecified, using default values
  9619   300009                     	org	3145737
  9620   300009  FF                 	db	255
  9621                           tosu	equ	0x3FFF
  9622                           tosh	equ	0x3FFE
  9623                           tosl	equ	0x3FFD
  9624                           stkptr	equ	0x3FFC
  9625                           pclatu	equ	0x3FFB
  9626                           pclath	equ	0x3FFA
  9627                           pcl	equ	0x3FF9
  9628                           tblptru	equ	0x3FF8
  9629                           tblptrh	equ	0x3FF7
  9630                           tblptrl	equ	0x3FF6
  9631                           tablat	equ	0x3FF5
  9632                           prodh	equ	0x3FF4
  9633                           prodl	equ	0x3FF3
  9634                           indf0	equ	0x3FEF
  9635                           postinc0	equ	0x3FEE
  9636                           postdec0	equ	0x3FED
  9637                           preinc0	equ	0x3FEC
  9638                           plusw0	equ	0x3FEB
  9639                           fsr0h	equ	0x3FEA
  9640                           fsr0l	equ	0x3FE9
  9641                           wreg	equ	0x3FE8
  9642                           indf1	equ	0x3FE7
  9643                           postinc1	equ	0x3FE6
  9644                           postdec1	equ	0x3FE5
  9645                           preinc1	equ	0x3FE4
  9646                           plusw1	equ	0x3FE3
  9647                           fsr1h	equ	0x3FE2
  9648                           fsr1l	equ	0x3FE1
  9649                           bsr	equ	0x3FE0
  9650                           indf2	equ	0x3FDF
  9651                           postinc2	equ	0x3FDE
  9652                           postdec2	equ	0x3FDD
  9653                           preinc2	equ	0x3FDC
  9654                           plusw2	equ	0x3FDB
  9655                           fsr2h	equ	0x3FDA
  9656                           fsr2l	equ	0x3FD9
  9657                           status	equ	0x3FD8

Data Sizes:
    Strings     40
    Constant    0
    Data        20
    BSS         93
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     83      92
    BANK0           160     91     115
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[11]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[11]), 

    f$.$buffer	PTR unsigned char  size(1) Largest target is 15
		 -> PWM@percent(BANK0[15]), readADC@buffer(COMRAM[12]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 15
		 -> PWM@percent(BANK0[15]), readADC@buffer(COMRAM[12]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[11]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 15
		 -> PWM@percent(BANK0[15]), readADC@buffer(COMRAM[12]), STR_1(CODE[6]), STR_2(CODE[15]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 15
		 -> PWM@percent(BANK0[15]), readADC@buffer(COMRAM[12]), STR_1(CODE[6]), STR_2(CODE[15]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S1192$buffer	PTR unsigned char  size(1) Largest target is 15
		 -> PWM@percent(BANK0[15]), readADC@buffer(COMRAM[12]), 

    S1192$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 12
		 -> readADC@buffer(COMRAM[12]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[5]), STR_5(CODE[3]), STR_6(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 15
		 -> PWM@percent(BANK0[15]), readADC@buffer(COMRAM[12]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_10(CODE[4]), STR_7(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[5]), STR_5(CODE[3]), STR_6(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[5]), STR_5(CODE[3]), STR_6(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[5]), STR_5(CODE[3]), STR_6(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->_PWM
    _PWM->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    ___lldiv->___lmul
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Clear->_LCD_Command
    _LCD_Init->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_PWM
    _PWM->_sprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   16216
                         _Initialize
                          _LCD_Clear
                           _LCD_Init
                      _LCD_String_xy
                                _PWM
 ---------------------------------------------------------------------------------
 (1) _PWM                                                 45    45      0   15427
                                             81 COMRAM     2     2      0
                                             50 BANK0     41    41      0
                          _LCD_Clear
                      _LCD_String_xy
                    _PWM2_Initialize
                 _PWM2_LoadDutyValue
               _PWM2_OutputStatusGet
               _PWM_Output_D8_Enable
                    _TMR2_Initialize
                    _TMR2_StartTimer
                            ___lldiv
                             ___lmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    14      6   14133
                                             69 COMRAM    12    12      0
                                             44 BANK0      6     0      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3   13922
                                             65 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           11     8      3   13785
                                             55 COMRAM    10     7      3
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   7     5      2     182
                                              2 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              53    47      6   10910
                                             47 COMRAM     8     2      6
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     3      3      77
                                              2 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     146
                                              2 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4      69
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     340
                                             27 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     137
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     232
                                              2 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2037
                                             27 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    1988
                                              2 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4      46
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    1480
                                              2 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     190
                                             27 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8      94
                                              2 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    1133
                                              2 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                12     9      3    1767
                                             24 COMRAM    12     9      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  8     3      5     710
                                             16 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                6     3      3     331
                                             10 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     232
                                              2 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2      67
                                              8 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     298
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     302
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8      96
                                              2 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     166
                                             14 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _TMR2_StartTimer                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (3) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Output_D8_Enable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_OutputStatusGet                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_LoadDutyValue                                   2     0      2      92
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        5     2      3     446
                                             11 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2     170
                                              9 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             1     1      0     124
                                              8 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     124
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0     219
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          1     1      0     124
                                              8 COMRAM     1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (5) _MSdelay                                              6     4      2      95
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Initialize                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                 2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Initialize
   _LCD_Clear
     _LCD_Command
       _MSdelay
   _LCD_Init
     _LCD_Command
     _MSdelay
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
         _MSdelay
   _PWM
     _LCD_Clear
     _LCD_String_xy
     _PWM2_Initialize
     _PWM2_LoadDutyValue
     _PWM2_OutputStatusGet
     _PWM_Output_D8_Enable
     _TMR2_Initialize
     _TMR2_StartTimer
       _TMR2_Start
     ___lldiv
       ___lmul (ARG)
     ___lmul
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _efgtoa
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
             _strcpy
           _fputc
           _read_prec_or_width

 _ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRllh      1383      0       0      0.0%
BITBIGSFRlll       400      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0      80     31.2%
BITBIGSFRlh        182      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160     91     115     71.9%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     83      92     96.8%
BITBIGSFRh          80      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     286      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Apr 29 15:33:19 2025

       ?_PWM_Output_D8_Enable 0001                  ___fldiv@aexp 001B                  ___fldiv@bexp 001A  
                ___fldiv@sign 0013                  ?_LCD_Command 0001                  ___awdiv@sign 0008  
                 ?_LCD_String 000A                           l200 4BE6                           l131 4BAC  
                         l211 4B32                           l140 4656                           l125 4B86  
                         l134 4BCA                           l206 4C12                           l214 4C3A  
                         l128 4C42                           l153 48CA                           l145 4A60  
                         l170 4C4C                           l219 4B5A                           l156 499C  
                         l252 46B0                           l500 4540                           l173 4C48  
                         l253 46C0                           l167 4BFC                           l511 40C4  
                         l506 407E                           l275 45E4                           l515 4A98  
                         l268 45D4                           l472 4284                           l802 2E88  
                         l538 3FC0                           l811 4956                           l485 43EA  
                         l823 369E                           l825 3502                           l834 3548  
                         l770 2BE6                           l835 3566                           l771 2BAC  
                         l836 35BE                           l828 34C6                           l837 35AC  
                         l862 31A4                           l863 31C2                           l855 2F8A  
                         l783 2DA0                           l919 4ACE                           l952 4726  
                         l872 32D0                           l864 321A                           l865 3208  
                         l769 2BF8                           l970 3EBA                           l786 2D12  
                         l778 2EC4                           l859 330E                           l795 2DE0  
                         l948 46D8                           l956 3D72                           l796 2DCE  
                         l981 2A0E                           l958 3D7A                           l959 3DC0  
                         l984 23AE                           l986 21F4                           _PR2 3FAB  
                         _ISR 4830                           _PWM 3B4A                           _abs 4AD0  
                         _pad 46C2                  ___awmod@sign 0008               _TMR2_Initialize 4BE8  
                         wreg 3FE8                  ___flmul@aexp 0014                  ___flmul@bexp 0015  
                ___flmul@sign 000F                  ___flmul@temp 001A                  ___flmul@prod 0016  
                        ?_ISR 0001                   LCD_Char@dat 0009                          ?_PWM 0001  
                        ISR@i 0001                  ___fltol@exp1 000C  __end_of_PWM2_OutputStatusGet 4C3C  
                        l1014 27F4                          l1030 433C                          l1104 4780  
                        l1026 4334                          ?_abs 0009                          l1116 4496  
                        l1124 4A20                          l1044 37E0                          l1060 49E0  
                        l1070 41C2                          l1142 4910                          l1038 3936  
                        l1127 4C4E                          l3000 3080                          l3010 30FE  
                        l3002 309E                          l1075 4AEA                          l3100 4256  
                        l3020 3194                          l3012 3128                          l3004 30AE  
                        l1084 3B48                          l3110 427C                          l3102 4258  
                        l1078 4B02                          l3022 31A2                          l3014 315E  
                        l3006 30CE                          l1087 3A8C                          l3104 425E  
                        l3120 4356                          l3032 322A                          l3040 3272  
                        l3024 31B4                          l3016 316C                          l3008 30DE  
                        l2410 495E                          l3106 4264                          l3130 438A  
                        l3122 435A                          l3114 433E                          l3050 32D4  
                        l3042 328C                          l3034 3236                          l3026 31D2  
                        l3018 318A                          l3210 3F26                          l3202 3EE6  
                        l1098 482C                          l2420 496A                          l2412 4960  
                        l3108 4274                          l3140 43C4                          l3132 4392  
                        l3124 4368                          l3116 4340                          l3060 32FE  
                        l3052 32E4                          l3044 32A0                          l3036 3244  
                        l3028 3200                          l3220 3F56                          l3212 3F34  
                        l3204 3F10                          l2430 497E                          l2422 4976  
                        l2414 4964                          l2406 4958                          l3070 41C4  
                        l3134 43A0                          l3142 43CA                          l3126 4370  
                        l3118 434E                          l3150 4498                          l3054 32F2  
                        l3046 32BA                          l3038 326E                          l3230 3F80  
                        l3222 3F60                          l3206 3F12                          l3310 3B00  
                        l3302 3A40                          l2440 4988                          l2432 4980  
                        l2424 4978                          l2416 4966                          l2408 495A  
                        l3080 41EE                          l3072 41C6                          l3144 43DA  
                        l3136 43B6                          l3128 4382                          l3240 46C2  
                        l3160 4538                          l3152 44C6                          l3056 32F4  
                        l3048 32CA                          l2600 2A1C                          l3064 4912  
                        l3232 3F90                          l3208 3F22                          l3312 3B28  
                        l3304 3A7C                          l3320 473C                          l3400 207E  
                        l2450 4996                          l2442 498A                          l2434 4982  
                        l2426 497A                          l2418 4968                          l3330 4882  
                        l3090 421C                          l3082 41F6                          l3074 41D4  
                        l3146 43E2                          l3138 43BE                          l3250 4716  
                        l3242 46D0                          l3162 453E                          l3154 44D6  
                        l3170 4000                          l3058 32FA                          l2610 2A5C  
                        l2602 2A2A                          l3066 4922                          l3234 3FA0  
                        l3218 3F4C                          l3314 3B38                          l3306 3AB0  
                        l3322 474C                          l3410 20BA                          l3402 2086  
                        l2452 499A                          l2444 498E                          l2436 4984  
                        l2428 497C                          l3340 489A                          l3332 488E  
                        l3092 4224                          l3084 41FA                          l3076 41DC  
                        l3252 4AD0                          l3244 46E4                          l3156 4504  
                        l3180 406C                          l3172 402E                          l2620 2A8C  
                        l2612 2A5E                          l2604 2A2C                          l3236 3FB0  
                        l3228 3F74                          l3260 4124                          l3308 3AEC  
                        l3324 4750                          l3500 2450                          l3420 2100  
                        l3404 2096                          l3412 20BE                          l2446 4992  
                        l2438 4986                          l3342 48B0                          l3094 4232  
                        l3086 4202                          l3078 41E0                          l3254 4ADE  
                        l3246 46F4                          l3350 3D82                          l3158 4514  
                        l3182 40BC                          l3174 403E                          l3166 3FC2  
                        l3190 4A78                          l2710 2C62                          l2702 2C2A  
                        l2630 2AB4                          l2622 2A8E                          l2606 2A3C  
                        l2614 2A64                          l3270 4176                          l3262 414C  
                        l3326 4762                          l3318 4728                          l3502 2464  
                        l3510 255A                          l3422 2108                          l3414 20E4  
                        l3430 2142                          l3406 20A6                          l2448 4994  
                        l3344 48B4                          l3096 4238                          l3088 4214  
                        l3248 46F8                          l3360 3DBC                          l3352 3D92  
                        l2800 3310                          l3184 40C2                          l3176 404C  
                        l3168 3FF0                          l3192 4A88                          l2712 2C66  
                        l2704 2C3A                          l2720 2C86                          l2640 2AEC  
                        l2632 2AC4                          l2624 2A94                          l2616 2A74  
                        l2608 2A4C                          l3264 4158                          l3256 40C6  
                        l3328 4766                          l3280 48D4                          l3600 29C2  
                        l3520 2626                          l3512 2578                          l3504 24C8  
                        l3440 218C                          l3432 2168                          l3424 211C  
                        l3416 20F6                          l3408 20B2                          l3338 4896  
                        l3098 424E                          l3370 3E0E                          l3362 3DC8  
                        l3354 3D98                          l3346 3D42                          l2810 334C  
                        l2802 331C                          l3178 405E                          l2722 2CAC  
                        l2730 2D02                          l2714 2C74                          l2706 2C48  
                        l2650 2B18                          l2642 2AFE                          l2634 2AD4  
                        l2626 2AA2                          l2618 2A7A                          l3274 41BA  
                        l3258 40E6                          l3290 3938                          l3282 47D8  
                        l3602 29D2                          l3530 26D6                          l3522 2636  
                        l3514 25AC                          l3506 2520                          l3450 21BE  
                        l3434 217A                          l3426 2126                          l3418 20FA  
                        l3610 4286                          l3380 3E76                          l3372 3E14  
                        l3364 3DD0                          l3356 3DA8                          l3348 3D66  
                        l2820 337A                          l2812 335C                          l2804 332A  
                        l3188 4A62                          l2740 2D56                          l2732 2D28  
                        l2724 2CE0                          l2716 2C76                          l2708 2C56  
                        l2660 2B2C                          l2652 2B1C                          l2644 2B0C  
                        l2636 2AD6                          l2628 2AA4                          l3196 3EBC  
                        l3268 4164                          l3292 3958                          l3284 47E6  
                        l3604 29EA                          l3540 273A                          l3532 270A  
                        l3524 2646                          l3516 25DE                          l3508 2554  
                        l3460 227C                          l3436 217E                          l3620 4300  
                        l3612 428E                          l3700 390E                          l3710 4B98  
                        l3630 4BBA                          l2590 4416                          l3382 3E86  
                        l3366 3DD6                          l3374 3E30                          l3358 3DB4  
                        l2902 35CE                          l2910 3616                          l2830 33B0  
                        l2822 3380                          l2814 335E                          l2806 332C  
                        l2750 2D80                          l2742 2D64                          l2734 2D38  
                        l2726 2CE2                          l2718 2C80                          l2670 2B40  
                        l2662 2B30                          l2654 2B20                          l2646 2B10  
                        l2638 2ADC                          l3198 3ED2                          l3294 39AE  
                        l3286 47FA                          l3278 48CC                          l3606 29F2  
                        l3550 27EA                          l3542 273E                          l3534 271E  
                        l3526 267A                          l3518 25F4                          l3470 233C  
                        l3462 22AE                          l3454 2204                          l3438 2184  
                        l3390 202A                          l3614 42B6                          l3622 4308  
                        l3712 4B9A                          l3632 4BBC                          l3624 4BB0  
                        l3720 45E6                          l2592 4432                          l2584 43EC  
                        l3384 3E8C                          l3376 3E4A                          l3368 3E08  
                        l2920 367A                          l2912 3630                          l2904 35DA  
                        l2840 33EE                          l2832 33C0                          l2824 338E  
                        l2808 333C                          l2816 3364                          l2752 2D90  
                        l2744 2D66                          l2728 2CF2                          l2680 2B94  
                        l2672 2B44                          l2664 2B34                          l2656 2B24  
                        l2648 2B14                          l3296 39C2                          l3560 282E  
                        l3552 2806                          l3544 2746                          l3528 26D0  
                        l3536 2722                          l3480 23D2                          l3464 22EC  
                        l3456 220A                          l3448 21A4                          l3392 203E  
                        l3616 42BE                          l3640 36D0                          l3800 4AA2  
                        l3714 4B9C                          l3706 4B8A                          l3634 4BBE  
                        l3626 4BB6                          l3722 45EA                          l3810 4658  
                        l2594 4464                          l2586 43FC                          l3386 3E9E  
                        l3378 3E5C                          l2922 367E                          l2914 3646  
                        l2906 35E8                          l2842 33FE                          l2850 341E  
                        l2834 33C2                          l2826 3390                          l2818 3374  
                        l2762 2DF0                          l2770 2E46                          l2746 2D74  
                        l2738 2D4C                          l2754 2D92                          l2690 2BD8  
                        l2682 2BA4                          l2674 2B48                          l2666 2B38  
                        l2658 2B28                          l3298 39D0                          l3562 2836  
                        l3554 2814                          l3570 2856                          l3546 2752  
                        l3538 2732                          l3490 2406                          l3482 23DA  
                        l3466 2300                          l3474 237C                          l3458 223E  
                        l3394 204C                          l3618 42DE                          l3650 3726  
                        l3642 36DE                          l3730 499E                          l3802 4AAA  
                        l3716 4B9E                          l3708 4B90                          l3740 4C3C  
                        l3628 4BB8                          l3724 4618                          l3820 4542  
                        l3812 4668                          l2588 440C                          l2924 368C  
                        l2916 3660                          l2908 3612                          l2860 345C  
                        l2852 342E                          l2844 3406                          l2828 33A0  
                        l2836 33C8                          l2940 2EE0                          l2780 2E9C  
                        l2772 2E56                          l2764 2DFC                          l2756 2DB0  
                        l2748 2D7C                          l2692 2BDA                          l2684 2BBA  
                        l2668 2B3C                          l2676 2B4C                          l3580 28DC  
                        l3572 2868                          l3564 2846                          l3556 2824  
                        l3548 27CA                          l3492 241E                          l3484 23E2  
                        l3476 23B6                          l3468 2334                          l3396 2050  
                        l3660 379A                          l3652 3730                          l3644 36E2  
                        l3636 36A0                          l3732 49A6                          l3804 4AB2  
                        l3900 3D16                          l3718 4BA0                          l3726 461C  
                        l3750 4A46                          l3742 4A24                          l3830 458A  
                        l3822 4552                          l3814 4676                          l2926 3692  
                        l2918 3678                          l2870 34A2                          l2862 346C  
                        l2854 342E                          l2846 340A                          l2838 33D8  
                        l2950 2F18                          l2942 2EE2                          l2782 2E9E  
                        l2774 2E66                          l2766 2E0A                          l2758 2DC6  
                        l2694 2BE4                          l2686 2BC6                          l2678 2B78  
                        l2598 2A10                          l3590 2956                          l3582 2910  
                        l3574 287A                          l3566 284A                          l3558 2828  
                        l3494 2430                          l3486 23E6                          l3478 23C6  
                        l3398 2074                          l3670 37D8                          l3654 3752  
                        l3646 370A                          l3638 36C8                          l3734 49B6  
                        l3806 4AC2                          l3902 3D2C                          l3910 4B52  
                        ?_pad 0011                          l3752 4A4E                          l3744 4A24  
                        l3760 4BEE                          l3728 4C4A                          l3840 45CE  
                        l3832 4594                          l3824 4568                          l3816 4686  
                        l2792 49E2                          l2928 3694                          l2880 34F0  
                        l2872 34B6                          l2864 347C                          l2960 2F44  
                        l2952 2F28                          l2944 2EF2                          l2936 2EC6  
                        l2784 2EA4                          l2776 2E86                          l2768 2E44  
                        l2696 2C06                          l2688 2BCA                          l3592 295E  
                        l3584 2918                          l3576 287E                          l3568 2850  
                        l3488 23F8                          l3496 2438                          l3680 385C  
                        l3664 37AE                          l3656 3774                          l3648 3712  
                        l3736 49D8                          l3912 4B56                          l3904 4B34  
                        l3842 4B5E                          l3754 4A54                          l3746 4A34  
                        l3770 4BCC                          l3762 4BF0                          l3834 45B2  
                        l3826 4570                          l3818 4690                          l2794 49EE  
                        l2890 3538                          l2882 3500                          l2874 34C4  
                        l2866 348C                          l2858 3442                          l2970 2F9A  
                        l2962 2F54                          l2954 2F2E                          l2946 2F02  
                        l2938 2ED2                          l2786 2EB2                          l2778 2E96  
                        l2698 2C16                          l3594 296C                          l3578 2884  
                        l3586 291C                          l3498 2440                          l3674 37E6  
                        l3666 37B8                          l3658 3790                          l3850 3B5E  
                        l3906 4B38                          l3844 4B6A                          l3748 4A3C  
                        l3780 4B04                          l3772 4BD6                          l3764 4BF2  
                        l3756 4BE8                          l3836 45C2                          l3828 457C  
                        l2796 49FC                          l2892 3546                          l2884 3512  
                        l2876 34D0                          l2868 3492                          l2980 2FD8  
                        l2972 2FAA                          l2964 2F64                          l2956 2F34  
                        l2948 2F12                          l2788 2EB4                          l3596 299C  
                        l3588 293A                          l3684 388E                          l3676 3804  
                        l3668 37D2                          l3860 3B76                          l3852 3B68  
                        l3908 4B3C                          l3846 4B6C                          l3782 4B0C  
                        l3774 4BE4                          l3766 4BF4                          l3758 4BEC  
                        l3838 45C4                          l2798 4A00                          l2886 3528  
                        l2894 3558                          l2878 34EE                          l2990 3032  
                        l2982 2FF2                          l2966 2F74                          l2958 2F42  
                        l3598 29AA                          l3694 38E4                          l3686 38A4  
                        l3678 382A                          l3870 3B88                          l3862 3B78  
                        l3854 3B6C                          l3776 4BFE                          l3784 4B1A  
                        l3768 4C44                          l2896 3576                          l2888 352E  
                        l2992 3040                          l2984 2FFE                          l2976 2FBE  
                        l2968 2F7A                          l3688 38B2                          l3696 3902  
                        l3880 3C1E                          l3872 3B94                          l3864 3B7C  
                        l3856 3B70                          l3848 3B4A                          l3778 4C02  
                        l3786 4B28                          l3794 4C28                          l2898 35A4  
                        l2994 3050                          l2986 301A                          l2978 2FCE  
                        l3890 3C5A                          l3882 3C2E                          l3874 3C02  
                        l3866 3B80                          l3858 3B74                          l3788 4B2C  
                        l2996 3060                          l2988 3026                          l3892 3C6E  
                        l3884 3C3C                          l3876 3C04                          l3868 3B84  
                        l2998 3070                          l3798 4A9A                          l3894 3C76  
                        l3886 3C46                          l3878 3C08                          l3896 3CF4  
                        l3888 3C54                          l3898 3D12                          STR_1 2010  
                        STR_2 2001                          STR_3 2016                          STR_4 2023  
                        STR_5 2026                          STR_6 2026                          STR_7 201B  
                        u2100 43FC                          u2101 43F8                          u2110 440C  
                        u2111 4408                          u3000 424E                          u2120 4432  
                        u2200 2AC4                          u3001 424A                          u2121 442E  
                        u2201 2AC0                          u3010 4274                          u2130 4464  
                        u2210 2AFE                          u3011 4270                          u2131 4460  
                        u2211 2AFA                          u3020 434E                          u3100 4538  
                        u2300 2C16                          u2220 2B0C                          u2140 2A2A  
                        u3021 434A                          u3101 4534                          u2301 2C12  
                        u2221 2B08                          u2141 2A26                          u3030 4368  
                        u3110 3FF0                          u2310 2C48                          u2230 2B78  
                        u2150 2A3C                          u3031 4364                          u3111 3FEC  
                        u2311 2C44                          u2231 2B74                          u2151 2A38  
                        u3040 4382                          u3120 402E                          u2400 2D90  
                        u2320 2C56                          u2240 2B90                          u2160 2A4C  
                        u3200 3F48                          u4000 49D8                          _LATD 3FBD  
                        u3041 437E                          u3121 402A                          u2401 2D8C  
                        u2321 2C52                          u2241 2B8A                          u2161 2A48  
                        u3201 3F44                          u4001 49D4                          u4010 4A34  
                        u3050 43A0                          u3130 404C                          u2410 2DA0  
                        u2330 2C74                          u2250 2B92                          u2170 2A8C  
                        u3210 3F70                          u4011 4A30                          u3051 439C  
                        u3131 4048                          u2411 2D9C                          u2331 2C70  
                        u2171 2A88                          u3211 3F6C                          u4020 4B1A  
                        u3060 43B6                          u3140 406C                          u2500 2E86  
                        u2420 2DB0                          u2340 2CAC                          u2260 2BBA  
                        u2180 2AA2                          u3220 3F90                          u3300 4176  
                        u4021 4B16                          u3061 43B2                          u3141 4068  
                        u2501 2E82                          u2421 2DAC                          u2341 2CA8  
                        u2261 2BB6                          u2181 2A9E                          u3221 3F8C  
                        u3301 4172                          u4101 3B54                          u3070 43DA  
                        u3150 40BC                          u2510 2E96                          u2430 2DC6  
                        u2350 2CF2                          u2270 2BD8                          u2190 2AB4  
                        u3230 3FA0                          u3071 43D6                          u3151 40B8  
                        u2511 2E92                          u2431 2DC2                          u2351 2CEE  
                        u2271 2BD4                          u2191 2AB0                          u3231 3F9C  
                        u4040 4C38                          u3240 46D0                          u2600 33EE  
                        u3080 44C6                          u3160 4A78                          u2520 2EB2  
                        u2440 2DDC                          u2360 2D28                          u2280 2BF8  
                        u3320 41B0                          u3400 3A3C                          u4120 3C54  
                        u4041 4C32                          u3241 46CC                          u2601 33EA  
                        u3081 44C2                          u3161 4A74                          u2521 2EAE  
                        u2441 2DD8                          u2361 2D24                          u2281 2BF4  
                        u3321 41AA                          u3401 3A38                          u4121 3C50  
                        u4050 4676                          u2530 4A20                          u3250 4716  
                        u2610 342E                          u3090 4504                          u2450 2DF0  
                        u2370 2D38                          u2290 2C06                          u3170 3ED2  
                        u3330 41B2                          u3410 3A60                          u4130 3C6E  
                        _T2PR 3FAB                          u4035 4B1C                          u4051 4672  
                        u2531 4A1C                          u3251 4712                          u2611 342A  
                        u3091 4500                          u2451 2DEC                          u2371 2D34  
                        u2291 2C02                          u3171 3ECE                          u3315 4188  
                        u4131 3C6A                          u4115 3C44                          u4060 46B0  
                        u3260 4ADE                          u3500 3D54                          u2700 35A4  
                        u2620 34A2                          u2540 332A                          u2460 2E0A  
                        u2380 2D64                          u3180 3F06                          u3420 3A7C  
                        u3340 4910                          u4116 3C46                          u4061 46AC  
                        u3261 4ADA                          u2701 35A0                          u2621 349E  
                        u2541 3326                          u2461 2E06                          u2381 2D60  
                        u3421 3A78                          u3341 490C                          u4046 4C3A  
                        u4070 4568                          u3510 3D66                          u2710 35BA  
                        u2630 34C4                          u2550 333C                          u2470 2E44  
                        u2390 2D74                          u3190 3F34                          u3270 4106  
                        u3430 3AD0                          u3350 47E6                          u4071 4564  
                        u3511 3D62                          u2711 35B6                          u2631 34C0  
                        u2551 3338                          u2471 2E40                          u2391 2D70  
                        u3191 3F30                          u3415 3A56                          u3351 47E2  
                        u4080 458A                          u3520 3D92                          u2720 35CE  
                        u2640 34EE                          u2560 334C                          u2800 2F42  
                        u2480 2E56                          u3280 4124                          u3440 3AEC  
                        u3360 3980                          u3600 20A6                          u4081 4586  
                        u3521 3D8E                          u2721 35CA                          u2641 34EA  
                        u2561 3348                          u2801 2F3E                          u2481 2E52  
                        u3185 3EFC                          u3281 4120                          u3441 3AE8  
                        u3601 20A2                          u4090 45B2                          u3530 3DA8  
                        u2730 35E8                          u2650 3512                          u2570 338E  
                        u2810 2F54                          u2490 2E66                          u3290 414C  
                        u3450 3B28                          u3370 39AE                          u3610 20E4  
                        u4091 45AE                          u3531 3DA4                          u2731 35E4  
                        u2651 350E                          u2571 338A                          u2811 2F50  
                        u2491 2E62                          u3291 4148                          u3275 40FC  
                        u3451 3B24                          u3435 3AC6                          u3371 39AA  
                        u3611 20E0                          u3540 3E4A                          u2740 3630  
                        u2660 3528                          u2580 33A0                          u2900 3216  
                        u2820 2F64                          u3380 39D0                          u3460 4780  
                        u3700 23AE                          u3620 20F6                          u4157 4B92  
                        u3541 3E46                          u2741 362C                          u2661 3524  
                        u2581 339C                          u2901 3212                          u2821 2F60  
                        u3381 39CC                          u3365 3976                          u3461 477C  
                        u3701 23AA                          u3621 20F2                          u3470 48B0  
                        u3550 3E5C                          u2750 3660                          u2670 3546  
                        u2590 33B0                          u2910 322A                          u2830 2F9A  
                        u3710 23C6                          u3630 2168                          u3471 48AC  
                        u3551 3E58                          u2751 365C                          u2671 3542  
                        u2591 33AC                          u2911 3226                          u2831 2F96  
                        u3711 23C2                          u3631 2164                          u3480 48CA  
                        u3560 3E76                          u2760 368C                          u2680 3566  
                        u2920 3244                          u2840 2FAA                          u3800 271E  
                        u3720 23F8                          u3640 217A                          u3481 48C6  
                        u3561 3E72                          u2761 3688                          u2681 3562  
                        u2921 3240                          u2841 2FA6                          u3801 271A  
                        u3721 23F4                          u3641 2176                          u3570 3E86  
                        u3490 3D52                          u2690 3576                          u2930 328C  
                        u2850 3148                          u2770 2EE0                          u3810 27CA  
                        u3730 2406                          u3650 21F0                          u3571 3E82  
                        u3491 3D4C                          u2691 3572                          u2931 3288  
                        u2771 2EDC                          u3395 39E4                          u3811 27C6  
                        u3731 2402                          u3651 21EC                          u2940 32BA  
                        u2860 31A2                          u2780 2EF2                          u3396 39EE  
                        u3820 2806                          u3740 2430                          u3660 227C  
                        u3580 204C                          u3900 42B6                          u2941 32B6  
                        u2861 319E                          u2781 2EEE                          u3397 39FE  
                        u3821 2802                          u3741 242C                          u3661 2278  
                        u3581 2048                          u3901 42B2                          u2950 32F2  
                        u2870 31C2                          u2790 2F02                          u3830 2814  
                        u3750 2578                          u3670 22AE                          u3590 2096  
                        u3910 4334                          u2951 32EE                          u2871 31BE  
                        u2855 313E                          u2791 2EFE                          u3831 2810  
                        u3751 2574                          u3671 22AA                          u3591 2092  
                        u3911 4330                          u2960 41D4                          u2880 31D2  
                        u3840 2868                          u3760 25DE                          u3680 22EC  
                        u3920 36C8                          u2961 41D0                          u2881 31CE  
                        u3841 2864                          u3761 25DA                          u3681 22E8  
                        u3921 36C4                          u2970 41EE                          u2890 3200  
                        u3850 293A                          u3770 2626                          u3690 2378  
                        u3930 370A                          u2971 41EA                          u2891 31FC  
                        u3851 2936                          u3771 2622                          u3691 2374  
                        u3931 3706                          u2980 4214                          u3860 2956  
                        u3780 2636                          u3940 3752                          u2981 4210  
                        u3861 2952                          u3781 2632                          u3941 374E  
                        u2990 4232                          u3870 29BC                          u3790 26D0  
                        u3950 3774                          u2991 422E                          u3871 29B6  
                        u3791 26CC                          u3951 3770                          u3880 29BE  
                        u3960 3826                          u3961 3822                          u3970 4614  
                        u3890 29D2                          u3891 29CE                          u3980 4646  
                        u3990 4656                          u3991 4652                          u3977 4606  
                        u3987 4638                          _TMR2 3FAA                          abs@a 0009  
                        _dbuf 0100                          _labs 47D8                          _main 4B34  
                        _dtoa 3D42                          _prec 00D1                          pad@i 0017  
                        pad@p 0014                          fsr0h 3FEA                          fsr1h 3FE2  
                        indf0 3FEF                          fsr2h 3FDA                          fsr0l 3FE9  
                        indf2 3FDF                          fsr1l 3FE1                          fsr2l 3FD9  
               ___fpclassifyf 40C6                          prodh 3FF4                          prodl 3FF3  
                        start 00AE               __end_of_MSdelay 48CC               ___fldiv@new_exp 0014  
               _LCD_String_xy 4A22                  ___param_bank 0000                         ??_ISR 0001  
                       ??_PWM 0052                         ??_abs 000B                         ??_pad 0016  
            __end_of_LCD_Char 4BCC       __end_of_PWM2_Initialize 4C14              __end_of_LCD_Init 4B88  
               ___fltol@sign1 000B                         ?_labs 0003                         _ADCAP 3EF5  
             __end_of___fladd 2EC6                         ?_main 0001                         ?_dtoa 0019  
                       _ADCLK 3EFF                         _ADPCH 3EF1               __end_of___fldiv 36A0  
                       _ADREF 3EFD               __end_of___awdiv 4286               __end_of___flneg 4A9A  
                       STR_10 201F               __end_of___awmod 43EC               __end_of___flmul 3310  
             __end_of___flsub 4958               __end_of___fltol 3FC2               __end_of___lldiv 45E6  
             ___awdiv@divisor 0005                         _T2CON 3FAC                         _LATC3 1FDE3  
                       _LATC4 1FDE4                         _LATC5 1FDE5                         _T2HLT 3FAD  
                       _T2TMR 3FAA                         _T2RST 3FAF                         i2l162 4848  
                       i2l163 487A                         i2l164 4880               ___awdiv@counter 0007  
                vfpfcnvrt@fmt 0039                         _PORTB 3FCB                         _TRISB 3FC3  
                       _TRISC 3FC4                         _TRISD 3FC5                         _TRISE 3FC6  
         ___lmul@multiplicand 0007                         _flags 005C                   ?_TMR2_Start 0001  
         read_prec_or_width@c 0007           read_prec_or_width@n 0008                         _fputc 43EC  
                       _fputs 49E2                         labs@a 0003                         pad@fp 0011  
                       _width 00CF                         _putch 4C4E                         dtoa@d 001A  
                       dtoa@i 0023                         dtoa@p 0020                         dtoa@s 0022  
                       dtoa@w 001E                         tablat 3FF5                         plusw1 3FE3  
                       plusw2 3FDB                         status 3FD8               __end_of_sprintf 4AD0  
              ?___fpclassifyf 0003               _TMR2_StartTimer 4C44                ?_LCD_String_xy 000C  
      ??_PWM_Output_D8_Enable 0003               __initialization 4782                  __end_of_labs 482E  
                __end_of_main 4B5E                  __end_of_dtoa 3EBC       __end_of_TMR2_Initialize 4BFE  
                  _Initialize 4958                  PWM@pwmStatus 00B5                        ??_labs 0007  
                      ??_main 0054                        ??_dtoa 001C             __end_of_LCD_Clear 4C44  
               __activetblptr 0003    __end_of_read_prec_or_width 433E                        _ADACQH 3EF4  
                      _ADACQL 3EF3                        ?_fputc 0003                        ?_fputs 000B  
                      _ADRESH 3EF0                        _ADRESL 3EEF                        _ADPREH 3EF7  
                      _ADPREL 3EF6                        _CCPR2H 3F79                        _CCPR2L 3F78  
            ___awdiv@dividend 0003                        ?_putch 0001                        _ANSELB 3A50  
                      _ANSELC 3A60                        _ANSELD 3A70                        _ANSELE 3A80  
            LCD_String_xy@msg 000D              LCD_String_xy@pos 000C              LCD_String_xy@row 000F  
                      _RB3PPS 3A0B                     ??_MSdelay 0005                        i2l2530 485A  
                      i2l2522 4830                        i2l2532 485E                        i2l2524 4840  
                      _OSCFRQ 39DF                  _CCPTMRS0bits 3F5E                  vfprintf@cfmt 0045  
                      ___flge 3FC2                        ___fleq 4498                        ___lmul 4658  
                   ??___fladd 000B                     ??___fldiv 000B                     ??___awdiv 0007  
                   ??___flneg 0007                     ??___awmod 0007                     ??___flmul 000B  
                   ??___flsub 0024                     ??___fltol 0007                     ??___lldiv 0017  
                      _efgtoa 202A                        _floorf 3938                        _memcpy 4728  
            ?_PWM2_Initialize 0001          _PWM2_OutputStatusGet 4C28          read_prec_or_width@ap 0004  
                      clear_0 47AA                        clear_1 47C0              ___awdiv@quotient 0009  
             ___awmod@divisor 0005                        isa$std 0001               ___awmod@counter 0007  
                      pad@buf 0012                        dtoa@fp 0019                        _strcpy 48CC  
                      fputc@c 0003                        fputs@c 000E                        fputs@i 000F  
                      fputs@s 000B               ___fpclassifyf@e 000B               ___fpclassifyf@u 000D  
             ___fpclassifyf@x 0003                  __mediumconst 2000                        tblptrh 3FF7  
                      tblptrl 3FF6                        tblptru 3FF8                        putch@c 0001  
            __end_of_vfprintf 49E2       __end_of_TMR2_StartTimer 4C4A                     ??_sprintf 0046  
                  ___flge@ff1 001C                    ___flge@ff2 0020               ??___fpclassifyf 0007  
                  ___fleq@ff1 0003                    ___fleq@ff2 0007                     ?_LCD_Char 0001  
                  __accesstop 0060       __end_of__initialization 47D2                     ?_LCD_Init 0001  
             ??_LCD_String_xy 000F                    ___flneg@f1 0003    __end_of_PWM2_LoadDutyValue 4B34  
               ___rparam_used 0001                    ___fltol@f1 0003                __pcstackCOMRAM 0001  
                __pidataBANK0 4C14                ivt0x8_undefint 00AC                 __end_of_fputc 4498  
               __end_of_fputs 4A22         ?_PWM2_OutputStatusGet 0001                   ?_Initialize 0001  
               __end_of_putch 4C50              ?_TMR2_Initialize 0001                  ??_LCD_String 000C  
                     ??_fputc 0006                       ??_fputs 000E                       ??_putch 0003  
                  __pbssBANK0 00CF                    __pbssBANK1 0100                    ??_LCD_Char 0009  
                  ??_LCD_Init 000A            __end_of_LCD_String 4658                       IVTBASEH 3FD6  
                     IVTBASEL 3FD5                       IVTBASEU 3FD7                       ?___flge 001C  
                     ?___fleq 0003                       ?___lmul 0003                     PWM@F16999 00BB  
                     ?_efgtoa 0030                       _CCP2CON 3F7A                       ?_floorf 001C  
                     ?_memcpy 0003                ___lmul@product 000B                       ?_strcpy 0003  
                     _PPSLOCK 3ABF                  ??_TMR2_Start 0003              ?_TMR2_StartTimer 0001  
                     _MSdelay 4882                 LCD_String@msg 000A                       __Hparam 0000  
                     __Lparam 0000        ??_PWM2_OutputStatusGet 0003                       ___fladd 2A10  
                     ___fldiv 3310                       ___awdiv 41C4                       ___flneg 4A62  
                     ___awmod 433E                       ___flmul 2EC6                       ___flsub 4912  
                     ___fltol 3EBC                       ___lldiv 4542                     ?_vfprintf 0042  
                __psmallconst 2000            __end_of_TMR2_Start 4C4E                       __pcinit 4782  
                     __ramtop 2000                       __ptext0 4B34                       __ptext1 3B4A  
                     __ptext2 4A9A                       __ptext3 499E                       __ptext4 36A0  
                     __ptext5 4286                       __ptext6 202A                       __ptext7 48CC  
                     __ptext8 4728                       __ptext9 47D8                     _T2CONbits 3FAC  
       read_prec_or_width@fmt 0003              ___awmod@dividend 0003                     _IOCCFbits 3A67  
                     efgtoa@c 0035                       efgtoa@d 006B                       efgtoa@e 006F  
                     efgtoa@f 0031                       efgtoa@g 0084                       efgtoa@h 0079  
                     efgtoa@i 0077                       efgtoa@l 007D                       efgtoa@m 006D  
                     efgtoa@n 0082                       efgtoa@p 0062                       efgtoa@t 0064  
                     efgtoa@u 0088                       efgtoa@w 0071                     _IOCCPbits 3A65  
                   _LCD_Clear 4C3C                       _sprintf 4A9A          end_of_initialization 47D2  
                     floorf@e 002A                       floorf@m 0026                       floorf@u 002C  
                     floorf@x 001C                       memcpy@d 0009                       memcpy@n 0007  
                     memcpy@s 000B                       fputc@fp 0005                LCD_Command@cmd 0009  
                     fputs@fp 000D            _read_prec_or_width 4286               ___lldiv@divisor 0013  
             ___lldiv@counter 001B             __end_of_vfpfcnvrt 3938                    efgtoa@mode 0069  
                  efgtoa@sign 0081                       postdec1 3FE5                       postdec2 3FDD  
         ?_read_prec_or_width 0003                       postinc0 3FEE                       postinc1 3FE6  
                     postinc2 3FDE              vfpfcnvrt@convarg 003C                    ??_vfprintf 0045  
                     strcpy@d 0007                     _PORTBbits 3FCB                     _PORTEbits 3FCE  
                 ___fladd@grs 0012                     _TRISAbits 3FC2                     _TRISBbits 3FC3  
                  ?_LCD_Clear 0001          ??_read_prec_or_width 0005                   ___fldiv@grs 0016  
                 ___fldiv@rem 000F                   ___flmul@grs 0010                   _CCP2CONbits 3F7A  
               ??_LCD_Command 0009                __end_of___flge 40C6                __end_of___fleq 4542  
              __end_of___lmul 46C2                  ??_Initialize 0003                   vfpfcnvrt@ap 003A  
                 vfpfcnvrt@cp 0041                   vfpfcnvrt@fp 0038                __end_of_efgtoa 2A10  
          _PWM2_LoadDutyValue 4B04                __end_of_floorf 3B4A                __end_of_memcpy 4782  
                  floorf@F521 0054                __end_of_strcpy 4912           start_initialization 4782  
                 __end_of_ISR 4882                   __end_of_PWM 3D42           ?_PWM2_LoadDutyValue 0003  
                 __end_of_abs 4B04                   __end_of_pad 4728                    ivt0x8_base 0008  
       __end_of___fpclassifyf 41C4            __end_of_Initialize 499E         __end_of_LCD_String_xy 4A62  
        ??_PWM2_LoadDutyValue 0005                   vfprintf@fmt 0043                      ??___flge 0024  
                    ??___fleq 000B   PWM2_LoadDutyValue@dutyValue 0003                      ??___lmul 000B  
                    ??_efgtoa 0036                   __pdataBANK0 00BB                      ??_floorf 0020  
                    ??_memcpy 0009                      ??_strcpy 0006                     ___fladd@a 0007  
                   ___fladd@b 0003                     ___fldiv@a 0007                     ___fldiv@b 0003  
         __end_of_LCD_Command 4BAE                     ___flmul@a 0007                     ___flmul@b 0003  
                 __pbssCOMRAM 0054                     ___flsub@a 0020                     ___flsub@b 001C  
               __pcstackBANK0 0060                   ??_LCD_Clear 000A                      ?_MSdelay 0003  
                 _efgtoa$1333 0066                     _dtoa$1302 001C                      ?___fladd 0003  
                    ?___fldiv 0003                      ?___awdiv 0003                      ?___flneg 0003  
                    ?___awmod 0003                      ?___flmul 0003                      ?___flsub 001C  
                    ?___fltol 0003                      ?___lldiv 000F                      PWM@dcVal 00A1  
                 __smallconst 2000                      PWM@index 00B9         LCD_String_xy@location 0010  
                    ?_sprintf 008C                      _T2CLKCON 3FAE                      MSdelay@i 0005  
                    MSdelay@j 0007                      _LCD_Char 4BAE             ??_PWM2_Initialize 0003  
                    _LCD_Init 4B5E                      _PIE0bits 3990                      i2u205_40 4840  
                    i2u205_41 483C                      i2u206_40 4858                      i2u206_41 4852  
                    i2u207_45 485A                      i2u208_40 487A                      i2u208_41 4876  
                    _PIR4bits 39A4                   _LCD_Command 4B88                     _vfpfcnvrt 36A0  
                  _ADCON0bits 3EF8                      _WPUCbits 3A61  __end_of_PWM_Output_D8_Enable 4BE8  
                  vfpfcnvrt@c 0040                   _INTCON0bits 3FD2             ___lmul@multiplier 0003  
                   copy_data0 4796                    PWM@percent 0092             ??_TMR2_Initialize 0003  
                    __Hrparam 0000                     memcpy@tmp 000D                    vfprintf@ap 0044  
                    __Lrparam 0000                    vfprintf@fp 0042                    ?_vfpfcnvrt 0038  
                  _ANSELAbits 3A40            ___fpclassifyf@F465 0058                    sprintf@fmt 008D  
                    __pivt0x8 0008                      __ptext10 3938                      __ptext11 40C6  
                    __ptext20 3D42                      __ptext12 3EBC                      __ptext21 46C2  
                    __ptext13 4912                      __ptext30 4C44                      __ptext22 49E2  
                    __ptext14 2A10                      __ptext31 4C4A                      __ptext23 43EC  
                    __ptext15 4A62                      __ptext40 4C3C                      __ptext32 4BE8  
                    __ptext24 4C4E                      __ptext16 2EC6                      __ptext41 4B5E  
                    __ptext33 4BCC                      __ptext25 4AD0                      __ptext17 3FC2  
                    __ptext42 4B88                      __ptext34 4C28                      __ptext26 433E  
                    __ptext18 4498                      __ptext43 4882                      __ptext35 4B04  
                    __ptext27 41C4                      __ptext19 3310                      __ptext44 4958  
                    __ptext36 4BFE                      __ptext28 4658                      __ptext45 4830  
                    __ptext37 4A22                      __ptext29 4542                      __ptext38 45E6  
                    __ptext39 4BAE                    strcpy@dest 0003                    MSdelay@val 0003  
                    efgtoa@fp 0030                      efgtoa@ne 0060                      efgtoa@pp 0068  
                    efgtoa@ou 0073                      isa$xinst 0000                      _vfprintf 499E  
           ??_TMR2_StartTimer 0003                    _LCD_String 45E6                   _OSCSTATbits 39DC  
                    memcpy@d1 0003                      memcpy@s1 0005                      intlevel2 0000  
                   sprintf@ap 0046              ___lldiv@dividend 000F                     strcpy@src 0005  
                 _PPSLOCKbits 3ABF                   efgtoa@nmode 006A          _PWM_Output_D8_Enable 4BCC  
                 ??_vfpfcnvrt 003B                      sprintf@f 0047                      sprintf@s 008C  
            ___lldiv@quotient 0017               _PWM2_Initialize 4BFE                    _TMR2_Start 4C4A  
               ___fladd@signs 000F                  ___fladd@aexp 0010                  ___fladd@bexp 0011  
           PWM@checkdutyCycle 00B7  
